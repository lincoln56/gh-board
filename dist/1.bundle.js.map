{"version":3,"sources":["webpack:///1.bundle.js","webpack:///./~/mermaid/dist/mermaidAPI.js"],"names":["webpackJsonp","1375","module","exports","__webpack_require__","require","global","e","define","t","n","r","s","o","u","a","i","f","Error","code","l","call","length","1","2","process","normalizeArray","parts","allowAboveRoot","up","last","splice","unshift","filter","xs","res","push","splitPathRe","splitPath","filename","exec","slice","resolve","resolvedPath","resolvedAbsolute","arguments","path","cwd","TypeError","charAt","split","p","join","normalize","isAbsolute","trailingSlash","substr","paths","Array","prototype","index","relative","from","to","trim","arr","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","concat","sep","delimiter","dirname","result","root","dir","basename","ext","extname","str","len","this","_process","3","noop","nextTick","canSetImmediate","window","setImmediate","canMutationObserver","MutationObserver","canPost","postMessage","addEventListener","queue","hiddenDiv","document","createElement","observer","queueList","forEach","fn","observe","attributes","setAttribute","ev","source","data","stopPropagation","shift","setTimeout","title","browser","env","argv","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","name","chdir","4","d3_documentElement","node","ownerDocument","documentElement","d3_window","defaultView","d3_ascending","b","NaN","d3_number","x","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","mid","right","d3_zipLength","d","d3_range_integerScale","k","d3_class","ctor","properties","key","Object","defineProperty","value","enumerable","d3_Map","_","create","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","d3_map_has","d3_map_remove","d3_map_keys","keys","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","target","method","apply","d3_vendorSymbol","object","toUpperCase","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","z","listeners","listenerByName","listener","get","indexOf","remove","set","d3_eventPreventDefault","d3","preventDefault","d3_eventSource","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","replace","d3_selection_classedRe","RegExp","requote","d3_selection_classes","d3_selection_classed","classedConstant","classedFunction","map","d3_selection_classedName","re","c","classList","add","getAttribute","lastIndex","test","d3_selection_style","priority","styleNull","style","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","createElementNS","createNS","d3_selectionRemove","parent","parentNode","removeChild","d3_selection_dataNode","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","j","m","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","i0","j0","update","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","removeAll","match","d3_selection_onListener","d3_selection_onFilters","d3_selection_onFilter","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","select","d3_event_dragSelect","suppressClick","d3_mousePoint","container","changedTouches","svg","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","scrollX","scrollY","append","position","top","margin","padding","border","ctm","getScreenCTM","pageX","y","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","v","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","g","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","max","toString","format","hsl","toLowerCase","color","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer_step","now","d3_timer_mark","delay","d3_timer_sweep","isFinite","clearTimeout","d3_timer_timeout","d3_timer_interval","d3_timer_frame","Date","d3_timer_active","d3_timer_queueHead","t0","t1","time","Infinity","d3_timer_queueTail","d3_format_precision","ceil","log","LN10","d3_formatPrefix","abs","scale","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","width","substring","reverse","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","after","lastIndexOf","d3_date_utc","UTC","d3_time_interval","step","number","date","d0","d1","offset","d3_date","range","dt","times","range_utc","utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","names","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","hasOwnProperty","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","sort","d3_geo_clipPolygonLinkCircular","entry","points","current","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","d3_geo_clipSegmentLength1","rotatedClipStart","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","intersection","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","cells","d3_geom_voronoiCells","iCell","prepare","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","closestPoint","minDistance2","find","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransform","transform","ta","tb","ra","rb","wa","wb","ka","kb","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","values","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","linear","input","Number","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","active","count","interrupt","d3_transition","id","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","transition","duration","ease","timer","elapsed","tweened","tick","d3_svg_axisX","attr","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","list","childNodes","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","zip","zips","transpose","matrix","entries","arrays","merged","isArray","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","__proto__","property","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","selectAll","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","text","html","innerHTML","appendChild","insertBefore","bind","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","args","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","origin","τε","SQRT2","ρ2","ρ4","interpolateZoom","coshr0","w0","ux0","uy0","ux1","uy1","w1","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","row","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","Function","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","then","flush","d3_formatPrefixes","String","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTime","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","partition","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","bottom","tops","bottoms","default","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","oc","kc","lc","rc1","t30","t12","rc0","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","self","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML","amd","5","graphlib","dagre","render","util","./lib/dagre","./lib/graphlib","./lib/intersect","./lib/render","./lib/util","./lib/version","6","marker","applyStyle","vee","undirected","./util","7","createClusters","clusters","isSubgraph","svgClusters","applyTransition","thisGroup","labelGroup","addLabel","clusterLabelPos","domCluster","./label/add-label","8","createEdgeLabels","svgEdgeLabels","edgeToId","label","getBBox","labelId","height","./d3","./lodash","9","createEdgePaths","arrows","svgPaths","domEdge","elem","applyClass","arrowheadId","uniqueId","calcPoints","arrowhead","tail","head","intersectNode","createLine","lineInterpolate","lineTension","getCoords","getTransformToElement","svgPathsEnter","sourceElem","svgPathExit","pathSegList","./intersect/intersect-node","10","createNodes","shapes","simpleNodes","svgNodes","labelDom","shape","pick","paddingLeft","paddingRight","paddingTop","paddingBottom","shapeSvg","shapeBBox","11","12","13","14","ellipse","./intersect-circle","./intersect-ellipse","./intersect-node","./intersect-polygon","./intersect-rect","15","intersectCircle","intersectEllipse","16","det","17","intersectLine","q2","a2","b2","r2","r3","r4","denom","num","sameSign","yy","18","19","intersectPolygon","polyPoints","intersections","minX","POSITIVE_INFINITY","minY","pdx","pdy","distp","qdx","qdy","distq","console","./intersect-line","20","intersectRect","21","addHtmlLabel","fo","div","labelStyle","clientWidth","clientHeight","../util","22","labelSvg","labelType","addSVGLabel","addTextLabel","labelBBox","./add-html-label","./add-svg-label","./add-text-label","23","domNode","24","processEscapeSequences","ch","newText","escaped","25","lodash","26","positionClusters","created","27","positionEdgeLabels","28","positionNodes","29","preProcessGraph","outputGroup","createOrSelectGroup","clustersGroup","edgePathsGroup","edgeLabels","postProcessGraph","defaults","paddingX","paddingY","NODE_DEFAULT_ATTRS","_prevWidth","_prevHeight","EDGE_DEFAULT_ATTRS","./arrows","./create-clusters","./create-edge-labels","./create-edge-paths","./create-nodes","./dagre","./position-clusters","./position-edge-labels","./position-nodes","./shapes","30","./intersect/intersect-circle","./intersect/intersect-ellipse","./intersect/intersect-polygon","./intersect/intersect-rect","31","escapeId","ID_DELIM","dom","styleFn","classFn","otherClasses","graph","isPlainObject","isFunction","32","33","lib","Graph","alg","./lib","./lib/alg","./lib/json","34","components","dfs","visited","cmpt","successors","predecessors","cmpts","../lodash","35","vs","acc","hasNode","doDfs","postorder","36","dijkstraAll","weightFunc","edgeFunc","dijkstra","./dijkstra","37","weightFn","edgeFn","runDijkstra","DEFAULT_WEIGHT_FUNC","outEdges","vEntry","results","pq","PriorityQueue","updateNeighbors","wEntry","predecessor","decrease","removeMin","constant","../data/priority-queue","38","findCycles","tarjan","hasEdge","./tarjan","39","floydWarshall","runFloydWarshall","rowK","rowI","ik","kj","ij","altDistance","40","isAcyclic","preorder","prim","topsort","./components","./dijkstra-all","./find-cycles","./floyd-warshall","./is-acyclic","./postorder","./preorder","./prim","./topsort","41","CycleException","42","./dfs","43","44","pri","undefined","edgeWeight","parents","nodeCount","setNode","init","setEdge","nodeEdges","../graph","45","onStack","lowlink","46","sinks","47","_arr","_keyIndices","keyIndices","_decrease","_swap","_heapify","largest","origArrI","origArrJ","48","opts","_isDirected","directed","_isMultigraph","multigraph","_isCompound","compound","_label","_defaultNodeLabelFn","_defaultEdgeLabelFn","_nodes","_parent","_children","GRAPH_NODE","_in","_preds","_out","_sucs","_edgeObjs","_edgeLabels","incrementOrInitEntry","decrementOrRemoveEntry","edgeArgsToId","isDirected","w_","tmp","EDGE_KEY_DELIM","isUndefined","DEFAULT_EDGE_NAME","edgeArgsToObj","edgeObj","edgeObjToId","_nodeCount","_edgeCount","isMultigraph","isCompound","setGraph","setDefaultNodeLabel","newDefault","sources","isEmpty","setNodes","removeNode","removeEdge","_removeFromParentsChildList","setParent","predsV","sucsV","preds","union","filterNodes","findParent","constructor","setDefaultEdgeLabel","edgeCount","setPath","valueSpecified","arg0","freeze","inEdges","inV","outV","49","./graph","./version","50","write","options","writeNodes","writeEdges","clone","nodeValue","edgeValue","read","51","52","53","baseCompareAscending","valIsNull","valIsUndef","valIsReflexive","othIsNull","othIsUndef","othIsReflexive","baseFindIndex","predicate","fromRight","baseIndexOf","fromIndex","indexOfNaN","baseIsFunction","baseToString","charsLeftIndex","chars","charsRightIndex","compareAscending","criteria","compareMultiple","objCriteria","othCriteria","ordersLength","deburrLetter","letter","deburredLetters","escapeHtmlChar","chr","htmlEscapes","escapeRegExpChar","leadingChar","whitespaceChar","regexpEscapes","stringEscapes","escapeStringChar","isObjectLike","isSpace","charCode","replaceHolders","placeholder","resIndex","PLACEHOLDER","sortedUniq","iteratee","seen","computed","trimmedLeftIndex","trimmedRightIndex","unescapeHtmlChar","htmlUnescapes","runInContext","LazyWrapper","LodashWrapper","wrapperClone","baseLodash","chainAll","actions","__wrapped__","__actions__","__chain__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","lazyClone","arrayCopy","lazyReverse","lazyValue","isArr","isRight","arrLength","getView","iteratees","iterLength","takeCount","nativeMin","LARGE_ARRAY_SIZE","baseWrapperValue","outer","iterIndex","LAZY_MAP_FLAG","LAZY_FILTER_FLAG","MapCache","mapDelete","mapGet","mapHas","mapSet","SetCache","hash","nativeCreate","Set","cacheIndexOf","cache","isObject","cachePush","arrayConcat","othIndex","othLength","arrayEach","arrayEachRight","arrayEvery","arrayExtremum","exValue","arrayFilter","arrayMap","arrayPush","arrayReduce","accumulator","initFromArray","arrayReduceRight","arraySome","arraySum","assignDefaults","objectValue","sourceValue","assignOwnDefaults","assignWith","customizer","props","baseAssign","baseCopy","baseAt","collection","isNil","isArrayLike","propsLength","isIndex","baseCallback","func","thisArg","argCount","bindCallback","baseMatches","baseMatchesProperty","baseClone","isDeep","stackA","stackB","initCloneArray","tag","objToString","isFunc","funcTag","objectTag","argsTag","cloneableTags","initCloneByTag","initCloneObject","baseForOwn","subValue","baseDelay","wait","FUNC_ERROR_TEXT","baseDifference","getIndexOf","isCommon","createCache","valuesLength","valuesIndex","baseEvery","baseEach","baseExtremum","baseFill","baseFilter","baseFind","eachFunc","retKey","baseFlatten","isStrict","isArguments","baseForIn","baseFor","keysIn","baseForOwnRight","baseForRight","baseFunctions","baseGet","pathKey","toObject","baseIsEqual","isLoose","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","isTypedArray","objIsObj","othIsObj","isSameTag","equalByTag","objIsWrapped","othIsWrapped","equalArrays","equalObjects","baseIsMatch","matchData","noCustomizer","objValue","srcValue","baseMap","getMatchData","isKey","isStrictComparable","toPath","baseSlice","baseMerge","isSrcArr","baseMergeDeep","mergeFunc","toPlainObject","baseProperty","basePropertyDeep","basePullAt","baseRandom","nativeFloor","nativeRandom","baseReduce","initFromCollection","baseSome","baseSortBy","comparer","baseSortByOrder","getCallback","baseSum","baseUniq","isLarge","seenIndex","baseValues","baseWhile","isDrop","action","binaryIndex","retHighest","low","high","HALF_MAX_ARRAY_LENGTH","binaryIndexBy","valIsNaN","isDef","isReflexive","setLow","MAX_ARRAY_INDEX","bufferClone","ArrayBuffer","byteLength","Uint8Array","composeArgs","partials","holders","holdersLength","argsIndex","argsLength","nativeMax","leftIndex","leftLength","composeArgsRight","holdersIndex","rightIndex","rightLength","createAggregator","initializer","createAssigner","assigner","restParam","guard","isIterateeCall","createBaseEach","getLength","isLength","iterable","createBaseFor","keysFunc","createBindWrapper","wrapper","Ctor","createCtorWrapper","createCompounder","words","deburr","thisBinding","baseCreate","createCurry","flag","curryFunc","arity","createWrapper","createDefaults","createExtremum","toIterable","createFind","createFindIndex","createFindKey","objectFunc","createFlow","funcs","thru","getFuncName","funcName","getData","isLaziable","ARY_FLAG","CURRY_FLAG","PARTIAL_FLAG","REARG_FLAG","plant","createForEach","arrayFunc","createForIn","createForOwn","createObjectMapper","isMapKeys","mapped","createPadDir","createPadding","createPartial","partialFunc","createReduce","createHybridWrapper","bitmask","partialsRight","holdersRight","argPos","ary","isCurry","isCurryRight","argsHolders","newArgPos","newArity","newsHolders","newHoldersRight","newPartials","newPartialsRight","PARTIAL_RIGHT_FLAG","isCurryBound","BIND_FLAG","BIND_KEY_FLAG","newData","setData","isBind","isBindKey","reorder","isAry","CURRY_BOUND_FLAG","CURRY_RIGHT_FLAG","strLength","nativeIsFinite","padLength","repeat","nativeCeil","createPartialWrapper","createRound","methodName","createSortedIndex","mergeData","baseSetData","arrValue","othValue","boolTag","dateTag","errorTag","message","numberTag","regexpTag","stringTag","objProps","objLength","othProps","skipCtor","objCtor","othCtor","realNames","otherFunc","getNative","isNative","transforms","arrayBufferTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","byteOffset","reFlags","invokePath","reIsUint","MAX_SAFE_INTEGER","reIsPlainProp","reIsDeepProp","srcBitmask","newBitmask","isCombo","mergeDefaults","pickByArray","pickByCallback","oldArray","shimKeys","allowIndexes","rePropName","quote","reEscapeChar","chunk","compact","drop","dropRight","dropRightWhile","dropWhile","flatten","flattenDeep","initial","pull","rest","take","takeRight","takeRightWhile","takeWhile","uniq","isSorted","unzip","unzipWith","xor","zipObject","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperPlant","wrapperReverse","wrapped","wrapperToString","wrapperValue","every","findWhere","includes","isString","pluck","reject","sample","toArray","rand","some","sortBy","sortByOrder","where","temp","debounce","cancel","timeoutId","maxTimeoutId","lastCalled","trailingCall","complete","isCalled","delayed","stamp","maxDelayed","trailing","debounced","leading","maxWait","leadingCall","memoize","resolver","memoized","Cache","negate","otherArgs","spread","throttle","cloneDeep","gt","gte","propertyIsEnumerable","isBoolean","isDate","isElement","isEqual","isError","isMatch","isNumber","reIsNative","fnToString","reIsHostCtor","isNull","isRegExp","typedArrayTags","lt","lte","functions","defaultValue","multiValue","isProto","skipIndexes","nested","valuesIn","inRange","floating","noMin","noMax","capitalize","reLatin1","reComboMark","endsWith","escape","reHasUnescapedHtml","reUnescapedHtml","escapeRegExp","reHasRegExpChars","reRegExpChars","radix","nativeParseInt","reHasHexPrefix","startsWith","otherOptions","settings","templateSettings","isEscaping","isEvaluating","imports","importsKeys","importsValues","reNoMatch","reDelimiters","reInterpolate","reEsTemplate","evaluate","sourceURL","templateCounter","escapeValue","interpolateValue","esTemplateValue","evaluateValue","reUnescapedString","variable","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","attempt","trimLeft","trimRight","trunc","DEFAULT_TRUNC_LENGTH","omission","DEFAULT_TRUNC_OMISSION","separator","search","newEnd","unescape","reHasEscapedHtml","reEscapedHtml","pattern","reWords","matchesProperty","mixin","isObj","methodNames","noConflict","oldDash","propertyOf","MAX_ARRAY_LENGTH","idCounter","augend","addend","contextProps","arrayProto","objectProto","stringProto","WeakMap","nativeIsArray","nativeKeys","nativeNow","NEGATIVE_INFINITY","metaMap","support","reEscape","reEvaluate","baseEachRight","HOT_SPAN","HOT_COUNT","difference","findIndex","findLastIndex","caches","pullAt","sortedIndex","sortedLastIndex","without","zipWith","wrapperConcat","at","countBy","findLast","forEachRight","groupBy","indexBy","invoke","isProp","reduceRight","sortByAll","bindAll","bindKey","curry","curryRight","defer","flow","flowRight","modArgs","partial","partialRight","rearg","assign","defaultsDeep","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","mapKeys","mapValues","omit","camelCase","word","kebabCase","padLeft","padRight","snakeCase","startCase","methodOf","backflow","collect","eachRight","extend","unique","all","any","eq","detect","foldl","foldr","include","inject","VERSION","filtered","isFilter","takeName","dropName","operationName","createCallback","checkIteratee","retUnwrapped","lodashFunc","isHybrid","isLazy","useLazy","onlyLazy","chainName","commit","run","toJSON","mapTag","setTag","weakMapTag","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","&","<",">","\"","'","`","&amp;","&lt;","&gt;","&quot;","&#39;","&#96;","objectTypes","function","E","\\","\n","\r"," "," ","freeExports","freeModule","freeGlobal","freeSelf","freeWindow","moduleExports","54","debug","notime","./lib/debug","./lib/layout","55","fas","acyclicer","greedyFAS","dfsFAS","forwardName","reversed","undo","./greedy-fas","56","addBorderSegments","borderLeft","borderRight","rank","minRank","maxRank","addBorderNode","prop","sg","sgNode","borderType","prev","curr","addDummyNode","57","adjust","rankDir","rankdir","swapWidthHeight","reverseY","swapXY","swapWidthHeightOne","attrs","reverseYOne","swapXYOne","58","List","sentinel","_next","_prev","_sentinel","unlink","filterOutLinks","dequeue","enqueue","strs","59","debugOrdering","layerMatrix","buildLayerMatrix","layer","layerV","./graphlib","60","61","state","buildState","DEFAULT_WEIGHT_FN","doGreedyFAS","buckets","zeroIdx","collectPredecessors","uEntry","assignBucket","fasGraph","maxIn","maxOut","prevWeight","./data/list","62","debugTiming","layoutGraph","buildLayoutGraph","runLayout","updateInputGraph","makeSpaceForEdgeLabels","removeSelfEdges","acyclic","nestingGraph","asNonCompoundGraph","injectEdgeLabelProxies","removeEmptyRanks","cleanup","normalizeRanks","assignRankMinMax","removeEdgeLabelProxies","parentDummyChains","insertSelfEdges","coordinateSystem","positionSelfEdges","removeBorderNodes","fixupEdgeLabelCoords","translateGraph","assignNodeIntersects","reversePointsForReversedEdges","inputGraph","inputLabel","layoutLabel","canonicalize","graphDefaults","selectNumberAttrs","graphNumAttrs","graphAttrs","nodeNumAttrs","nodeDefaults","edgeDefaults","edgeNumAttrs","edgeAttrs","ranksep","minlen","labelpos","labeloffset","borderTop","borderBottom","dummy","labelRank","getExtremes","maxX","maxY","graphLabel","marginX","marginx","marginY","marginy","nodeV","nodeW","selfEdges","layers","orderShift","selfEdge","selfNode","obj","newAttrs","edgesep","nodesep","./acyclic","./add-border-segments","./coordinate-system","./nesting-graph","./normalize","./order","./parent-dummy-chains","./position","./rank","63","/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/lodash.js","64","depths","treeDepths","nodeSep","nestingRoot","sumWeights","nodeRankFactor","childNode","childTop","childBottom","thisWeight","nestingEdge","65","dummyChains","normalizeEdge","vRank","wRank","edgeLabel","origLabel","66","addSubgraphConstraints","cg","rootPrev","prevChild","67","barycenter","movable","nodeU","68","buildLayerGraph","relationship","createRootNode","../graphlib","69","crossCount","layering","cc","twoLayerCrossCount","northLayer","southLayer","southPos","southEntries","pos","firstIndex","treeSize","weightSum","70","downLayerGraphs","buildLayerGraphs","upLayerGraphs","initOrder","assignOrder","bestCC","lastBest","sweepLayerGraphs","ranks","layerGraphs","biasRight","lg","sorted","sortSubgraph","./add-subgraph-constraints","./build-layer-graph","./cross-count","./init-order","./sort-subgraph","71","orderedVs","72","resolveConflicts","mappedEntries","indegree","entryV","entryW","sourceSet","doResolveConflicts","handleIn","mergeEntries","handleOut","73","subgraphs","barycenters","subgraphResult","mergeBarycenters","expandSubgraphs","blPred","brPred","./barycenter","./resolve-conflicts","./sort","74","sortable","lhs","unsortable","rhs","vsIndex","compareWithBias","consumeUnsortable","bias","75","postorderNums","pathData","findPath","pathIdx","pathV","vPath","wPath","lim","76","findType1Conflicts","visitLayer","prevLayer","k0","scanPos","prevLayerLength","lastNode","findOtherInnerSegmentNode","k1","scanNode","uLabel","uPos","addConflict","conflicts","findType2Conflicts","scan","south","southEnd","prevNorthBorder","nextNorthBorder","uNode","north","nextNorthPos","prevNorthPos","southLookahead","conflictsV","hasConflict","verticalAlignment","neighborFn","prevIdx","ws","mp","il","horizontalCompaction","reverseSep","pass1","blockG","pass2","buildBlockGraph","blockGraph","sepFn","vRoot","uRoot","prevMax","findSmallestWidthAlignment","xss","alignCoordinates","alignTo","alignToMin","alignToMax","vert","horiz","delta","alignment","balance","ul","ignore","positionX","adjustedLayering","inner","smallestWidth","edgeSep","vLabel","wLabel","77","positionY","rankSep","prevY","maxHeight","./bk","78","feasibleTree","tightTree","findMinSlackEdge","slack","shiftRanks","edgeV","79","ranker","networkSimplexRanker","tightTreeRanker","longestPathRanker","longestPath","networkSimplex","rankUtil","./feasible-tree","./network-simplex","80","simplify","initRank","initLowLimValues","initCutValues","leaveEdge","enterEdge","exchangeEdges","assignCutValue","childLab","cutvalue","calcCutValue","childIsTail","graphEdge","cutValue","isOutEdge","pointsToHead","otherWeight","isTreeEdge","otherCutValue","dfsAssignLowLim","nextLim","tailLabel","flip","isDescendant","updateRanks","flipped","rootLabel","81","82","simplified","simpleLabel","successorWeights","weightMap","sucs","predecessorWeights","83","84","/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/index.js","85","/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/alg/components.js","86","/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/alg/dfs.js","87","/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/alg/dijkstra-all.js","88","/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/alg/dijkstra.js","89","/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/alg/find-cycles.js","90","/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/alg/floyd-warshall.js","91","/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/alg/index.js","92","/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/alg/is-acyclic.js","93","/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/alg/postorder.js","94","/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/alg/preorder.js","95","/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/alg/prim.js","96","/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/alg/tarjan.js","97","/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/alg/topsort.js","98","/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/data/priority-queue.js","99","/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/graph.js","100","/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/index.js","101","/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/json.js","102","103","/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/version.js","104","/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/lodash/index.js","105","factory","moment","utils_hooks__hooks","hookCallback","setHookCallback","hasOwnProp","create_utc__createUTC","strict","createLocalOrUTC","defaultParsingFlags","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","getParsingFlags","_pf","valid__isValid","_isValid","flags","_d","invalidWeekday","_strict","bigHour","valid__createInvalid","copyConfig","val","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","momentProperties","Moment","config","updateInProgress","updateOffset","isMoment","absFloor","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","Locale","normalizeLocale","chooseLocale","loadLocale","oldLocale","locales","globalLocale","_abbr","locale_locales__getSetGlobalLocale","locale_locales__getLocale","defineLocale","abbr","addUnitAlias","shorthand","lowerCase","aliases","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","makeGetSet","keepTime","get_set__set","get_set__get","mom","isValid","getSet","zeroFill","targetLength","forceSign","absNumber","zerosToFill","addFormatToken","padded","formatTokenFunctions","localeData","removeFormattingTokens","makeFormatFunction","formattingTokens","formatMoment","expandFormat","formatFunctions","invalidDate","replaceLongDateFormatTokens","longDateFormat","localFormattingTokens","addRegexToken","regex","strictRegex","regexes","getParseRegexForToken","unescapeFormat","regexEscape","matched","p4","addParseToken","tokens","addWeekParseToken","_w","addTimeToArrayFromToken","_a","daysInMonth","localeMonths","_months","MONTHS_IN_FORMAT","localeMonthsShort","_monthsShort","localeMonthsParse","monthName","_monthsParse","_longMonthsParse","_shortMonthsParse","monthsShort","dayOfMonth","monthsParse","getSetMonth","getDaysInMonth","monthsShortRegex","_monthsParseExact","computeMonthsParse","_monthsShortStrictRegex","_monthsShortRegex","monthsRegex","_monthsStrictRegex","_monthsRegex","cmpLenRev","shortPieces","longPieces","mixedPieces","checkOverflow","MONTH","DATE","YEAR","HOUR","MINUTE","SECOND","MILLISECOND","_overflowDayOfYear","_overflowWeeks","WEEK","_overflowWeekday","WEEKDAY","warn","msg","suppressDeprecationWarnings","deprecate","firstTime","deprecateSimple","deprecations","configFromISO","allowTime","dateFormat","tzFormat","extendedIsoRegex","basicIsoRegex","isoDates","isoTimes","tzRegex","configFromStringAndFormat","configFromString","aspNetJsonRegex","createFromInputFallback","createDate","ms","createUTCDate","daysInYear","isLeapYear","getIsLeapYear","firstWeekOffset","dow","doy","fwd","fwdlw","dayOfYearFromWeeks","weekday","resYear","resDayOfYear","localWeekday","weekOffset","resWeek","weeksInYear","weekOffsetNext","currentDateArray","nowValue","_useUTC","configFromArray","currentDate","yearToUse","dayOfYearFromWeekInfo","_dayOfYear","_nextDay","weekYear","weekdayOverflow","GG","local__createLocal","_week","gg","ISO_8601","parsedInput","stringLength","totalParsedInputLength","meridiemFixWrap","_meridiem","meridiem","isPm","meridiemHour","isPM","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","configFromObject","millisecond","createFromConfig","prepareConfig","preparse","configFromInput","isUTC","pickBy","moments","Duration","quarters","quarter","milliseconds","_milliseconds","_days","_data","_bubble","isDuration","utcOffset","offsetFromString","matcher","chunkOffset","cloneWithOffset","model","diff","getDateOffset","getSetOffset","keepLocalTime","localAdjust","matchShortOffset","_changeInProgress","add_subtract__addSubtract","create__createDuration","getSetZone","setOffsetToUTC","setOffsetToLocal","subtract","setOffsetToParsedOffset","matchOffset","hasAlignedHourOffset","isDaylightSavingTime","isDaylightSavingTimeShifted","_isDSTShifted","isLocal","isUtcOffset","isUtc","ret","diffRes","aspNetRegex","isoRegex","parseIso","momentsDifference","inp","positiveMomentsDifference","isAfter","isBefore","createAdder","period","dur","isAdding","moment_calendar__calendar","sod","startOf","calendar","localInput","endOf","isBetween","isSame","inputMs","isSameOrAfter","isSameOrBefore","asFloat","zoneDelta","monthDiff","anchor2","wholeMonthDiff","anchor","moment_format__toISOString","toDate","inputString","defaultFormat","postformat","withoutSuffix","humanize","fromNow","toNow","newLocaleData","isoWeekday","to_type__valueOf","unix","moment_valid__isValid","parsingFlags","invalidAt","creationData","addWeekYearFormatToken","getter","getSetWeekYear","getSetWeekYearHelper","getSetISOWeekYear","isoWeek","getISOWeeksInYear","getWeeksInYear","weekInfo","weeksTarget","setWeekAll","dayOfYearData","getSetQuarter","localeWeek","localeFirstDayOfWeek","localeFirstDayOfYear","getSetWeek","getSetISOWeek","parseWeekday","weekdaysParse","localeWeekdays","_weekdays","isFormat","localeWeekdaysShort","_weekdaysShort","localeWeekdaysMin","_weekdaysMin","localeWeekdaysParse","weekdayName","_weekdaysParse","_minWeekdaysParse","_shortWeekdaysParse","_fullWeekdaysParse","weekdays","weekdaysShort","weekdaysMin","getSetDayOfWeek","getSetLocaleDayOfWeek","getSetISODayOfWeek","getSetDayOfYear","hFormat","lowercase","matchMeridiem","_meridiemParse","localeIsPM","localeMeridiem","isLower","parseMs","getZoneAbbr","getZoneName","moment__createUnix","moment__createInZone","parseZone","locale_calendar__calendar","_calendar","_longDateFormat","formatUpper","_invalidDate","_ordinal","preParsePostFormat","relative__relativeTime","isFuture","_relativeTime","pastFuture","locale_set__set","_ordinalParseLenient","_ordinalParse","lists__get","lists__listMonths","lists__listMonthsShort","lists__listWeekdays","lists__listWeekdaysShort","lists__listWeekdaysMin","duration_abs__abs","mathAbs","duration_add_subtract__addSubtract","duration_add_subtract__add","duration_add_subtract__subtract","absCeil","bubble","monthsFromDays","monthsToDays","daysToMonths","duration_as__valueOf","makeAs","alias","duration_get__get","makeGetter","substituteTimeAgo","relativeTime","duration_humanize__relativeTime","posNegDuration","duration_humanize__getSetRelativeTimeThreshold","limit","withSuffix","iso_string__toISOString","iso_string__abs","total","asSeconds","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchTimestamp","matchWord","defaultLocaleMonths","defaultLocaleMonthsShort","defaultMonthsShortRegex","defaultMonthsRegex","parseTwoDigitYear","getSetYear","prototypeMin","prototypeMax","add_subtract__add","add_subtract__subtract","lang","isoWeekYear","defaultLocaleWeek","getSetDayOfMonth","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","_isPm","pos1","pos2","defaultLocaleMeridiemParse","getSetHour","getSetMinute","getSetSecond","getSetMillisecond","momentPrototype__proto","isoWeeks","isoWeeksInYear","isDST","isDSTShifted","zoneAbbr","zoneName","dates","zone","momentPrototype","defaultCalendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","defaultLongDateFormat","LTS","LT","LL","LLL","LLLL","defaultInvalidDate","defaultOrdinal","defaultOrdinalParse","defaultRelativeTime","future","past","mm","hh","dd","MM","prototype__proto","firstDayOfYear","firstDayOfWeek","ordinalParse","langData","asMilliseconds","asMinutes","asHours","asDays","asWeeks","asMonths","asYears","duration_prototype__proto","toIsoString","invalid","relativeTimeThreshold","_moment","106","description","main","keywords","mermaid","scripts","live","lint","jison","karma","watch","doc","tape","jasmine","pretest","dist-slim-mermaid","dist-slim-mermaidAPI","dist-mermaid","dist-mermaidAPI","dist","repository","author","license","dependencies","chalk","dagre-d3","he","minimist","mkdirp","semver","which","devDependencies","async","babel-eslint","babelify","browserify","codeclimate-test-reporter","dateformat","dox","eslint","eslint-watch","event-stream","foundation","front-matter","gulp","gulp-bower","gulp-browserify","gulp-bump","gulp-concat","gulp-data","gulp-dox","gulp-ext-replace","gulp-filelog","gulp-front-matter","gulp-hogan","gulp-if","gulp-insert","gulp-istanbul","gulp-jasmine","gulp-jasmine-browser","gulp-jison","gulp-jshint","gulp-less","gulp-livereload","gulp-marked","gulp-mdvars","gulp-qunit","gulp-rename","gulp-shell","gulp-tag-version","gulp-uglify","gulp-util","gulp-vartree","hogan.js","jasmine-es6","jsdom","jshint-stylish","karma-babel-preprocessor","karma-browserify","karma-jasmine","karma-phantomjs-launcher","live-server","map-stream","marked","mock-browser","phantomjs","proxyquire","proxyquire-universal","proxyquireify","require-dir","rewire","rimraf","testdom","uglifyjs","vinyl-source-stream","watchify","107","force_wrap_method","textwrap","return_value","extract_bounds","bounding_rect","element_type","tagName","bounds_extracted","verify_bounds","extracted_bounds","apply_padding","padded_bounds","verified_bounds","wrap_method","wrap_with_foreignobjects","item","text_node","styled_line_height","text_to_wrap","foreign_object","wrap_div","wrap_with_tspans","line_height","text_node_selected","text_node_height","text_node_width","rendered_line_height","break_delimiter","text_to_wrap_array","string_length","number_of_substrings","splice_interval","start_position","substrings","total_offset","new_string","previous_string","previous_width","getComputedTextLength","new_width","final_string","current_tspan","x_offset","y_offset","SVGForeignObjectElement","108","classes","Logger","Log","relations","addClass","members","getClass","getClasses","getRelations","addRelation","relation","id2","addMembers","className","MembersArr","theClass","cleanupLabel","lineType","LINE","DOTTED_LINE","relationType","AGGREGATION","EXTENSION","COMPOSITION","DEPENDENCY","../../logger","109","cd","parser","cDDb","idCache","classCnt","conf","dividerMargin","textHeight","getGraphId","insertMarkers","drawEdge","getRelationType","lineData","lineFunction","svgPath","arrowMarkerAbsolute","protocol","host","pathname","type1","type2","drawClass","classDef","info","addTspan","textEl","txt","isFirst","tSpan","classInfo","titleHeight","membersLine","member","membersBox","methodsLine","classBox","setConf","cnf","draw","isMultiGraph","../../d3","./classDb","./parser/classDiagram","110","classDiagram","Parser","_o","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","$Vf","$Vg","$Vh","$Vi","$Vj","trace","symbols_","mermaidDoc","graphConfig","CLASS_DIAGRAM","NEWLINE","statements","statement","alphaNumToken","relationStatement","LABEL","classStatement","methodStatement","CLASS","STRUCT_START","STRUCT_STOP","MEMBER","SEPARATOR","STR","commentToken","textToken","graphCodeTokens","textNoTagsToken","TAGSTART","TAGEND","==","--","PCT","DEFAULT","SPACE","MINUS","UNICODE_TEXT","NUM","ALPHA","$accept","$end","terminals_","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","relationTitle1","relationTitle2","table","defaultActions","parseError","recoverable","_parseError","vstack","lstack","recovering","TERROR","lexer","sharedState","setInput","yylloc","yyloc","getPrototypeOf","preErrorSymbol","newState","expected","lex","yyval","errStr","showPosition","loc","first_line","last_line","first_column","last_column","_input","_more","_backtrack","done","conditionStack","unput","oldLines","more","backtrack_lexer","less","pastInput","upcomingInput","pre","test_match","indexed_rule","backup","tempMatch","rules","_currentRules","flex","begin","condition","popState","conditions","topState","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","inclusive","struct","INITIAL","readFileSync","fs","111","setMessage","getMessage","setInfo","inf","getInfo","mermaidAPI","112","exampleParser","ver","./exampleDb","./parser/example.js","113","example","NL","showInfo","say","TXT","case-insensitive","114","dagreD3","115","dot","addVertices","styleFromStyleArr","styleStr","verticeText","vertice","classStr","styles","labelTypeStr","htmlLabels","radious","_shape","class","addEdges","aHead","defaultStyle","cnt","stroke","arrowheadStyle","edgeText","isDot","clusterStyles","nodeLabelStyles","edgeLabelStyles","getDirection","subG","subGraphs","getSubGraphs","addVertex","getVertices","getEdges","question","rect_left_inv_arrow","rect_right_inv_arrow","none","element","getTooltip","useMaxWidth","indexNodes","clusterRects","clusterEl","xPos","yPos","te","./dagre-d3","./graphDb","./parser/dot","./parser/flow","116","tooltips","subCount","funs","addLink","linktext","updateLink","setDirection","setClass","setTooltip","tooltip","setClickFun","functionName","eval","setLink","linkStr","setClickEvent","bindFunctions","fun","setupToolTips","tooltipElem","el","scrollTop","addSubGraph","prims","boolean","objs","nodeList","subGraph","getPosForId","secCount","posCrossRef","posCount","childPos","getDepthFirstPos","117","$Vk","$Vl","$Vm","$Vn","$Vo","$Vp","$Vq","$Vr","$Vs","$Vt","$Vu","$Vv","$Vw","$Vx","$Vy","$Vz","$VA","$VB","$VC","expressions","graphStatement","idStatement","{","stmt_list","}","GRAPH","DIGRAPH","textNoTags","COLON","PLUS","EQUALS","MULT","DOT","BRKT","stmt",";","node_stmt","edge_stmt","attr_stmt","=","subgraph","attr_list","NODE","EDGE","[","a_list","]",",","edgeRHS","node_id","edgeop","port",":","compass_pt","SUBGRAPH","ARROW_POINT","ARROW_OPEN","op","118","$VD","$VE","$VF","$VG","$VH","$VI","$VJ","$VK","$VL","$VM","$VN","$VO","$VP","$VQ","$VR","$VS","$VT","$VU","$VV","$VW","$VX","$VY","$VZ","$V_","$V$","$V01","$V11","$V21","$V31","$V41","$V51","$V61","$V71","$V81","$V91","$Va1","$Vb1","$Vc1","$Vd1","SEMI","DIR","FirstStmtSeperator","UP","DOWN","ending","endToken","spaceList","spaceListNewline","verticeStatement","styleStatement","linkStyleStatement","classDefStatement","clickStatement","alphaNum","SQS","SQE","PS","PE","(-","-)","DIAMOND_START","DIAMOND_STOP","alphaNumStatement","linkStatement","arrowText","TESTSTR","ARROW_CIRCLE","ARROW_CROSS","-.","DOTTED_ARROW_POINT","DOTTED_ARROW_CIRCLE","DOTTED_ARROW_CROSS","DOTTED_ARROW_OPEN","THICK_ARROW_POINT","THICK_ARROW_CIRCLE","THICK_ARROW_CROSS","THICK_ARROW_OPEN","PIPE","commentText","STYLE","LINKSTYLE","CLASSDEF","CLICK","stylesOpt","HEX","commentStatement","COMMA","styleComponent","UNIT","PUNCTUATION","TAG_START","TAG_END","QUOTE","119","sections","tasks","currentSection","taskCnt","lastTask","lastTaskID","rawTasks","setDateFormat","getDateFormat","setTitle","getTitle","addSection","getTasks","allItemsPricessed","compileTasks","iterationCount","getStartDate","prevTime","afterStatement","task","findTaskById","endTime","getEndDate","durationStatement","parseId","idStr","compileData","prevTask","dataStr","ds","df","matchFound","crit","startTime","parseData","prevTaskId","startData","taskDb","addTask","descr","rawTask","section","processed","taskInfo","addTaskOrg","newTask","compileTask","allProcessed","120","gantt","daysInChart","titleTopMargin","barHeight","barGap","topPadding","sidePadding","gridLineStartPadding","fontSize","fontFamily","makeGant","pageWidth","pageHeight","gap","colorScale","categories","makeGrid","drawRects","vertLabels","drawToday","theArray","theGap","theTopPad","theSidePad","theBarHeight","theColorScale","numberSectionStyles","rectangles","timeScale","secNum","startX","endX","textWidth","taskType","formatter","post","axisFormatter","xAxis","monday","numOccurances","prevGap","getCount","catsUnfiltered","todayG","today","checkUnique","getCounts","getElementById","parentElement","offsetWidth","useWidth","taskArray","startDate","endDate","./ganttDb","./parser/gantt","121","taskTxt","taskData","122","sequenceDiagram","SD","participant","actor","AS","restOfLine","signal","note_statement","loop","opt","alt","else","note","placement","text2","over","actor_pair","left_of","right_of","signaltype","ACTOR","SOLID_OPEN_ARROW","DOTTED_OPEN_ARROW","SOLID_ARROW","DOTTED_ARROW","SOLID_CROSS","DOTTED_CROSS","loopText","signalType","LINETYPE","LOOP_START","LOOP_END","optText","OPT_START","OPT_END","altText","ALT_START","ALT_ELSE","ALT_END","PLACEMENT","OVER","LEFTOF","RIGHTOF","SOLID_OPEN","DOTTED_OPEN","SOLID","DOTTED","ALIAS","ID","123","actors","messages","notes","addActor","old","addMessage","idFrom","idTo","answer","addSignal","messageType","getMessages","getActors","getActor","getActorKeys","NOTE","ARROWTYPE","FILLED","OPEN","addNote","param","124","sq","svgDraw","diagramMarginX","diagramMarginY","actorMargin","boxMargin","boxTextMargin","noteMargin","messageMargin","mirrorActors","bottomMarginAdj","startx","stopx","starty","stopy","verticalPos","updateVal","updateLoops","_self","_startx","_starty","_stopx","_stopy","newLoop","endLoop","addElseToLoop","elsey","getVerticalPos","elseText","bumpVerticalPos","bump","getBounds","drawNote","forceWidth","getNoteRect","rectElem","drawRect","textObj","getTextObj","textMargin","textElem","drawText","drawMessage","txtCenter","drawActors","actorKeys","drawActor","insertArrowHead","insertArrowCrossHead","loopData","drawLoop","box","actorLines","./parser/sequenceDiagram","./sequenceDb","./svgDraw","125","rectData","textData","nText","drawLabel","txtObject","labelMargin","actorCnt","labelText","drawLoopLine","defs","text-anchor","126","formatTime","timestamp","ss","level","logLevel","defaultLevel","LEVELS","fatal","setLogLevel","127","utils","flowRenderer","seq","infoParser","flowParser","dotParser","sequenceParser","sequenceDb","infoDb","ganttParser","ganttDb","classParser","classRenderer","classDb","SVGElement","toElement","multiply","cloneCssStyles","startOnLoad","flowchart","graphType","detectType","encodeEntities","innerTxt","isInt","decodeEntities","firstChild","svgCode","containerElement","lvl1Keys","lvl2Keys","initialize","getConfig","../package.json","./diagrams/classDiagram/classDb","./diagrams/classDiagram/classRenderer","./diagrams/classDiagram/parser/classDiagram","./diagrams/example/exampleDb","./diagrams/example/exampleRenderer","./diagrams/example/parser/example","./diagrams/flowchart/flowRenderer","./diagrams/flowchart/graphDb","./diagrams/flowchart/parser/dot","./diagrams/flowchart/parser/flow","./diagrams/gantt/ganttDb","./diagrams/gantt/ganttRenderer","./diagrams/gantt/parser/gantt","./diagrams/sequenceDiagram/parser/sequenceDiagram","./diagrams/sequenceDiagram/sequenceDb","./diagrams/sequenceDiagram/sequenceRenderer","./logger","./utils","128","rule","usedStyles","sheets","styleSheets","cssRules","elems","selectorText","cssText","defaultStyles","embeddedStyles"],"mappings":"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","file":"1.bundle.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 1375:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar require;var require;/* WEBPACK VAR INJECTION */(function(global) {!function(e){if(true)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.mermaidAPI=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return require(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\t\n\t},{}],2:[function(require,module,exports){\n\t(function (process){\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t// resolves . and .. elements in a path array with directory names there\n\t// must be no slashes, empty elements, or device names (c:\\) in the array\n\t// (so also no leading and trailing slashes - it does not distinguish\n\t// relative and absolute paths)\n\tfunction normalizeArray(parts, allowAboveRoot) {\n\t  // if the path tries to go above the root, `up` ends up > 0\n\t  var up = 0;\n\t  for (var i = parts.length - 1; i >= 0; i--) {\n\t    var last = parts[i];\n\t    if (last === '.') {\n\t      parts.splice(i, 1);\n\t    } else if (last === '..') {\n\t      parts.splice(i, 1);\n\t      up++;\n\t    } else if (up) {\n\t      parts.splice(i, 1);\n\t      up--;\n\t    }\n\t  }\n\t\n\t  // if the path is allowed to go above the root, restore leading ..s\n\t  if (allowAboveRoot) {\n\t    for (; up--; up) {\n\t      parts.unshift('..');\n\t    }\n\t  }\n\t\n\t  return parts;\n\t}\n\t\n\t// Split a filename into [root, dir, basename, ext], unix version\n\t// 'root' is just a slash, or nothing.\n\tvar splitPathRe =\n\t    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n\tvar splitPath = function(filename) {\n\t  return splitPathRe.exec(filename).slice(1);\n\t};\n\t\n\t// path.resolve([from ...], to)\n\t// posix version\n\texports.resolve = function() {\n\t  var resolvedPath = '',\n\t      resolvedAbsolute = false;\n\t\n\t  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n\t    var path = (i >= 0) ? arguments[i] : process.cwd();\n\t\n\t    // Skip empty and invalid entries\n\t    if (typeof path !== 'string') {\n\t      throw new TypeError('Arguments to path.resolve must be strings');\n\t    } else if (!path) {\n\t      continue;\n\t    }\n\t\n\t    resolvedPath = path + '/' + resolvedPath;\n\t    resolvedAbsolute = path.charAt(0) === '/';\n\t  }\n\t\n\t  // At this point the path should be resolved to a full absolute path, but\n\t  // handle relative paths to be safe (might happen when process.cwd() fails)\n\t\n\t  // Normalize the path\n\t  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n\t    return !!p;\n\t  }), !resolvedAbsolute).join('/');\n\t\n\t  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n\t};\n\t\n\t// path.normalize(path)\n\t// posix version\n\texports.normalize = function(path) {\n\t  var isAbsolute = exports.isAbsolute(path),\n\t      trailingSlash = substr(path, -1) === '/';\n\t\n\t  // Normalize the path\n\t  path = normalizeArray(filter(path.split('/'), function(p) {\n\t    return !!p;\n\t  }), !isAbsolute).join('/');\n\t\n\t  if (!path && !isAbsolute) {\n\t    path = '.';\n\t  }\n\t  if (path && trailingSlash) {\n\t    path += '/';\n\t  }\n\t\n\t  return (isAbsolute ? '/' : '') + path;\n\t};\n\t\n\t// posix version\n\texports.isAbsolute = function(path) {\n\t  return path.charAt(0) === '/';\n\t};\n\t\n\t// posix version\n\texports.join = function() {\n\t  var paths = Array.prototype.slice.call(arguments, 0);\n\t  return exports.normalize(filter(paths, function(p, index) {\n\t    if (typeof p !== 'string') {\n\t      throw new TypeError('Arguments to path.join must be strings');\n\t    }\n\t    return p;\n\t  }).join('/'));\n\t};\n\t\n\t\n\t// path.relative(from, to)\n\t// posix version\n\texports.relative = function(from, to) {\n\t  from = exports.resolve(from).substr(1);\n\t  to = exports.resolve(to).substr(1);\n\t\n\t  function trim(arr) {\n\t    var start = 0;\n\t    for (; start < arr.length; start++) {\n\t      if (arr[start] !== '') break;\n\t    }\n\t\n\t    var end = arr.length - 1;\n\t    for (; end >= 0; end--) {\n\t      if (arr[end] !== '') break;\n\t    }\n\t\n\t    if (start > end) return [];\n\t    return arr.slice(start, end - start + 1);\n\t  }\n\t\n\t  var fromParts = trim(from.split('/'));\n\t  var toParts = trim(to.split('/'));\n\t\n\t  var length = Math.min(fromParts.length, toParts.length);\n\t  var samePartsLength = length;\n\t  for (var i = 0; i < length; i++) {\n\t    if (fromParts[i] !== toParts[i]) {\n\t      samePartsLength = i;\n\t      break;\n\t    }\n\t  }\n\t\n\t  var outputParts = [];\n\t  for (var i = samePartsLength; i < fromParts.length; i++) {\n\t    outputParts.push('..');\n\t  }\n\t\n\t  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\t\n\t  return outputParts.join('/');\n\t};\n\t\n\texports.sep = '/';\n\texports.delimiter = ':';\n\t\n\texports.dirname = function(path) {\n\t  var result = splitPath(path),\n\t      root = result[0],\n\t      dir = result[1];\n\t\n\t  if (!root && !dir) {\n\t    // No dirname whatsoever\n\t    return '.';\n\t  }\n\t\n\t  if (dir) {\n\t    // It has a dirname, strip trailing slash\n\t    dir = dir.substr(0, dir.length - 1);\n\t  }\n\t\n\t  return root + dir;\n\t};\n\t\n\t\n\texports.basename = function(path, ext) {\n\t  var f = splitPath(path)[2];\n\t  // TODO: make this comparison case-insensitive on windows?\n\t  if (ext && f.substr(-1 * ext.length) === ext) {\n\t    f = f.substr(0, f.length - ext.length);\n\t  }\n\t  return f;\n\t};\n\t\n\t\n\texports.extname = function(path) {\n\t  return splitPath(path)[3];\n\t};\n\t\n\tfunction filter (xs, f) {\n\t    if (xs.filter) return xs.filter(f);\n\t    var res = [];\n\t    for (var i = 0; i < xs.length; i++) {\n\t        if (f(xs[i], i, xs)) res.push(xs[i]);\n\t    }\n\t    return res;\n\t}\n\t\n\t// String.prototype.substr - negative index don't work in IE8\n\tvar substr = 'ab'.substr(-1) === 'b'\n\t    ? function (str, start, len) { return str.substr(start, len) }\n\t    : function (str, start, len) {\n\t        if (start < 0) start = str.length + start;\n\t        return str.substr(start, len);\n\t    }\n\t;\n\t\n\t}).call(this,require('_process'))\n\t},{\"_process\":3}],3:[function(require,module,exports){\n\t// shim for using process in browser\n\t\n\tvar process = module.exports = {};\n\t\n\tprocess.nextTick = (function () {\n\t    var canSetImmediate = typeof window !== 'undefined'\n\t    && window.setImmediate;\n\t    var canMutationObserver = typeof window !== 'undefined'\n\t    && window.MutationObserver;\n\t    var canPost = typeof window !== 'undefined'\n\t    && window.postMessage && window.addEventListener\n\t    ;\n\t\n\t    if (canSetImmediate) {\n\t        return function (f) { return window.setImmediate(f) };\n\t    }\n\t\n\t    var queue = [];\n\t\n\t    if (canMutationObserver) {\n\t        var hiddenDiv = document.createElement(\"div\");\n\t        var observer = new MutationObserver(function () {\n\t            var queueList = queue.slice();\n\t            queue.length = 0;\n\t            queueList.forEach(function (fn) {\n\t                fn();\n\t            });\n\t        });\n\t\n\t        observer.observe(hiddenDiv, { attributes: true });\n\t\n\t        return function nextTick(fn) {\n\t            if (!queue.length) {\n\t                hiddenDiv.setAttribute('yes', 'no');\n\t            }\n\t            queue.push(fn);\n\t        };\n\t    }\n\t\n\t    if (canPost) {\n\t        window.addEventListener('message', function (ev) {\n\t            var source = ev.source;\n\t            if ((source === window || source === null) && ev.data === 'process-tick') {\n\t                ev.stopPropagation();\n\t                if (queue.length > 0) {\n\t                    var fn = queue.shift();\n\t                    fn();\n\t                }\n\t            }\n\t        }, true);\n\t\n\t        return function nextTick(fn) {\n\t            queue.push(fn);\n\t            window.postMessage('process-tick', '*');\n\t        };\n\t    }\n\t\n\t    return function nextTick(fn) {\n\t        setTimeout(fn, 0);\n\t    };\n\t})();\n\t\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\t// TODO(shtylman)\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\t\n\t},{}],4:[function(require,module,exports){\n\t!function() {\n\t  var d3 = {\n\t    version: \"3.5.6\"\n\t  };\n\t  var d3_arraySlice = [].slice, d3_array = function(list) {\n\t    return d3_arraySlice.call(list);\n\t  };\n\t  var d3_document = this.document;\n\t  function d3_documentElement(node) {\n\t    return node && (node.ownerDocument || node.document || node).documentElement;\n\t  }\n\t  function d3_window(node) {\n\t    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n\t  }\n\t  if (d3_document) {\n\t    try {\n\t      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n\t    } catch (e) {\n\t      d3_array = function(list) {\n\t        var i = list.length, array = new Array(i);\n\t        while (i--) array[i] = list[i];\n\t        return array;\n\t      };\n\t    }\n\t  }\n\t  if (!Date.now) Date.now = function() {\n\t    return +new Date();\n\t  };\n\t  if (d3_document) {\n\t    try {\n\t      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n\t    } catch (error) {\n\t      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n\t      d3_element_prototype.setAttribute = function(name, value) {\n\t        d3_element_setAttribute.call(this, name, value + \"\");\n\t      };\n\t      d3_element_prototype.setAttributeNS = function(space, local, value) {\n\t        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n\t      };\n\t      d3_style_prototype.setProperty = function(name, value, priority) {\n\t        d3_style_setProperty.call(this, name, value + \"\", priority);\n\t      };\n\t    }\n\t  }\n\t  d3.ascending = d3_ascending;\n\t  function d3_ascending(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  }\n\t  d3.descending = function(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  };\n\t  d3.min = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.max = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.extent = function(array, f) {\n\t    var i = -1, n = array.length, a, b, c;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t    return [ a, c ];\n\t  };\n\t  function d3_number(x) {\n\t    return x === null ? NaN : +x;\n\t  }\n\t  function d3_numeric(x) {\n\t    return !isNaN(x);\n\t  }\n\t  d3.sum = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n\t    }\n\t    return s;\n\t  };\n\t  d3.mean = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1, j = n;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n\t    }\n\t    if (j) return s / j;\n\t  };\n\t  d3.quantile = function(values, p) {\n\t    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n\t    return e ? v + e * (values[h] - v) : v;\n\t  };\n\t  d3.median = function(array, f) {\n\t    var numbers = [], n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n\t    }\n\t    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n\t  };\n\t  d3.variance = function(array, f) {\n\t    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(array[i]))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    }\n\t    if (j > 1) return s / (j - 1);\n\t  };\n\t  d3.deviation = function() {\n\t    var v = d3.variance.apply(this, arguments);\n\t    return v ? Math.sqrt(v) : v;\n\t  };\n\t  function d3_bisector(compare) {\n\t    return {\n\t      left: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n\t        }\n\t        return lo;\n\t      },\n\t      right: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n\t        }\n\t        return lo;\n\t      }\n\t    };\n\t  }\n\t  var d3_bisect = d3_bisector(d3_ascending);\n\t  d3.bisectLeft = d3_bisect.left;\n\t  d3.bisect = d3.bisectRight = d3_bisect.right;\n\t  d3.bisector = function(f) {\n\t    return d3_bisector(f.length === 1 ? function(d, x) {\n\t      return d3_ascending(f(d), x);\n\t    } : f);\n\t  };\n\t  d3.shuffle = function(array, i0, i1) {\n\t    if ((m = arguments.length) < 3) {\n\t      i1 = array.length;\n\t      if (m < 2) i0 = 0;\n\t    }\n\t    var m = i1 - i0, t, i;\n\t    while (m) {\n\t      i = Math.random() * m-- | 0;\n\t      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n\t    }\n\t    return array;\n\t  };\n\t  d3.permute = function(array, indexes) {\n\t    var i = indexes.length, permutes = new Array(i);\n\t    while (i--) permutes[i] = array[indexes[i]];\n\t    return permutes;\n\t  };\n\t  d3.pairs = function(array) {\n\t    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n\t    return pairs;\n\t  };\n\t  d3.zip = function() {\n\t    if (!(n = arguments.length)) return [];\n\t    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n\t      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n\t        zip[j] = arguments[j][i];\n\t      }\n\t    }\n\t    return zips;\n\t  };\n\t  function d3_zipLength(d) {\n\t    return d.length;\n\t  }\n\t  d3.transpose = function(matrix) {\n\t    return d3.zip.apply(d3, matrix);\n\t  };\n\t  d3.keys = function(map) {\n\t    var keys = [];\n\t    for (var key in map) keys.push(key);\n\t    return keys;\n\t  };\n\t  d3.values = function(map) {\n\t    var values = [];\n\t    for (var key in map) values.push(map[key]);\n\t    return values;\n\t  };\n\t  d3.entries = function(map) {\n\t    var entries = [];\n\t    for (var key in map) entries.push({\n\t      key: key,\n\t      value: map[key]\n\t    });\n\t    return entries;\n\t  };\n\t  d3.merge = function(arrays) {\n\t    var n = arrays.length, m, i = -1, j = 0, merged, array;\n\t    while (++i < n) j += arrays[i].length;\n\t    merged = new Array(j);\n\t    while (--n >= 0) {\n\t      array = arrays[n];\n\t      m = array.length;\n\t      while (--m >= 0) {\n\t        merged[--j] = array[m];\n\t      }\n\t    }\n\t    return merged;\n\t  };\n\t  var abs = Math.abs;\n\t  d3.range = function(start, stop, step) {\n\t    if (arguments.length < 3) {\n\t      step = 1;\n\t      if (arguments.length < 2) {\n\t        stop = start;\n\t        start = 0;\n\t      }\n\t    }\n\t    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n\t    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n\t    start *= k, stop *= k, step *= k;\n\t    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n\t    return range;\n\t  };\n\t  function d3_range_integerScale(x) {\n\t    var k = 1;\n\t    while (x * k % 1) k *= 10;\n\t    return k;\n\t  }\n\t  function d3_class(ctor, properties) {\n\t    for (var key in properties) {\n\t      Object.defineProperty(ctor.prototype, key, {\n\t        value: properties[key],\n\t        enumerable: false\n\t      });\n\t    }\n\t  }\n\t  d3.map = function(object, f) {\n\t    var map = new d3_Map();\n\t    if (object instanceof d3_Map) {\n\t      object.forEach(function(key, value) {\n\t        map.set(key, value);\n\t      });\n\t    } else if (Array.isArray(object)) {\n\t      var i = -1, n = object.length, o;\n\t      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n\t    } else {\n\t      for (var key in object) map.set(key, object[key]);\n\t    }\n\t    return map;\n\t  };\n\t  function d3_Map() {\n\t    this._ = Object.create(null);\n\t  }\n\t  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n\t  d3_class(d3_Map, {\n\t    has: d3_map_has,\n\t    get: function(key) {\n\t      return this._[d3_map_escape(key)];\n\t    },\n\t    set: function(key, value) {\n\t      return this._[d3_map_escape(key)] = value;\n\t    },\n\t    remove: d3_map_remove,\n\t    keys: d3_map_keys,\n\t    values: function() {\n\t      var values = [];\n\t      for (var key in this._) values.push(this._[key]);\n\t      return values;\n\t    },\n\t    entries: function() {\n\t      var entries = [];\n\t      for (var key in this._) entries.push({\n\t        key: d3_map_unescape(key),\n\t        value: this._[key]\n\t      });\n\t      return entries;\n\t    },\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n\t    }\n\t  });\n\t  function d3_map_escape(key) {\n\t    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n\t  }\n\t  function d3_map_unescape(key) {\n\t    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n\t  }\n\t  function d3_map_has(key) {\n\t    return d3_map_escape(key) in this._;\n\t  }\n\t  function d3_map_remove(key) {\n\t    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n\t  }\n\t  function d3_map_keys() {\n\t    var keys = [];\n\t    for (var key in this._) keys.push(d3_map_unescape(key));\n\t    return keys;\n\t  }\n\t  function d3_map_size() {\n\t    var size = 0;\n\t    for (var key in this._) ++size;\n\t    return size;\n\t  }\n\t  function d3_map_empty() {\n\t    for (var key in this._) return false;\n\t    return true;\n\t  }\n\t  d3.nest = function() {\n\t    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n\t    function map(mapType, array, depth) {\n\t      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n\t      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n\t      while (++i < n) {\n\t        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n\t          values.push(object);\n\t        } else {\n\t          valuesByKey.set(keyValue, [ object ]);\n\t        }\n\t      }\n\t      if (mapType) {\n\t        object = mapType();\n\t        setter = function(keyValue, values) {\n\t          object.set(keyValue, map(mapType, values, depth));\n\t        };\n\t      } else {\n\t        object = {};\n\t        setter = function(keyValue, values) {\n\t          object[keyValue] = map(mapType, values, depth);\n\t        };\n\t      }\n\t      valuesByKey.forEach(setter);\n\t      return object;\n\t    }\n\t    function entries(map, depth) {\n\t      if (depth >= keys.length) return map;\n\t      var array = [], sortKey = sortKeys[depth++];\n\t      map.forEach(function(key, keyMap) {\n\t        array.push({\n\t          key: key,\n\t          values: entries(keyMap, depth)\n\t        });\n\t      });\n\t      return sortKey ? array.sort(function(a, b) {\n\t        return sortKey(a.key, b.key);\n\t      }) : array;\n\t    }\n\t    nest.map = function(array, mapType) {\n\t      return map(mapType, array, 0);\n\t    };\n\t    nest.entries = function(array) {\n\t      return entries(map(d3.map, array, 0), 0);\n\t    };\n\t    nest.key = function(d) {\n\t      keys.push(d);\n\t      return nest;\n\t    };\n\t    nest.sortKeys = function(order) {\n\t      sortKeys[keys.length - 1] = order;\n\t      return nest;\n\t    };\n\t    nest.sortValues = function(order) {\n\t      sortValues = order;\n\t      return nest;\n\t    };\n\t    nest.rollup = function(f) {\n\t      rollup = f;\n\t      return nest;\n\t    };\n\t    return nest;\n\t  };\n\t  d3.set = function(array) {\n\t    var set = new d3_Set();\n\t    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n\t    return set;\n\t  };\n\t  function d3_Set() {\n\t    this._ = Object.create(null);\n\t  }\n\t  d3_class(d3_Set, {\n\t    has: d3_map_has,\n\t    add: function(key) {\n\t      this._[d3_map_escape(key += \"\")] = true;\n\t      return key;\n\t    },\n\t    remove: d3_map_remove,\n\t    values: d3_map_keys,\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key));\n\t    }\n\t  });\n\t  d3.behavior = {};\n\t  function d3_identity(d) {\n\t    return d;\n\t  }\n\t  d3.rebind = function(target, source) {\n\t    var i = 1, n = arguments.length, method;\n\t    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n\t    return target;\n\t  };\n\t  function d3_rebind(target, source, method) {\n\t    return function() {\n\t      var value = method.apply(source, arguments);\n\t      return value === source ? target : value;\n\t    };\n\t  }\n\t  function d3_vendorSymbol(object, name) {\n\t    if (name in object) return name;\n\t    name = name.charAt(0).toUpperCase() + name.slice(1);\n\t    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n\t      var prefixName = d3_vendorPrefixes[i] + name;\n\t      if (prefixName in object) return prefixName;\n\t    }\n\t  }\n\t  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n\t  function d3_noop() {}\n\t  d3.dispatch = function() {\n\t    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    return dispatch;\n\t  };\n\t  function d3_dispatch() {}\n\t  d3_dispatch.prototype.on = function(type, listener) {\n\t    var i = type.indexOf(\".\"), name = \"\";\n\t    if (i >= 0) {\n\t      name = type.slice(i + 1);\n\t      type = type.slice(0, i);\n\t    }\n\t    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\t    if (arguments.length === 2) {\n\t      if (listener == null) for (type in this) {\n\t        if (this.hasOwnProperty(type)) this[type].on(name, null);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t  function d3_dispatch_event(dispatch) {\n\t    var listeners = [], listenerByName = new d3_Map();\n\t    function event() {\n\t      var z = listeners, i = -1, n = z.length, l;\n\t      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n\t      return dispatch;\n\t    }\n\t    event.on = function(name, listener) {\n\t      var l = listenerByName.get(name), i;\n\t      if (arguments.length < 2) return l && l.on;\n\t      if (l) {\n\t        l.on = null;\n\t        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n\t        listenerByName.remove(name);\n\t      }\n\t      if (listener) listeners.push(listenerByName.set(name, {\n\t        on: listener\n\t      }));\n\t      return dispatch;\n\t    };\n\t    return event;\n\t  }\n\t  d3.event = null;\n\t  function d3_eventPreventDefault() {\n\t    d3.event.preventDefault();\n\t  }\n\t  function d3_eventSource() {\n\t    var e = d3.event, s;\n\t    while (s = e.sourceEvent) e = s;\n\t    return e;\n\t  }\n\t  function d3_eventDispatch(target) {\n\t    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    dispatch.of = function(thiz, argumentz) {\n\t      return function(e1) {\n\t        try {\n\t          var e0 = e1.sourceEvent = d3.event;\n\t          e1.target = target;\n\t          d3.event = e1;\n\t          dispatch[e1.type].apply(thiz, argumentz);\n\t        } finally {\n\t          d3.event = e0;\n\t        }\n\t      };\n\t    };\n\t    return dispatch;\n\t  }\n\t  d3.requote = function(s) {\n\t    return s.replace(d3_requote_re, \"\\\\$&\");\n\t  };\n\t  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n\t    object.__proto__ = prototype;\n\t  } : function(object, prototype) {\n\t    for (var property in prototype) object[property] = prototype[property];\n\t  };\n\t  function d3_selection(groups) {\n\t    d3_subclass(groups, d3_selectionPrototype);\n\t    return groups;\n\t  }\n\t  var d3_select = function(s, n) {\n\t    return n.querySelector(s);\n\t  }, d3_selectAll = function(s, n) {\n\t    return n.querySelectorAll(s);\n\t  }, d3_selectMatches = function(n, s) {\n\t    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n\t    d3_selectMatches = function(n, s) {\n\t      return d3_selectMatcher.call(n, s);\n\t    };\n\t    return d3_selectMatches(n, s);\n\t  };\n\t  if (typeof Sizzle === \"function\") {\n\t    d3_select = function(s, n) {\n\t      return Sizzle(s, n)[0] || null;\n\t    };\n\t    d3_selectAll = Sizzle;\n\t    d3_selectMatches = Sizzle.matchesSelector;\n\t  }\n\t  d3.selection = function() {\n\t    return d3.select(d3_document.documentElement);\n\t  };\n\t  var d3_selectionPrototype = d3.selection.prototype = [];\n\t  d3_selectionPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, group, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n\t          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selector(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_select(selector, this);\n\t    };\n\t  }\n\t  d3_selectionPrototype.selectAll = function(selector) {\n\t    var subgroups = [], subgroup, node;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n\t          subgroup.parentNode = node;\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selectorAll(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_selectAll(selector, this);\n\t    };\n\t  }\n\t  var d3_nsPrefix = {\n\t    svg: \"http://www.w3.org/2000/svg\",\n\t    xhtml: \"http://www.w3.org/1999/xhtml\",\n\t    xlink: \"http://www.w3.org/1999/xlink\",\n\t    xml: \"http://www.w3.org/XML/1998/namespace\",\n\t    xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t  };\n\t  d3.ns = {\n\t    prefix: d3_nsPrefix,\n\t    qualify: function(name) {\n\t      var i = name.indexOf(\":\"), prefix = name;\n\t      if (i >= 0) {\n\t        prefix = name.slice(0, i);\n\t        name = name.slice(i + 1);\n\t      }\n\t      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n\t        space: d3_nsPrefix[prefix],\n\t        local: name\n\t      } : name;\n\t    }\n\t  };\n\t  d3_selectionPrototype.attr = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node();\n\t        name = d3.ns.qualify(name);\n\t        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n\t      }\n\t      for (value in name) this.each(d3_selection_attr(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_attr(name, value));\n\t  };\n\t  function d3_selection_attr(name, value) {\n\t    name = d3.ns.qualify(name);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrConstant() {\n\t      this.setAttribute(name, value);\n\t    }\n\t    function attrConstantNS() {\n\t      this.setAttributeNS(name.space, name.local, value);\n\t    }\n\t    function attrFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n\t    }\n\t    function attrFunctionNS() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n\t    }\n\t    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n\t  }\n\t  function d3_collapse(s) {\n\t    return s.trim().replace(/\\s+/g, \" \");\n\t  }\n\t  d3_selectionPrototype.classed = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n\t        if (value = node.classList) {\n\t          while (++i < n) if (!value.contains(name[i])) return false;\n\t        } else {\n\t          value = node.getAttribute(\"class\");\n\t          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n\t        }\n\t        return true;\n\t      }\n\t      for (value in name) this.each(d3_selection_classed(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_classed(name, value));\n\t  };\n\t  function d3_selection_classedRe(name) {\n\t    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n\t  }\n\t  function d3_selection_classes(name) {\n\t    return (name + \"\").trim().split(/^|\\s+/);\n\t  }\n\t  function d3_selection_classed(name, value) {\n\t    name = d3_selection_classes(name).map(d3_selection_classedName);\n\t    var n = name.length;\n\t    function classedConstant() {\n\t      var i = -1;\n\t      while (++i < n) name[i](this, value);\n\t    }\n\t    function classedFunction() {\n\t      var i = -1, x = value.apply(this, arguments);\n\t      while (++i < n) name[i](this, x);\n\t    }\n\t    return typeof value === \"function\" ? classedFunction : classedConstant;\n\t  }\n\t  function d3_selection_classedName(name) {\n\t    var re = d3_selection_classedRe(name);\n\t    return function(node, value) {\n\t      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n\t      var c = node.getAttribute(\"class\") || \"\";\n\t      if (value) {\n\t        re.lastIndex = 0;\n\t        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n\t      } else {\n\t        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n\t      }\n\t    };\n\t  }\n\t  d3_selectionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n\t        return this;\n\t      }\n\t      if (n < 2) {\n\t        var node = this.node();\n\t        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n\t      }\n\t      priority = \"\";\n\t    }\n\t    return this.each(d3_selection_style(name, value, priority));\n\t  };\n\t  function d3_selection_style(name, value, priority) {\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleConstant() {\n\t      this.style.setProperty(name, value, priority);\n\t    }\n\t    function styleFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n\t    }\n\t    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n\t  }\n\t  d3_selectionPrototype.property = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") return this.node()[name];\n\t      for (value in name) this.each(d3_selection_property(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_property(name, value));\n\t  };\n\t  function d3_selection_property(name, value) {\n\t    function propertyNull() {\n\t      delete this[name];\n\t    }\n\t    function propertyConstant() {\n\t      this[name] = value;\n\t    }\n\t    function propertyFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) delete this[name]; else this[name] = x;\n\t    }\n\t    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n\t  }\n\t  d3_selectionPrototype.text = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.textContent = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.textContent = \"\";\n\t    } : function() {\n\t      this.textContent = value;\n\t    }) : this.node().textContent;\n\t  };\n\t  d3_selectionPrototype.html = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.innerHTML = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.innerHTML = \"\";\n\t    } : function() {\n\t      this.innerHTML = value;\n\t    }) : this.node().innerHTML;\n\t  };\n\t  d3_selectionPrototype.append = function(name) {\n\t    name = d3_selection_creator(name);\n\t    return this.select(function() {\n\t      return this.appendChild(name.apply(this, arguments));\n\t    });\n\t  };\n\t  function d3_selection_creator(name) {\n\t    function create() {\n\t      var document = this.ownerDocument, namespace = this.namespaceURI;\n\t      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n\t    }\n\t    function createNS() {\n\t      return this.ownerDocument.createElementNS(name.space, name.local);\n\t    }\n\t    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n\t  }\n\t  d3_selectionPrototype.insert = function(name, before) {\n\t    name = d3_selection_creator(name);\n\t    before = d3_selection_selector(before);\n\t    return this.select(function() {\n\t      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n\t    });\n\t  };\n\t  d3_selectionPrototype.remove = function() {\n\t    return this.each(d3_selectionRemove);\n\t  };\n\t  function d3_selectionRemove() {\n\t    var parent = this.parentNode;\n\t    if (parent) parent.removeChild(this);\n\t  }\n\t  d3_selectionPrototype.data = function(value, key) {\n\t    var i = -1, n = this.length, group, node;\n\t    if (!arguments.length) {\n\t      value = new Array(n = (group = this[0]).length);\n\t      while (++i < n) {\n\t        if (node = group[i]) {\n\t          value[i] = node.__data__;\n\t        }\n\t      }\n\t      return value;\n\t    }\n\t    function bind(group, groupData) {\n\t      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n\t      if (key) {\n\t        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n\t        for (i = -1; ++i < n; ) {\n\t          if (nodeByKeyValue.has(keyValue = key.call(node = group[i], node.__data__, i))) {\n\t            exitNodes[i] = node;\n\t          } else {\n\t            nodeByKeyValue.set(keyValue, node);\n\t          }\n\t          keyValues[i] = keyValue;\n\t        }\n\t        for (i = -1; ++i < m; ) {\n\t          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          } else if (node !== true) {\n\t            updateNodes[i] = node;\n\t            node.__data__ = nodeData;\n\t          }\n\t          nodeByKeyValue.set(keyValue, true);\n\t        }\n\t        for (i = -1; ++i < n; ) {\n\t          if (nodeByKeyValue.get(keyValues[i]) !== true) {\n\t            exitNodes[i] = group[i];\n\t          }\n\t        }\n\t      } else {\n\t        for (i = -1; ++i < n0; ) {\n\t          node = group[i];\n\t          nodeData = groupData[i];\n\t          if (node) {\n\t            node.__data__ = nodeData;\n\t            updateNodes[i] = node;\n\t          } else {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          }\n\t        }\n\t        for (;i < m; ++i) {\n\t          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n\t        }\n\t        for (;i < n; ++i) {\n\t          exitNodes[i] = group[i];\n\t        }\n\t      }\n\t      enterNodes.update = updateNodes;\n\t      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n\t      enter.push(enterNodes);\n\t      update.push(updateNodes);\n\t      exit.push(exitNodes);\n\t    }\n\t    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n\t    if (typeof value === \"function\") {\n\t      while (++i < n) {\n\t        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        bind(group = this[i], value);\n\t      }\n\t    }\n\t    update.enter = function() {\n\t      return enter;\n\t    };\n\t    update.exit = function() {\n\t      return exit;\n\t    };\n\t    return update;\n\t  };\n\t  function d3_selection_dataNode(data) {\n\t    return {\n\t      __data__: data\n\t    };\n\t  }\n\t  d3_selectionPrototype.datum = function(value) {\n\t    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n\t  };\n\t  d3_selectionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_filter(selector) {\n\t    return function() {\n\t      return d3_selectMatches(this, selector);\n\t    };\n\t  }\n\t  d3_selectionPrototype.order = function() {\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n\t        if (node = group[i]) {\n\t          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t          next = node;\n\t        }\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.sort = function(comparator) {\n\t    comparator = d3_selection_sortComparator.apply(this, arguments);\n\t    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n\t    return this.order();\n\t  };\n\t  function d3_selection_sortComparator(comparator) {\n\t    if (!arguments.length) comparator = d3_ascending;\n\t    return function(a, b) {\n\t      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n\t    };\n\t  }\n\t  d3_selectionPrototype.each = function(callback) {\n\t    return d3_selection_each(this, function(node, i, j) {\n\t      callback.call(node, node.__data__, i, j);\n\t    });\n\t  };\n\t  function d3_selection_each(groups, callback) {\n\t    for (var j = 0, m = groups.length; j < m; j++) {\n\t      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n\t        if (node = group[i]) callback(node, i, j);\n\t      }\n\t    }\n\t    return groups;\n\t  }\n\t  d3_selectionPrototype.call = function(callback) {\n\t    var args = d3_array(arguments);\n\t    callback.apply(args[0] = this, args);\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.empty = function() {\n\t    return !this.node();\n\t  };\n\t  d3_selectionPrototype.node = function() {\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        var node = group[i];\n\t        if (node) return node;\n\t      }\n\t    }\n\t    return null;\n\t  };\n\t  d3_selectionPrototype.size = function() {\n\t    var n = 0;\n\t    d3_selection_each(this, function() {\n\t      ++n;\n\t    });\n\t    return n;\n\t  };\n\t  function d3_selection_enter(selection) {\n\t    d3_subclass(selection, d3_selection_enterPrototype);\n\t    return selection;\n\t  }\n\t  var d3_selection_enterPrototype = [];\n\t  d3.selection.enter = d3_selection_enter;\n\t  d3.selection.enter.prototype = d3_selection_enterPrototype;\n\t  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n\t  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n\t  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n\t  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\t  d3_selection_enterPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, upgroup, group, node;\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      upgroup = (group = this[j]).update;\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = group.parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n\t          subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  d3_selection_enterPrototype.insert = function(name, before) {\n\t    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n\t    return d3_selectionPrototype.insert.call(this, name, before);\n\t  };\n\t  function d3_selection_enterInsertBefore(enter) {\n\t    var i0, j0;\n\t    return function(d, i, j) {\n\t      var group = enter[j].update, n = group.length, node;\n\t      if (j != j0) j0 = j, i0 = 0;\n\t      if (i >= i0) i0 = i + 1;\n\t      while (!(node = group[i0]) && ++i0 < n) ;\n\t      return node;\n\t    };\n\t  }\n\t  d3.select = function(node) {\n\t    var group;\n\t    if (typeof node === \"string\") {\n\t      group = [ d3_select(node, d3_document) ];\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = [ node ];\n\t      group.parentNode = d3_documentElement(node);\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3.selectAll = function(nodes) {\n\t    var group;\n\t    if (typeof nodes === \"string\") {\n\t      group = d3_array(d3_selectAll(nodes, d3_document));\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = nodes;\n\t      group.parentNode = null;\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3_selectionPrototype.on = function(type, listener, capture) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof type !== \"string\") {\n\t        if (n < 2) listener = false;\n\t        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n\t        return this;\n\t      }\n\t      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n\t      capture = false;\n\t    }\n\t    return this.each(d3_selection_on(type, listener, capture));\n\t  };\n\t  function d3_selection_on(type, listener, capture) {\n\t    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n\t    if (i > 0) type = type.slice(0, i);\n\t    var filter = d3_selection_onFilters.get(type);\n\t    if (filter) type = filter, wrap = d3_selection_onFilter;\n\t    function onRemove() {\n\t      var l = this[name];\n\t      if (l) {\n\t        this.removeEventListener(type, l, l.$);\n\t        delete this[name];\n\t      }\n\t    }\n\t    function onAdd() {\n\t      var l = wrap(listener, d3_array(arguments));\n\t      onRemove.call(this);\n\t      this.addEventListener(type, this[name] = l, l.$ = capture);\n\t      l._ = listener;\n\t    }\n\t    function removeAll() {\n\t      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n\t      for (var name in this) {\n\t        if (match = name.match(re)) {\n\t          var l = this[name];\n\t          this.removeEventListener(match[1], l, l.$);\n\t          delete this[name];\n\t        }\n\t      }\n\t    }\n\t    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n\t  }\n\t  var d3_selection_onFilters = d3.map({\n\t    mouseenter: \"mouseover\",\n\t    mouseleave: \"mouseout\"\n\t  });\n\t  if (d3_document) {\n\t    d3_selection_onFilters.forEach(function(k) {\n\t      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n\t    });\n\t  }\n\t  function d3_selection_onListener(listener, argumentz) {\n\t    return function(e) {\n\t      var o = d3.event;\n\t      d3.event = e;\n\t      argumentz[0] = this.__data__;\n\t      try {\n\t        listener.apply(this, argumentz);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t  }\n\t  function d3_selection_onFilter(listener, argumentz) {\n\t    var l = d3_selection_onListener(listener, argumentz);\n\t    return function(e) {\n\t      var target = this, related = e.relatedTarget;\n\t      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n\t        l.call(target, e);\n\t      }\n\t    };\n\t  }\n\t  var d3_event_dragSelect, d3_event_dragId = 0;\n\t  function d3_event_dragSuppress(node) {\n\t    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\t    if (d3_event_dragSelect == null) {\n\t      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n\t    }\n\t    if (d3_event_dragSelect) {\n\t      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n\t      style[d3_event_dragSelect] = \"none\";\n\t    }\n\t    return function(suppressClick) {\n\t      w.on(name, null);\n\t      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\t      if (suppressClick) {\n\t        var off = function() {\n\t          w.on(click, null);\n\t        };\n\t        w.on(click, function() {\n\t          d3_eventPreventDefault();\n\t          off();\n\t        }, true);\n\t        setTimeout(off, 0);\n\t      }\n\t    };\n\t  }\n\t  d3.mouse = function(container) {\n\t    return d3_mousePoint(container, d3_eventSource());\n\t  };\n\t  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n\t  function d3_mousePoint(container, e) {\n\t    if (e.changedTouches) e = e.changedTouches[0];\n\t    var svg = container.ownerSVGElement || container;\n\t    if (svg.createSVGPoint) {\n\t      var point = svg.createSVGPoint();\n\t      if (d3_mouse_bug44083 < 0) {\n\t        var window = d3_window(container);\n\t        if (window.scrollX || window.scrollY) {\n\t          svg = d3.select(\"body\").append(\"svg\").style({\n\t            position: \"absolute\",\n\t            top: 0,\n\t            left: 0,\n\t            margin: 0,\n\t            padding: 0,\n\t            border: \"none\"\n\t          }, \"important\");\n\t          var ctm = svg[0][0].getScreenCTM();\n\t          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n\t          svg.remove();\n\t        }\n\t      }\n\t      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n\t      point.y = e.clientY;\n\t      point = point.matrixTransform(container.getScreenCTM().inverse());\n\t      return [ point.x, point.y ];\n\t    }\n\t    var rect = container.getBoundingClientRect();\n\t    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n\t  }\n\t  d3.touch = function(container, touches, identifier) {\n\t    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n\t    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n\t      if ((touch = touches[i]).identifier === identifier) {\n\t        return d3_mousePoint(container, touch);\n\t      }\n\t    }\n\t  };\n\t  d3.behavior.drag = function() {\n\t    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n\t    function drag() {\n\t      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n\t    }\n\t    function dragstart(id, position, subject, move, end) {\n\t      return function() {\n\t        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n\t        if (origin) {\n\t          dragOffset = origin.apply(that, arguments);\n\t          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n\t        } else {\n\t          dragOffset = [ 0, 0 ];\n\t        }\n\t        dispatch({\n\t          type: \"dragstart\"\n\t        });\n\t        function moved() {\n\t          var position1 = position(parent, dragId), dx, dy;\n\t          if (!position1) return;\n\t          dx = position1[0] - position0[0];\n\t          dy = position1[1] - position0[1];\n\t          dragged |= dx | dy;\n\t          position0 = position1;\n\t          dispatch({\n\t            type: \"drag\",\n\t            x: position1[0] + dragOffset[0],\n\t            y: position1[1] + dragOffset[1],\n\t            dx: dx,\n\t            dy: dy\n\t          });\n\t        }\n\t        function ended() {\n\t          if (!position(parent, dragId)) return;\n\t          dragSubject.on(move + dragName, null).on(end + dragName, null);\n\t          dragRestore(dragged && d3.event.target === target);\n\t          dispatch({\n\t            type: \"dragend\"\n\t          });\n\t        }\n\t      };\n\t    }\n\t    drag.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return drag;\n\t    };\n\t    return d3.rebind(drag, event, \"on\");\n\t  };\n\t  function d3_behavior_dragTouchId() {\n\t    return d3.event.changedTouches[0].identifier;\n\t  }\n\t  d3.touches = function(container, touches) {\n\t    if (arguments.length < 2) touches = d3_eventSource().touches;\n\t    return touches ? d3_array(touches).map(function(touch) {\n\t      var point = d3_mousePoint(container, touch);\n\t      point.identifier = touch.identifier;\n\t      return point;\n\t    }) : [];\n\t  };\n\t  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n\t  function d3_sgn(x) {\n\t    return x > 0 ? 1 : x < 0 ? -1 : 0;\n\t  }\n\t  function d3_cross2d(a, b, c) {\n\t    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t  }\n\t  function d3_acos(x) {\n\t    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n\t  }\n\t  function d3_asin(x) {\n\t    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n\t  }\n\t  function d3_sinh(x) {\n\t    return ((x = Math.exp(x)) - 1 / x) / 2;\n\t  }\n\t  function d3_cosh(x) {\n\t    return ((x = Math.exp(x)) + 1 / x) / 2;\n\t  }\n\t  function d3_tanh(x) {\n\t    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t  }\n\t  function d3_haversin(x) {\n\t    return (x = Math.sin(x / 2)) * x;\n\t  }\n\t  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n\t  d3.interpolateZoom = function(p0, p1) {\n\t    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n\t    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n\t    function interpolate(t) {\n\t      var s = t * S;\n\t      if (dr) {\n\t        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n\t        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n\t      }\n\t      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n\t    }\n\t    interpolate.duration = S * 1e3;\n\t    return interpolate;\n\t  };\n\t  d3.behavior.zoom = function() {\n\t    var view = {\n\t      x: 0,\n\t      y: 0,\n\t      k: 1\n\t    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n\t    if (!d3_behavior_zoomWheel) {\n\t      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n\t      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return d3.event.wheelDelta;\n\t      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.detail;\n\t      }, \"MozMousePixelScroll\");\n\t    }\n\t    function zoom(g) {\n\t      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n\t    }\n\t    zoom.event = function(g) {\n\t      g.each(function() {\n\t        var dispatch = event.of(this, arguments), view1 = view;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.zoom\", function() {\n\t            view = this.__chart__ || {\n\t              x: 0,\n\t              y: 0,\n\t              k: 1\n\t            };\n\t            zoomstarted(dispatch);\n\t          }).tween(\"zoom:zoom\", function() {\n\t            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n\t            return function(t) {\n\t              var l = i(t), k = dx / l[2];\n\t              this.__chart__ = view = {\n\t                x: cx - l[0] * k,\n\t                y: cy - l[1] * k,\n\t                k: k\n\t              };\n\t              zoomed(dispatch);\n\t            };\n\t          }).each(\"interrupt.zoom\", function() {\n\t            zoomended(dispatch);\n\t          }).each(\"end.zoom\", function() {\n\t            zoomended(dispatch);\n\t          });\n\t        } else {\n\t          this.__chart__ = view;\n\t          zoomstarted(dispatch);\n\t          zoomed(dispatch);\n\t          zoomended(dispatch);\n\t        }\n\t      });\n\t    };\n\t    zoom.translate = function(_) {\n\t      if (!arguments.length) return [ view.x, view.y ];\n\t      view = {\n\t        x: +_[0],\n\t        y: +_[1],\n\t        k: view.k\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scale = function(_) {\n\t      if (!arguments.length) return view.k;\n\t      view = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: +_\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scaleExtent = function(_) {\n\t      if (!arguments.length) return scaleExtent;\n\t      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.center = function(_) {\n\t      if (!arguments.length) return center;\n\t      center = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.duration = function(_) {\n\t      if (!arguments.length) return duration;\n\t      duration = +_;\n\t      return zoom;\n\t    };\n\t    zoom.x = function(z) {\n\t      if (!arguments.length) return x1;\n\t      x1 = z;\n\t      x0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    zoom.y = function(z) {\n\t      if (!arguments.length) return y1;\n\t      y1 = z;\n\t      y0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    function location(p) {\n\t      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n\t    }\n\t    function point(l) {\n\t      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n\t    }\n\t    function scaleTo(s) {\n\t      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n\t    }\n\t    function translateTo(p, l) {\n\t      l = point(l);\n\t      view.x += p[0] - l[0];\n\t      view.y += p[1] - l[1];\n\t    }\n\t    function zoomTo(that, p, l, k) {\n\t      that.__chart__ = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: view.k\n\t      };\n\t      scaleTo(Math.pow(2, k));\n\t      translateTo(center0 = p, l);\n\t      that = d3.select(that);\n\t      if (duration > 0) that = that.transition().duration(duration);\n\t      that.call(zoom.event);\n\t    }\n\t    function rescale() {\n\t      if (x1) x1.domain(x0.range().map(function(x) {\n\t        return (x - view.x) / view.k;\n\t      }).map(x0.invert));\n\t      if (y1) y1.domain(y0.range().map(function(y) {\n\t        return (y - view.y) / view.k;\n\t      }).map(y0.invert));\n\t    }\n\t    function zoomstarted(dispatch) {\n\t      if (!zooming++) dispatch({\n\t        type: \"zoomstart\"\n\t      });\n\t    }\n\t    function zoomed(dispatch) {\n\t      rescale();\n\t      dispatch({\n\t        type: \"zoom\",\n\t        scale: view.k,\n\t        translate: [ view.x, view.y ]\n\t      });\n\t    }\n\t    function zoomended(dispatch) {\n\t      if (!--zooming) dispatch({\n\t        type: \"zoomend\"\n\t      }), center0 = null;\n\t    }\n\t    function mousedowned() {\n\t      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n\t      d3_selection_interrupt.call(that);\n\t      zoomstarted(dispatch);\n\t      function moved() {\n\t        dragged = 1;\n\t        translateTo(d3.mouse(that), location0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        subject.on(mousemove, null).on(mouseup, null);\n\t        dragRestore(dragged && d3.event.target === target);\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function touchstarted() {\n\t      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n\t      started();\n\t      zoomstarted(dispatch);\n\t      subject.on(mousedown, null).on(touchstart, started);\n\t      function relocate() {\n\t        var touches = d3.touches(that);\n\t        scale0 = view.k;\n\t        touches.forEach(function(t) {\n\t          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n\t        });\n\t        return touches;\n\t      }\n\t      function started() {\n\t        var target = d3.event.target;\n\t        d3.select(target).on(touchmove, moved).on(touchend, ended);\n\t        targets.push(target);\n\t        var changed = d3.event.changedTouches;\n\t        for (var i = 0, n = changed.length; i < n; ++i) {\n\t          locations0[changed[i].identifier] = null;\n\t        }\n\t        var touches = relocate(), now = Date.now();\n\t        if (touches.length === 1) {\n\t          if (now - touchtime < 500) {\n\t            var p = touches[0];\n\t            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n\t            d3_eventPreventDefault();\n\t          }\n\t          touchtime = now;\n\t        } else if (touches.length > 1) {\n\t          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n\t          distance0 = dx * dx + dy * dy;\n\t        }\n\t      }\n\t      function moved() {\n\t        var touches = d3.touches(that), p0, l0, p1, l1;\n\t        d3_selection_interrupt.call(that);\n\t        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n\t          p1 = touches[i];\n\t          if (l1 = locations0[p1.identifier]) {\n\t            if (l0) break;\n\t            p0 = p1, l0 = l1;\n\t          }\n\t        }\n\t        if (l1) {\n\t          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n\t          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n\t          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n\t          scaleTo(scale1 * scale0);\n\t        }\n\t        touchtime = null;\n\t        translateTo(p0, l0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        if (d3.event.touches.length) {\n\t          var changed = d3.event.changedTouches;\n\t          for (var i = 0, n = changed.length; i < n; ++i) {\n\t            delete locations0[changed[i].identifier];\n\t          }\n\t          for (var identifier in locations0) {\n\t            return void relocate();\n\t          }\n\t        }\n\t        d3.selectAll(targets).on(zoomName, null);\n\t        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n\t        dragRestore();\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function mousewheeled() {\n\t      var dispatch = event.of(this, arguments);\n\t      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n\t      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n\t      mousewheelTimer = setTimeout(function() {\n\t        mousewheelTimer = null;\n\t        zoomended(dispatch);\n\t      }, 50);\n\t      d3_eventPreventDefault();\n\t      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n\t      translateTo(center0, translate0);\n\t      zoomed(dispatch);\n\t    }\n\t    function dblclicked() {\n\t      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n\t      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n\t    }\n\t    return d3.rebind(zoom, event, \"on\");\n\t  };\n\t  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n\t  d3.color = d3_color;\n\t  function d3_color() {}\n\t  d3_color.prototype.toString = function() {\n\t    return this.rgb() + \"\";\n\t  };\n\t  d3.hsl = d3_hsl;\n\t  function d3_hsl(h, s, l) {\n\t    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n\t  }\n\t  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\t  d3_hslPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, this.l / k);\n\t  };\n\t  d3_hslPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, k * this.l);\n\t  };\n\t  d3_hslPrototype.rgb = function() {\n\t    return d3_hsl_rgb(this.h, this.s, this.l);\n\t  };\n\t  function d3_hsl_rgb(h, s, l) {\n\t    var m1, m2;\n\t    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n\t    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n\t    l = l < 0 ? 0 : l > 1 ? 1 : l;\n\t    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n\t    m1 = 2 * l - m2;\n\t    function v(h) {\n\t      if (h > 360) h -= 360; else if (h < 0) h += 360;\n\t      if (h < 60) return m1 + (m2 - m1) * h / 60;\n\t      if (h < 180) return m2;\n\t      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n\t      return m1;\n\t    }\n\t    function vv(h) {\n\t      return Math.round(v(h) * 255);\n\t    }\n\t    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n\t  }\n\t  d3.hcl = d3_hcl;\n\t  function d3_hcl(h, c, l) {\n\t    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n\t  }\n\t  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\t  d3_hclPrototype.brighter = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.darker = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.rgb = function() {\n\t    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n\t  };\n\t  function d3_hcl_lab(h, c, l) {\n\t    if (isNaN(h)) h = 0;\n\t    if (isNaN(c)) c = 0;\n\t    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n\t  }\n\t  d3.lab = d3_lab;\n\t  function d3_lab(l, a, b) {\n\t    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n\t  }\n\t  var d3_lab_K = 18;\n\t  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n\t  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\t  d3_labPrototype.brighter = function(k) {\n\t    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.darker = function(k) {\n\t    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.rgb = function() {\n\t    return d3_lab_rgb(this.l, this.a, this.b);\n\t  };\n\t  function d3_lab_rgb(l, a, b) {\n\t    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n\t    x = d3_lab_xyz(x) * d3_lab_X;\n\t    y = d3_lab_xyz(y) * d3_lab_Y;\n\t    z = d3_lab_xyz(z) * d3_lab_Z;\n\t    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n\t  }\n\t  function d3_lab_hcl(l, a, b) {\n\t    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n\t  }\n\t  function d3_lab_xyz(x) {\n\t    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n\t  }\n\t  function d3_xyz_lab(x) {\n\t    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n\t  }\n\t  function d3_xyz_rgb(r) {\n\t    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n\t  }\n\t  d3.rgb = d3_rgb;\n\t  function d3_rgb(r, g, b) {\n\t    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n\t  }\n\t  function d3_rgbNumber(value) {\n\t    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n\t  }\n\t  function d3_rgbString(value) {\n\t    return d3_rgbNumber(value) + \"\";\n\t  }\n\t  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\t  d3_rgbPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    var r = this.r, g = this.g, b = this.b, i = 30;\n\t    if (!r && !g && !b) return new d3_rgb(i, i, i);\n\t    if (r && r < i) r = i;\n\t    if (g && g < i) g = i;\n\t    if (b && b < i) b = i;\n\t    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n\t  };\n\t  d3_rgbPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n\t  };\n\t  d3_rgbPrototype.hsl = function() {\n\t    return d3_rgb_hsl(this.r, this.g, this.b);\n\t  };\n\t  d3_rgbPrototype.toString = function() {\n\t    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n\t  };\n\t  function d3_rgb_hex(v) {\n\t    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n\t  }\n\t  function d3_rgb_parse(format, rgb, hsl) {\n\t    format = format.toLowerCase();\n\t    var r = 0, g = 0, b = 0, m1, m2, color;\n\t    m1 = /([a-z]+)\\((.*)\\)/.exec(format);\n\t    if (m1) {\n\t      m2 = m1[2].split(\",\");\n\t      switch (m1[1]) {\n\t       case \"hsl\":\n\t        {\n\t          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n\t        }\n\t\n\t       case \"rgb\":\n\t        {\n\t          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n\t        }\n\t      }\n\t    }\n\t    if (color = d3_rgb_names.get(format)) {\n\t      return rgb(color.r, color.g, color.b);\n\t    }\n\t    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n\t      if (format.length === 4) {\n\t        r = (color & 3840) >> 4;\n\t        r = r >> 4 | r;\n\t        g = color & 240;\n\t        g = g >> 4 | g;\n\t        b = color & 15;\n\t        b = b << 4 | b;\n\t      } else if (format.length === 7) {\n\t        r = (color & 16711680) >> 16;\n\t        g = (color & 65280) >> 8;\n\t        b = color & 255;\n\t      }\n\t    }\n\t    return rgb(r, g, b);\n\t  }\n\t  function d3_rgb_hsl(r, g, b) {\n\t    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n\t    if (d) {\n\t      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n\t      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n\t      h *= 60;\n\t    } else {\n\t      h = NaN;\n\t      s = l > 0 && l < 1 ? 0 : h;\n\t    }\n\t    return new d3_hsl(h, s, l);\n\t  }\n\t  function d3_rgb_lab(r, g, b) {\n\t    r = d3_rgb_xyz(r);\n\t    g = d3_rgb_xyz(g);\n\t    b = d3_rgb_xyz(b);\n\t    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n\t    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n\t  }\n\t  function d3_rgb_xyz(r) {\n\t    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n\t  }\n\t  function d3_rgb_parseNumber(c) {\n\t    var f = parseFloat(c);\n\t    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n\t  }\n\t  var d3_rgb_names = d3.map({\n\t    aliceblue: 15792383,\n\t    antiquewhite: 16444375,\n\t    aqua: 65535,\n\t    aquamarine: 8388564,\n\t    azure: 15794175,\n\t    beige: 16119260,\n\t    bisque: 16770244,\n\t    black: 0,\n\t    blanchedalmond: 16772045,\n\t    blue: 255,\n\t    blueviolet: 9055202,\n\t    brown: 10824234,\n\t    burlywood: 14596231,\n\t    cadetblue: 6266528,\n\t    chartreuse: 8388352,\n\t    chocolate: 13789470,\n\t    coral: 16744272,\n\t    cornflowerblue: 6591981,\n\t    cornsilk: 16775388,\n\t    crimson: 14423100,\n\t    cyan: 65535,\n\t    darkblue: 139,\n\t    darkcyan: 35723,\n\t    darkgoldenrod: 12092939,\n\t    darkgray: 11119017,\n\t    darkgreen: 25600,\n\t    darkgrey: 11119017,\n\t    darkkhaki: 12433259,\n\t    darkmagenta: 9109643,\n\t    darkolivegreen: 5597999,\n\t    darkorange: 16747520,\n\t    darkorchid: 10040012,\n\t    darkred: 9109504,\n\t    darksalmon: 15308410,\n\t    darkseagreen: 9419919,\n\t    darkslateblue: 4734347,\n\t    darkslategray: 3100495,\n\t    darkslategrey: 3100495,\n\t    darkturquoise: 52945,\n\t    darkviolet: 9699539,\n\t    deeppink: 16716947,\n\t    deepskyblue: 49151,\n\t    dimgray: 6908265,\n\t    dimgrey: 6908265,\n\t    dodgerblue: 2003199,\n\t    firebrick: 11674146,\n\t    floralwhite: 16775920,\n\t    forestgreen: 2263842,\n\t    fuchsia: 16711935,\n\t    gainsboro: 14474460,\n\t    ghostwhite: 16316671,\n\t    gold: 16766720,\n\t    goldenrod: 14329120,\n\t    gray: 8421504,\n\t    green: 32768,\n\t    greenyellow: 11403055,\n\t    grey: 8421504,\n\t    honeydew: 15794160,\n\t    hotpink: 16738740,\n\t    indianred: 13458524,\n\t    indigo: 4915330,\n\t    ivory: 16777200,\n\t    khaki: 15787660,\n\t    lavender: 15132410,\n\t    lavenderblush: 16773365,\n\t    lawngreen: 8190976,\n\t    lemonchiffon: 16775885,\n\t    lightblue: 11393254,\n\t    lightcoral: 15761536,\n\t    lightcyan: 14745599,\n\t    lightgoldenrodyellow: 16448210,\n\t    lightgray: 13882323,\n\t    lightgreen: 9498256,\n\t    lightgrey: 13882323,\n\t    lightpink: 16758465,\n\t    lightsalmon: 16752762,\n\t    lightseagreen: 2142890,\n\t    lightskyblue: 8900346,\n\t    lightslategray: 7833753,\n\t    lightslategrey: 7833753,\n\t    lightsteelblue: 11584734,\n\t    lightyellow: 16777184,\n\t    lime: 65280,\n\t    limegreen: 3329330,\n\t    linen: 16445670,\n\t    magenta: 16711935,\n\t    maroon: 8388608,\n\t    mediumaquamarine: 6737322,\n\t    mediumblue: 205,\n\t    mediumorchid: 12211667,\n\t    mediumpurple: 9662683,\n\t    mediumseagreen: 3978097,\n\t    mediumslateblue: 8087790,\n\t    mediumspringgreen: 64154,\n\t    mediumturquoise: 4772300,\n\t    mediumvioletred: 13047173,\n\t    midnightblue: 1644912,\n\t    mintcream: 16121850,\n\t    mistyrose: 16770273,\n\t    moccasin: 16770229,\n\t    navajowhite: 16768685,\n\t    navy: 128,\n\t    oldlace: 16643558,\n\t    olive: 8421376,\n\t    olivedrab: 7048739,\n\t    orange: 16753920,\n\t    orangered: 16729344,\n\t    orchid: 14315734,\n\t    palegoldenrod: 15657130,\n\t    palegreen: 10025880,\n\t    paleturquoise: 11529966,\n\t    palevioletred: 14381203,\n\t    papayawhip: 16773077,\n\t    peachpuff: 16767673,\n\t    peru: 13468991,\n\t    pink: 16761035,\n\t    plum: 14524637,\n\t    powderblue: 11591910,\n\t    purple: 8388736,\n\t    rebeccapurple: 6697881,\n\t    red: 16711680,\n\t    rosybrown: 12357519,\n\t    royalblue: 4286945,\n\t    saddlebrown: 9127187,\n\t    salmon: 16416882,\n\t    sandybrown: 16032864,\n\t    seagreen: 3050327,\n\t    seashell: 16774638,\n\t    sienna: 10506797,\n\t    silver: 12632256,\n\t    skyblue: 8900331,\n\t    slateblue: 6970061,\n\t    slategray: 7372944,\n\t    slategrey: 7372944,\n\t    snow: 16775930,\n\t    springgreen: 65407,\n\t    steelblue: 4620980,\n\t    tan: 13808780,\n\t    teal: 32896,\n\t    thistle: 14204888,\n\t    tomato: 16737095,\n\t    turquoise: 4251856,\n\t    violet: 15631086,\n\t    wheat: 16113331,\n\t    white: 16777215,\n\t    whitesmoke: 16119285,\n\t    yellow: 16776960,\n\t    yellowgreen: 10145074\n\t  });\n\t  d3_rgb_names.forEach(function(key, value) {\n\t    d3_rgb_names.set(key, d3_rgbNumber(value));\n\t  });\n\t  function d3_functor(v) {\n\t    return typeof v === \"function\" ? v : function() {\n\t      return v;\n\t    };\n\t  }\n\t  d3.functor = d3_functor;\n\t  d3.xhr = d3_xhrType(d3_identity);\n\t  function d3_xhrType(response) {\n\t    return function(url, mimeType, callback) {\n\t      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n\t      mimeType = null;\n\t      return d3_xhr(url, mimeType, response, callback);\n\t    };\n\t  }\n\t  function d3_xhr(url, mimeType, response, callback) {\n\t    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n\t    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\t    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n\t      request.readyState > 3 && respond();\n\t    };\n\t    function respond() {\n\t      var status = request.status, result;\n\t      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n\t        try {\n\t          result = response.call(xhr, request);\n\t        } catch (e) {\n\t          dispatch.error.call(xhr, e);\n\t          return;\n\t        }\n\t        dispatch.load.call(xhr, result);\n\t      } else {\n\t        dispatch.error.call(xhr, request);\n\t      }\n\t    }\n\t    request.onprogress = function(event) {\n\t      var o = d3.event;\n\t      d3.event = event;\n\t      try {\n\t        dispatch.progress.call(xhr, request);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t    xhr.header = function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers[name];\n\t      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.mimeType = function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.responseType = function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return xhr;\n\t    };\n\t    xhr.response = function(value) {\n\t      response = value;\n\t      return xhr;\n\t    };\n\t    [ \"get\", \"post\" ].forEach(function(method) {\n\t      xhr[method] = function() {\n\t        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n\t      };\n\t    });\n\t    xhr.send = function(method, data, callback) {\n\t      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n\t      request.open(method, url, true);\n\t      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n\t      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n\t      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n\t      if (responseType != null) request.responseType = responseType;\n\t      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n\t        callback(null, request);\n\t      });\n\t      dispatch.beforesend.call(xhr, request);\n\t      request.send(data == null ? null : data);\n\t      return xhr;\n\t    };\n\t    xhr.abort = function() {\n\t      request.abort();\n\t      return xhr;\n\t    };\n\t    d3.rebind(xhr, dispatch, \"on\");\n\t    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n\t  }\n\t  function d3_xhr_fixCallback(callback) {\n\t    return callback.length === 1 ? function(error, request) {\n\t      callback(error == null ? request : null);\n\t    } : callback;\n\t  }\n\t  function d3_xhrHasResponse(request) {\n\t    var type = request.responseType;\n\t    return type && type !== \"text\" ? request.response : request.responseText;\n\t  }\n\t  d3.dsv = function(delimiter, mimeType) {\n\t    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n\t    function dsv(url, row, callback) {\n\t      if (arguments.length < 3) callback = row, row = null;\n\t      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\t      xhr.row = function(_) {\n\t        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n\t      };\n\t      return xhr;\n\t    }\n\t    function response(request) {\n\t      return dsv.parse(request.responseText);\n\t    }\n\t    function typedResponse(f) {\n\t      return function(request) {\n\t        return dsv.parse(request.responseText, f);\n\t      };\n\t    }\n\t    dsv.parse = function(text, f) {\n\t      var o;\n\t      return dsv.parseRows(text, function(row, i) {\n\t        if (o) return o(row, i - 1);\n\t        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n\t          return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t        }).join(\",\") + \"}\");\n\t        o = f ? function(row, i) {\n\t          return f(a(row), i);\n\t        } : a;\n\t      });\n\t    };\n\t    dsv.parseRows = function(text, f) {\n\t      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n\t      function token() {\n\t        if (I >= N) return EOF;\n\t        if (eol) return eol = false, EOL;\n\t        var j = I;\n\t        if (text.charCodeAt(j) === 34) {\n\t          var i = j;\n\t          while (i++ < N) {\n\t            if (text.charCodeAt(i) === 34) {\n\t              if (text.charCodeAt(i + 1) !== 34) break;\n\t              ++i;\n\t            }\n\t          }\n\t          I = i + 2;\n\t          var c = text.charCodeAt(i + 1);\n\t          if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(i + 2) === 10) ++I;\n\t          } else if (c === 10) {\n\t            eol = true;\n\t          }\n\t          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n\t        }\n\t        while (I < N) {\n\t          var c = text.charCodeAt(I++), k = 1;\n\t          if (c === 10) eol = true; else if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(I) === 10) ++I, ++k;\n\t          } else if (c !== delimiterCode) continue;\n\t          return text.slice(j, I - k);\n\t        }\n\t        return text.slice(j);\n\t      }\n\t      while ((t = token()) !== EOF) {\n\t        var a = [];\n\t        while (t !== EOL && t !== EOF) {\n\t          a.push(t);\n\t          t = token();\n\t        }\n\t        if (f && (a = f(a, n++)) == null) continue;\n\t        rows.push(a);\n\t      }\n\t      return rows;\n\t    };\n\t    dsv.format = function(rows) {\n\t      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n\t      var fieldSet = new d3_Set(), fields = [];\n\t      rows.forEach(function(row) {\n\t        for (var field in row) {\n\t          if (!fieldSet.has(field)) {\n\t            fields.push(fieldSet.add(field));\n\t          }\n\t        }\n\t      });\n\t      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n\t        return fields.map(function(field) {\n\t          return formatValue(row[field]);\n\t        }).join(delimiter);\n\t      })).join(\"\\n\");\n\t    };\n\t    dsv.formatRows = function(rows) {\n\t      return rows.map(formatRow).join(\"\\n\");\n\t    };\n\t    function formatRow(row) {\n\t      return row.map(formatValue).join(delimiter);\n\t    }\n\t    function formatValue(text) {\n\t      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n\t    }\n\t    return dsv;\n\t  };\n\t  d3.csv = d3.dsv(\",\", \"text/csv\");\n\t  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\t  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n\t    setTimeout(callback, 17);\n\t  };\n\t  d3.timer = function(callback, delay, then) {\n\t    var n = arguments.length;\n\t    if (n < 2) delay = 0;\n\t    if (n < 3) then = Date.now();\n\t    var time = then + delay, timer = {\n\t      c: callback,\n\t      t: time,\n\t      f: false,\n\t      n: null\n\t    };\n\t    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n\t    d3_timer_queueTail = timer;\n\t    if (!d3_timer_interval) {\n\t      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  };\n\t  function d3_timer_step() {\n\t    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n\t    if (delay > 24) {\n\t      if (isFinite(delay)) {\n\t        clearTimeout(d3_timer_timeout);\n\t        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n\t      }\n\t      d3_timer_interval = 0;\n\t    } else {\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  }\n\t  d3.timer.flush = function() {\n\t    d3_timer_mark();\n\t    d3_timer_sweep();\n\t  };\n\t  function d3_timer_mark() {\n\t    var now = Date.now();\n\t    d3_timer_active = d3_timer_queueHead;\n\t    while (d3_timer_active) {\n\t      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n\t      d3_timer_active = d3_timer_active.n;\n\t    }\n\t    return now;\n\t  }\n\t  function d3_timer_sweep() {\n\t    var t0, t1 = d3_timer_queueHead, time = Infinity;\n\t    while (t1) {\n\t      if (t1.f) {\n\t        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n\t      } else {\n\t        if (t1.t < time) time = t1.t;\n\t        t1 = (t0 = t1).n;\n\t      }\n\t    }\n\t    d3_timer_queueTail = t0;\n\t    return time;\n\t  }\n\t  function d3_format_precision(x, p) {\n\t    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n\t  }\n\t  d3.round = function(x, n) {\n\t    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n\t  };\n\t  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n\t  d3.formatPrefix = function(value, precision) {\n\t    var i = 0;\n\t    if (value) {\n\t      if (value < 0) value *= -1;\n\t      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n\t      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n\t      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n\t    }\n\t    return d3_formatPrefixes[8 + i / 3];\n\t  };\n\t  function d3_formatPrefix(d, i) {\n\t    var k = Math.pow(10, abs(8 - i) * 3);\n\t    return {\n\t      scale: i > 8 ? function(d) {\n\t        return d / k;\n\t      } : function(d) {\n\t        return d * k;\n\t      },\n\t      symbol: d\n\t    };\n\t  }\n\t  function d3_locale_numberFormat(locale) {\n\t    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n\t      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n\t      while (i > 0 && g > 0) {\n\t        if (length + g + 1 > width) g = Math.max(1, width - length);\n\t        t.push(value.substring(i -= g, i + g));\n\t        if ((length += g + 1) > width) break;\n\t        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n\t      }\n\t      return t.reverse().join(locale_thousands);\n\t    } : d3_identity;\n\t    return function(specifier) {\n\t      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n\t      if (precision) precision = +precision.substring(1);\n\t      if (zfill || fill === \"0\" && align === \"=\") {\n\t        zfill = fill = \"0\";\n\t        align = \"=\";\n\t      }\n\t      switch (type) {\n\t       case \"n\":\n\t        comma = true;\n\t        type = \"g\";\n\t        break;\n\t\n\t       case \"%\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"f\";\n\t        break;\n\t\n\t       case \"p\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"r\";\n\t        break;\n\t\n\t       case \"b\":\n\t       case \"o\":\n\t       case \"x\":\n\t       case \"X\":\n\t        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\t\n\t       case \"c\":\n\t        exponent = false;\n\t\n\t       case \"d\":\n\t        integer = true;\n\t        precision = 0;\n\t        break;\n\t\n\t       case \"s\":\n\t        scale = -1;\n\t        type = \"r\";\n\t        break;\n\t      }\n\t      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n\t      if (type == \"r\" && !precision) type = \"g\";\n\t      if (precision != null) {\n\t        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n\t      }\n\t      type = d3_format_types.get(type) || d3_format_typeDefault;\n\t      var zcomma = zfill && comma;\n\t      return function(value) {\n\t        var fullSuffix = suffix;\n\t        if (integer && value % 1) return \"\";\n\t        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\t        if (scale < 0) {\n\t          var unit = d3.formatPrefix(value, precision);\n\t          value = unit.scale(value);\n\t          fullSuffix = unit.symbol + suffix;\n\t        } else {\n\t          value *= scale;\n\t        }\n\t        value = type(value, precision);\n\t        var i = value.lastIndexOf(\".\"), before, after;\n\t        if (i < 0) {\n\t          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n\t          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n\t        } else {\n\t          before = value.substring(0, i);\n\t          after = locale_decimal + value.substring(i + 1);\n\t        }\n\t        if (!zfill && comma) before = formatGroup(before, Infinity);\n\t        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n\t        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n\t        negative += prefix;\n\t        value = before + after;\n\t        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n\t      };\n\t    };\n\t  }\n\t  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n\t  var d3_format_types = d3.map({\n\t    b: function(x) {\n\t      return x.toString(2);\n\t    },\n\t    c: function(x) {\n\t      return String.fromCharCode(x);\n\t    },\n\t    o: function(x) {\n\t      return x.toString(8);\n\t    },\n\t    x: function(x) {\n\t      return x.toString(16);\n\t    },\n\t    X: function(x) {\n\t      return x.toString(16).toUpperCase();\n\t    },\n\t    g: function(x, p) {\n\t      return x.toPrecision(p);\n\t    },\n\t    e: function(x, p) {\n\t      return x.toExponential(p);\n\t    },\n\t    f: function(x, p) {\n\t      return x.toFixed(p);\n\t    },\n\t    r: function(x, p) {\n\t      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n\t    }\n\t  });\n\t  function d3_format_typeDefault(x) {\n\t    return x + \"\";\n\t  }\n\t  var d3_time = d3.time = {}, d3_date = Date;\n\t  function d3_date_utc() {\n\t    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n\t  }\n\t  d3_date_utc.prototype = {\n\t    getDate: function() {\n\t      return this._.getUTCDate();\n\t    },\n\t    getDay: function() {\n\t      return this._.getUTCDay();\n\t    },\n\t    getFullYear: function() {\n\t      return this._.getUTCFullYear();\n\t    },\n\t    getHours: function() {\n\t      return this._.getUTCHours();\n\t    },\n\t    getMilliseconds: function() {\n\t      return this._.getUTCMilliseconds();\n\t    },\n\t    getMinutes: function() {\n\t      return this._.getUTCMinutes();\n\t    },\n\t    getMonth: function() {\n\t      return this._.getUTCMonth();\n\t    },\n\t    getSeconds: function() {\n\t      return this._.getUTCSeconds();\n\t    },\n\t    getTime: function() {\n\t      return this._.getTime();\n\t    },\n\t    getTimezoneOffset: function() {\n\t      return 0;\n\t    },\n\t    valueOf: function() {\n\t      return this._.valueOf();\n\t    },\n\t    setDate: function() {\n\t      d3_time_prototype.setUTCDate.apply(this._, arguments);\n\t    },\n\t    setDay: function() {\n\t      d3_time_prototype.setUTCDay.apply(this._, arguments);\n\t    },\n\t    setFullYear: function() {\n\t      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n\t    },\n\t    setHours: function() {\n\t      d3_time_prototype.setUTCHours.apply(this._, arguments);\n\t    },\n\t    setMilliseconds: function() {\n\t      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n\t    },\n\t    setMinutes: function() {\n\t      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n\t    },\n\t    setMonth: function() {\n\t      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n\t    },\n\t    setSeconds: function() {\n\t      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n\t    },\n\t    setTime: function() {\n\t      d3_time_prototype.setTime.apply(this._, arguments);\n\t    }\n\t  };\n\t  var d3_time_prototype = Date.prototype;\n\t  function d3_time_interval(local, step, number) {\n\t    function round(date) {\n\t      var d0 = local(date), d1 = offset(d0, 1);\n\t      return date - d0 < d1 - date ? d0 : d1;\n\t    }\n\t    function ceil(date) {\n\t      step(date = local(new d3_date(date - 1)), 1);\n\t      return date;\n\t    }\n\t    function offset(date, k) {\n\t      step(date = new d3_date(+date), k);\n\t      return date;\n\t    }\n\t    function range(t0, t1, dt) {\n\t      var time = ceil(t0), times = [];\n\t      if (dt > 1) {\n\t        while (time < t1) {\n\t          if (!(number(time) % dt)) times.push(new Date(+time));\n\t          step(time, 1);\n\t        }\n\t      } else {\n\t        while (time < t1) times.push(new Date(+time)), step(time, 1);\n\t      }\n\t      return times;\n\t    }\n\t    function range_utc(t0, t1, dt) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = t0;\n\t        return range(utc, t1, dt);\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    }\n\t    local.floor = local;\n\t    local.round = round;\n\t    local.ceil = ceil;\n\t    local.offset = offset;\n\t    local.range = range;\n\t    var utc = local.utc = d3_time_interval_utc(local);\n\t    utc.floor = utc;\n\t    utc.round = d3_time_interval_utc(round);\n\t    utc.ceil = d3_time_interval_utc(ceil);\n\t    utc.offset = d3_time_interval_utc(offset);\n\t    utc.range = range_utc;\n\t    return local;\n\t  }\n\t  function d3_time_interval_utc(method) {\n\t    return function(date, k) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = date;\n\t        return method(utc, k)._;\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    };\n\t  }\n\t  d3_time.year = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setMonth(0, 1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setFullYear(date.getFullYear() + offset);\n\t  }, function(date) {\n\t    return date.getFullYear();\n\t  });\n\t  d3_time.years = d3_time.year.range;\n\t  d3_time.years.utc = d3_time.year.utc.range;\n\t  d3_time.day = d3_time_interval(function(date) {\n\t    var day = new d3_date(2e3, 0);\n\t    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n\t    return day;\n\t  }, function(date, offset) {\n\t    date.setDate(date.getDate() + offset);\n\t  }, function(date) {\n\t    return date.getDate() - 1;\n\t  });\n\t  d3_time.days = d3_time.day.range;\n\t  d3_time.days.utc = d3_time.day.utc.range;\n\t  d3_time.dayOfYear = function(date) {\n\t    var year = d3_time.year(date);\n\t    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n\t  };\n\t  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n\t    i = 7 - i;\n\t    var interval = d3_time[day] = d3_time_interval(function(date) {\n\t      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n\t      return date;\n\t    }, function(date, offset) {\n\t      date.setDate(date.getDate() + Math.floor(offset) * 7);\n\t    }, function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n\t    });\n\t    d3_time[day + \"s\"] = interval.range;\n\t    d3_time[day + \"s\"].utc = interval.utc.range;\n\t    d3_time[day + \"OfYear\"] = function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n\t    };\n\t  });\n\t  d3_time.week = d3_time.sunday;\n\t  d3_time.weeks = d3_time.sunday.range;\n\t  d3_time.weeks.utc = d3_time.sunday.utc.range;\n\t  d3_time.weekOfYear = d3_time.sundayOfYear;\n\t  function d3_locale_timeFormat(locale) {\n\t    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n\t    function d3_time_format(template) {\n\t      var n = template.length;\n\t      function format(date) {\n\t        var string = [], i = -1, j = 0, c, p, f;\n\t        while (++i < n) {\n\t          if (template.charCodeAt(i) === 37) {\n\t            string.push(template.slice(j, i));\n\t            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n\t            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n\t            string.push(c);\n\t            j = i + 1;\n\t          }\n\t        }\n\t        string.push(template.slice(j, i));\n\t        return string.join(\"\");\n\t      }\n\t      format.parse = function(string) {\n\t        var d = {\n\t          y: 1900,\n\t          m: 0,\n\t          d: 1,\n\t          H: 0,\n\t          M: 0,\n\t          S: 0,\n\t          L: 0,\n\t          Z: null\n\t        }, i = d3_time_parse(d, template, string, 0);\n\t        if (i != string.length) return null;\n\t        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n\t        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n\t          date.setFullYear(d.y, 0, 1);\n\t          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n\t        } else date.setFullYear(d.y, d.m, d.d);\n\t        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n\t        return localZ ? date._ : date;\n\t      };\n\t      format.toString = function() {\n\t        return template;\n\t      };\n\t      return format;\n\t    }\n\t    function d3_time_parse(date, template, string, j) {\n\t      var c, p, t, i = 0, n = template.length, m = string.length;\n\t      while (i < n) {\n\t        if (j >= m) return -1;\n\t        c = template.charCodeAt(i++);\n\t        if (c === 37) {\n\t          t = template.charAt(i++);\n\t          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n\t          if (!p || (j = p(date, string, j)) < 0) return -1;\n\t        } else if (c != string.charCodeAt(j++)) {\n\t          return -1;\n\t        }\n\t      }\n\t      return j;\n\t    }\n\t    d3_time_format.utc = function(template) {\n\t      var local = d3_time_format(template);\n\t      function format(date) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var utc = new d3_date();\n\t          utc._ = date;\n\t          return local(utc);\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      }\n\t      format.parse = function(string) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var date = local.parse(string);\n\t          return date && date._;\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      };\n\t      format.toString = local.toString;\n\t      return format;\n\t    };\n\t    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n\t    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n\t    locale_periods.forEach(function(p, i) {\n\t      d3_time_periodLookup.set(p.toLowerCase(), i);\n\t    });\n\t    var d3_time_formats = {\n\t      a: function(d) {\n\t        return locale_shortDays[d.getDay()];\n\t      },\n\t      A: function(d) {\n\t        return locale_days[d.getDay()];\n\t      },\n\t      b: function(d) {\n\t        return locale_shortMonths[d.getMonth()];\n\t      },\n\t      B: function(d) {\n\t        return locale_months[d.getMonth()];\n\t      },\n\t      c: d3_time_format(locale_dateTime),\n\t      d: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      e: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      H: function(d, p) {\n\t        return d3_time_formatPad(d.getHours(), p, 2);\n\t      },\n\t      I: function(d, p) {\n\t        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n\t      },\n\t      j: function(d, p) {\n\t        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n\t      },\n\t      L: function(d, p) {\n\t        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n\t      },\n\t      m: function(d, p) {\n\t        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n\t      },\n\t      M: function(d, p) {\n\t        return d3_time_formatPad(d.getMinutes(), p, 2);\n\t      },\n\t      p: function(d) {\n\t        return locale_periods[+(d.getHours() >= 12)];\n\t      },\n\t      S: function(d, p) {\n\t        return d3_time_formatPad(d.getSeconds(), p, 2);\n\t      },\n\t      U: function(d, p) {\n\t        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n\t      },\n\t      w: function(d) {\n\t        return d.getDay();\n\t      },\n\t      W: function(d, p) {\n\t        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n\t      },\n\t      x: d3_time_format(locale_date),\n\t      X: d3_time_format(locale_time),\n\t      y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n\t      },\n\t      Y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n\t      },\n\t      Z: d3_time_zone,\n\t      \"%\": function() {\n\t        return \"%\";\n\t      }\n\t    };\n\t    var d3_time_parsers = {\n\t      a: d3_time_parseWeekdayAbbrev,\n\t      A: d3_time_parseWeekday,\n\t      b: d3_time_parseMonthAbbrev,\n\t      B: d3_time_parseMonth,\n\t      c: d3_time_parseLocaleFull,\n\t      d: d3_time_parseDay,\n\t      e: d3_time_parseDay,\n\t      H: d3_time_parseHour24,\n\t      I: d3_time_parseHour24,\n\t      j: d3_time_parseDayOfYear,\n\t      L: d3_time_parseMilliseconds,\n\t      m: d3_time_parseMonthNumber,\n\t      M: d3_time_parseMinutes,\n\t      p: d3_time_parseAmPm,\n\t      S: d3_time_parseSeconds,\n\t      U: d3_time_parseWeekNumberSunday,\n\t      w: d3_time_parseWeekdayNumber,\n\t      W: d3_time_parseWeekNumberMonday,\n\t      x: d3_time_parseLocaleDate,\n\t      X: d3_time_parseLocaleTime,\n\t      y: d3_time_parseYear,\n\t      Y: d3_time_parseFullYear,\n\t      Z: d3_time_parseZone,\n\t      \"%\": d3_time_parseLiteralPercent\n\t    };\n\t    function d3_time_parseWeekdayAbbrev(date, string, i) {\n\t      d3_time_dayAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseWeekday(date, string, i) {\n\t      d3_time_dayRe.lastIndex = 0;\n\t      var n = d3_time_dayRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonthAbbrev(date, string, i) {\n\t      d3_time_monthAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonth(date, string, i) {\n\t      d3_time_monthRe.lastIndex = 0;\n\t      var n = d3_time_monthRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseLocaleFull(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleDate(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleTime(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n\t    }\n\t    function d3_time_parseAmPm(date, string, i) {\n\t      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n\t      return n == null ? -1 : (date.p = n, i);\n\t    }\n\t    return d3_time_format;\n\t  }\n\t  var d3_time_formatPads = {\n\t    \"-\": \"\",\n\t    _: \" \",\n\t    \"0\": \"0\"\n\t  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n\t  function d3_time_formatPad(value, fill, width) {\n\t    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n\t    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t  }\n\t  function d3_time_formatRe(names) {\n\t    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n\t  }\n\t  function d3_time_formatLookup(names) {\n\t    var map = new d3_Map(), i = -1, n = names.length;\n\t    while (++i < n) map.set(names[i].toLowerCase(), i);\n\t    return map;\n\t  }\n\t  function d3_time_parseWeekdayNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n\t    return n ? (date.w = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberSunday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.U = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberMonday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.W = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseFullYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n\t    return n ? (date.y = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseZone(date, string, i) {\n\t    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n\t    i + 5) : -1;\n\t  }\n\t  function d3_time_expandYear(d) {\n\t    return d + (d > 68 ? 1900 : 2e3);\n\t  }\n\t  function d3_time_parseMonthNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDay(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.d = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDayOfYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.j = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseHour24(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.H = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMinutes(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.M = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseSeconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.S = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMilliseconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.L = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_zone(d) {\n\t    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n\t    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n\t  }\n\t  function d3_time_parseLiteralPercent(date, string, i) {\n\t    d3_time_percentRe.lastIndex = 0;\n\t    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n\t    return n ? i + n[0].length : -1;\n\t  }\n\t  function d3_time_formatMulti(formats) {\n\t    var n = formats.length, i = -1;\n\t    while (++i < n) formats[i][0] = this(formats[i][0]);\n\t    return function(date) {\n\t      var i = 0, f = formats[i];\n\t      while (!f[1](date)) f = formats[++i];\n\t      return f[0](date);\n\t    };\n\t  }\n\t  d3.locale = function(locale) {\n\t    return {\n\t      numberFormat: d3_locale_numberFormat(locale),\n\t      timeFormat: d3_locale_timeFormat(locale)\n\t    };\n\t  };\n\t  var d3_locale_enUS = d3.locale({\n\t    decimal: \".\",\n\t    thousands: \",\",\n\t    grouping: [ 3 ],\n\t    currency: [ \"$\", \"\" ],\n\t    dateTime: \"%a %b %e %X %Y\",\n\t    date: \"%m/%d/%Y\",\n\t    time: \"%H:%M:%S\",\n\t    periods: [ \"AM\", \"PM\" ],\n\t    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n\t    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n\t    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n\t    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n\t  });\n\t  d3.format = d3_locale_enUS.numberFormat;\n\t  d3.geo = {};\n\t  function d3_adder() {}\n\t  d3_adder.prototype = {\n\t    s: 0,\n\t    t: 0,\n\t    add: function(y) {\n\t      d3_adderSum(y, this.t, d3_adderTemp);\n\t      d3_adderSum(d3_adderTemp.s, this.s, this);\n\t      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n\t    },\n\t    reset: function() {\n\t      this.s = this.t = 0;\n\t    },\n\t    valueOf: function() {\n\t      return this.s;\n\t    }\n\t  };\n\t  var d3_adderTemp = new d3_adder();\n\t  function d3_adderSum(a, b, o) {\n\t    var x = o.s = a + b, bv = x - a, av = x - bv;\n\t    o.t = a - av + (b - bv);\n\t  }\n\t  d3.geo.stream = function(object, listener) {\n\t    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n\t      d3_geo_streamObjectType[object.type](object, listener);\n\t    } else {\n\t      d3_geo_streamGeometry(object, listener);\n\t    }\n\t  };\n\t  function d3_geo_streamGeometry(geometry, listener) {\n\t    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n\t      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n\t    }\n\t  }\n\t  var d3_geo_streamObjectType = {\n\t    Feature: function(feature, listener) {\n\t      d3_geo_streamGeometry(feature.geometry, listener);\n\t    },\n\t    FeatureCollection: function(object, listener) {\n\t      var features = object.features, i = -1, n = features.length;\n\t      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n\t    }\n\t  };\n\t  var d3_geo_streamGeometryType = {\n\t    Sphere: function(object, listener) {\n\t      listener.sphere();\n\t    },\n\t    Point: function(object, listener) {\n\t      object = object.coordinates;\n\t      listener.point(object[0], object[1], object[2]);\n\t    },\n\t    MultiPoint: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n\t    },\n\t    LineString: function(object, listener) {\n\t      d3_geo_streamLine(object.coordinates, listener, 0);\n\t    },\n\t    MultiLineString: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n\t    },\n\t    Polygon: function(object, listener) {\n\t      d3_geo_streamPolygon(object.coordinates, listener);\n\t    },\n\t    MultiPolygon: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n\t    },\n\t    GeometryCollection: function(object, listener) {\n\t      var geometries = object.geometries, i = -1, n = geometries.length;\n\t      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n\t    }\n\t  };\n\t  function d3_geo_streamLine(coordinates, listener, closed) {\n\t    var i = -1, n = coordinates.length - closed, coordinate;\n\t    listener.lineStart();\n\t    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n\t    listener.lineEnd();\n\t  }\n\t  function d3_geo_streamPolygon(coordinates, listener) {\n\t    var i = -1, n = coordinates.length;\n\t    listener.polygonStart();\n\t    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n\t    listener.polygonEnd();\n\t  }\n\t  d3.geo.area = function(object) {\n\t    d3_geo_areaSum = 0;\n\t    d3.geo.stream(object, d3_geo_area);\n\t    return d3_geo_areaSum;\n\t  };\n\t  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n\t  var d3_geo_area = {\n\t    sphere: function() {\n\t      d3_geo_areaSum += 4 * π;\n\t    },\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_areaRingSum.reset();\n\t      d3_geo_area.lineStart = d3_geo_areaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      var area = 2 * d3_geo_areaRingSum;\n\t      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n\t      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n\t    }\n\t  };\n\t  function d3_geo_areaRingStart() {\n\t    var λ00, φ00, λ0, cosφ0, sinφ0;\n\t    d3_geo_area.point = function(λ, φ) {\n\t      d3_geo_area.point = nextPoint;\n\t      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n\t      sinφ0 = Math.sin(φ);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      φ = φ * d3_radians / 2 + π / 4;\n\t      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n\t      d3_geo_areaRingSum.add(Math.atan2(v, u));\n\t      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n\t    }\n\t    d3_geo_area.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t    };\n\t  }\n\t  function d3_geo_cartesian(spherical) {\n\t    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n\t    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n\t  }\n\t  function d3_geo_cartesianDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t  }\n\t  function d3_geo_cartesianCross(a, b) {\n\t    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n\t  }\n\t  function d3_geo_cartesianAdd(a, b) {\n\t    a[0] += b[0];\n\t    a[1] += b[1];\n\t    a[2] += b[2];\n\t  }\n\t  function d3_geo_cartesianScale(vector, k) {\n\t    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n\t  }\n\t  function d3_geo_cartesianNormalize(d) {\n\t    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t    d[0] /= l;\n\t    d[1] /= l;\n\t    d[2] /= l;\n\t  }\n\t  function d3_geo_spherical(cartesian) {\n\t    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n\t  }\n\t  function d3_geo_sphericalEqual(a, b) {\n\t    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n\t  }\n\t  d3.geo.bounds = function() {\n\t    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n\t    var bound = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        bound.point = ringPoint;\n\t        bound.lineStart = ringStart;\n\t        bound.lineEnd = ringEnd;\n\t        dλSum = 0;\n\t        d3_geo_area.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        d3_geo_area.polygonEnd();\n\t        bound.point = point;\n\t        bound.lineStart = lineStart;\n\t        bound.lineEnd = lineEnd;\n\t        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n\t        range[0] = λ0, range[1] = λ1;\n\t      }\n\t    };\n\t    function point(λ, φ) {\n\t      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n\t      if (φ < φ0) φ0 = φ;\n\t      if (φ > φ1) φ1 = φ;\n\t    }\n\t    function linePoint(λ, φ) {\n\t      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n\t      if (p0) {\n\t        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n\t        d3_geo_cartesianNormalize(inflection);\n\t        inflection = d3_geo_spherical(inflection);\n\t        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n\t        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = inflection[1] * d3_degrees;\n\t          if (φi > φ1) φ1 = φi;\n\t        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = -inflection[1] * d3_degrees;\n\t          if (φi < φ0) φ0 = φi;\n\t        } else {\n\t          if (φ < φ0) φ0 = φ;\n\t          if (φ > φ1) φ1 = φ;\n\t        }\n\t        if (antimeridian) {\n\t          if (λ < λ_) {\n\t            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t          } else {\n\t            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t          }\n\t        } else {\n\t          if (λ1 >= λ0) {\n\t            if (λ < λ0) λ0 = λ;\n\t            if (λ > λ1) λ1 = λ;\n\t          } else {\n\t            if (λ > λ_) {\n\t              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t            } else {\n\t              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        point(λ, φ);\n\t      }\n\t      p0 = p, λ_ = λ;\n\t    }\n\t    function lineStart() {\n\t      bound.point = linePoint;\n\t    }\n\t    function lineEnd() {\n\t      range[0] = λ0, range[1] = λ1;\n\t      bound.point = point;\n\t      p0 = null;\n\t    }\n\t    function ringPoint(λ, φ) {\n\t      if (p0) {\n\t        var dλ = λ - λ_;\n\t        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n\t      } else λ__ = λ, φ__ = φ;\n\t      d3_geo_area.point(λ, φ);\n\t      linePoint(λ, φ);\n\t    }\n\t    function ringStart() {\n\t      d3_geo_area.lineStart();\n\t    }\n\t    function ringEnd() {\n\t      ringPoint(λ__, φ__);\n\t      d3_geo_area.lineEnd();\n\t      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n\t      range[0] = λ0, range[1] = λ1;\n\t      p0 = null;\n\t    }\n\t    function angle(λ0, λ1) {\n\t      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n\t    }\n\t    function compareRanges(a, b) {\n\t      return a[0] - b[0];\n\t    }\n\t    function withinRange(x, range) {\n\t      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t    }\n\t    return function(feature) {\n\t      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n\t      ranges = [];\n\t      d3.geo.stream(feature, bound);\n\t      var n = ranges.length;\n\t      if (n) {\n\t        ranges.sort(compareRanges);\n\t        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n\t          b = ranges[i];\n\t          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n\t            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t          } else {\n\t            merged.push(a = b);\n\t          }\n\t        }\n\t        var best = -Infinity, dλ;\n\t        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n\t          b = merged[i];\n\t          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n\t        }\n\t      }\n\t      ranges = range = null;\n\t      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n\t    };\n\t  }();\n\t  d3.geo.centroid = function(object) {\n\t    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t    d3.geo.stream(object, d3_geo_centroid);\n\t    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n\t    if (m < ε2) {\n\t      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n\t      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n\t      m = x * x + y * y + z * z;\n\t      if (m < ε2) return [ NaN, NaN ];\n\t    }\n\t    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n\t  };\n\t  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n\t  var d3_geo_centroid = {\n\t    sphere: d3_noop,\n\t    point: d3_geo_centroidPoint,\n\t    lineStart: d3_geo_centroidLineStart,\n\t    lineEnd: d3_geo_centroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n\t    }\n\t  };\n\t  function d3_geo_centroidPoint(λ, φ) {\n\t    λ *= d3_radians;\n\t    var cosφ = Math.cos(φ *= d3_radians);\n\t    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n\t  }\n\t  function d3_geo_centroidPointXYZ(x, y, z) {\n\t    ++d3_geo_centroidW0;\n\t    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n\t    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n\t    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n\t  }\n\t  function d3_geo_centroidLineStart() {\n\t    var x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroid.point = nextPoint;\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_centroidLineEnd() {\n\t    d3_geo_centroid.point = d3_geo_centroidPoint;\n\t  }\n\t  function d3_geo_centroidRingStart() {\n\t    var λ00, φ00, x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ00 = λ, φ00 = φ;\n\t      d3_geo_centroid.point = nextPoint;\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    d3_geo_centroid.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n\t      d3_geo_centroid.point = d3_geo_centroidPoint;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n\t      d3_geo_centroidX2 += v * cx;\n\t      d3_geo_centroidY2 += v * cy;\n\t      d3_geo_centroidZ2 += v * cz;\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_compose(a, b) {\n\t    function compose(x, y) {\n\t      return x = a(x, y), b(x[0], x[1]);\n\t    }\n\t    if (a.invert && b.invert) compose.invert = function(x, y) {\n\t      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t    };\n\t    return compose;\n\t  }\n\t  function d3_true() {\n\t    return true;\n\t  }\n\t  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n\t    var subject = [], clip = [];\n\t    segments.forEach(function(segment) {\n\t      if ((n = segment.length - 1) <= 0) return;\n\t      var n, p0 = segment[0], p1 = segment[n];\n\t      if (d3_geo_sphericalEqual(p0, p1)) {\n\t        listener.lineStart();\n\t        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n\t        listener.lineEnd();\n\t        return;\n\t      }\n\t      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n\t      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t    });\n\t    clip.sort(compare);\n\t    d3_geo_clipPolygonLinkCircular(subject);\n\t    d3_geo_clipPolygonLinkCircular(clip);\n\t    if (!subject.length) return;\n\t    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n\t      clip[i].e = entry = !entry;\n\t    }\n\t    var start = subject[0], points, point;\n\t    while (1) {\n\t      var current = start, isSubject = true;\n\t      while (current.v) if ((current = current.n) === start) return;\n\t      points = current.z;\n\t      listener.lineStart();\n\t      do {\n\t        current.v = current.o.v = true;\n\t        if (current.e) {\n\t          if (isSubject) {\n\t            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.n.x, 1, listener);\n\t          }\n\t          current = current.n;\n\t        } else {\n\t          if (isSubject) {\n\t            points = current.p.z;\n\t            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.p.x, -1, listener);\n\t          }\n\t          current = current.p;\n\t        }\n\t        current = current.o;\n\t        points = current.z;\n\t        isSubject = !isSubject;\n\t      } while (!current.v);\n\t      listener.lineEnd();\n\t    }\n\t  }\n\t  function d3_geo_clipPolygonLinkCircular(array) {\n\t    if (!(n = array.length)) return;\n\t    var n, i = 0, a = array[0], b;\n\t    while (++i < n) {\n\t      a.n = b = array[i];\n\t      b.p = a;\n\t      a = b;\n\t    }\n\t    a.n = b = array[0];\n\t    b.p = a;\n\t  }\n\t  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n\t    this.x = point;\n\t    this.z = points;\n\t    this.o = other;\n\t    this.e = entry;\n\t    this.v = false;\n\t    this.n = this.p = null;\n\t  }\n\t  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n\t    return function(rotate, listener) {\n\t      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          clip.point = pointRing;\n\t          clip.lineStart = ringStart;\n\t          clip.lineEnd = ringEnd;\n\t          segments = [];\n\t          polygon = [];\n\t        },\n\t        polygonEnd: function() {\n\t          clip.point = point;\n\t          clip.lineStart = lineStart;\n\t          clip.lineEnd = lineEnd;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\t          if (segments.length) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n\t          } else if (clipStartInside) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            interpolate(null, null, 1, listener);\n\t            listener.lineEnd();\n\t          }\n\t          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n\t          segments = polygon = null;\n\t        },\n\t        sphere: function() {\n\t          listener.polygonStart();\n\t          listener.lineStart();\n\t          interpolate(null, null, 1, listener);\n\t          listener.lineEnd();\n\t          listener.polygonEnd();\n\t        }\n\t      };\n\t      function point(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n\t      }\n\t      function pointLine(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        line.point(point[0], point[1]);\n\t      }\n\t      function lineStart() {\n\t        clip.point = pointLine;\n\t        line.lineStart();\n\t      }\n\t      function lineEnd() {\n\t        clip.point = point;\n\t        line.lineEnd();\n\t      }\n\t      var segments;\n\t      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n\t      function pointRing(λ, φ) {\n\t        ring.push([ λ, φ ]);\n\t        var point = rotate(λ, φ);\n\t        ringListener.point(point[0], point[1]);\n\t      }\n\t      function ringStart() {\n\t        ringListener.lineStart();\n\t        ring = [];\n\t      }\n\t      function ringEnd() {\n\t        pointRing(ring[0][0], ring[0][1]);\n\t        ringListener.lineEnd();\n\t        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n\t        ring.pop();\n\t        polygon.push(ring);\n\t        ring = null;\n\t        if (!n) return;\n\t        if (clean & 1) {\n\t          segment = ringSegments[0];\n\t          var n = segment.length - 1, i = -1, point;\n\t          if (n > 0) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n\t            listener.lineEnd();\n\t          }\n\t          return;\n\t        }\n\t        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n\t      }\n\t      return clip;\n\t    };\n\t  }\n\t  function d3_geo_clipSegmentLength1(segment) {\n\t    return segment.length > 1;\n\t  }\n\t  function d3_geo_clipBufferListener() {\n\t    var lines = [], line;\n\t    return {\n\t      lineStart: function() {\n\t        lines.push(line = []);\n\t      },\n\t      point: function(λ, φ) {\n\t        line.push([ λ, φ ]);\n\t      },\n\t      lineEnd: d3_noop,\n\t      buffer: function() {\n\t        var buffer = lines;\n\t        lines = [];\n\t        line = null;\n\t        return buffer;\n\t      },\n\t      rejoin: function() {\n\t        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipSort(a, b) {\n\t    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n\t  }\n\t  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n\t  function d3_geo_clipAntimeridianLine(listener) {\n\t    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n\t    return {\n\t      lineStart: function() {\n\t        listener.lineStart();\n\t        clean = 1;\n\t      },\n\t      point: function(λ1, φ1) {\n\t        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n\t        if (abs(dλ - π) < ε) {\n\t          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          listener.point(λ1, φ0);\n\t          clean = 0;\n\t        } else if (sλ0 !== sλ1 && dλ >= π) {\n\t          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n\t          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n\t          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          clean = 0;\n\t        }\n\t        listener.point(λ0 = λ1, φ0 = φ1);\n\t        sλ0 = sλ1;\n\t      },\n\t      lineEnd: function() {\n\t        listener.lineEnd();\n\t        λ0 = φ0 = NaN;\n\t      },\n\t      clean: function() {\n\t        return 2 - clean;\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n\t    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n\t    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n\t  }\n\t  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n\t    var φ;\n\t    if (from == null) {\n\t      φ = direction * halfπ;\n\t      listener.point(-π, φ);\n\t      listener.point(0, φ);\n\t      listener.point(π, φ);\n\t      listener.point(π, 0);\n\t      listener.point(π, -φ);\n\t      listener.point(0, -φ);\n\t      listener.point(-π, -φ);\n\t      listener.point(-π, 0);\n\t      listener.point(-π, φ);\n\t    } else if (abs(from[0] - to[0]) > ε) {\n\t      var s = from[0] < to[0] ? π : -π;\n\t      φ = direction * s / 2;\n\t      listener.point(-s, φ);\n\t      listener.point(0, φ);\n\t      listener.point(s, φ);\n\t    } else {\n\t      listener.point(to[0], to[1]);\n\t    }\n\t  }\n\t  function d3_geo_pointInPolygon(point, polygon) {\n\t    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n\t    d3_geo_areaRingSum.reset();\n\t    for (var i = 0, n = polygon.length; i < n; ++i) {\n\t      var ring = polygon[i], m = ring.length;\n\t      if (!m) continue;\n\t      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n\t      while (true) {\n\t        if (j === m) j = 0;\n\t        point = ring[j];\n\t        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n\t        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n\t        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\t        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n\t          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n\t          d3_geo_cartesianNormalize(arc);\n\t          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n\t          d3_geo_cartesianNormalize(intersection);\n\t          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\t          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n\t            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n\t          }\n\t        }\n\t        if (!j++) break;\n\t        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n\t      }\n\t    }\n\t    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n\t  }\n\t  function d3_geo_clipCircle(radius) {\n\t    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n\t    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n\t    function visible(λ, φ) {\n\t      return Math.cos(λ) * Math.cos(φ) > cr;\n\t    }\n\t    function clipLine(listener) {\n\t      var point0, c0, v0, v00, clean;\n\t      return {\n\t        lineStart: function() {\n\t          v00 = v0 = false;\n\t          clean = 1;\n\t        },\n\t        point: function(λ, φ) {\n\t          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n\t          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\t          if (v !== v0) {\n\t            point2 = intersect(point0, point1);\n\t            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n\t              point1[0] += ε;\n\t              point1[1] += ε;\n\t              v = visible(point1[0], point1[1]);\n\t            }\n\t          }\n\t          if (v !== v0) {\n\t            clean = 0;\n\t            if (v) {\n\t              listener.lineStart();\n\t              point2 = intersect(point1, point0);\n\t              listener.point(point2[0], point2[1]);\n\t            } else {\n\t              point2 = intersect(point0, point1);\n\t              listener.point(point2[0], point2[1]);\n\t              listener.lineEnd();\n\t            }\n\t            point0 = point2;\n\t          } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t            var t;\n\t            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t              clean = 0;\n\t              if (smallRadius) {\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t              } else {\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t              }\n\t            }\n\t          }\n\t          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n\t            listener.point(point1[0], point1[1]);\n\t          }\n\t          point0 = point1, v0 = v, c0 = c;\n\t        },\n\t        lineEnd: function() {\n\t          if (v0) listener.lineEnd();\n\t          point0 = null;\n\t        },\n\t        clean: function() {\n\t          return clean | (v00 && v0) << 1;\n\t        }\n\t      };\n\t    }\n\t    function intersect(a, b, two) {\n\t      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n\t      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n\t      if (!determinant) return !two && a;\n\t      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n\t      d3_geo_cartesianAdd(A, B);\n\t      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n\t      if (t2 < 0) return;\n\t      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n\t      d3_geo_cartesianAdd(q, A);\n\t      q = d3_geo_spherical(q);\n\t      if (!two) return q;\n\t      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n\t      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n\t      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n\t      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\t      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n\t        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n\t        d3_geo_cartesianAdd(q1, A);\n\t        return [ q, d3_geo_spherical(q1) ];\n\t      }\n\t    }\n\t    function code(λ, φ) {\n\t      var r = smallRadius ? radius : π - radius, code = 0;\n\t      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n\t      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n\t      return code;\n\t    }\n\t  }\n\t  function d3_geom_clipLine(x0, y0, x1, y1) {\n\t    return function(line) {\n\t      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n\t      r = x0 - ax;\n\t      if (!dx && r > 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dx > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = x1 - ax;\n\t      if (!dx && r < 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dx > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      r = y0 - ay;\n\t      if (!dy && r > 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dy > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = y1 - ay;\n\t      if (!dy && r < 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dy > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      if (t0 > 0) line.a = {\n\t        x: ax + t0 * dx,\n\t        y: ay + t0 * dy\n\t      };\n\t      if (t1 < 1) line.b = {\n\t        x: ax + t1 * dx,\n\t        y: ay + t1 * dy\n\t      };\n\t      return line;\n\t    };\n\t  }\n\t  var d3_geo_clipExtentMAX = 1e9;\n\t  d3.geo.clipExtent = function() {\n\t    var x0, y0, x1, y1, stream, clip, clipExtent = {\n\t      stream: function(output) {\n\t        if (stream) stream.valid = false;\n\t        stream = clip(output);\n\t        stream.valid = true;\n\t        return stream;\n\t      },\n\t      extent: function(_) {\n\t        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n\t        if (stream) stream.valid = false, stream = null;\n\t        return clipExtent;\n\t      }\n\t    };\n\t    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n\t  };\n\t  function d3_geo_clipExtent(x0, y0, x1, y1) {\n\t    return function(listener) {\n\t      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          listener = bufferListener;\n\t          segments = [];\n\t          polygon = [];\n\t          clean = true;\n\t        },\n\t        polygonEnd: function() {\n\t          listener = listener_;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n\t          if (inside || visible) {\n\t            listener.polygonStart();\n\t            if (inside) {\n\t              listener.lineStart();\n\t              interpolate(null, null, 1, listener);\n\t              listener.lineEnd();\n\t            }\n\t            if (visible) {\n\t              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n\t            }\n\t            listener.polygonEnd();\n\t          }\n\t          segments = polygon = ring = null;\n\t        }\n\t      };\n\t      function insidePolygon(p) {\n\t        var wn = 0, n = polygon.length, y = p[1];\n\t        for (var i = 0; i < n; ++i) {\n\t          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n\t            b = v[j];\n\t            if (a[1] <= y) {\n\t              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n\t            } else {\n\t              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n\t            }\n\t            a = b;\n\t          }\n\t        }\n\t        return wn !== 0;\n\t      }\n\t      function interpolate(from, to, direction, listener) {\n\t        var a = 0, a1 = 0;\n\t        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n\t          do {\n\t            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t          } while ((a = (a + direction + 4) % 4) !== a1);\n\t        } else {\n\t          listener.point(to[0], to[1]);\n\t        }\n\t      }\n\t      function pointVisible(x, y) {\n\t        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t      }\n\t      function point(x, y) {\n\t        if (pointVisible(x, y)) listener.point(x, y);\n\t      }\n\t      var x__, y__, v__, x_, y_, v_, first, clean;\n\t      function lineStart() {\n\t        clip.point = linePoint;\n\t        if (polygon) polygon.push(ring = []);\n\t        first = true;\n\t        v_ = false;\n\t        x_ = y_ = NaN;\n\t      }\n\t      function lineEnd() {\n\t        if (segments) {\n\t          linePoint(x__, y__);\n\t          if (v__ && v_) bufferListener.rejoin();\n\t          segments.push(bufferListener.buffer());\n\t        }\n\t        clip.point = point;\n\t        if (v_) listener.lineEnd();\n\t      }\n\t      function linePoint(x, y) {\n\t        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n\t        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n\t        var v = pointVisible(x, y);\n\t        if (polygon) ring.push([ x, y ]);\n\t        if (first) {\n\t          x__ = x, y__ = y, v__ = v;\n\t          first = false;\n\t          if (v) {\n\t            listener.lineStart();\n\t            listener.point(x, y);\n\t          }\n\t        } else {\n\t          if (v && v_) listener.point(x, y); else {\n\t            var l = {\n\t              a: {\n\t                x: x_,\n\t                y: y_\n\t              },\n\t              b: {\n\t                x: x,\n\t                y: y\n\t              }\n\t            };\n\t            if (clipLine(l)) {\n\t              if (!v_) {\n\t                listener.lineStart();\n\t                listener.point(l.a.x, l.a.y);\n\t              }\n\t              listener.point(l.b.x, l.b.y);\n\t              if (!v) listener.lineEnd();\n\t              clean = false;\n\t            } else if (v) {\n\t              listener.lineStart();\n\t              listener.point(x, y);\n\t              clean = false;\n\t            }\n\t          }\n\t        }\n\t        x_ = x, y_ = y, v_ = v;\n\t      }\n\t      return clip;\n\t    };\n\t    function corner(p, direction) {\n\t      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n\t    }\n\t    function compare(a, b) {\n\t      return comparePoints(a.x, b.x);\n\t    }\n\t    function comparePoints(a, b) {\n\t      var ca = corner(a, 1), cb = corner(b, 1);\n\t      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n\t    }\n\t  }\n\t  function d3_geo_conic(projectAt) {\n\t    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n\t    p.parallels = function(_) {\n\t      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n\t      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n\t    };\n\t    return p;\n\t  }\n\t  function d3_geo_conicEqualArea(φ0, φ1) {\n\t    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n\t    function forward(λ, φ) {\n\t      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n\t      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = ρ0 - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEqualArea = function() {\n\t    return d3_geo_conic(d3_geo_conicEqualArea);\n\t  }).raw = d3_geo_conicEqualArea;\n\t  d3.geo.albers = function() {\n\t    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n\t  };\n\t  d3.geo.albersUsa = function() {\n\t    var lower48 = d3.geo.albers();\n\t    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n\t    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n\t    var point, pointStream = {\n\t      point: function(x, y) {\n\t        point = [ x, y ];\n\t      }\n\t    }, lower48Point, alaskaPoint, hawaiiPoint;\n\t    function albersUsa(coordinates) {\n\t      var x = coordinates[0], y = coordinates[1];\n\t      point = null;\n\t      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n\t      return point;\n\t    }\n\t    albersUsa.invert = function(coordinates) {\n\t      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n\t      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n\t    };\n\t    albersUsa.stream = function(stream) {\n\t      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n\t      return {\n\t        point: function(x, y) {\n\t          lower48Stream.point(x, y);\n\t          alaskaStream.point(x, y);\n\t          hawaiiStream.point(x, y);\n\t        },\n\t        sphere: function() {\n\t          lower48Stream.sphere();\n\t          alaskaStream.sphere();\n\t          hawaiiStream.sphere();\n\t        },\n\t        lineStart: function() {\n\t          lower48Stream.lineStart();\n\t          alaskaStream.lineStart();\n\t          hawaiiStream.lineStart();\n\t        },\n\t        lineEnd: function() {\n\t          lower48Stream.lineEnd();\n\t          alaskaStream.lineEnd();\n\t          hawaiiStream.lineEnd();\n\t        },\n\t        polygonStart: function() {\n\t          lower48Stream.polygonStart();\n\t          alaskaStream.polygonStart();\n\t          hawaiiStream.polygonStart();\n\t        },\n\t        polygonEnd: function() {\n\t          lower48Stream.polygonEnd();\n\t          alaskaStream.polygonEnd();\n\t          hawaiiStream.polygonEnd();\n\t        }\n\t      };\n\t    };\n\t    albersUsa.precision = function(_) {\n\t      if (!arguments.length) return lower48.precision();\n\t      lower48.precision(_);\n\t      alaska.precision(_);\n\t      hawaii.precision(_);\n\t      return albersUsa;\n\t    };\n\t    albersUsa.scale = function(_) {\n\t      if (!arguments.length) return lower48.scale();\n\t      lower48.scale(_);\n\t      alaska.scale(_ * .35);\n\t      hawaii.scale(_);\n\t      return albersUsa.translate(lower48.translate());\n\t    };\n\t    albersUsa.translate = function(_) {\n\t      if (!arguments.length) return lower48.translate();\n\t      var k = lower48.scale(), x = +_[0], y = +_[1];\n\t      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n\t      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      return albersUsa;\n\t    };\n\t    return albersUsa.scale(1070);\n\t  };\n\t  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_pathAreaPolygon = 0;\n\t      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n\t      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n\t    }\n\t  };\n\t  function d3_geo_pathAreaRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathArea.point = function(x, y) {\n\t      d3_geo_pathArea.point = nextPoint;\n\t      x00 = x0 = x, y00 = y0 = y;\n\t    };\n\t    function nextPoint(x, y) {\n\t      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n\t      x0 = x, y0 = y;\n\t    }\n\t    d3_geo_pathArea.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n\t  var d3_geo_pathBounds = {\n\t    point: d3_geo_pathBoundsPoint,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_pathBoundsPoint(x, y) {\n\t    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n\t    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n\t    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n\t    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n\t  }\n\t  function d3_geo_pathBuffer() {\n\t    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointCircle = d3_geo_pathBufferCircle(_);\n\t        return stream;\n\t      },\n\t      result: function() {\n\t        if (buffer.length) {\n\t          var result = buffer.join(\"\");\n\t          buffer = [];\n\t          return result;\n\t        }\n\t      }\n\t    };\n\t    function point(x, y) {\n\t      buffer.push(\"M\", x, \",\", y, pointCircle);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      buffer.push(\"M\", x, \",\", y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      buffer.push(\"L\", x, \",\", y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      buffer.push(\"Z\");\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_pathBufferCircle(radius) {\n\t    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n\t  }\n\t  var d3_geo_pathCentroid = {\n\t    point: d3_geo_pathCentroidPoint,\n\t    lineStart: d3_geo_pathCentroidLineStart,\n\t    lineEnd: d3_geo_pathCentroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n\t      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n\t    }\n\t  };\n\t  function d3_geo_pathCentroidPoint(x, y) {\n\t    d3_geo_centroidX0 += x;\n\t    d3_geo_centroidY0 += y;\n\t    ++d3_geo_centroidZ0;\n\t  }\n\t  function d3_geo_pathCentroidLineStart() {\n\t    var x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t  }\n\t  function d3_geo_pathCentroidLineEnd() {\n\t    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t  }\n\t  function d3_geo_pathCentroidRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      z = y0 * x - x0 * y;\n\t      d3_geo_centroidX2 += z * (x0 + x);\n\t      d3_geo_centroidY2 += z * (y0 + y);\n\t      d3_geo_centroidZ2 += z * 3;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t    d3_geo_pathCentroid.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  function d3_geo_pathContext(context) {\n\t    var pointRadius = 4.5;\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointRadius = _;\n\t        return stream;\n\t      },\n\t      result: d3_noop\n\t    };\n\t    function point(x, y) {\n\t      context.moveTo(x + pointRadius, y);\n\t      context.arc(x, y, pointRadius, 0, τ);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      context.moveTo(x, y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      context.lineTo(x, y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      context.closePath();\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_resample(project) {\n\t    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n\t    function resample(stream) {\n\t      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n\t    }\n\t    function resampleNone(stream) {\n\t      return d3_geo_transformPoint(stream, function(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      });\n\t    }\n\t    function resampleRecursive(stream) {\n\t      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n\t      var resample = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          stream.polygonStart();\n\t          resample.lineStart = ringStart;\n\t        },\n\t        polygonEnd: function() {\n\t          stream.polygonEnd();\n\t          resample.lineStart = lineStart;\n\t        }\n\t      };\n\t      function point(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      }\n\t      function lineStart() {\n\t        x0 = NaN;\n\t        resample.point = linePoint;\n\t        stream.lineStart();\n\t      }\n\t      function linePoint(λ, φ) {\n\t        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t        stream.point(x0, y0);\n\t      }\n\t      function lineEnd() {\n\t        resample.point = point;\n\t        stream.lineEnd();\n\t      }\n\t      function ringStart() {\n\t        lineStart();\n\t        resample.point = ringPoint;\n\t        resample.lineEnd = ringEnd;\n\t      }\n\t      function ringPoint(λ, φ) {\n\t        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t        resample.point = linePoint;\n\t      }\n\t      function ringEnd() {\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n\t        resample.lineEnd = lineEnd;\n\t        lineEnd();\n\t      }\n\t      return resample;\n\t    }\n\t    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n\t      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n\t      if (d2 > 4 * δ2 && depth--) {\n\t        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n\t        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n\t          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n\t          stream.point(x2, y2);\n\t          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n\t        }\n\t      }\n\t    }\n\t    resample.precision = function(_) {\n\t      if (!arguments.length) return Math.sqrt(δ2);\n\t      maxDepth = (δ2 = _ * _) > 0 && 16;\n\t      return resample;\n\t    };\n\t    return resample;\n\t  }\n\t  d3.geo.path = function() {\n\t    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n\t    function path(object) {\n\t      if (object) {\n\t        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n\t        d3.geo.stream(object, cacheStream);\n\t      }\n\t      return contextStream.result();\n\t    }\n\t    path.area = function(object) {\n\t      d3_geo_pathAreaSum = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n\t      return d3_geo_pathAreaSum;\n\t    };\n\t    path.centroid = function(object) {\n\t      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n\t      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n\t    };\n\t    path.bounds = function(object) {\n\t      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n\t      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n\t      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n\t    };\n\t    path.projection = function(_) {\n\t      if (!arguments.length) return projection;\n\t      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n\t      return reset();\n\t    };\n\t    path.context = function(_) {\n\t      if (!arguments.length) return context;\n\t      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n\t      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t      return reset();\n\t    };\n\t    path.pointRadius = function(_) {\n\t      if (!arguments.length) return pointRadius;\n\t      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t      return path;\n\t    };\n\t    function reset() {\n\t      cacheStream = null;\n\t      return path;\n\t    }\n\t    return path.projection(d3.geo.albersUsa()).context(null);\n\t  };\n\t  function d3_geo_pathProjectStream(project) {\n\t    var resample = d3_geo_resample(function(x, y) {\n\t      return project([ x * d3_degrees, y * d3_degrees ]);\n\t    });\n\t    return function(stream) {\n\t      return d3_geo_projectionRadians(resample(stream));\n\t    };\n\t  }\n\t  d3.geo.transform = function(methods) {\n\t    return {\n\t      stream: function(stream) {\n\t        var transform = new d3_geo_transform(stream);\n\t        for (var k in methods) transform[k] = methods[k];\n\t        return transform;\n\t      }\n\t    };\n\t  };\n\t  function d3_geo_transform(stream) {\n\t    this.stream = stream;\n\t  }\n\t  d3_geo_transform.prototype = {\n\t    point: function(x, y) {\n\t      this.stream.point(x, y);\n\t    },\n\t    sphere: function() {\n\t      this.stream.sphere();\n\t    },\n\t    lineStart: function() {\n\t      this.stream.lineStart();\n\t    },\n\t    lineEnd: function() {\n\t      this.stream.lineEnd();\n\t    },\n\t    polygonStart: function() {\n\t      this.stream.polygonStart();\n\t    },\n\t    polygonEnd: function() {\n\t      this.stream.polygonEnd();\n\t    }\n\t  };\n\t  function d3_geo_transformPoint(stream, point) {\n\t    return {\n\t      point: point,\n\t      sphere: function() {\n\t        stream.sphere();\n\t      },\n\t      lineStart: function() {\n\t        stream.lineStart();\n\t      },\n\t      lineEnd: function() {\n\t        stream.lineEnd();\n\t      },\n\t      polygonStart: function() {\n\t        stream.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        stream.polygonEnd();\n\t      }\n\t    };\n\t  }\n\t  d3.geo.projection = d3_geo_projection;\n\t  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\t  function d3_geo_projection(project) {\n\t    return d3_geo_projectionMutator(function() {\n\t      return project;\n\t    })();\n\t  }\n\t  function d3_geo_projectionMutator(projectAt) {\n\t    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n\t      x = project(x, y);\n\t      return [ x[0] * k + δx, δy - x[1] * k ];\n\t    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n\t    function projection(point) {\n\t      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n\t      return [ point[0] * k + δx, δy - point[1] * k ];\n\t    }\n\t    function invert(point) {\n\t      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n\t      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n\t    }\n\t    projection.stream = function(output) {\n\t      if (stream) stream.valid = false;\n\t      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n\t      stream.valid = true;\n\t      return stream;\n\t    };\n\t    projection.clipAngle = function(_) {\n\t      if (!arguments.length) return clipAngle;\n\t      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n\t      return invalidate();\n\t    };\n\t    projection.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent;\n\t      clipExtent = _;\n\t      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n\t      return invalidate();\n\t    };\n\t    projection.scale = function(_) {\n\t      if (!arguments.length) return k;\n\t      k = +_;\n\t      return reset();\n\t    };\n\t    projection.translate = function(_) {\n\t      if (!arguments.length) return [ x, y ];\n\t      x = +_[0];\n\t      y = +_[1];\n\t      return reset();\n\t    };\n\t    projection.center = function(_) {\n\t      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n\t      λ = _[0] % 360 * d3_radians;\n\t      φ = _[1] % 360 * d3_radians;\n\t      return reset();\n\t    };\n\t    projection.rotate = function(_) {\n\t      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n\t      δλ = _[0] % 360 * d3_radians;\n\t      δφ = _[1] % 360 * d3_radians;\n\t      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n\t      return reset();\n\t    };\n\t    d3.rebind(projection, projectResample, \"precision\");\n\t    function reset() {\n\t      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n\t      var center = project(λ, φ);\n\t      δx = x - center[0] * k;\n\t      δy = y + center[1] * k;\n\t      return invalidate();\n\t    }\n\t    function invalidate() {\n\t      if (stream) stream.valid = false, stream = null;\n\t      return projection;\n\t    }\n\t    return function() {\n\t      project = projectAt.apply(this, arguments);\n\t      projection.invert = project.invert && invert;\n\t      return reset();\n\t    };\n\t  }\n\t  function d3_geo_projectionRadians(stream) {\n\t    return d3_geo_transformPoint(stream, function(x, y) {\n\t      stream.point(x * d3_radians, y * d3_radians);\n\t    });\n\t  }\n\t  function d3_geo_equirectangular(λ, φ) {\n\t    return [ λ, φ ];\n\t  }\n\t  (d3.geo.equirectangular = function() {\n\t    return d3_geo_projection(d3_geo_equirectangular);\n\t  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\t  d3.geo.rotation = function(rotate) {\n\t    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\t    function forward(coordinates) {\n\t      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    }\n\t    forward.invert = function(coordinates) {\n\t      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    };\n\t    return forward;\n\t  };\n\t  function d3_geo_identityRotation(λ, φ) {\n\t    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t  }\n\t  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\t  function d3_geo_rotation(δλ, δφ, δγ) {\n\t    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n\t  }\n\t  function d3_geo_forwardRotationλ(δλ) {\n\t    return function(λ, φ) {\n\t      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t    };\n\t  }\n\t  function d3_geo_rotationλ(δλ) {\n\t    var rotation = d3_geo_forwardRotationλ(δλ);\n\t    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n\t    return rotation;\n\t  }\n\t  function d3_geo_rotationφγ(δφ, δγ) {\n\t    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n\t    function rotation(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n\t      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n\t    }\n\t    rotation.invert = function(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n\t      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n\t    };\n\t    return rotation;\n\t  }\n\t  d3.geo.circle = function() {\n\t    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n\t    function circle() {\n\t      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n\t      interpolate(null, null, 1, {\n\t        point: function(x, y) {\n\t          ring.push(x = rotate(x, y));\n\t          x[0] *= d3_degrees, x[1] *= d3_degrees;\n\t        }\n\t      });\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ ring ]\n\t      };\n\t    }\n\t    circle.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return circle;\n\t    };\n\t    circle.angle = function(x) {\n\t      if (!arguments.length) return angle;\n\t      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n\t      return circle;\n\t    };\n\t    circle.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n\t      return circle;\n\t    };\n\t    return circle.angle(90);\n\t  };\n\t  function d3_geo_circleInterpolate(radius, precision) {\n\t    var cr = Math.cos(radius), sr = Math.sin(radius);\n\t    return function(from, to, direction, listener) {\n\t      var step = direction * precision;\n\t      if (from != null) {\n\t        from = d3_geo_circleAngle(cr, from);\n\t        to = d3_geo_circleAngle(cr, to);\n\t        if (direction > 0 ? from < to : from > to) from += direction * τ;\n\t      } else {\n\t        from = radius + direction * τ;\n\t        to = radius - .5 * step;\n\t      }\n\t      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n\t        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_circleAngle(cr, point) {\n\t    var a = d3_geo_cartesian(point);\n\t    a[0] -= cr;\n\t    d3_geo_cartesianNormalize(a);\n\t    var angle = d3_acos(-a[1]);\n\t    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n\t  }\n\t  d3.geo.distance = function(a, b) {\n\t    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n\t    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n\t  };\n\t  d3.geo.graticule = function() {\n\t    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n\t    function graticule() {\n\t      return {\n\t        type: \"MultiLineString\",\n\t        coordinates: lines()\n\t      };\n\t    }\n\t    function lines() {\n\t      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n\t        return abs(x % DX) > ε;\n\t      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n\t        return abs(y % DY) > ε;\n\t      }).map(y));\n\t    }\n\t    graticule.lines = function() {\n\t      return lines().map(function(coordinates) {\n\t        return {\n\t          type: \"LineString\",\n\t          coordinates: coordinates\n\t        };\n\t      });\n\t    };\n\t    graticule.outline = function() {\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n\t      };\n\t    };\n\t    graticule.extent = function(_) {\n\t      if (!arguments.length) return graticule.minorExtent();\n\t      return graticule.majorExtent(_).minorExtent(_);\n\t    };\n\t    graticule.majorExtent = function(_) {\n\t      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n\t      X0 = +_[0][0], X1 = +_[1][0];\n\t      Y0 = +_[0][1], Y1 = +_[1][1];\n\t      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.minorExtent = function(_) {\n\t      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t      x0 = +_[0][0], x1 = +_[1][0];\n\t      y0 = +_[0][1], y1 = +_[1][1];\n\t      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.step = function(_) {\n\t      if (!arguments.length) return graticule.minorStep();\n\t      return graticule.majorStep(_).minorStep(_);\n\t    };\n\t    graticule.majorStep = function(_) {\n\t      if (!arguments.length) return [ DX, DY ];\n\t      DX = +_[0], DY = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.minorStep = function(_) {\n\t      if (!arguments.length) return [ dx, dy ];\n\t      dx = +_[0], dy = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      precision = +_;\n\t      x = d3_geo_graticuleX(y0, y1, 90);\n\t      y = d3_geo_graticuleY(x0, x1, precision);\n\t      X = d3_geo_graticuleX(Y0, Y1, 90);\n\t      Y = d3_geo_graticuleY(X0, X1, precision);\n\t      return graticule;\n\t    };\n\t    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n\t  };\n\t  function d3_geo_graticuleX(y0, y1, dy) {\n\t    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n\t    return function(x) {\n\t      return y.map(function(y) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_geo_graticuleY(x0, x1, dx) {\n\t    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n\t    return function(y) {\n\t      return x.map(function(x) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_source(d) {\n\t    return d.source;\n\t  }\n\t  function d3_target(d) {\n\t    return d.target;\n\t  }\n\t  d3.geo.greatArc = function() {\n\t    var source = d3_source, source_, target = d3_target, target_;\n\t    function greatArc() {\n\t      return {\n\t        type: \"LineString\",\n\t        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n\t      };\n\t    }\n\t    greatArc.distance = function() {\n\t      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n\t    };\n\t    greatArc.source = function(_) {\n\t      if (!arguments.length) return source;\n\t      source = _, source_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.target = function(_) {\n\t      if (!arguments.length) return target;\n\t      target = _, target_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.precision = function() {\n\t      return arguments.length ? greatArc : 0;\n\t    };\n\t    return greatArc;\n\t  };\n\t  d3.geo.interpolate = function(source, target) {\n\t    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n\t  };\n\t  function d3_geo_interpolate(x0, y0, x1, y1) {\n\t    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n\t    var interpolate = d ? function(t) {\n\t      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n\t      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n\t    } : function() {\n\t      return [ x0 * d3_degrees, y0 * d3_degrees ];\n\t    };\n\t    interpolate.distance = d;\n\t    return interpolate;\n\t  }\n\t  d3.geo.length = function(object) {\n\t    d3_geo_lengthSum = 0;\n\t    d3.geo.stream(object, d3_geo_length);\n\t    return d3_geo_lengthSum;\n\t  };\n\t  var d3_geo_lengthSum;\n\t  var d3_geo_length = {\n\t    sphere: d3_noop,\n\t    point: d3_noop,\n\t    lineStart: d3_geo_lengthLineStart,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_lengthLineStart() {\n\t    var λ0, sinφ0, cosφ0;\n\t    d3_geo_length.point = function(λ, φ) {\n\t      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n\t      d3_geo_length.point = nextPoint;\n\t    };\n\t    d3_geo_length.lineEnd = function() {\n\t      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n\t      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n\t      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n\t    }\n\t  }\n\t  function d3_geo_azimuthal(scale, angle) {\n\t    function azimuthal(λ, φ) {\n\t      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n\t      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n\t    }\n\t    azimuthal.invert = function(x, y) {\n\t      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n\t      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n\t    };\n\t    return azimuthal;\n\t  }\n\t  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return Math.sqrt(2 / (1 + cosλcosφ));\n\t  }, function(ρ) {\n\t    return 2 * Math.asin(ρ / 2);\n\t  });\n\t  (d3.geo.azimuthalEqualArea = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n\t  }).raw = d3_geo_azimuthalEqualArea;\n\t  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n\t    var c = Math.acos(cosλcosφ);\n\t    return c && c / Math.sin(c);\n\t  }, d3_identity);\n\t  (d3.geo.azimuthalEquidistant = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n\t  }).raw = d3_geo_azimuthalEquidistant;\n\t  function d3_geo_conicConformal(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), t = function(φ) {\n\t      return Math.tan(π / 4 + φ / 2);\n\t    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n\t    if (!n) return d3_geo_mercator;\n\t    function forward(λ, φ) {\n\t      if (F > 0) {\n\t        if (φ < -halfπ + ε) φ = -halfπ + ε;\n\t      } else {\n\t        if (φ > halfπ - ε) φ = halfπ - ε;\n\t      }\n\t      var ρ = F / Math.pow(t(φ), n);\n\t      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n\t      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicConformal = function() {\n\t    return d3_geo_conic(d3_geo_conicConformal);\n\t  }).raw = d3_geo_conicConformal;\n\t  function d3_geo_conicEquidistant(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n\t    if (abs(n) < ε) return d3_geo_equirectangular;\n\t    function forward(λ, φ) {\n\t      var ρ = G - φ;\n\t      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = G - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEquidistant = function() {\n\t    return d3_geo_conic(d3_geo_conicEquidistant);\n\t  }).raw = d3_geo_conicEquidistant;\n\t  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / cosλcosφ;\n\t  }, Math.atan);\n\t  (d3.geo.gnomonic = function() {\n\t    return d3_geo_projection(d3_geo_gnomonic);\n\t  }).raw = d3_geo_gnomonic;\n\t  function d3_geo_mercator(λ, φ) {\n\t    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n\t  }\n\t  d3_geo_mercator.invert = function(x, y) {\n\t    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n\t  };\n\t  function d3_geo_mercatorProjection(project) {\n\t    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n\t    m.scale = function() {\n\t      var v = scale.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.translate = function() {\n\t      var v = translate.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.clipExtent = function(_) {\n\t      var v = clipExtent.apply(m, arguments);\n\t      if (v === m) {\n\t        if (clipAuto = _ == null) {\n\t          var k = π * scale(), t = translate();\n\t          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n\t        }\n\t      } else if (clipAuto) {\n\t        v = null;\n\t      }\n\t      return v;\n\t    };\n\t    return m.clipExtent(null);\n\t  }\n\t  (d3.geo.mercator = function() {\n\t    return d3_geo_mercatorProjection(d3_geo_mercator);\n\t  }).raw = d3_geo_mercator;\n\t  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n\t    return 1;\n\t  }, Math.asin);\n\t  (d3.geo.orthographic = function() {\n\t    return d3_geo_projection(d3_geo_orthographic);\n\t  }).raw = d3_geo_orthographic;\n\t  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / (1 + cosλcosφ);\n\t  }, function(ρ) {\n\t    return 2 * Math.atan(ρ);\n\t  });\n\t  (d3.geo.stereographic = function() {\n\t    return d3_geo_projection(d3_geo_stereographic);\n\t  }).raw = d3_geo_stereographic;\n\t  function d3_geo_transverseMercator(λ, φ) {\n\t    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n\t  }\n\t  d3_geo_transverseMercator.invert = function(x, y) {\n\t    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n\t  };\n\t  (d3.geo.transverseMercator = function() {\n\t    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n\t    projection.center = function(_) {\n\t      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n\t    };\n\t    projection.rotate = function(_) {\n\t      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n\t      [ _[0], _[1], _[2] - 90 ]);\n\t    };\n\t    return rotate([ 0, 0, 90 ]);\n\t  }).raw = d3_geo_transverseMercator;\n\t  d3.geom = {};\n\t  function d3_geom_pointX(d) {\n\t    return d[0];\n\t  }\n\t  function d3_geom_pointY(d) {\n\t    return d[1];\n\t  }\n\t  d3.geom.hull = function(vertices) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY;\n\t    if (arguments.length) return hull(vertices);\n\t    function hull(data) {\n\t      if (data.length < 3) return [];\n\t      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n\t      for (i = 0; i < n; i++) {\n\t        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n\t      }\n\t      points.sort(d3_geom_hullOrder);\n\t      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n\t      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n\t      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n\t      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n\t      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n\t      return polygon;\n\t    }\n\t    hull.x = function(_) {\n\t      return arguments.length ? (x = _, hull) : x;\n\t    };\n\t    hull.y = function(_) {\n\t      return arguments.length ? (y = _, hull) : y;\n\t    };\n\t    return hull;\n\t  };\n\t  function d3_geom_hullUpper(points) {\n\t    var n = points.length, hull = [ 0, 1 ], hs = 2;\n\t    for (var i = 2; i < n; i++) {\n\t      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n\t      hull[hs++] = i;\n\t    }\n\t    return hull.slice(0, hs);\n\t  }\n\t  function d3_geom_hullOrder(a, b) {\n\t    return a[0] - b[0] || a[1] - b[1];\n\t  }\n\t  d3.geom.polygon = function(coordinates) {\n\t    d3_subclass(coordinates, d3_geom_polygonPrototype);\n\t    return coordinates;\n\t  };\n\t  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\t  d3_geom_polygonPrototype.area = function() {\n\t    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      area += a[1] * b[0] - a[0] * b[1];\n\t    }\n\t    return area * .5;\n\t  };\n\t  d3_geom_polygonPrototype.centroid = function(k) {\n\t    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n\t    if (!arguments.length) k = -1 / (6 * this.area());\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      c = a[0] * b[1] - b[0] * a[1];\n\t      x += (a[0] + b[0]) * c;\n\t      y += (a[1] + b[1]) * c;\n\t    }\n\t    return [ x * k, y * k ];\n\t  };\n\t  d3_geom_polygonPrototype.clip = function(subject) {\n\t    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n\t    while (++i < n) {\n\t      input = subject.slice();\n\t      subject.length = 0;\n\t      b = this[i];\n\t      c = input[(m = input.length - closed) - 1];\n\t      j = -1;\n\t      while (++j < m) {\n\t        d = input[j];\n\t        if (d3_geom_polygonInside(d, a, b)) {\n\t          if (!d3_geom_polygonInside(c, a, b)) {\n\t            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t          }\n\t          subject.push(d);\n\t        } else if (d3_geom_polygonInside(c, a, b)) {\n\t          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t        }\n\t        c = d;\n\t      }\n\t      if (closed) subject.push(subject[0]);\n\t      a = b;\n\t    }\n\t    return subject;\n\t  };\n\t  function d3_geom_polygonInside(p, a, b) {\n\t    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n\t  }\n\t  function d3_geom_polygonIntersect(c, d, a, b) {\n\t    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n\t    return [ x1 + ua * x21, y1 + ua * y21 ];\n\t  }\n\t  function d3_geom_polygonClosed(coordinates) {\n\t    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n\t    return !(a[0] - b[0] || a[1] - b[1]);\n\t  }\n\t  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n\t  function d3_geom_voronoiBeach() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.edge = this.site = this.circle = null;\n\t  }\n\t  function d3_geom_voronoiCreateBeach(site) {\n\t    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n\t    beach.site = site;\n\t    return beach;\n\t  }\n\t  function d3_geom_voronoiDetachBeach(beach) {\n\t    d3_geom_voronoiDetachCircle(beach);\n\t    d3_geom_voronoiBeaches.remove(beach);\n\t    d3_geom_voronoiBeachPool.push(beach);\n\t    d3_geom_voronoiRedBlackNode(beach);\n\t  }\n\t  function d3_geom_voronoiRemoveBeach(beach) {\n\t    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n\t      x: x,\n\t      y: y\n\t    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n\t    d3_geom_voronoiDetachBeach(beach);\n\t    var lArc = previous;\n\t    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n\t      previous = lArc.P;\n\t      disappearing.unshift(lArc);\n\t      d3_geom_voronoiDetachBeach(lArc);\n\t      lArc = previous;\n\t    }\n\t    disappearing.unshift(lArc);\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    var rArc = next;\n\t    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n\t      next = rArc.N;\n\t      disappearing.push(rArc);\n\t      d3_geom_voronoiDetachBeach(rArc);\n\t      rArc = next;\n\t    }\n\t    disappearing.push(rArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var nArcs = disappearing.length, iArc;\n\t    for (iArc = 1; iArc < nArcs; ++iArc) {\n\t      rArc = disappearing[iArc];\n\t      lArc = disappearing[iArc - 1];\n\t      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t    }\n\t    lArc = disappearing[0];\n\t    rArc = disappearing[nArcs - 1];\n\t    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiAddBeach(site) {\n\t    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n\t    while (node) {\n\t      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n\t      if (dxl > ε) node = node.L; else {\n\t        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\t        if (dxr > ε) {\n\t          if (!node.R) {\n\t            lArc = node;\n\t            break;\n\t          }\n\t          node = node.R;\n\t        } else {\n\t          if (dxl > -ε) {\n\t            lArc = node.P;\n\t            rArc = node;\n\t          } else if (dxr > -ε) {\n\t            lArc = node;\n\t            rArc = node.N;\n\t          } else {\n\t            lArc = rArc = node;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    var newArc = d3_geom_voronoiCreateBeach(site);\n\t    d3_geom_voronoiBeaches.insert(lArc, newArc);\n\t    if (!lArc && !rArc) return;\n\t    if (lArc === rArc) {\n\t      d3_geom_voronoiDetachCircle(lArc);\n\t      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n\t      d3_geom_voronoiBeaches.insert(newArc, rArc);\n\t      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      d3_geom_voronoiAttachCircle(lArc);\n\t      d3_geom_voronoiAttachCircle(rArc);\n\t      return;\n\t    }\n\t    if (!rArc) {\n\t      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      return;\n\t    }\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n\t      x: (cy * hb - by * hc) / d + ax,\n\t      y: (bx * hc - cx * hb) / d + ay\n\t    };\n\t    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n\t    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n\t    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n\t    if (!pby2) return rfocx;\n\t    var lArc = arc.P;\n\t    if (!lArc) return -Infinity;\n\t    site = lArc.site;\n\t    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n\t    if (!plby2) return lfocx;\n\t    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n\t    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t    return (rfocx + lfocx) / 2;\n\t  }\n\t  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n\t    var rArc = arc.N;\n\t    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n\t    var site = arc.site;\n\t    return site.y === directrix ? site.x : Infinity;\n\t  }\n\t  function d3_geom_voronoiCell(site) {\n\t    this.site = site;\n\t    this.edges = [];\n\t  }\n\t  d3_geom_voronoiCell.prototype.prepare = function() {\n\t    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n\t    while (iHalfEdge--) {\n\t      edge = halfEdges[iHalfEdge].edge;\n\t      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n\t    }\n\t    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n\t    return halfEdges.length;\n\t  };\n\t  function d3_geom_voronoiCloseCells(extent) {\n\t    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n\t    while (iCell--) {\n\t      cell = cells[iCell];\n\t      if (!cell || !cell.prepare()) continue;\n\t      halfEdges = cell.edges;\n\t      nHalfEdges = halfEdges.length;\n\t      iHalfEdge = 0;\n\t      while (iHalfEdge < nHalfEdges) {\n\t        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n\t        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\t        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n\t          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n\t            x: x0,\n\t            y: abs(x2 - x0) < ε ? y2 : y1\n\t          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n\t            x: abs(y2 - y1) < ε ? x2 : x1,\n\t            y: y1\n\t          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n\t            x: x1,\n\t            y: abs(x2 - x1) < ε ? y2 : y0\n\t          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n\t            x: abs(y2 - y0) < ε ? x2 : x0,\n\t            y: y0\n\t          } : null), cell.site, null));\n\t          ++nHalfEdges;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n\t    return b.angle - a.angle;\n\t  }\n\t  function d3_geom_voronoiCircle() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.x = this.y = this.arc = this.site = this.cy = null;\n\t  }\n\t  function d3_geom_voronoiAttachCircle(arc) {\n\t    var lArc = arc.P, rArc = arc.N;\n\t    if (!lArc || !rArc) return;\n\t    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n\t    if (lSite === rSite) return;\n\t    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n\t    var d = 2 * (ax * cy - ay * cx);\n\t    if (d >= -ε2) return;\n\t    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n\t    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n\t    circle.arc = arc;\n\t    circle.site = cSite;\n\t    circle.x = x + bx;\n\t    circle.y = cy + Math.sqrt(x * x + y * y);\n\t    circle.cy = cy;\n\t    arc.circle = circle;\n\t    var before = null, node = d3_geom_voronoiCircles._;\n\t    while (node) {\n\t      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n\t        if (node.L) node = node.L; else {\n\t          before = node.P;\n\t          break;\n\t        }\n\t      } else {\n\t        if (node.R) node = node.R; else {\n\t          before = node;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    d3_geom_voronoiCircles.insert(before, circle);\n\t    if (!before) d3_geom_voronoiFirstCircle = circle;\n\t  }\n\t  function d3_geom_voronoiDetachCircle(arc) {\n\t    var circle = arc.circle;\n\t    if (circle) {\n\t      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n\t      d3_geom_voronoiCircles.remove(circle);\n\t      d3_geom_voronoiCirclePool.push(circle);\n\t      d3_geom_voronoiRedBlackNode(circle);\n\t      arc.circle = null;\n\t    }\n\t  }\n\t  function d3_geom_voronoiClipEdges(extent) {\n\t    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n\t    while (i--) {\n\t      e = edges[i];\n\t      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n\t        e.a = e.b = null;\n\t        edges.splice(i, 1);\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiConnectEdge(edge, extent) {\n\t    var vb = edge.b;\n\t    if (vb) return true;\n\t    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n\t    if (ry === ly) {\n\t      if (fx < x0 || fx >= x1) return;\n\t      if (lx > rx) {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y0\n\t        }; else if (va.y >= y1) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y1\n\t        };\n\t      } else {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y1\n\t        }; else if (va.y < y0) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y0\n\t        };\n\t      }\n\t    } else {\n\t      fm = (lx - rx) / (ry - ly);\n\t      fb = fy - fm * fx;\n\t      if (fm < -1 || fm > 1) {\n\t        if (lx > rx) {\n\t          if (!va) va = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          }; else if (va.y >= y1) return;\n\t          vb = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          }; else if (va.y < y0) return;\n\t          vb = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          };\n\t        }\n\t      } else {\n\t        if (ly < ry) {\n\t          if (!va) va = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          }; else if (va.x >= x1) return;\n\t          vb = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          }; else if (va.x < x0) return;\n\t          vb = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          };\n\t        }\n\t      }\n\t    }\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    return true;\n\t  }\n\t  function d3_geom_voronoiEdge(lSite, rSite) {\n\t    this.l = lSite;\n\t    this.r = rSite;\n\t    this.a = this.b = null;\n\t  }\n\t  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n\t    d3_geom_voronoiEdges.push(edge);\n\t    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n\t    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n\t    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n\t    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, null);\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    d3_geom_voronoiEdges.push(edge);\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n\t    if (!edge.a && !edge.b) {\n\t      edge.a = vertex;\n\t      edge.l = lSite;\n\t      edge.r = rSite;\n\t    } else if (edge.l === rSite) {\n\t      edge.b = vertex;\n\t    } else {\n\t      edge.a = vertex;\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n\t    var va = edge.a, vb = edge.b;\n\t    this.edge = edge;\n\t    this.site = lSite;\n\t    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n\t  }\n\t  d3_geom_voronoiHalfEdge.prototype = {\n\t    start: function() {\n\t      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n\t    },\n\t    end: function() {\n\t      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackTree() {\n\t    this._ = null;\n\t  }\n\t  function d3_geom_voronoiRedBlackNode(node) {\n\t    node.U = node.C = node.L = node.R = node.P = node.N = null;\n\t  }\n\t  d3_geom_voronoiRedBlackTree.prototype = {\n\t    insert: function(after, node) {\n\t      var parent, grandpa, uncle;\n\t      if (after) {\n\t        node.P = after;\n\t        node.N = after.N;\n\t        if (after.N) after.N.P = node;\n\t        after.N = node;\n\t        if (after.R) {\n\t          after = after.R;\n\t          while (after.L) after = after.L;\n\t          after.L = node;\n\t        } else {\n\t          after.R = node;\n\t        }\n\t        parent = after;\n\t      } else if (this._) {\n\t        after = d3_geom_voronoiRedBlackFirst(this._);\n\t        node.P = null;\n\t        node.N = after;\n\t        after.P = after.L = node;\n\t        parent = after;\n\t      } else {\n\t        node.P = node.N = null;\n\t        this._ = node;\n\t        parent = null;\n\t      }\n\t      node.L = node.R = null;\n\t      node.U = parent;\n\t      node.C = true;\n\t      after = node;\n\t      while (parent && parent.C) {\n\t        grandpa = parent.U;\n\t        if (parent === grandpa.L) {\n\t          uncle = grandpa.R;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.R) {\n\t              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n\t          }\n\t        } else {\n\t          uncle = grandpa.L;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.L) {\n\t              d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n\t          }\n\t        }\n\t        parent = after.U;\n\t      }\n\t      this._.C = false;\n\t    },\n\t    remove: function(node) {\n\t      if (node.N) node.N.P = node.P;\n\t      if (node.P) node.P.N = node.N;\n\t      node.N = node.P = null;\n\t      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n\t      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n\t      if (parent) {\n\t        if (parent.L === node) parent.L = next; else parent.R = next;\n\t      } else {\n\t        this._ = next;\n\t      }\n\t      if (left && right) {\n\t        red = next.C;\n\t        next.C = node.C;\n\t        next.L = left;\n\t        left.U = next;\n\t        if (next !== right) {\n\t          parent = next.U;\n\t          next.U = node.U;\n\t          node = next.R;\n\t          parent.L = node;\n\t          next.R = right;\n\t          right.U = next;\n\t        } else {\n\t          next.U = parent;\n\t          parent = next;\n\t          node = next.R;\n\t        }\n\t      } else {\n\t        red = node.C;\n\t        node = next;\n\t      }\n\t      if (node) node.U = parent;\n\t      if (red) return;\n\t      if (node && node.C) {\n\t        node.C = false;\n\t        return;\n\t      }\n\t      do {\n\t        if (node === this._) break;\n\t        if (node === parent.L) {\n\t          sibling = parent.R;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            sibling = parent.R;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.R || !sibling.R.C) {\n\t              sibling.L.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n\t              sibling = parent.R;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.R.C = false;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        } else {\n\t          sibling = parent.L;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            sibling = parent.L;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.L || !sibling.L.C) {\n\t              sibling.R.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n\t              sibling = parent.L;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.L.C = false;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        }\n\t        sibling.C = true;\n\t        node = parent;\n\t        parent = parent.U;\n\t      } while (!node.C);\n\t      if (node) node.C = false;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n\t    var p = node, q = node.R, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.R = q.L;\n\t    if (p.R) p.R.U = p;\n\t    q.L = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n\t    var p = node, q = node.L, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.L = q.R;\n\t    if (p.L) p.L.U = p;\n\t    q.R = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackFirst(node) {\n\t    while (node.L) node = node.L;\n\t    return node;\n\t  }\n\t  function d3_geom_voronoi(sites, bbox) {\n\t    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n\t    d3_geom_voronoiEdges = [];\n\t    d3_geom_voronoiCells = new Array(sites.length);\n\t    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n\t    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\t    while (true) {\n\t      circle = d3_geom_voronoiFirstCircle;\n\t      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n\t        if (site.x !== x0 || site.y !== y0) {\n\t          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n\t          d3_geom_voronoiAddBeach(site);\n\t          x0 = site.x, y0 = site.y;\n\t        }\n\t        site = sites.pop();\n\t      } else if (circle) {\n\t        d3_geom_voronoiRemoveBeach(circle.arc);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n\t    var diagram = {\n\t      cells: d3_geom_voronoiCells,\n\t      edges: d3_geom_voronoiEdges\n\t    };\n\t    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n\t    return diagram;\n\t  }\n\t  function d3_geom_voronoiVertexOrder(a, b) {\n\t    return b.y - a.y || b.x - a.x;\n\t  }\n\t  d3.geom.voronoi = function(points) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n\t    if (points) return voronoi(points);\n\t    function voronoi(data) {\n\t      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n\t      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n\t        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n\t          var s = e.start();\n\t          return [ s.x, s.y ];\n\t        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n\t        polygon.point = data[i];\n\t      });\n\t      return polygons;\n\t    }\n\t    function sites(data) {\n\t      return data.map(function(d, i) {\n\t        return {\n\t          x: Math.round(fx(d, i) / ε) * ε,\n\t          y: Math.round(fy(d, i) / ε) * ε,\n\t          i: i\n\t        };\n\t      });\n\t    }\n\t    voronoi.links = function(data) {\n\t      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n\t        return edge.l && edge.r;\n\t      }).map(function(edge) {\n\t        return {\n\t          source: data[edge.l.i],\n\t          target: data[edge.r.i]\n\t        };\n\t      });\n\t    };\n\t    voronoi.triangles = function(data) {\n\t      var triangles = [];\n\t      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n\t        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n\t        while (++j < m) {\n\t          e0 = e1;\n\t          s0 = s1;\n\t          e1 = edges[j].edge;\n\t          s1 = e1.l === site ? e1.r : e1.l;\n\t          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n\t            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n\t          }\n\t        }\n\t      });\n\t      return triangles;\n\t    };\n\t    voronoi.x = function(_) {\n\t      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n\t    };\n\t    voronoi.y = function(_) {\n\t      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n\t    };\n\t    voronoi.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n\t      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n\t      return voronoi;\n\t    };\n\t    voronoi.size = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n\t      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n\t    };\n\t    return voronoi;\n\t  };\n\t  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n\t  function d3_geom_voronoiTriangleArea(a, b, c) {\n\t    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n\t  }\n\t  d3.geom.delaunay = function(vertices) {\n\t    return d3.geom.voronoi().triangles(vertices);\n\t  };\n\t  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n\t    if (compat = arguments.length) {\n\t      x = d3_geom_quadtreeCompatX;\n\t      y = d3_geom_quadtreeCompatY;\n\t      if (compat === 3) {\n\t        y2 = y1;\n\t        x2 = x1;\n\t        y1 = x1 = 0;\n\t      }\n\t      return quadtree(points);\n\t    }\n\t    function quadtree(data) {\n\t      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n\t      if (x1 != null) {\n\t        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n\t      } else {\n\t        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n\t        xs = [], ys = [];\n\t        n = data.length;\n\t        if (compat) for (i = 0; i < n; ++i) {\n\t          d = data[i];\n\t          if (d.x < x1_) x1_ = d.x;\n\t          if (d.y < y1_) y1_ = d.y;\n\t          if (d.x > x2_) x2_ = d.x;\n\t          if (d.y > y2_) y2_ = d.y;\n\t          xs.push(d.x);\n\t          ys.push(d.y);\n\t        } else for (i = 0; i < n; ++i) {\n\t          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n\t          if (x_ < x1_) x1_ = x_;\n\t          if (y_ < y1_) y1_ = y_;\n\t          if (x_ > x2_) x2_ = x_;\n\t          if (y_ > y2_) y2_ = y_;\n\t          xs.push(x_);\n\t          ys.push(y_);\n\t        }\n\t      }\n\t      var dx = x2_ - x1_, dy = y2_ - y1_;\n\t      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n\t      function insert(n, d, x, y, x1, y1, x2, y2) {\n\t        if (isNaN(x) || isNaN(y)) return;\n\t        if (n.leaf) {\n\t          var nx = n.x, ny = n.y;\n\t          if (nx != null) {\n\t            if (abs(nx - x) + abs(ny - y) < .01) {\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            } else {\n\t              var nPoint = n.point;\n\t              n.x = n.y = n.point = null;\n\t              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            }\n\t          } else {\n\t            n.x = x, n.y = y, n.point = d;\n\t          }\n\t        } else {\n\t          insertChild(n, d, x, y, x1, y1, x2, y2);\n\t        }\n\t      }\n\t      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n\t        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n\t        n.leaf = false;\n\t        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n\t        if (right) x1 = xm; else x2 = xm;\n\t        if (below) y1 = ym; else y2 = ym;\n\t        insert(n, d, x, y, x1, y1, x2, y2);\n\t      }\n\t      var root = d3_geom_quadtreeNode();\n\t      root.add = function(d) {\n\t        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n\t      };\n\t      root.visit = function(f) {\n\t        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n\t      };\n\t      root.find = function(point) {\n\t        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n\t      };\n\t      i = -1;\n\t      if (x1 == null) {\n\t        while (++i < n) {\n\t          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n\t        }\n\t        --i;\n\t      } else data.forEach(root.add);\n\t      xs = ys = data = d = null;\n\t      return root;\n\t    }\n\t    quadtree.x = function(_) {\n\t      return arguments.length ? (x = _, quadtree) : x;\n\t    };\n\t    quadtree.y = function(_) {\n\t      return arguments.length ? (y = _, quadtree) : y;\n\t    };\n\t    quadtree.extent = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n\t      y2 = +_[1][1];\n\t      return quadtree;\n\t    };\n\t    quadtree.size = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n\t      return quadtree;\n\t    };\n\t    return quadtree;\n\t  };\n\t  function d3_geom_quadtreeCompatX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_geom_quadtreeCompatY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_geom_quadtreeNode() {\n\t    return {\n\t      leaf: true,\n\t      nodes: [],\n\t      point: null,\n\t      x: null,\n\t      y: null\n\t    };\n\t  }\n\t  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n\t    if (!f(node, x1, y1, x2, y2)) {\n\t      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n\t      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n\t      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n\t      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n\t      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n\t    }\n\t  }\n\t  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n\t    var minDistance2 = Infinity, closestPoint;\n\t    (function find(node, x1, y1, x2, y2) {\n\t      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\t      if (point = node.point) {\n\t        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n\t        if (distance2 < minDistance2) {\n\t          var distance = Math.sqrt(minDistance2 = distance2);\n\t          x0 = x - distance, y0 = y - distance;\n\t          x3 = x + distance, y3 = y + distance;\n\t          closestPoint = point;\n\t        }\n\t      }\n\t      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n\t      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n\t        if (node = children[i & 3]) switch (i & 3) {\n\t         case 0:\n\t          find(node, x1, y1, xm, ym);\n\t          break;\n\t\n\t         case 1:\n\t          find(node, xm, y1, x2, ym);\n\t          break;\n\t\n\t         case 2:\n\t          find(node, x1, ym, xm, y2);\n\t          break;\n\t\n\t         case 3:\n\t          find(node, xm, ym, x2, y2);\n\t          break;\n\t        }\n\t      }\n\t    })(root, x0, y0, x3, y3);\n\t    return closestPoint;\n\t  }\n\t  d3.interpolateRgb = d3_interpolateRgb;\n\t  function d3_interpolateRgb(a, b) {\n\t    a = d3.rgb(a);\n\t    b = d3.rgb(b);\n\t    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n\t    return function(t) {\n\t      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n\t    };\n\t  }\n\t  d3.interpolateObject = d3_interpolateObject;\n\t  function d3_interpolateObject(a, b) {\n\t    var i = {}, c = {}, k;\n\t    for (k in a) {\n\t      if (k in b) {\n\t        i[k] = d3_interpolate(a[k], b[k]);\n\t      } else {\n\t        c[k] = a[k];\n\t      }\n\t    }\n\t    for (k in b) {\n\t      if (!(k in a)) {\n\t        c[k] = b[k];\n\t      }\n\t    }\n\t    return function(t) {\n\t      for (k in i) c[k] = i[k](t);\n\t      return c;\n\t    };\n\t  }\n\t  d3.interpolateNumber = d3_interpolateNumber;\n\t  function d3_interpolateNumber(a, b) {\n\t    a = +a, b = +b;\n\t    return function(t) {\n\t      return a * (1 - t) + b * t;\n\t    };\n\t  }\n\t  d3.interpolateString = d3_interpolateString;\n\t  function d3_interpolateString(a, b) {\n\t    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n\t    a = a + \"\", b = b + \"\";\n\t    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n\t      if ((bs = bm.index) > bi) {\n\t        bs = b.slice(bi, bs);\n\t        if (s[i]) s[i] += bs; else s[++i] = bs;\n\t      }\n\t      if ((am = am[0]) === (bm = bm[0])) {\n\t        if (s[i]) s[i] += bm; else s[++i] = bm;\n\t      } else {\n\t        s[++i] = null;\n\t        q.push({\n\t          i: i,\n\t          x: d3_interpolateNumber(am, bm)\n\t        });\n\t      }\n\t      bi = d3_interpolate_numberB.lastIndex;\n\t    }\n\t    if (bi < b.length) {\n\t      bs = b.slice(bi);\n\t      if (s[i]) s[i] += bs; else s[++i] = bs;\n\t    }\n\t    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n\t      return b(t) + \"\";\n\t    }) : function() {\n\t      return b;\n\t    } : (b = q.length, function(t) {\n\t      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    });\n\t  }\n\t  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n\t  d3.interpolate = d3_interpolate;\n\t  function d3_interpolate(a, b) {\n\t    var i = d3.interpolators.length, f;\n\t    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n\t    return f;\n\t  }\n\t  d3.interpolators = [ function(a, b) {\n\t    var t = typeof b;\n\t    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n\t  } ];\n\t  d3.interpolateArray = d3_interpolateArray;\n\t  function d3_interpolateArray(a, b) {\n\t    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n\t    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n\t    for (;i < na; ++i) c[i] = a[i];\n\t    for (;i < nb; ++i) c[i] = b[i];\n\t    return function(t) {\n\t      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n\t      return c;\n\t    };\n\t  }\n\t  var d3_ease_default = function() {\n\t    return d3_identity;\n\t  };\n\t  var d3_ease = d3.map({\n\t    linear: d3_ease_default,\n\t    poly: d3_ease_poly,\n\t    quad: function() {\n\t      return d3_ease_quad;\n\t    },\n\t    cubic: function() {\n\t      return d3_ease_cubic;\n\t    },\n\t    sin: function() {\n\t      return d3_ease_sin;\n\t    },\n\t    exp: function() {\n\t      return d3_ease_exp;\n\t    },\n\t    circle: function() {\n\t      return d3_ease_circle;\n\t    },\n\t    elastic: d3_ease_elastic,\n\t    back: d3_ease_back,\n\t    bounce: function() {\n\t      return d3_ease_bounce;\n\t    }\n\t  });\n\t  var d3_ease_mode = d3.map({\n\t    \"in\": d3_identity,\n\t    out: d3_ease_reverse,\n\t    \"in-out\": d3_ease_reflect,\n\t    \"out-in\": function(f) {\n\t      return d3_ease_reflect(d3_ease_reverse(f));\n\t    }\n\t  });\n\t  d3.ease = function(name) {\n\t    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n\t    t = d3_ease.get(t) || d3_ease_default;\n\t    m = d3_ease_mode.get(m) || d3_identity;\n\t    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n\t  };\n\t  function d3_ease_clamp(f) {\n\t    return function(t) {\n\t      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n\t    };\n\t  }\n\t  function d3_ease_reverse(f) {\n\t    return function(t) {\n\t      return 1 - f(1 - t);\n\t    };\n\t  }\n\t  function d3_ease_reflect(f) {\n\t    return function(t) {\n\t      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n\t    };\n\t  }\n\t  function d3_ease_quad(t) {\n\t    return t * t;\n\t  }\n\t  function d3_ease_cubic(t) {\n\t    return t * t * t;\n\t  }\n\t  function d3_ease_cubicInOut(t) {\n\t    if (t <= 0) return 0;\n\t    if (t >= 1) return 1;\n\t    var t2 = t * t, t3 = t2 * t;\n\t    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n\t  }\n\t  function d3_ease_poly(e) {\n\t    return function(t) {\n\t      return Math.pow(t, e);\n\t    };\n\t  }\n\t  function d3_ease_sin(t) {\n\t    return 1 - Math.cos(t * halfπ);\n\t  }\n\t  function d3_ease_exp(t) {\n\t    return Math.pow(2, 10 * (t - 1));\n\t  }\n\t  function d3_ease_circle(t) {\n\t    return 1 - Math.sqrt(1 - t * t);\n\t  }\n\t  function d3_ease_elastic(a, p) {\n\t    var s;\n\t    if (arguments.length < 2) p = .45;\n\t    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n\t    return function(t) {\n\t      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n\t    };\n\t  }\n\t  function d3_ease_back(s) {\n\t    if (!s) s = 1.70158;\n\t    return function(t) {\n\t      return t * t * ((s + 1) * t - s);\n\t    };\n\t  }\n\t  function d3_ease_bounce(t) {\n\t    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n\t  }\n\t  d3.interpolateHcl = d3_interpolateHcl;\n\t  function d3_interpolateHcl(a, b) {\n\t    a = d3.hcl(a);\n\t    b = d3.hcl(b);\n\t    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n\t    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateHsl = d3_interpolateHsl;\n\t  function d3_interpolateHsl(a, b) {\n\t    a = d3.hsl(a);\n\t    b = d3.hsl(b);\n\t    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n\t    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateLab = d3_interpolateLab;\n\t  function d3_interpolateLab(a, b) {\n\t    a = d3.lab(a);\n\t    b = d3.lab(b);\n\t    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n\t    return function(t) {\n\t      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateRound = d3_interpolateRound;\n\t  function d3_interpolateRound(a, b) {\n\t    b -= a;\n\t    return function(t) {\n\t      return Math.round(a + b * t);\n\t    };\n\t  }\n\t  d3.transform = function(string) {\n\t    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n\t    return (d3.transform = function(string) {\n\t      if (string != null) {\n\t        g.setAttribute(\"transform\", string);\n\t        var t = g.transform.baseVal.consolidate();\n\t      }\n\t      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n\t    })(string);\n\t  };\n\t  function d3_transform(m) {\n\t    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\t    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n\t      r0[0] *= -1;\n\t      r0[1] *= -1;\n\t      kx *= -1;\n\t      kz *= -1;\n\t    }\n\t    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n\t    this.translate = [ m.e, m.f ];\n\t    this.scale = [ kx, ky ];\n\t    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n\t  }\n\t  d3_transform.prototype.toString = function() {\n\t    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n\t  };\n\t  function d3_transformDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1];\n\t  }\n\t  function d3_transformNormalize(a) {\n\t    var k = Math.sqrt(d3_transformDot(a, a));\n\t    if (k) {\n\t      a[0] /= k;\n\t      a[1] /= k;\n\t    }\n\t    return k;\n\t  }\n\t  function d3_transformCombine(a, b, k) {\n\t    a[0] += k * b[0];\n\t    a[1] += k * b[1];\n\t    return a;\n\t  }\n\t  var d3_transformIdentity = {\n\t    a: 1,\n\t    b: 0,\n\t    c: 0,\n\t    d: 1,\n\t    e: 0,\n\t    f: 0\n\t  };\n\t  d3.interpolateTransform = d3_interpolateTransform;\n\t  function d3_interpolateTransform(a, b) {\n\t    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n\t    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n\t      s.push(\"translate(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: 1,\n\t        x: d3_interpolateNumber(ta[0], tb[0])\n\t      }, {\n\t        i: 3,\n\t        x: d3_interpolateNumber(ta[1], tb[1])\n\t      });\n\t    } else if (tb[0] || tb[1]) {\n\t      s.push(\"translate(\" + tb + \")\");\n\t    } else {\n\t      s.push(\"\");\n\t    }\n\t    if (ra != rb) {\n\t      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n\t      q.push({\n\t        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(ra, rb)\n\t      });\n\t    } else if (rb) {\n\t      s.push(s.pop() + \"rotate(\" + rb + \")\");\n\t    }\n\t    if (wa != wb) {\n\t      q.push({\n\t        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(wa, wb)\n\t      });\n\t    } else if (wb) {\n\t      s.push(s.pop() + \"skewX(\" + wb + \")\");\n\t    }\n\t    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n\t      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: n - 4,\n\t        x: d3_interpolateNumber(ka[0], kb[0])\n\t      }, {\n\t        i: n - 2,\n\t        x: d3_interpolateNumber(ka[1], kb[1])\n\t      });\n\t    } else if (kb[0] != 1 || kb[1] != 1) {\n\t      s.push(s.pop() + \"scale(\" + kb + \")\");\n\t    }\n\t    n = q.length;\n\t    return function(t) {\n\t      var i = -1, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  }\n\t  function d3_uninterpolateNumber(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return (x - a) / b;\n\t    };\n\t  }\n\t  function d3_uninterpolateClamp(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return Math.max(0, Math.min(1, (x - a) / b));\n\t    };\n\t  }\n\t  d3.layout = {};\n\t  d3.layout.bundle = function() {\n\t    return function(links) {\n\t      var paths = [], i = -1, n = links.length;\n\t      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n\t      return paths;\n\t    };\n\t  };\n\t  function d3_layout_bundlePath(link) {\n\t    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n\t    while (start !== lca) {\n\t      start = start.parent;\n\t      points.push(start);\n\t    }\n\t    var k = points.length;\n\t    while (end !== lca) {\n\t      points.splice(k, 0, end);\n\t      end = end.parent;\n\t    }\n\t    return points;\n\t  }\n\t  function d3_layout_bundleAncestors(node) {\n\t    var ancestors = [], parent = node.parent;\n\t    while (parent != null) {\n\t      ancestors.push(node);\n\t      node = parent;\n\t      parent = parent.parent;\n\t    }\n\t    ancestors.push(node);\n\t    return ancestors;\n\t  }\n\t  function d3_layout_bundleLeastCommonAncestor(a, b) {\n\t    if (a === b) return a;\n\t    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n\t    while (aNode === bNode) {\n\t      sharedNode = aNode;\n\t      aNode = aNodes.pop();\n\t      bNode = bNodes.pop();\n\t    }\n\t    return sharedNode;\n\t  }\n\t  d3.layout.chord = function() {\n\t    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n\t    function relayout() {\n\t      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n\t      chords = [];\n\t      groups = [];\n\t      k = 0, i = -1;\n\t      while (++i < n) {\n\t        x = 0, j = -1;\n\t        while (++j < n) {\n\t          x += matrix[i][j];\n\t        }\n\t        groupSums.push(x);\n\t        subgroupIndex.push(d3.range(n));\n\t        k += x;\n\t      }\n\t      if (sortGroups) {\n\t        groupIndex.sort(function(a, b) {\n\t          return sortGroups(groupSums[a], groupSums[b]);\n\t        });\n\t      }\n\t      if (sortSubgroups) {\n\t        subgroupIndex.forEach(function(d, i) {\n\t          d.sort(function(a, b) {\n\t            return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t          });\n\t        });\n\t      }\n\t      k = (τ - padding * n) / k;\n\t      x = 0, i = -1;\n\t      while (++i < n) {\n\t        x0 = x, j = -1;\n\t        while (++j < n) {\n\t          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n\t          subgroups[di + \"-\" + dj] = {\n\t            index: di,\n\t            subindex: dj,\n\t            startAngle: a0,\n\t            endAngle: a1,\n\t            value: v\n\t          };\n\t        }\n\t        groups[di] = {\n\t          index: di,\n\t          startAngle: x0,\n\t          endAngle: x,\n\t          value: (x - x0) / k\n\t        };\n\t        x += padding;\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        j = i - 1;\n\t        while (++j < n) {\n\t          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n\t          if (source.value || target.value) {\n\t            chords.push(source.value < target.value ? {\n\t              source: target,\n\t              target: source\n\t            } : {\n\t              source: source,\n\t              target: target\n\t            });\n\t          }\n\t        }\n\t      }\n\t      if (sortChords) resort();\n\t    }\n\t    function resort() {\n\t      chords.sort(function(a, b) {\n\t        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n\t      });\n\t    }\n\t    chord.matrix = function(x) {\n\t      if (!arguments.length) return matrix;\n\t      n = (matrix = x) && matrix.length;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      padding = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortGroups = function(x) {\n\t      if (!arguments.length) return sortGroups;\n\t      sortGroups = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortSubgroups = function(x) {\n\t      if (!arguments.length) return sortSubgroups;\n\t      sortSubgroups = x;\n\t      chords = null;\n\t      return chord;\n\t    };\n\t    chord.sortChords = function(x) {\n\t      if (!arguments.length) return sortChords;\n\t      sortChords = x;\n\t      if (chords) resort();\n\t      return chord;\n\t    };\n\t    chord.chords = function() {\n\t      if (!chords) relayout();\n\t      return chords;\n\t    };\n\t    chord.groups = function() {\n\t      if (!groups) relayout();\n\t      return groups;\n\t    };\n\t    return chord;\n\t  };\n\t  d3.layout.force = function() {\n\t    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n\t    function repulse(node) {\n\t      return function(quad, x1, _, x2) {\n\t        if (quad.point !== node) {\n\t          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n\t          if (dw * dw / theta2 < dn) {\n\t            if (dn < chargeDistance2) {\n\t              var k = quad.charge / dn;\n\t              node.px -= dx * k;\n\t              node.py -= dy * k;\n\t            }\n\t            return true;\n\t          }\n\t          if (quad.point && dn && dn < chargeDistance2) {\n\t            var k = quad.pointCharge / dn;\n\t            node.px -= dx * k;\n\t            node.py -= dy * k;\n\t          }\n\t        }\n\t        return !quad.charge;\n\t      };\n\t    }\n\t    force.tick = function() {\n\t      if ((alpha *= .99) < .005) {\n\t        event.end({\n\t          type: \"end\",\n\t          alpha: alpha = 0\n\t        });\n\t        return true;\n\t      }\n\t      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        s = o.source;\n\t        t = o.target;\n\t        x = t.x - s.x;\n\t        y = t.y - s.y;\n\t        if (l = x * x + y * y) {\n\t          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n\t          x *= l;\n\t          y *= l;\n\t          t.x -= x * (k = s.weight / (t.weight + s.weight));\n\t          t.y -= y * k;\n\t          s.x += x * (k = 1 - k);\n\t          s.y += y * k;\n\t        }\n\t      }\n\t      if (k = alpha * gravity) {\n\t        x = size[0] / 2;\n\t        y = size[1] / 2;\n\t        i = -1;\n\t        if (k) while (++i < n) {\n\t          o = nodes[i];\n\t          o.x += (x - o.x) * k;\n\t          o.y += (y - o.y) * k;\n\t        }\n\t      }\n\t      if (charge) {\n\t        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n\t        i = -1;\n\t        while (++i < n) {\n\t          if (!(o = nodes[i]).fixed) {\n\t            q.visit(repulse(o));\n\t          }\n\t        }\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        o = nodes[i];\n\t        if (o.fixed) {\n\t          o.x = o.px;\n\t          o.y = o.py;\n\t        } else {\n\t          o.x -= (o.px - (o.px = o.x)) * friction;\n\t          o.y -= (o.py - (o.py = o.y)) * friction;\n\t        }\n\t      }\n\t      event.tick({\n\t        type: \"tick\",\n\t        alpha: alpha\n\t      });\n\t    };\n\t    force.nodes = function(x) {\n\t      if (!arguments.length) return nodes;\n\t      nodes = x;\n\t      return force;\n\t    };\n\t    force.links = function(x) {\n\t      if (!arguments.length) return links;\n\t      links = x;\n\t      return force;\n\t    };\n\t    force.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return force;\n\t    };\n\t    force.linkDistance = function(x) {\n\t      if (!arguments.length) return linkDistance;\n\t      linkDistance = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.distance = force.linkDistance;\n\t    force.linkStrength = function(x) {\n\t      if (!arguments.length) return linkStrength;\n\t      linkStrength = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.friction = function(x) {\n\t      if (!arguments.length) return friction;\n\t      friction = +x;\n\t      return force;\n\t    };\n\t    force.charge = function(x) {\n\t      if (!arguments.length) return charge;\n\t      charge = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.chargeDistance = function(x) {\n\t      if (!arguments.length) return Math.sqrt(chargeDistance2);\n\t      chargeDistance2 = x * x;\n\t      return force;\n\t    };\n\t    force.gravity = function(x) {\n\t      if (!arguments.length) return gravity;\n\t      gravity = +x;\n\t      return force;\n\t    };\n\t    force.theta = function(x) {\n\t      if (!arguments.length) return Math.sqrt(theta2);\n\t      theta2 = x * x;\n\t      return force;\n\t    };\n\t    force.alpha = function(x) {\n\t      if (!arguments.length) return alpha;\n\t      x = +x;\n\t      if (alpha) {\n\t        if (x > 0) alpha = x; else alpha = 0;\n\t      } else if (x > 0) {\n\t        event.start({\n\t          type: \"start\",\n\t          alpha: alpha = x\n\t        });\n\t        d3.timer(force.tick);\n\t      }\n\t      return force;\n\t    };\n\t    force.start = function() {\n\t      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n\t      for (i = 0; i < n; ++i) {\n\t        (o = nodes[i]).index = i;\n\t        o.weight = 0;\n\t      }\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        if (typeof o.source == \"number\") o.source = nodes[o.source];\n\t        if (typeof o.target == \"number\") o.target = nodes[o.target];\n\t        ++o.source.weight;\n\t        ++o.target.weight;\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        o = nodes[i];\n\t        if (isNaN(o.x)) o.x = position(\"x\", w);\n\t        if (isNaN(o.y)) o.y = position(\"y\", h);\n\t        if (isNaN(o.px)) o.px = o.x;\n\t        if (isNaN(o.py)) o.py = o.y;\n\t      }\n\t      distances = [];\n\t      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n\t      strengths = [];\n\t      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n\t      charges = [];\n\t      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n\t      function position(dimension, size) {\n\t        if (!neighbors) {\n\t          neighbors = new Array(n);\n\t          for (j = 0; j < n; ++j) {\n\t            neighbors[j] = [];\n\t          }\n\t          for (j = 0; j < m; ++j) {\n\t            var o = links[j];\n\t            neighbors[o.source.index].push(o.target);\n\t            neighbors[o.target.index].push(o.source);\n\t          }\n\t        }\n\t        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n\t        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n\t        return Math.random() * size;\n\t      }\n\t      return force.resume();\n\t    };\n\t    force.resume = function() {\n\t      return force.alpha(.1);\n\t    };\n\t    force.stop = function() {\n\t      return force.alpha(0);\n\t    };\n\t    force.drag = function() {\n\t      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n\t      if (!arguments.length) return drag;\n\t      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n\t    };\n\t    function dragmove(d) {\n\t      d.px = d3.event.x, d.py = d3.event.y;\n\t      force.resume();\n\t    }\n\t    return d3.rebind(force, event, \"on\");\n\t  };\n\t  function d3_layout_forceDragstart(d) {\n\t    d.fixed |= 2;\n\t  }\n\t  function d3_layout_forceDragend(d) {\n\t    d.fixed &= ~6;\n\t  }\n\t  function d3_layout_forceMouseover(d) {\n\t    d.fixed |= 4;\n\t    d.px = d.x, d.py = d.y;\n\t  }\n\t  function d3_layout_forceMouseout(d) {\n\t    d.fixed &= ~4;\n\t  }\n\t  function d3_layout_forceAccumulate(quad, alpha, charges) {\n\t    var cx = 0, cy = 0;\n\t    quad.charge = 0;\n\t    if (!quad.leaf) {\n\t      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n\t      while (++i < n) {\n\t        c = nodes[i];\n\t        if (c == null) continue;\n\t        d3_layout_forceAccumulate(c, alpha, charges);\n\t        quad.charge += c.charge;\n\t        cx += c.charge * c.cx;\n\t        cy += c.charge * c.cy;\n\t      }\n\t    }\n\t    if (quad.point) {\n\t      if (!quad.leaf) {\n\t        quad.point.x += Math.random() - .5;\n\t        quad.point.y += Math.random() - .5;\n\t      }\n\t      var k = alpha * charges[quad.point.index];\n\t      quad.charge += quad.pointCharge = k;\n\t      cx += k * quad.point.x;\n\t      cy += k * quad.point.y;\n\t    }\n\t    quad.cx = cx / quad.charge;\n\t    quad.cy = cy / quad.charge;\n\t  }\n\t  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n\t  d3.layout.hierarchy = function() {\n\t    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n\t    function hierarchy(root) {\n\t      var stack = [ root ], nodes = [], node;\n\t      root.depth = 0;\n\t      while ((node = stack.pop()) != null) {\n\t        nodes.push(node);\n\t        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n\t          var n, childs, child;\n\t          while (--n >= 0) {\n\t            stack.push(child = childs[n]);\n\t            child.parent = node;\n\t            child.depth = node.depth + 1;\n\t          }\n\t          if (value) node.value = 0;\n\t          node.children = childs;\n\t        } else {\n\t          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          delete node.children;\n\t        }\n\t      }\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var childs, parent;\n\t        if (sort && (childs = node.children)) childs.sort(sort);\n\t        if (value && (parent = node.parent)) parent.value += node.value;\n\t      });\n\t      return nodes;\n\t    }\n\t    hierarchy.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.children = function(x) {\n\t      if (!arguments.length) return children;\n\t      children = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.revalue = function(root) {\n\t      if (value) {\n\t        d3_layout_hierarchyVisitBefore(root, function(node) {\n\t          if (node.children) node.value = 0;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, function(node) {\n\t          var parent;\n\t          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          if (parent = node.parent) parent.value += node.value;\n\t        });\n\t      }\n\t      return root;\n\t    };\n\t    return hierarchy;\n\t  };\n\t  function d3_layout_hierarchyRebind(object, hierarchy) {\n\t    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n\t    object.nodes = object;\n\t    object.links = d3_layout_hierarchyLinks;\n\t    return object;\n\t  }\n\t  function d3_layout_hierarchyVisitBefore(node, callback) {\n\t    var nodes = [ node ];\n\t    while ((node = nodes.pop()) != null) {\n\t      callback(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var n, children;\n\t        while (--n >= 0) nodes.push(children[n]);\n\t      }\n\t    }\n\t  }\n\t  function d3_layout_hierarchyVisitAfter(node, callback) {\n\t    var nodes = [ node ], nodes2 = [];\n\t    while ((node = nodes.pop()) != null) {\n\t      nodes2.push(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var i = -1, n, children;\n\t        while (++i < n) nodes.push(children[i]);\n\t      }\n\t    }\n\t    while ((node = nodes2.pop()) != null) {\n\t      callback(node);\n\t    }\n\t  }\n\t  function d3_layout_hierarchyChildren(d) {\n\t    return d.children;\n\t  }\n\t  function d3_layout_hierarchyValue(d) {\n\t    return d.value;\n\t  }\n\t  function d3_layout_hierarchySort(a, b) {\n\t    return b.value - a.value;\n\t  }\n\t  function d3_layout_hierarchyLinks(nodes) {\n\t    return d3.merge(nodes.map(function(parent) {\n\t      return (parent.children || []).map(function(child) {\n\t        return {\n\t          source: parent,\n\t          target: child\n\t        };\n\t      });\n\t    }));\n\t  }\n\t  d3.layout.partition = function() {\n\t    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n\t    function position(node, x, dx, dy) {\n\t      var children = node.children;\n\t      node.x = x;\n\t      node.y = node.depth * dy;\n\t      node.dx = dx;\n\t      node.dy = dy;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n, c, d;\n\t        dx = node.value ? dx / node.value : 0;\n\t        while (++i < n) {\n\t          position(c = children[i], x, d = c.value * dx, dy);\n\t          x += d;\n\t        }\n\t      }\n\t    }\n\t    function depth(node) {\n\t      var children = node.children, d = 0;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n;\n\t        while (++i < n) d = Math.max(d, depth(children[i]));\n\t      }\n\t      return 1 + d;\n\t    }\n\t    function partition(d, i) {\n\t      var nodes = hierarchy.call(this, d, i);\n\t      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n\t      return nodes;\n\t    }\n\t    partition.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return partition;\n\t    };\n\t    return d3_layout_hierarchyRebind(partition, hierarchy);\n\t  };\n\t  d3.layout.pie = function() {\n\t    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n\t    function pie(data) {\n\t      var n = data.length, values = data.map(function(d, i) {\n\t        return +value.call(pie, d, i);\n\t      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), k = (da - n * pa) / d3.sum(values), index = d3.range(n), arcs = [], v;\n\t      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n\t        return values[j] - values[i];\n\t      } : function(i, j) {\n\t        return sort(data[i], data[j]);\n\t      });\n\t      index.forEach(function(i) {\n\t        arcs[i] = {\n\t          data: data[i],\n\t          value: v = values[i],\n\t          startAngle: a,\n\t          endAngle: a += v * k + pa,\n\t          padAngle: p\n\t        };\n\t      });\n\t      return arcs;\n\t    }\n\t    pie.value = function(_) {\n\t      if (!arguments.length) return value;\n\t      value = _;\n\t      return pie;\n\t    };\n\t    pie.sort = function(_) {\n\t      if (!arguments.length) return sort;\n\t      sort = _;\n\t      return pie;\n\t    };\n\t    pie.startAngle = function(_) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = _;\n\t      return pie;\n\t    };\n\t    pie.endAngle = function(_) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = _;\n\t      return pie;\n\t    };\n\t    pie.padAngle = function(_) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = _;\n\t      return pie;\n\t    };\n\t    return pie;\n\t  };\n\t  var d3_layout_pieSortByValue = {};\n\t  d3.layout.stack = function() {\n\t    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n\t    function stack(data, index) {\n\t      if (!(n = data.length)) return data;\n\t      var series = data.map(function(d, i) {\n\t        return values.call(stack, d, i);\n\t      });\n\t      var points = series.map(function(d) {\n\t        return d.map(function(v, i) {\n\t          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n\t        });\n\t      });\n\t      var orders = order.call(stack, points, index);\n\t      series = d3.permute(series, orders);\n\t      points = d3.permute(points, orders);\n\t      var offsets = offset.call(stack, points, index);\n\t      var m = series[0].length, n, i, j, o;\n\t      for (j = 0; j < m; ++j) {\n\t        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\t        for (i = 1; i < n; ++i) {\n\t          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t    stack.values = function(x) {\n\t      if (!arguments.length) return values;\n\t      values = x;\n\t      return stack;\n\t    };\n\t    stack.order = function(x) {\n\t      if (!arguments.length) return order;\n\t      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n\t      return stack;\n\t    };\n\t    stack.offset = function(x) {\n\t      if (!arguments.length) return offset;\n\t      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n\t      return stack;\n\t    };\n\t    stack.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      return stack;\n\t    };\n\t    stack.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      return stack;\n\t    };\n\t    stack.out = function(z) {\n\t      if (!arguments.length) return out;\n\t      out = z;\n\t      return stack;\n\t    };\n\t    return stack;\n\t  };\n\t  function d3_layout_stackX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_layout_stackY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_layout_stackOut(d, y0, y) {\n\t    d.y0 = y0;\n\t    d.y = y;\n\t  }\n\t  var d3_layout_stackOrders = d3.map({\n\t    \"inside-out\": function(data) {\n\t      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n\t        return max[a] - max[b];\n\t      }), top = 0, bottom = 0, tops = [], bottoms = [];\n\t      for (i = 0; i < n; ++i) {\n\t        j = index[i];\n\t        if (top < bottom) {\n\t          top += sums[j];\n\t          tops.push(j);\n\t        } else {\n\t          bottom += sums[j];\n\t          bottoms.push(j);\n\t        }\n\t      }\n\t      return bottoms.reverse().concat(tops);\n\t    },\n\t    reverse: function(data) {\n\t      return d3.range(data.length).reverse();\n\t    },\n\t    \"default\": d3_layout_stackOrderDefault\n\t  });\n\t  var d3_layout_stackOffsets = d3.map({\n\t    silhouette: function(data) {\n\t      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o > max) max = o;\n\t        sums.push(o);\n\t      }\n\t      for (j = 0; j < m; ++j) {\n\t        y0[j] = (max - sums[j]) / 2;\n\t      }\n\t      return y0;\n\t    },\n\t    wiggle: function(data) {\n\t      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n\t      y0[0] = o = o0 = 0;\n\t      for (j = 1; j < m; ++j) {\n\t        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n\t        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n\t          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n\t            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n\t          }\n\t          s2 += s3 * data[i][j][1];\n\t        }\n\t        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n\t        if (o < o0) o0 = o;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] -= o0;\n\t      return y0;\n\t    },\n\t    expand: function(data) {\n\t      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] = 0;\n\t      return y0;\n\t    },\n\t    zero: d3_layout_stackOffsetZero\n\t  });\n\t  function d3_layout_stackOrderDefault(data) {\n\t    return d3.range(data.length);\n\t  }\n\t  function d3_layout_stackOffsetZero(data) {\n\t    var j = -1, m = data[0].length, y0 = [];\n\t    while (++j < m) y0[j] = 0;\n\t    return y0;\n\t  }\n\t  function d3_layout_stackMaxIndex(array) {\n\t    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n\t    for (;i < n; ++i) {\n\t      if ((k = array[i][1]) > v) {\n\t        j = i;\n\t        v = k;\n\t      }\n\t    }\n\t    return j;\n\t  }\n\t  function d3_layout_stackReduceSum(d) {\n\t    return d.reduce(d3_layout_stackSum, 0);\n\t  }\n\t  function d3_layout_stackSum(p, d) {\n\t    return p + d[1];\n\t  }\n\t  d3.layout.histogram = function() {\n\t    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n\t    function histogram(data, i) {\n\t      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n\t      while (++i < m) {\n\t        bin = bins[i] = [];\n\t        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n\t        bin.y = 0;\n\t      }\n\t      if (m > 0) {\n\t        i = -1;\n\t        while (++i < n) {\n\t          x = values[i];\n\t          if (x >= range[0] && x <= range[1]) {\n\t            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n\t            bin.y += k;\n\t            bin.push(data[i]);\n\t          }\n\t        }\n\t      }\n\t      return bins;\n\t    }\n\t    histogram.value = function(x) {\n\t      if (!arguments.length) return valuer;\n\t      valuer = x;\n\t      return histogram;\n\t    };\n\t    histogram.range = function(x) {\n\t      if (!arguments.length) return ranger;\n\t      ranger = d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.bins = function(x) {\n\t      if (!arguments.length) return binner;\n\t      binner = typeof x === \"number\" ? function(range) {\n\t        return d3_layout_histogramBinFixed(range, x);\n\t      } : d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.frequency = function(x) {\n\t      if (!arguments.length) return frequency;\n\t      frequency = !!x;\n\t      return histogram;\n\t    };\n\t    return histogram;\n\t  };\n\t  function d3_layout_histogramBinSturges(range, values) {\n\t    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n\t  }\n\t  function d3_layout_histogramBinFixed(range, n) {\n\t    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n\t    while (++x <= n) f[x] = m * x + b;\n\t    return f;\n\t  }\n\t  function d3_layout_histogramRange(values) {\n\t    return [ d3.min(values), d3.max(values) ];\n\t  }\n\t  d3.layout.pack = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n\t    function pack(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n\t        return radius;\n\t      };\n\t      root.x = root.y = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(d) {\n\t        d.r = +r(d.value);\n\t      });\n\t      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t      if (padding) {\n\t        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r += dr;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r -= dr;\n\t        });\n\t      }\n\t      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n\t      return nodes;\n\t    }\n\t    pack.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _;\n\t      return pack;\n\t    };\n\t    pack.radius = function(_) {\n\t      if (!arguments.length) return radius;\n\t      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n\t      return pack;\n\t    };\n\t    pack.padding = function(_) {\n\t      if (!arguments.length) return padding;\n\t      padding = +_;\n\t      return pack;\n\t    };\n\t    return d3_layout_hierarchyRebind(pack, hierarchy);\n\t  };\n\t  function d3_layout_packSort(a, b) {\n\t    return a.value - b.value;\n\t  }\n\t  function d3_layout_packInsert(a, b) {\n\t    var c = a._pack_next;\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t    b._pack_next = c;\n\t    c._pack_prev = b;\n\t  }\n\t  function d3_layout_packSplice(a, b) {\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t  }\n\t  function d3_layout_packIntersects(a, b) {\n\t    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n\t    return .999 * dr * dr > dx * dx + dy * dy;\n\t  }\n\t  function d3_layout_packSiblings(node) {\n\t    if (!(nodes = node.children) || !(n = nodes.length)) return;\n\t    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n\t    function bound(node) {\n\t      xMin = Math.min(node.x - node.r, xMin);\n\t      xMax = Math.max(node.x + node.r, xMax);\n\t      yMin = Math.min(node.y - node.r, yMin);\n\t      yMax = Math.max(node.y + node.r, yMax);\n\t    }\n\t    nodes.forEach(d3_layout_packLink);\n\t    a = nodes[0];\n\t    a.x = -a.r;\n\t    a.y = 0;\n\t    bound(a);\n\t    if (n > 1) {\n\t      b = nodes[1];\n\t      b.x = b.r;\n\t      b.y = 0;\n\t      bound(b);\n\t      if (n > 2) {\n\t        c = nodes[2];\n\t        d3_layout_packPlace(a, b, c);\n\t        bound(c);\n\t        d3_layout_packInsert(a, c);\n\t        a._pack_prev = c;\n\t        d3_layout_packInsert(c, b);\n\t        b = a._pack_next;\n\t        for (i = 3; i < n; i++) {\n\t          d3_layout_packPlace(a, b, c = nodes[i]);\n\t          var isect = 0, s1 = 1, s2 = 1;\n\t          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n\t            if (d3_layout_packIntersects(j, c)) {\n\t              isect = 1;\n\t              break;\n\t            }\n\t          }\n\t          if (isect == 1) {\n\t            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n\t              if (d3_layout_packIntersects(k, c)) {\n\t                break;\n\t              }\n\t            }\n\t          }\n\t          if (isect) {\n\t            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n\t            i--;\n\t          } else {\n\t            d3_layout_packInsert(a, c);\n\t            b = c;\n\t            bound(c);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n\t    for (i = 0; i < n; i++) {\n\t      c = nodes[i];\n\t      c.x -= cx;\n\t      c.y -= cy;\n\t      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n\t    }\n\t    node.r = cr;\n\t    nodes.forEach(d3_layout_packUnlink);\n\t  }\n\t  function d3_layout_packLink(node) {\n\t    node._pack_next = node._pack_prev = node;\n\t  }\n\t  function d3_layout_packUnlink(node) {\n\t    delete node._pack_next;\n\t    delete node._pack_prev;\n\t  }\n\t  function d3_layout_packTransform(node, x, y, k) {\n\t    var children = node.children;\n\t    node.x = x += k * node.x;\n\t    node.y = y += k * node.y;\n\t    node.r *= k;\n\t    if (children) {\n\t      var i = -1, n = children.length;\n\t      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n\t    }\n\t  }\n\t  function d3_layout_packPlace(a, b, c) {\n\t    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n\t    if (db && (dx || dy)) {\n\t      var da = b.r + c.r, dc = dx * dx + dy * dy;\n\t      da *= da;\n\t      db *= db;\n\t      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t      c.x = a.x + x * dx + y * dy;\n\t      c.y = a.y + x * dy - y * dx;\n\t    } else {\n\t      c.x = a.x + db;\n\t      c.y = a.y;\n\t    }\n\t  }\n\t  d3.layout.tree = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n\t    function tree(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n\t      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n\t      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n\t      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n\t        var left = root0, right = root0, bottom = root0;\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          if (node.x < left.x) left = node;\n\t          if (node.x > right.x) right = node;\n\t          if (node.depth > bottom.depth) bottom = node;\n\t        });\n\t        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          node.x = (node.x + tx) * kx;\n\t          node.y = node.depth * ky;\n\t        });\n\t      }\n\t      return nodes;\n\t    }\n\t    function wrapTree(root0) {\n\t      var root1 = {\n\t        A: null,\n\t        children: [ root0 ]\n\t      }, queue = [ root1 ], node1;\n\t      while ((node1 = queue.pop()) != null) {\n\t        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n\t          queue.push((children[i] = child = {\n\t            _: children[i],\n\t            parent: node1,\n\t            children: (child = children[i].children) && child.slice() || [],\n\t            A: null,\n\t            a: null,\n\t            z: 0,\n\t            m: 0,\n\t            c: 0,\n\t            s: 0,\n\t            t: null,\n\t            i: i\n\t          }).a = child);\n\t        }\n\t      }\n\t      return root1.children[0];\n\t    }\n\t    function firstWalk(v) {\n\t      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n\t      if (children.length) {\n\t        d3_layout_treeShift(v);\n\t        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t        if (w) {\n\t          v.z = w.z + separation(v._, w._);\n\t          v.m = v.z - midpoint;\n\t        } else {\n\t          v.z = midpoint;\n\t        }\n\t      } else if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t      }\n\t      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t    }\n\t    function secondWalk(v) {\n\t      v._.x = v.z + v.parent.m;\n\t      v.m += v.parent.m;\n\t    }\n\t    function apportion(v, w, ancestor) {\n\t      if (w) {\n\t        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n\t        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n\t          vom = d3_layout_treeLeft(vom);\n\t          vop = d3_layout_treeRight(vop);\n\t          vop.a = v;\n\t          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t          if (shift > 0) {\n\t            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n\t            sip += shift;\n\t            sop += shift;\n\t          }\n\t          sim += vim.m;\n\t          sip += vip.m;\n\t          som += vom.m;\n\t          sop += vop.m;\n\t        }\n\t        if (vim && !d3_layout_treeRight(vop)) {\n\t          vop.t = vim;\n\t          vop.m += sim - sop;\n\t        }\n\t        if (vip && !d3_layout_treeLeft(vom)) {\n\t          vom.t = vip;\n\t          vom.m += sip - som;\n\t          ancestor = v;\n\t        }\n\t      }\n\t      return ancestor;\n\t    }\n\t    function sizeNode(node) {\n\t      node.x *= size[0];\n\t      node.y = node.depth * size[1];\n\t    }\n\t    tree.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return tree;\n\t    };\n\t    tree.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null ? sizeNode : null;\n\t      return tree;\n\t    };\n\t    tree.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) == null ? null : sizeNode;\n\t      return tree;\n\t    };\n\t    return d3_layout_hierarchyRebind(tree, hierarchy);\n\t  };\n\t  function d3_layout_treeSeparation(a, b) {\n\t    return a.parent == b.parent ? 1 : 2;\n\t  }\n\t  function d3_layout_treeLeft(v) {\n\t    var children = v.children;\n\t    return children.length ? children[0] : v.t;\n\t  }\n\t  function d3_layout_treeRight(v) {\n\t    var children = v.children, n;\n\t    return (n = children.length) ? children[n - 1] : v.t;\n\t  }\n\t  function d3_layout_treeMove(wm, wp, shift) {\n\t    var change = shift / (wp.i - wm.i);\n\t    wp.c -= change;\n\t    wp.s += shift;\n\t    wm.c += change;\n\t    wp.z += shift;\n\t    wp.m += shift;\n\t  }\n\t  function d3_layout_treeShift(v) {\n\t    var shift = 0, change = 0, children = v.children, i = children.length, w;\n\t    while (--i >= 0) {\n\t      w = children[i];\n\t      w.z += shift;\n\t      w.m += shift;\n\t      shift += w.s + (change += w.c);\n\t    }\n\t  }\n\t  function d3_layout_treeAncestor(vim, v, ancestor) {\n\t    return vim.a.parent === v.parent ? vim.a : ancestor;\n\t  }\n\t  d3.layout.cluster = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n\t    function cluster(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var children = node.children;\n\t        if (children && children.length) {\n\t          node.x = d3_layout_clusterX(children);\n\t          node.y = d3_layout_clusterY(children);\n\t        } else {\n\t          node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t          node.y = 0;\n\t          previousNode = node;\n\t        }\n\t      });\n\t      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n\t      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n\t        node.x = (node.x - root.x) * size[0];\n\t        node.y = (root.y - node.y) * size[1];\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * size[0];\n\t        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n\t      });\n\t      return nodes;\n\t    }\n\t    cluster.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return cluster;\n\t    };\n\t    cluster.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null;\n\t      return cluster;\n\t    };\n\t    cluster.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) != null;\n\t      return cluster;\n\t    };\n\t    return d3_layout_hierarchyRebind(cluster, hierarchy);\n\t  };\n\t  function d3_layout_clusterY(children) {\n\t    return 1 + d3.max(children, function(child) {\n\t      return child.y;\n\t    });\n\t  }\n\t  function d3_layout_clusterX(children) {\n\t    return children.reduce(function(x, child) {\n\t      return x + child.x;\n\t    }, 0) / children.length;\n\t  }\n\t  function d3_layout_clusterLeft(node) {\n\t    var children = node.children;\n\t    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n\t  }\n\t  function d3_layout_clusterRight(node) {\n\t    var children = node.children, n;\n\t    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n\t  }\n\t  d3.layout.treemap = function() {\n\t    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n\t    function scale(children, k) {\n\t      var i = -1, n = children.length, child, area;\n\t      while (++i < n) {\n\t        area = (child = children[i]).value * (k < 0 ? 0 : k);\n\t        child.area = isNaN(area) || area <= 0 ? 0 : area;\n\t      }\n\t    }\n\t    function squarify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while ((n = remaining.length) > 0) {\n\t          row.push(child = remaining[n - 1]);\n\t          row.area += child.area;\n\t          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n\t            remaining.pop();\n\t            best = score;\n\t          } else {\n\t            row.area -= row.pop().area;\n\t            position(row, u, rect, false);\n\t            u = Math.min(rect.dx, rect.dy);\n\t            row.length = row.area = 0;\n\t            best = Infinity;\n\t          }\n\t        }\n\t        if (row.length) {\n\t          position(row, u, rect, true);\n\t          row.length = row.area = 0;\n\t        }\n\t        children.forEach(squarify);\n\t      }\n\t    }\n\t    function stickify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), remaining = children.slice(), child, row = [];\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while (child = remaining.pop()) {\n\t          row.push(child);\n\t          row.area += child.area;\n\t          if (child.z != null) {\n\t            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n\t            row.length = row.area = 0;\n\t          }\n\t        }\n\t        children.forEach(stickify);\n\t      }\n\t    }\n\t    function worst(row, u) {\n\t      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n\t      while (++i < n) {\n\t        if (!(r = row[i].area)) continue;\n\t        if (r < rmin) rmin = r;\n\t        if (r > rmax) rmax = r;\n\t      }\n\t      s *= s;\n\t      u *= u;\n\t      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n\t    }\n\t    function position(row, u, rect, flush) {\n\t      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n\t      if (u == rect.dx) {\n\t        if (flush || v > rect.dy) v = rect.dy;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dy = v;\n\t          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = true;\n\t        o.dx += rect.x + rect.dx - x;\n\t        rect.y += v;\n\t        rect.dy -= v;\n\t      } else {\n\t        if (flush || v > rect.dx) v = rect.dx;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dx = v;\n\t          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = false;\n\t        o.dy += rect.y + rect.dy - y;\n\t        rect.x += v;\n\t        rect.dx -= v;\n\t      }\n\t    }\n\t    function treemap(d) {\n\t      var nodes = stickies || hierarchy(d), root = nodes[0];\n\t      root.x = 0;\n\t      root.y = 0;\n\t      root.dx = size[0];\n\t      root.dy = size[1];\n\t      if (stickies) hierarchy.revalue(root);\n\t      scale([ root ], root.dx * root.dy / root.value);\n\t      (stickies ? stickify : squarify)(root);\n\t      if (sticky) stickies = nodes;\n\t      return nodes;\n\t    }\n\t    treemap.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return treemap;\n\t    };\n\t    treemap.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      function padFunction(node) {\n\t        var p = x.call(treemap, node, node.depth);\n\t        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n\t      }\n\t      function padConstant(node) {\n\t        return d3_layout_treemapPad(node, x);\n\t      }\n\t      var type;\n\t      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n\t      padConstant) : padConstant;\n\t      return treemap;\n\t    };\n\t    treemap.round = function(x) {\n\t      if (!arguments.length) return round != Number;\n\t      round = x ? Math.round : Number;\n\t      return treemap;\n\t    };\n\t    treemap.sticky = function(x) {\n\t      if (!arguments.length) return sticky;\n\t      sticky = x;\n\t      stickies = null;\n\t      return treemap;\n\t    };\n\t    treemap.ratio = function(x) {\n\t      if (!arguments.length) return ratio;\n\t      ratio = x;\n\t      return treemap;\n\t    };\n\t    treemap.mode = function(x) {\n\t      if (!arguments.length) return mode;\n\t      mode = x + \"\";\n\t      return treemap;\n\t    };\n\t    return d3_layout_hierarchyRebind(treemap, hierarchy);\n\t  };\n\t  function d3_layout_treemapPadNull(node) {\n\t    return {\n\t      x: node.x,\n\t      y: node.y,\n\t      dx: node.dx,\n\t      dy: node.dy\n\t    };\n\t  }\n\t  function d3_layout_treemapPad(node, padding) {\n\t    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n\t    if (dx < 0) {\n\t      x += dx / 2;\n\t      dx = 0;\n\t    }\n\t    if (dy < 0) {\n\t      y += dy / 2;\n\t      dy = 0;\n\t    }\n\t    return {\n\t      x: x,\n\t      y: y,\n\t      dx: dx,\n\t      dy: dy\n\t    };\n\t  }\n\t  d3.random = {\n\t    normal: function(µ, σ) {\n\t      var n = arguments.length;\n\t      if (n < 2) σ = 1;\n\t      if (n < 1) µ = 0;\n\t      return function() {\n\t        var x, y, r;\n\t        do {\n\t          x = Math.random() * 2 - 1;\n\t          y = Math.random() * 2 - 1;\n\t          r = x * x + y * y;\n\t        } while (!r || r > 1);\n\t        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n\t      };\n\t    },\n\t    logNormal: function() {\n\t      var random = d3.random.normal.apply(d3, arguments);\n\t      return function() {\n\t        return Math.exp(random());\n\t      };\n\t    },\n\t    bates: function(m) {\n\t      var random = d3.random.irwinHall(m);\n\t      return function() {\n\t        return random() / m;\n\t      };\n\t    },\n\t    irwinHall: function(m) {\n\t      return function() {\n\t        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n\t        return s;\n\t      };\n\t    }\n\t  };\n\t  d3.scale = {};\n\t  function d3_scaleExtent(domain) {\n\t    var start = domain[0], stop = domain[domain.length - 1];\n\t    return start < stop ? [ start, stop ] : [ stop, start ];\n\t  }\n\t  function d3_scaleRange(scale) {\n\t    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n\t  }\n\t  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n\t    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n\t    return function(x) {\n\t      return i(u(x));\n\t    };\n\t  }\n\t  function d3_scale_nice(domain, nice) {\n\t    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n\t    if (x1 < x0) {\n\t      dx = i0, i0 = i1, i1 = dx;\n\t      dx = x0, x0 = x1, x1 = dx;\n\t    }\n\t    domain[i0] = nice.floor(x0);\n\t    domain[i1] = nice.ceil(x1);\n\t    return domain;\n\t  }\n\t  function d3_scale_niceStep(step) {\n\t    return step ? {\n\t      floor: function(x) {\n\t        return Math.floor(x / step) * step;\n\t      },\n\t      ceil: function(x) {\n\t        return Math.ceil(x / step) * step;\n\t      }\n\t    } : d3_scale_niceIdentity;\n\t  }\n\t  var d3_scale_niceIdentity = {\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n\t    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n\t    if (domain[k] < domain[0]) {\n\t      domain = domain.slice().reverse();\n\t      range = range.slice().reverse();\n\t    }\n\t    while (++j <= k) {\n\t      u.push(uninterpolate(domain[j - 1], domain[j]));\n\t      i.push(interpolate(range[j - 1], range[j]));\n\t    }\n\t    return function(x) {\n\t      var j = d3.bisect(domain, x, 1, k) - 1;\n\t      return i[j](u[j](x));\n\t    };\n\t  }\n\t  d3.scale.linear = function() {\n\t    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n\t  };\n\t  function d3_scale_linear(domain, range, interpolate, clamp) {\n\t    var output, input;\n\t    function rescale() {\n\t      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n\t      output = linear(domain, range, uninterpolate, interpolate);\n\t      input = linear(range, domain, uninterpolate, d3_interpolate);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      return output(x);\n\t    }\n\t    scale.invert = function(y) {\n\t      return input(y);\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(Number);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.rangeRound = function(x) {\n\t      return scale.range(x).interpolate(d3_interpolateRound);\n\t    };\n\t    scale.clamp = function(x) {\n\t      if (!arguments.length) return clamp;\n\t      clamp = x;\n\t      return rescale();\n\t    };\n\t    scale.interpolate = function(x) {\n\t      if (!arguments.length) return interpolate;\n\t      interpolate = x;\n\t      return rescale();\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      d3_scale_linearNice(domain, m);\n\t      return rescale();\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_linear(domain, range, interpolate, clamp);\n\t    };\n\t    return rescale();\n\t  }\n\t  function d3_scale_linearRebind(scale, linear) {\n\t    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n\t  }\n\t  function d3_scale_linearNice(domain, m) {\n\t    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t  }\n\t  function d3_scale_linearTickRange(domain, m) {\n\t    if (m == null) m = 10;\n\t    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n\t    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n\t    extent[0] = Math.ceil(extent[0] / step) * step;\n\t    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n\t    extent[2] = step;\n\t    return extent;\n\t  }\n\t  function d3_scale_linearTicks(domain, m) {\n\t    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n\t  }\n\t  function d3_scale_linearTickFormat(domain, m, format) {\n\t    var range = d3_scale_linearTickRange(domain, m);\n\t    if (format) {\n\t      var match = d3_format_re.exec(format);\n\t      match.shift();\n\t      if (match[8] === \"s\") {\n\t        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n\t        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n\t        match[8] = \"f\";\n\t        format = d3.format(match.join(\"\"));\n\t        return function(d) {\n\t          return format(prefix.scale(d)) + prefix.symbol;\n\t        };\n\t      }\n\t      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n\t      format = match.join(\"\");\n\t    } else {\n\t      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n\t    }\n\t    return d3.format(format);\n\t  }\n\t  var d3_scale_linearFormatSignificant = {\n\t    s: 1,\n\t    g: 1,\n\t    p: 1,\n\t    r: 1,\n\t    e: 1\n\t  };\n\t  function d3_scale_linearPrecision(value) {\n\t    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n\t  }\n\t  function d3_scale_linearFormatPrecision(type, range) {\n\t    var p = d3_scale_linearPrecision(range[2]);\n\t    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n\t  }\n\t  d3.scale.log = function() {\n\t    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n\t  };\n\t  function d3_scale_log(linear, base, positive, domain) {\n\t    function log(x) {\n\t      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n\t    }\n\t    function pow(x) {\n\t      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n\t    }\n\t    function scale(x) {\n\t      return linear(log(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return pow(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      positive = x[0] >= 0;\n\t      linear.domain((domain = x.map(Number)).map(log));\n\t      return scale;\n\t    };\n\t    scale.base = function(_) {\n\t      if (!arguments.length) return base;\n\t      base = +_;\n\t      linear.domain(domain.map(log));\n\t      return scale;\n\t    };\n\t    scale.nice = function() {\n\t      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n\t      linear.domain(niced);\n\t      domain = niced.map(pow);\n\t      return scale;\n\t    };\n\t    scale.ticks = function() {\n\t      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n\t      if (isFinite(j - i)) {\n\t        if (positive) {\n\t          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n\t          ticks.push(pow(i));\n\t        } else {\n\t          ticks.push(pow(i));\n\t          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n\t        }\n\t        for (i = 0; ticks[i] < u; i++) {}\n\t        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\t        ticks = ticks.slice(i, j);\n\t      }\n\t      return ticks;\n\t    };\n\t    scale.tickFormat = function(n, format) {\n\t      if (!arguments.length) return d3_scale_logFormat;\n\t      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n\t      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n\t      Math.floor), e;\n\t      return function(d) {\n\t        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n\t      };\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_log(linear.copy(), base, positive, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n\t    floor: function(x) {\n\t      return -Math.ceil(-x);\n\t    },\n\t    ceil: function(x) {\n\t      return -Math.floor(-x);\n\t    }\n\t  };\n\t  d3.scale.pow = function() {\n\t    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_pow(linear, exponent, domain) {\n\t    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n\t    function scale(x) {\n\t      return linear(powp(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return powb(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      linear.domain((domain = x.map(Number)).map(powp));\n\t      return scale;\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      return scale.domain(d3_scale_linearNice(domain, m));\n\t    };\n\t    scale.exponent = function(x) {\n\t      if (!arguments.length) return exponent;\n\t      powp = d3_scale_powPow(exponent = x);\n\t      powb = d3_scale_powPow(1 / exponent);\n\t      linear.domain(domain.map(powp));\n\t      return scale;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_pow(linear.copy(), exponent, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_scale_powPow(e) {\n\t    return function(x) {\n\t      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n\t    };\n\t  }\n\t  d3.scale.sqrt = function() {\n\t    return d3.scale.pow().exponent(.5);\n\t  };\n\t  d3.scale.ordinal = function() {\n\t    return d3_scale_ordinal([], {\n\t      t: \"range\",\n\t      a: [ [] ]\n\t    });\n\t  };\n\t  function d3_scale_ordinal(domain, ranger) {\n\t    var index, range, rangeBand;\n\t    function scale(x) {\n\t      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n\t    }\n\t    function steps(start, step) {\n\t      return d3.range(domain.length).map(function(i) {\n\t        return start + step * i;\n\t      });\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = [];\n\t      index = new d3_Map();\n\t      var i = -1, n = x.length, xi;\n\t      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n\t      return scale[ranger.t].apply(scale, ranger.a);\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"range\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangePoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n\t      0) : (stop - start) / (domain.length - 1 + padding);\n\t      range = steps(start + step * padding / 2, step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangePoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundPoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n\t      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n\t      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangeRoundPoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n\t      range = steps(start + step * outerPadding, step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = step * (1 - padding);\n\t      ranger = {\n\t        t: \"rangeBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n\t      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = Math.round(step * (1 - padding));\n\t      ranger = {\n\t        t: \"rangeRoundBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBand = function() {\n\t      return rangeBand;\n\t    };\n\t    scale.rangeExtent = function() {\n\t      return d3_scaleExtent(ranger.a[0]);\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_ordinal(domain, ranger);\n\t    };\n\t    return scale.domain(domain);\n\t  }\n\t  d3.scale.category10 = function() {\n\t    return d3.scale.ordinal().range(d3_category10);\n\t  };\n\t  d3.scale.category20 = function() {\n\t    return d3.scale.ordinal().range(d3_category20);\n\t  };\n\t  d3.scale.category20b = function() {\n\t    return d3.scale.ordinal().range(d3_category20b);\n\t  };\n\t  d3.scale.category20c = function() {\n\t    return d3.scale.ordinal().range(d3_category20c);\n\t  };\n\t  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n\t  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n\t  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n\t  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n\t  d3.scale.quantile = function() {\n\t    return d3_scale_quantile([], []);\n\t  };\n\t  function d3_scale_quantile(domain, range) {\n\t    var thresholds;\n\t    function rescale() {\n\t      var k = 0, q = range.length;\n\t      thresholds = [];\n\t      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.quantiles = function() {\n\t      return thresholds;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantile(domain, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.quantize = function() {\n\t    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_quantize(x0, x1, range) {\n\t    var kx, i;\n\t    function scale(x) {\n\t      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n\t    }\n\t    function rescale() {\n\t      kx = range.length / (x1 - x0);\n\t      i = range.length - 1;\n\t      return scale;\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return [ x0, x1 ];\n\t      x0 = +x[0];\n\t      x1 = +x[x.length - 1];\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      y = y < 0 ? NaN : y / kx + x0;\n\t      return [ y, y + 1 / kx ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantize(x0, x1, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.threshold = function() {\n\t    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n\t  };\n\t  function d3_scale_threshold(domain, range) {\n\t    function scale(x) {\n\t      if (x <= x) return range[d3.bisect(domain, x)];\n\t    }\n\t    scale.domain = function(_) {\n\t      if (!arguments.length) return domain;\n\t      domain = _;\n\t      return scale;\n\t    };\n\t    scale.range = function(_) {\n\t      if (!arguments.length) return range;\n\t      range = _;\n\t      return scale;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return [ domain[y - 1], domain[y] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_threshold(domain, range);\n\t    };\n\t    return scale;\n\t  }\n\t  d3.scale.identity = function() {\n\t    return d3_scale_identity([ 0, 1 ]);\n\t  };\n\t  function d3_scale_identity(domain) {\n\t    function identity(x) {\n\t      return +x;\n\t    }\n\t    identity.invert = identity;\n\t    identity.domain = identity.range = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(identity);\n\t      return identity;\n\t    };\n\t    identity.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    identity.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    identity.copy = function() {\n\t      return d3_scale_identity(domain);\n\t    };\n\t    return identity;\n\t  }\n\t  d3.svg = {};\n\t  function d3_zero() {\n\t    return 0;\n\t  }\n\t  d3.svg.arc = function() {\n\t    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n\t    function arc() {\n\t      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n\t      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n\t      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n\t      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n\t      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n\t        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n\t        if (!cw) p1 *= -1;\n\t        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n\t        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n\t      }\n\t      if (r1) {\n\t        x0 = r1 * Math.cos(a0 + p1);\n\t        y0 = r1 * Math.sin(a0 + p1);\n\t        x1 = r1 * Math.cos(a1 - p1);\n\t        y1 = r1 * Math.sin(a1 - p1);\n\t        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n\t        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n\t          var h1 = (a0 + a1) / 2;\n\t          x0 = r1 * Math.cos(h1);\n\t          y0 = r1 * Math.sin(h1);\n\t          x1 = y1 = null;\n\t        }\n\t      } else {\n\t        x0 = y0 = 0;\n\t      }\n\t      if (r0) {\n\t        x2 = r0 * Math.cos(a1 - p0);\n\t        y2 = r0 * Math.sin(a1 - p0);\n\t        x3 = r0 * Math.cos(a0 + p0);\n\t        y3 = r0 * Math.sin(a0 + p0);\n\t        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n\t        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n\t          var h0 = (a0 + a1) / 2;\n\t          x2 = r0 * Math.cos(h0);\n\t          y2 = r0 * Math.sin(h0);\n\t          x3 = y3 = null;\n\t        }\n\t      } else {\n\t        x2 = y2 = 0;\n\t      }\n\t      if ((rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n\t        cr = r0 < r1 ^ cw ? 0 : 1;\n\t        var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t        if (x1 != null) {\n\t          var rc1 = Math.min(rc, (r1 - lc) / (kc + 1)), t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n\t          if (rc === rc1) {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n\t          } else {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n\t          }\n\t        } else {\n\t          path.push(\"M\", x0, \",\", y0);\n\t        }\n\t        if (x3 != null) {\n\t          var rc0 = Math.min(rc, (r0 - lc) / (kc - 1)), t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n\t          if (rc === rc0) {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          } else {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          }\n\t        } else {\n\t          path.push(\"L\", x2, \",\", y2);\n\t        }\n\t      } else {\n\t        path.push(\"M\", x0, \",\", y0);\n\t        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n\t        path.push(\"L\", x2, \",\", y2);\n\t        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n\t      }\n\t      path.push(\"Z\");\n\t      return path.join(\"\");\n\t    }\n\t    function circleSegment(r1, cw) {\n\t      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n\t    }\n\t    arc.innerRadius = function(v) {\n\t      if (!arguments.length) return innerRadius;\n\t      innerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.outerRadius = function(v) {\n\t      if (!arguments.length) return outerRadius;\n\t      outerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.cornerRadius = function(v) {\n\t      if (!arguments.length) return cornerRadius;\n\t      cornerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padRadius = function(v) {\n\t      if (!arguments.length) return padRadius;\n\t      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padAngle = function(v) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.centroid = function() {\n\t      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n\t      return [ Math.cos(a) * r, Math.sin(a) * r ];\n\t    };\n\t    return arc;\n\t  };\n\t  var d3_svg_arcAuto = \"auto\";\n\t  function d3_svg_arcInnerRadius(d) {\n\t    return d.innerRadius;\n\t  }\n\t  function d3_svg_arcOuterRadius(d) {\n\t    return d.outerRadius;\n\t  }\n\t  function d3_svg_arcStartAngle(d) {\n\t    return d.startAngle;\n\t  }\n\t  function d3_svg_arcEndAngle(d) {\n\t    return d.endAngle;\n\t  }\n\t  function d3_svg_arcPadAngle(d) {\n\t    return d && d.padAngle;\n\t  }\n\t  function d3_svg_arcSweep(x0, y0, x1, y1) {\n\t    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n\t  }\n\t  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n\t    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(r * r * d2 - D * D), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n\t    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n\t  }\n\t  function d3_svg_line(projection) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n\t    function line(data) {\n\t      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points), tension));\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n\t        } else if (points.length) {\n\t          segment();\n\t          points = [];\n\t        }\n\t      }\n\t      if (points.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    line.x = function(_) {\n\t      if (!arguments.length) return x;\n\t      x = _;\n\t      return line;\n\t    };\n\t    line.y = function(_) {\n\t      if (!arguments.length) return y;\n\t      y = _;\n\t      return line;\n\t    };\n\t    line.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return line;\n\t    };\n\t    line.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      return line;\n\t    };\n\t    line.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return line;\n\t    };\n\t    return line;\n\t  }\n\t  d3.svg.line = function() {\n\t    return d3_svg_line(d3_identity);\n\t  };\n\t  var d3_svg_lineInterpolators = d3.map({\n\t    linear: d3_svg_lineLinear,\n\t    \"linear-closed\": d3_svg_lineLinearClosed,\n\t    step: d3_svg_lineStep,\n\t    \"step-before\": d3_svg_lineStepBefore,\n\t    \"step-after\": d3_svg_lineStepAfter,\n\t    basis: d3_svg_lineBasis,\n\t    \"basis-open\": d3_svg_lineBasisOpen,\n\t    \"basis-closed\": d3_svg_lineBasisClosed,\n\t    bundle: d3_svg_lineBundle,\n\t    cardinal: d3_svg_lineCardinal,\n\t    \"cardinal-open\": d3_svg_lineCardinalOpen,\n\t    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n\t    monotone: d3_svg_lineMonotone\n\t  });\n\t  d3_svg_lineInterpolators.forEach(function(key, value) {\n\t    value.key = key;\n\t    value.closed = /-closed$/.test(key);\n\t  });\n\t  function d3_svg_lineLinear(points) {\n\t    return points.join(\"L\");\n\t  }\n\t  function d3_svg_lineLinearClosed(points) {\n\t    return d3_svg_lineLinear(points) + \"Z\";\n\t  }\n\t  function d3_svg_lineStep(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n\t    if (n > 1) path.push(\"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepBefore(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepAfter(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineCardinalOpen(points, tension) {\n\t    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineCardinalClosed(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n\t    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n\t  }\n\t  function d3_svg_lineCardinal(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineHermite(points, tangents) {\n\t    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n\t      return d3_svg_lineLinear(points);\n\t    }\n\t    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n\t    if (quad) {\n\t      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n\t      p0 = points[1];\n\t      pi = 2;\n\t    }\n\t    if (tangents.length > 1) {\n\t      t = tangents[1];\n\t      p = points[pi];\n\t      pi++;\n\t      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      for (var i = 2; i < tangents.length; i++, pi++) {\n\t        p = points[pi];\n\t        t = tangents[i];\n\t        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      }\n\t    }\n\t    if (quad) {\n\t      var lp = points[pi];\n\t      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n\t    }\n\t    return path;\n\t  }\n\t  function d3_svg_lineCardinalTangents(points, tension) {\n\t    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n\t    while (++i < n) {\n\t      p0 = p1;\n\t      p1 = p2;\n\t      p2 = points[i];\n\t      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineBasis(points) {\n\t    if (points.length < 3) return d3_svg_lineLinear(points);\n\t    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    points.push(points[n - 1]);\n\t    while (++i <= n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    points.pop();\n\t    path.push(\"L\", pi);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisOpen(points) {\n\t    if (points.length < 4) return d3_svg_lineLinear(points);\n\t    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n\t    while (++i < 3) {\n\t      pi = points[i];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n\t    --i;\n\t    while (++i < n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisClosed(points) {\n\t    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n\t    while (++i < 4) {\n\t      pi = points[i % n];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    --i;\n\t    while (++i < m) {\n\t      pi = points[i % n];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBundle(points, tension) {\n\t    var n = points.length - 1;\n\t    if (n) {\n\t      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n\t      while (++i <= n) {\n\t        p = points[i];\n\t        t = i / n;\n\t        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n\t        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n\t      }\n\t    }\n\t    return d3_svg_lineBasis(points);\n\t  }\n\t  function d3_svg_lineDot4(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n\t  }\n\t  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n\t  function d3_svg_lineBasisBezier(path, x, y) {\n\t    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n\t  }\n\t  function d3_svg_lineSlope(p0, p1) {\n\t    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n\t  }\n\t  function d3_svg_lineFiniteDifferences(points) {\n\t    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n\t    while (++i < j) {\n\t      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n\t    }\n\t    m[i] = d;\n\t    return m;\n\t  }\n\t  function d3_svg_lineMonotoneTangents(points) {\n\t    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n\t    while (++i < j) {\n\t      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\t      if (abs(d) < ε) {\n\t        m[i] = m[i + 1] = 0;\n\t      } else {\n\t        a = m[i] / d;\n\t        b = m[i + 1] / d;\n\t        s = a * a + b * b;\n\t        if (s > 9) {\n\t          s = d * 3 / Math.sqrt(s);\n\t          m[i] = s * a;\n\t          m[i + 1] = s * b;\n\t        }\n\t      }\n\t    }\n\t    i = -1;\n\t    while (++i <= j) {\n\t      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n\t      tangents.push([ s || 0, m[i] * s || 0 ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineMonotone(points) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n\t  }\n\t  d3.svg.line.radial = function() {\n\t    var line = d3_svg_line(d3_svg_lineRadial);\n\t    line.radius = line.x, delete line.x;\n\t    line.angle = line.y, delete line.y;\n\t    return line;\n\t  };\n\t  function d3_svg_lineRadial(points) {\n\t    var point, i = -1, n = points.length, r, a;\n\t    while (++i < n) {\n\t      point = points[i];\n\t      r = point[0];\n\t      a = point[1] - halfπ;\n\t      point[0] = r * Math.cos(a);\n\t      point[1] = r * Math.sin(a);\n\t    }\n\t    return points;\n\t  }\n\t  function d3_svg_area(projection) {\n\t    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n\t    function area(data) {\n\t      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n\t        return x;\n\t      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n\t        return y;\n\t      } : d3_functor(y1), x, y;\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n\t          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n\t        } else if (points0.length) {\n\t          segment();\n\t          points0 = [];\n\t          points1 = [];\n\t        }\n\t      }\n\t      if (points0.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    area.x = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x0 = x1 = _;\n\t      return area;\n\t    };\n\t    area.x0 = function(_) {\n\t      if (!arguments.length) return x0;\n\t      x0 = _;\n\t      return area;\n\t    };\n\t    area.x1 = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x1 = _;\n\t      return area;\n\t    };\n\t    area.y = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y0 = y1 = _;\n\t      return area;\n\t    };\n\t    area.y0 = function(_) {\n\t      if (!arguments.length) return y0;\n\t      y0 = _;\n\t      return area;\n\t    };\n\t    area.y1 = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y1 = _;\n\t      return area;\n\t    };\n\t    area.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return area;\n\t    };\n\t    area.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      interpolateReverse = interpolate.reverse || interpolate;\n\t      L = interpolate.closed ? \"M\" : \"L\";\n\t      return area;\n\t    };\n\t    area.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return area;\n\t    };\n\t    return area;\n\t  }\n\t  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n\t  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\t  d3.svg.area = function() {\n\t    return d3_svg_area(d3_identity);\n\t  };\n\t  d3.svg.area.radial = function() {\n\t    var area = d3_svg_area(d3_svg_lineRadial);\n\t    area.radius = area.x, delete area.x;\n\t    area.innerRadius = area.x0, delete area.x0;\n\t    area.outerRadius = area.x1, delete area.x1;\n\t    area.angle = area.y, delete area.y;\n\t    area.startAngle = area.y0, delete area.y0;\n\t    area.endAngle = area.y1, delete area.y1;\n\t    return area;\n\t  };\n\t  d3.svg.chord = function() {\n\t    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function chord(d, i) {\n\t      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n\t      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n\t    }\n\t    function subgroup(self, f, d, i) {\n\t      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n\t      return {\n\t        r: r,\n\t        a0: a0,\n\t        a1: a1,\n\t        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n\t        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n\t      };\n\t    }\n\t    function equals(a, b) {\n\t      return a.a0 == b.a0 && a.a1 == b.a1;\n\t    }\n\t    function arc(r, p, a) {\n\t      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n\t    }\n\t    function curve(r0, p0, r1, p1) {\n\t      return \"Q 0,0 \" + p1;\n\t    }\n\t    chord.radius = function(v) {\n\t      if (!arguments.length) return radius;\n\t      radius = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.source = function(v) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.target = function(v) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    return chord;\n\t  };\n\t  function d3_svg_chordRadius(d) {\n\t    return d.radius;\n\t  }\n\t  d3.svg.diagonal = function() {\n\t    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n\t    function diagonal(d, i) {\n\t      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n\t        x: p0.x,\n\t        y: m\n\t      }, {\n\t        x: p3.x,\n\t        y: m\n\t      }, p3 ];\n\t      p = p.map(projection);\n\t      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n\t    }\n\t    diagonal.source = function(x) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.target = function(x) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.projection = function(x) {\n\t      if (!arguments.length) return projection;\n\t      projection = x;\n\t      return diagonal;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalProjection(d) {\n\t    return [ d.x, d.y ];\n\t  }\n\t  d3.svg.diagonal.radial = function() {\n\t    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n\t    diagonal.projection = function(x) {\n\t      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalRadialProjection(projection) {\n\t    return function() {\n\t      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n\t      return [ r * Math.cos(a), r * Math.sin(a) ];\n\t    };\n\t  }\n\t  d3.svg.symbol = function() {\n\t    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n\t    function symbol(d, i) {\n\t      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n\t    }\n\t    symbol.type = function(x) {\n\t      if (!arguments.length) return type;\n\t      type = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    symbol.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    return symbol;\n\t  };\n\t  function d3_svg_symbolSize() {\n\t    return 64;\n\t  }\n\t  function d3_svg_symbolType() {\n\t    return \"circle\";\n\t  }\n\t  function d3_svg_symbolCircle(size) {\n\t    var r = Math.sqrt(size / π);\n\t    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n\t  }\n\t  var d3_svg_symbols = d3.map({\n\t    circle: d3_svg_symbolCircle,\n\t    cross: function(size) {\n\t      var r = Math.sqrt(size / 5) / 2;\n\t      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n\t    },\n\t    diamond: function(size) {\n\t      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n\t    },\n\t    square: function(size) {\n\t      var r = Math.sqrt(size) / 2;\n\t      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n\t    },\n\t    \"triangle-down\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n\t    },\n\t    \"triangle-up\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n\t    }\n\t  });\n\t  d3.svg.symbolTypes = d3_svg_symbols.keys();\n\t  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\t  d3_selectionPrototype.transition = function(name) {\n\t    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n\t      time: Date.now(),\n\t      ease: d3_ease_cubicInOut,\n\t      delay: 0,\n\t      duration: 250\n\t    };\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_selectionPrototype.interrupt = function(name) {\n\t    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n\t  };\n\t  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n\t  function d3_selection_interruptNS(ns) {\n\t    return function() {\n\t      var lock, active;\n\t      if ((lock = this[ns]) && (active = lock[lock.active])) {\n\t        if (--lock.count) delete lock[lock.active]; else delete this[ns];\n\t        lock.active += .5;\n\t        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n\t      }\n\t    };\n\t  }\n\t  function d3_transition(groups, ns, id) {\n\t    d3_subclass(groups, d3_transitionPrototype);\n\t    groups.namespace = ns;\n\t    groups.id = id;\n\t    return groups;\n\t  }\n\t  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n\t  d3_transitionPrototype.call = d3_selectionPrototype.call;\n\t  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_transitionPrototype.node = d3_selectionPrototype.node;\n\t  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\t  d3.transition = function(selection, name) {\n\t    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n\t  };\n\t  d3.transition.prototype = d3_transitionPrototype;\n\t  d3_transitionPrototype.select = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n\t          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n\t          subgroup.push(subnode);\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.selectAll = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id];\n\t          subnodes = selector.call(node, node.__data__, i, j);\n\t          subgroups.push(subgroup = []);\n\t          for (var k = -1, o = subnodes.length; ++k < o; ) {\n\t            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n\t            subgroup.push(subnode);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, this.namespace, this.id);\n\t  };\n\t  d3_transitionPrototype.tween = function(name, tween) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n\t    return d3_selection_each(this, tween == null ? function(node) {\n\t      node[ns][id].tween.remove(name);\n\t    } : function(node) {\n\t      node[ns][id].tween.set(name, tween);\n\t    });\n\t  };\n\t  function d3_transition_tween(groups, name, value, tween) {\n\t    var id = groups.id, ns = groups.namespace;\n\t    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n\t    } : (value = tween(value), function(node) {\n\t      node[ns][id].tween.set(name, value);\n\t    }));\n\t  }\n\t  d3_transitionPrototype.attr = function(nameNS, value) {\n\t    if (arguments.length < 2) {\n\t      for (value in nameNS) this.attr(value, nameNS[value]);\n\t      return this;\n\t    }\n\t    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrTween(b) {\n\t      return b == null ? attrNull : (b += \"\", function() {\n\t        var a = this.getAttribute(name), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttribute(name, i(t));\n\t        });\n\t      });\n\t    }\n\t    function attrTweenNS(b) {\n\t      return b == null ? attrNullNS : (b += \"\", function() {\n\t        var a = this.getAttributeNS(name.space, name.local), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttributeNS(name.space, name.local, i(t));\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n\t    var name = d3.ns.qualify(nameNS);\n\t    function attrTween(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttribute(name));\n\t      return f && function(t) {\n\t        this.setAttribute(name, f(t));\n\t      };\n\t    }\n\t    function attrTweenNS(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n\t      return f && function(t) {\n\t        this.setAttributeNS(name.space, name.local, f(t));\n\t      };\n\t    }\n\t    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.style(priority, name[priority], value);\n\t        return this;\n\t      }\n\t      priority = \"\";\n\t    }\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleString(b) {\n\t      return b == null ? styleNull : (b += \"\", function() {\n\t        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n\t        return a !== b && (i = d3_interpolate(a, b), function(t) {\n\t          this.style.setProperty(name, i(t), priority);\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n\t  };\n\t  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n\t    if (arguments.length < 3) priority = \"\";\n\t    function styleTween(d, i) {\n\t      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n\t      return f && function(t) {\n\t        this.style.setProperty(name, f(t), priority);\n\t      };\n\t    }\n\t    return this.tween(\"style.\" + name, styleTween);\n\t  };\n\t  d3_transitionPrototype.text = function(value) {\n\t    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n\t  };\n\t  function d3_transition_text(b) {\n\t    if (b == null) b = \"\";\n\t    return function() {\n\t      this.textContent = b;\n\t    };\n\t  }\n\t  d3_transitionPrototype.remove = function() {\n\t    var ns = this.namespace;\n\t    return this.each(\"end.transition\", function() {\n\t      var p;\n\t      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n\t    });\n\t  };\n\t  d3_transitionPrototype.ease = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].ease;\n\t    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n\t    return d3_selection_each(this, function(node) {\n\t      node[ns][id].ease = value;\n\t    });\n\t  };\n\t  d3_transitionPrototype.delay = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].delay;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n\t    } : (value = +value, function(node) {\n\t      node[ns][id].delay = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.duration = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].duration;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n\t    } : (value = Math.max(1, value), function(node) {\n\t      node[ns][id].duration = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.each = function(type, listener) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) {\n\t      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n\t      try {\n\t        d3_transitionInheritId = id;\n\t        d3_selection_each(this, function(node, i, j) {\n\t          d3_transitionInherit = node[ns][id];\n\t          type.call(node, node.__data__, i, j);\n\t        });\n\t      } finally {\n\t        d3_transitionInherit = inherit;\n\t        d3_transitionInheritId = inheritId;\n\t      }\n\t    } else {\n\t      d3_selection_each(this, function(node) {\n\t        var transition = node[ns][id];\n\t        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n\t      });\n\t    }\n\t    return this;\n\t  };\n\t  d3_transitionPrototype.transition = function() {\n\t    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id0];\n\t          d3_transitionNode(node, i, ns, id1, {\n\t            time: transition.time,\n\t            ease: transition.ease,\n\t            delay: transition.delay + transition.duration,\n\t            duration: transition.duration\n\t          });\n\t        }\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id1);\n\t  };\n\t  function d3_transitionNamespace(name) {\n\t    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n\t  }\n\t  function d3_transitionNode(node, i, ns, id, inherit) {\n\t    var lock = node[ns] || (node[ns] = {\n\t      active: 0,\n\t      count: 0\n\t    }), transition = lock[id];\n\t    if (!transition) {\n\t      var time = inherit.time;\n\t      transition = lock[id] = {\n\t        tween: new d3_Map(),\n\t        time: time,\n\t        delay: inherit.delay,\n\t        duration: inherit.duration,\n\t        ease: inherit.ease,\n\t        index: i\n\t      };\n\t      inherit = null;\n\t      ++lock.count;\n\t      d3.timer(function(elapsed) {\n\t        var delay = transition.delay, duration, ease, timer = d3_timer_active, tweened = [];\n\t        timer.t = delay + time;\n\t        if (delay <= elapsed) return start(elapsed - delay);\n\t        timer.c = start;\n\t        function start(elapsed) {\n\t          if (lock.active > id) return stop();\n\t          var active = lock[lock.active];\n\t          if (active) {\n\t            --lock.count;\n\t            delete lock[lock.active];\n\t            active.event && active.event.interrupt.call(node, node.__data__, active.index);\n\t          }\n\t          lock.active = id;\n\t          transition.event && transition.event.start.call(node, node.__data__, i);\n\t          transition.tween.forEach(function(key, value) {\n\t            if (value = value.call(node, node.__data__, i)) {\n\t              tweened.push(value);\n\t            }\n\t          });\n\t          ease = transition.ease;\n\t          duration = transition.duration;\n\t          d3.timer(function() {\n\t            timer.c = tick(elapsed || 1) ? d3_true : tick;\n\t            return 1;\n\t          }, 0, time);\n\t        }\n\t        function tick(elapsed) {\n\t          if (lock.active !== id) return 1;\n\t          var t = elapsed / duration, e = ease(t), n = tweened.length;\n\t          while (n > 0) {\n\t            tweened[--n].call(node, e);\n\t          }\n\t          if (t >= 1) {\n\t            transition.event && transition.event.end.call(node, node.__data__, i);\n\t            return stop();\n\t          }\n\t        }\n\t        function stop() {\n\t          if (--lock.count) delete lock[id]; else delete node[ns];\n\t          return 1;\n\t        }\n\t      }, 0, time);\n\t    }\n\t  }\n\t  d3.svg.axis = function() {\n\t    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n\t    function axis(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this);\n\t        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n\t        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n\t        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n\t        d3.transition(path));\n\t        tickEnter.append(\"line\");\n\t        tickEnter.append(\"text\");\n\t        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n\t        if (orient === \"bottom\" || orient === \"top\") {\n\t          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n\t          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n\t          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n\t        } else {\n\t          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n\t          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n\t          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n\t        }\n\t        lineEnter.attr(y2, sign * innerTickSize);\n\t        textEnter.attr(y1, sign * tickSpacing);\n\t        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n\t        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\t        if (scale1.rangeBand) {\n\t          var x = scale1, dx = x.rangeBand() / 2;\n\t          scale0 = scale1 = function(d) {\n\t            return x(d) + dx;\n\t          };\n\t        } else if (scale0.rangeBand) {\n\t          scale0 = scale1;\n\t        } else {\n\t          tickExit.call(tickTransform, scale1, scale0);\n\t        }\n\t        tickEnter.call(tickTransform, scale0, scale1);\n\t        tickUpdate.call(tickTransform, scale1, scale1);\n\t      });\n\t    }\n\t    axis.scale = function(x) {\n\t      if (!arguments.length) return scale;\n\t      scale = x;\n\t      return axis;\n\t    };\n\t    axis.orient = function(x) {\n\t      if (!arguments.length) return orient;\n\t      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n\t      return axis;\n\t    };\n\t    axis.ticks = function() {\n\t      if (!arguments.length) return tickArguments_;\n\t      tickArguments_ = arguments;\n\t      return axis;\n\t    };\n\t    axis.tickValues = function(x) {\n\t      if (!arguments.length) return tickValues;\n\t      tickValues = x;\n\t      return axis;\n\t    };\n\t    axis.tickFormat = function(x) {\n\t      if (!arguments.length) return tickFormat_;\n\t      tickFormat_ = x;\n\t      return axis;\n\t    };\n\t    axis.tickSize = function(x) {\n\t      var n = arguments.length;\n\t      if (!n) return innerTickSize;\n\t      innerTickSize = +x;\n\t      outerTickSize = +arguments[n - 1];\n\t      return axis;\n\t    };\n\t    axis.innerTickSize = function(x) {\n\t      if (!arguments.length) return innerTickSize;\n\t      innerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.outerTickSize = function(x) {\n\t      if (!arguments.length) return outerTickSize;\n\t      outerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.tickPadding = function(x) {\n\t      if (!arguments.length) return tickPadding;\n\t      tickPadding = +x;\n\t      return axis;\n\t    };\n\t    axis.tickSubdivide = function() {\n\t      return arguments.length && axis;\n\t    };\n\t    return axis;\n\t  };\n\t  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n\t    top: 1,\n\t    right: 1,\n\t    bottom: 1,\n\t    left: 1\n\t  };\n\t  function d3_svg_axisX(selection, x0, x1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = x0(d);\n\t      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n\t    });\n\t  }\n\t  function d3_svg_axisY(selection, y0, y1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = y0(d);\n\t      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n\t    });\n\t  }\n\t  d3.svg.brush = function() {\n\t    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n\t    function brush(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n\t        var background = g.selectAll(\".background\").data([ 0 ]);\n\t        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n\t        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n\t        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n\t        resize.exit().remove();\n\t        resize.enter().append(\"g\").attr(\"class\", function(d) {\n\t          return \"resize \" + d;\n\t        }).style(\"cursor\", function(d) {\n\t          return d3_svg_brushCursor[d];\n\t        }).append(\"rect\").attr(\"x\", function(d) {\n\t          return /[ew]$/.test(d) ? -3 : null;\n\t        }).attr(\"y\", function(d) {\n\t          return /^[ns]/.test(d) ? -3 : null;\n\t        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n\t        resize.style(\"display\", brush.empty() ? \"none\" : null);\n\t        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n\t        if (x) {\n\t          range = d3_scaleRange(x);\n\t          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n\t          redrawX(gUpdate);\n\t        }\n\t        if (y) {\n\t          range = d3_scaleRange(y);\n\t          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n\t          redrawY(gUpdate);\n\t        }\n\t        redraw(gUpdate);\n\t      });\n\t    }\n\t    brush.event = function(g) {\n\t      g.each(function() {\n\t        var event_ = event.of(this, arguments), extent1 = {\n\t          x: xExtent,\n\t          y: yExtent,\n\t          i: xExtentDomain,\n\t          j: yExtentDomain\n\t        }, extent0 = this.__chart__ || extent1;\n\t        this.__chart__ = extent1;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.brush\", function() {\n\t            xExtentDomain = extent0.i;\n\t            yExtentDomain = extent0.j;\n\t            xExtent = extent0.x;\n\t            yExtent = extent0.y;\n\t            event_({\n\t              type: \"brushstart\"\n\t            });\n\t          }).tween(\"brush:brush\", function() {\n\t            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n\t            xExtentDomain = yExtentDomain = null;\n\t            return function(t) {\n\t              xExtent = extent1.x = xi(t);\n\t              yExtent = extent1.y = yi(t);\n\t              event_({\n\t                type: \"brush\",\n\t                mode: \"resize\"\n\t              });\n\t            };\n\t          }).each(\"end.brush\", function() {\n\t            xExtentDomain = extent1.i;\n\t            yExtentDomain = extent1.j;\n\t            event_({\n\t              type: \"brush\",\n\t              mode: \"resize\"\n\t            });\n\t            event_({\n\t              type: \"brushend\"\n\t            });\n\t          });\n\t        } else {\n\t          event_({\n\t            type: \"brushstart\"\n\t          });\n\t          event_({\n\t            type: \"brush\",\n\t            mode: \"resize\"\n\t          });\n\t          event_({\n\t            type: \"brushend\"\n\t          });\n\t        }\n\t      });\n\t    };\n\t    function redraw(g) {\n\t      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n\t        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n\t      });\n\t    }\n\t    function redrawX(g) {\n\t      g.select(\".extent\").attr(\"x\", xExtent[0]);\n\t      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n\t    }\n\t    function redrawY(g) {\n\t      g.select(\".extent\").attr(\"y\", yExtent[0]);\n\t      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n\t    }\n\t    function brushstart() {\n\t      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n\t      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\t      if (d3.event.changedTouches) {\n\t        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n\t      } else {\n\t        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n\t      }\n\t      g.interrupt().selectAll(\"*\").interrupt();\n\t      if (dragging) {\n\t        origin[0] = xExtent[0] - origin[0];\n\t        origin[1] = yExtent[0] - origin[1];\n\t      } else if (resizing) {\n\t        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n\t        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n\t        origin[0] = xExtent[ex];\n\t        origin[1] = yExtent[ey];\n\t      } else if (d3.event.altKey) center = origin.slice();\n\t      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n\t      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n\t      event_({\n\t        type: \"brushstart\"\n\t      });\n\t      brushmove();\n\t      function keydown() {\n\t        if (d3.event.keyCode == 32) {\n\t          if (!dragging) {\n\t            center = null;\n\t            origin[0] -= xExtent[1];\n\t            origin[1] -= yExtent[1];\n\t            dragging = 2;\n\t          }\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function keyup() {\n\t        if (d3.event.keyCode == 32 && dragging == 2) {\n\t          origin[0] += xExtent[1];\n\t          origin[1] += yExtent[1];\n\t          dragging = 0;\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function brushmove() {\n\t        var point = d3.mouse(target), moved = false;\n\t        if (offset) {\n\t          point[0] += offset[0];\n\t          point[1] += offset[1];\n\t        }\n\t        if (!dragging) {\n\t          if (d3.event.altKey) {\n\t            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n\t            origin[0] = xExtent[+(point[0] < center[0])];\n\t            origin[1] = yExtent[+(point[1] < center[1])];\n\t          } else center = null;\n\t        }\n\t        if (resizingX && move1(point, x, 0)) {\n\t          redrawX(g);\n\t          moved = true;\n\t        }\n\t        if (resizingY && move1(point, y, 1)) {\n\t          redrawY(g);\n\t          moved = true;\n\t        }\n\t        if (moved) {\n\t          redraw(g);\n\t          event_({\n\t            type: \"brush\",\n\t            mode: dragging ? \"move\" : \"resize\"\n\t          });\n\t        }\n\t      }\n\t      function move1(point, scale, i) {\n\t        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n\t        if (dragging) {\n\t          r0 -= position;\n\t          r1 -= size + position;\n\t        }\n\t        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\t        if (dragging) {\n\t          max = (min += position) + size;\n\t        } else {\n\t          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\t          if (position < min) {\n\t            max = min;\n\t            min = position;\n\t          } else {\n\t            max = position;\n\t          }\n\t        }\n\t        if (extent[0] != min || extent[1] != max) {\n\t          if (i) yExtentDomain = null; else xExtentDomain = null;\n\t          extent[0] = min;\n\t          extent[1] = max;\n\t          return true;\n\t        }\n\t      }\n\t      function brushend() {\n\t        brushmove();\n\t        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n\t        d3.select(\"body\").style(\"cursor\", null);\n\t        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n\t        dragRestore();\n\t        event_({\n\t          type: \"brushend\"\n\t        });\n\t      }\n\t    }\n\t    brush.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.clamp = function(z) {\n\t      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n\t      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n\t      return brush;\n\t    };\n\t    brush.extent = function(z) {\n\t      var x0, x1, y0, y1, t;\n\t      if (!arguments.length) {\n\t        if (x) {\n\t          if (xExtentDomain) {\n\t            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n\t          } else {\n\t            x0 = xExtent[0], x1 = xExtent[1];\n\t            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n\t            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t          }\n\t        }\n\t        if (y) {\n\t          if (yExtentDomain) {\n\t            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n\t          } else {\n\t            y0 = yExtent[0], y1 = yExtent[1];\n\t            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n\t            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t          }\n\t        }\n\t        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n\t      }\n\t      if (x) {\n\t        x0 = z[0], x1 = z[1];\n\t        if (y) x0 = x0[0], x1 = x1[0];\n\t        xExtentDomain = [ x0, x1 ];\n\t        if (x.invert) x0 = x(x0), x1 = x(x1);\n\t        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n\t      }\n\t      if (y) {\n\t        y0 = z[0], y1 = z[1];\n\t        if (x) y0 = y0[1], y1 = y1[1];\n\t        yExtentDomain = [ y0, y1 ];\n\t        if (y.invert) y0 = y(y0), y1 = y(y1);\n\t        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n\t      }\n\t      return brush;\n\t    };\n\t    brush.clear = function() {\n\t      if (!brush.empty()) {\n\t        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n\t        xExtentDomain = yExtentDomain = null;\n\t      }\n\t      return brush;\n\t    };\n\t    brush.empty = function() {\n\t      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n\t    };\n\t    return d3.rebind(brush, event, \"on\");\n\t  };\n\t  var d3_svg_brushCursor = {\n\t    n: \"ns-resize\",\n\t    e: \"ew-resize\",\n\t    s: \"ns-resize\",\n\t    w: \"ew-resize\",\n\t    nw: \"nwse-resize\",\n\t    ne: \"nesw-resize\",\n\t    se: \"nwse-resize\",\n\t    sw: \"nesw-resize\"\n\t  };\n\t  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n\t  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n\t  var d3_time_formatUtc = d3_time_format.utc;\n\t  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n\t  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\t  function d3_time_formatIsoNative(date) {\n\t    return date.toISOString();\n\t  }\n\t  d3_time_formatIsoNative.parse = function(string) {\n\t    var date = new Date(string);\n\t    return isNaN(date) ? null : date;\n\t  };\n\t  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n\t  d3_time.second = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 1e3) * 1e3);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n\t  }, function(date) {\n\t    return date.getSeconds();\n\t  });\n\t  d3_time.seconds = d3_time.second.range;\n\t  d3_time.seconds.utc = d3_time.second.utc.range;\n\t  d3_time.minute = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 6e4) * 6e4);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n\t  }, function(date) {\n\t    return date.getMinutes();\n\t  });\n\t  d3_time.minutes = d3_time.minute.range;\n\t  d3_time.minutes.utc = d3_time.minute.utc.range;\n\t  d3_time.hour = d3_time_interval(function(date) {\n\t    var timezone = date.getTimezoneOffset() / 60;\n\t    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n\t  }, function(date) {\n\t    return date.getHours();\n\t  });\n\t  d3_time.hours = d3_time.hour.range;\n\t  d3_time.hours.utc = d3_time.hour.utc.range;\n\t  d3_time.month = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setDate(1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setMonth(date.getMonth() + offset);\n\t  }, function(date) {\n\t    return date.getMonth();\n\t  });\n\t  d3_time.months = d3_time.month.range;\n\t  d3_time.months.utc = d3_time.month.utc.range;\n\t  function d3_time_scale(linear, methods, format) {\n\t    function scale(x) {\n\t      return linear(x);\n\t    }\n\t    scale.invert = function(x) {\n\t      return d3_time_scaleDate(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n\t      linear.domain(x);\n\t      return scale;\n\t    };\n\t    function tickMethod(extent, count) {\n\t      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n\t      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n\t        return d / 31536e6;\n\t      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n\t    }\n\t    scale.nice = function(interval, skip) {\n\t      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n\t      if (method) interval = method[0], skip = method[1];\n\t      function skipped(date) {\n\t        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n\t      }\n\t      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n\t        floor: function(date) {\n\t          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n\t          return date;\n\t        },\n\t        ceil: function(date) {\n\t          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n\t          return date;\n\t        }\n\t      } : interval));\n\t    };\n\t    scale.ticks = function(interval, skip) {\n\t      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n\t        range: interval\n\t      }, skip ];\n\t      if (method) interval = method[0], skip = method[1];\n\t      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n\t    };\n\t    scale.tickFormat = function() {\n\t      return format;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_time_scale(linear.copy(), methods, format);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_time_scaleDate(t) {\n\t    return new Date(t);\n\t  }\n\t  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n\t  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n\t  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n\t    return d.getMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getDay() && d.getDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  var d3_time_scaleMilliseconds = {\n\t    range: function(start, stop, step) {\n\t      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n\t    },\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  d3_time_scaleLocalMethods.year = d3_time.year;\n\t  d3_time.scale = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n\t  };\n\t  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n\t    return [ m[0].utc, m[1] ];\n\t  });\n\t  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n\t    return d.getUTCMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getUTCSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getUTCMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getUTCHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getUTCDay() && d.getUTCDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getUTCDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getUTCMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\t  d3_time.scale.utc = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n\t  };\n\t  d3.text = d3_xhrType(function(request) {\n\t    return request.responseText;\n\t  });\n\t  d3.json = function(url, callback) {\n\t    return d3_xhr(url, \"application/json\", d3_json, callback);\n\t  };\n\t  function d3_json(request) {\n\t    return JSON.parse(request.responseText);\n\t  }\n\t  d3.html = function(url, callback) {\n\t    return d3_xhr(url, \"text/html\", d3_html, callback);\n\t  };\n\t  function d3_html(request) {\n\t    var range = d3_document.createRange();\n\t    range.selectNode(d3_document.body);\n\t    return range.createContextualFragment(request.responseText);\n\t  }\n\t  d3.xml = d3_xhrType(function(request) {\n\t    return request.responseXML;\n\t  });\n\t  if (typeof define === \"function\" && define.amd) define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3;\n\t  this.d3 = d3;\n\t}();\n\t},{}],5:[function(require,module,exports){\n\t/**\n\t * @license\n\t * Copyright (c) 2012-2013 Chris Pettitt\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t */\n\tmodule.exports =  {\n\t  graphlib: require(\"./lib/graphlib\"),\n\t  dagre: require(\"./lib/dagre\"),\n\t  intersect: require(\"./lib/intersect\"),\n\t  render: require(\"./lib/render\"),\n\t  util: require(\"./lib/util\"),\n\t  version: require(\"./lib/version\")\n\t};\n\t\n\t},{\"./lib/dagre\":12,\"./lib/graphlib\":13,\"./lib/intersect\":14,\"./lib/render\":29,\"./lib/util\":31,\"./lib/version\":32}],6:[function(require,module,exports){\n\tvar util = require(\"./util\");\n\t\n\tmodule.exports = {\n\t  \"default\": normal,\n\t  \"normal\": normal,\n\t  \"vee\": vee,\n\t  \"undirected\": undirected\n\t};\n\t\n\tfunction normal(parent, id, edge, type) {\n\t  var marker = parent.append(\"marker\")\n\t    .attr(\"id\", id)\n\t    .attr(\"viewBox\", \"0 0 10 10\")\n\t    .attr(\"refX\", 9)\n\t    .attr(\"refY\", 5)\n\t    .attr(\"markerUnits\", \"strokeWidth\")\n\t    .attr(\"markerWidth\", 8)\n\t    .attr(\"markerHeight\", 6)\n\t    .attr(\"orient\", \"auto\");\n\t\n\t  var path = marker.append(\"path\")\n\t    .attr(\"d\", \"M 0 0 L 10 5 L 0 10 z\")\n\t    .style(\"stroke-width\", 1)\n\t    .style(\"stroke-dasharray\", \"1,0\");\n\t  util.applyStyle(path, edge[type + \"Style\"]);\n\t}\n\t\n\tfunction vee(parent, id, edge, type) {\n\t  var marker = parent.append(\"marker\")\n\t    .attr(\"id\", id)\n\t    .attr(\"viewBox\", \"0 0 10 10\")\n\t    .attr(\"refX\", 9)\n\t    .attr(\"refY\", 5)\n\t    .attr(\"markerUnits\", \"strokeWidth\")\n\t    .attr(\"markerWidth\", 8)\n\t    .attr(\"markerHeight\", 6)\n\t    .attr(\"orient\", \"auto\");\n\t\n\t  var path = marker.append(\"path\")\n\t    .attr(\"d\", \"M 0 0 L 10 5 L 0 10 L 4 5 z\")\n\t    .style(\"stroke-width\", 1)\n\t    .style(\"stroke-dasharray\", \"1,0\");\n\t  util.applyStyle(path, edge[type + \"Style\"]);\n\t}\n\t\n\tfunction undirected(parent, id, edge, type) {\n\t  var marker = parent.append(\"marker\")\n\t    .attr(\"id\", id)\n\t    .attr(\"viewBox\", \"0 0 10 10\")\n\t    .attr(\"refX\", 9)\n\t    .attr(\"refY\", 5)\n\t    .attr(\"markerUnits\", \"strokeWidth\")\n\t    .attr(\"markerWidth\", 8)\n\t    .attr(\"markerHeight\", 6)\n\t    .attr(\"orient\", \"auto\");\n\t\n\t  var path = marker.append(\"path\")\n\t    .attr(\"d\", \"M 0 5 L 10 5\")\n\t    .style(\"stroke-width\", 1)\n\t    .style(\"stroke-dasharray\", \"1,0\");\n\t  util.applyStyle(path, edge[type + \"Style\"]);\n\t}\n\t\n\t},{\"./util\":31}],7:[function(require,module,exports){\n\tvar util = require(\"./util\"),\n\t    addLabel = require(\"./label/add-label\");\n\t\n\tmodule.exports = createClusters;\n\t\n\tfunction createClusters(selection, g) {\n\t  var clusters = g.nodes().filter(function(v) { return util.isSubgraph(g, v); }),\n\t      svgClusters = selection.selectAll(\"g.cluster\")\n\t        .data(clusters, function(v) { return v; });\n\t\n\t  svgClusters.selectAll(\"*\").remove();\n\t  svgClusters.enter()\n\t    .append(\"g\")\n\t      .attr(\"class\", \"cluster\")\n\t      .attr(\"id\",function(v){\n\t          var node = g.node(v);\n\t          return node.id;\n\t      })\n\t      .style(\"opacity\", 0);\n\t\n\t  util.applyTransition(svgClusters, g)\n\t    .style(\"opacity\", 1);\n\t\n\t  svgClusters.each(function(v) {\n\t    var node = g.node(v),\n\t        thisGroup = d3.select(this);\n\t    d3.select(this).append(\"rect\");\n\t    var labelGroup = thisGroup.append(\"g\").attr(\"class\", \"label\");\n\t    addLabel(labelGroup, node, node.clusterLabelPos);\n\t  });\n\t\n\t  svgClusters.selectAll(\"rect\").each(function(c) {\n\t    var node = g.node(c);\n\t    var domCluster = d3.select(this);\n\t    util.applyStyle(domCluster, node.style);\n\t  });\n\t\n\t  util.applyTransition(svgClusters.exit(), g)\n\t    .style(\"opacity\", 0)\n\t    .remove();\n\t\n\t  return svgClusters;\n\t}\n\t\n\t},{\"./label/add-label\":22,\"./util\":31}],8:[function(require,module,exports){\n\t\"use strict\";\n\t\n\tvar _ = require(\"./lodash\"),\n\t    addLabel = require(\"./label/add-label\"),\n\t    util = require(\"./util\"),\n\t    d3 = require(\"./d3\");\n\t\n\tmodule.exports = createEdgeLabels;\n\t\n\tfunction createEdgeLabels(selection, g) {\n\t  var svgEdgeLabels = selection.selectAll(\"g.edgeLabel\")\n\t    .data(g.edges(), function(e) { return util.edgeToId(e); })\n\t    .classed(\"update\", true);\n\t\n\t  svgEdgeLabels.selectAll(\"*\").remove();\n\t  svgEdgeLabels.enter()\n\t    .append(\"g\")\n\t      .classed(\"edgeLabel\", true)\n\t      .style(\"opacity\", 0);\n\t  svgEdgeLabels.each(function(e) {\n\t    var edge = g.edge(e),\n\t        label = addLabel(d3.select(this), g.edge(e), 0, 0).classed(\"label\", true),\n\t        bbox = label.node().getBBox();\n\t\n\t    if (edge.labelId) { label.attr(\"id\", edge.labelId); }\n\t    if (!_.has(edge, \"width\")) { edge.width = bbox.width; }\n\t    if (!_.has(edge, \"height\")) { edge.height = bbox.height; }\n\t  });\n\t\n\t  util.applyTransition(svgEdgeLabels.exit(), g)\n\t    .style(\"opacity\", 0)\n\t    .remove();\n\t\n\t  return svgEdgeLabels;\n\t}\n\t\n\t},{\"./d3\":11,\"./label/add-label\":22,\"./lodash\":25,\"./util\":31}],9:[function(require,module,exports){\n\t\"use strict\";\n\t\n\tvar _ = require(\"./lodash\"),\n\t    intersectNode = require(\"./intersect/intersect-node\"),\n\t    util = require(\"./util\"),\n\t    d3 = require(\"./d3\");\n\t\n\tmodule.exports = createEdgePaths;\n\t\n\tfunction createEdgePaths(selection, g, arrows) {\n\t  var svgPaths = selection.selectAll(\"g.edgePath\")\n\t    .data(g.edges(), function(e) { return util.edgeToId(e); })\n\t    .classed(\"update\", true);\n\t\n\t  enter(svgPaths, g);\n\t  exit(svgPaths, g);\n\t\n\t  util.applyTransition(svgPaths, g)\n\t    .style(\"opacity\", 1);\n\t\n\t  // Save DOM element in the path group, and set ID and class\n\t  svgPaths.each(function(e) {\n\t    var domEdge = d3.select(this);\n\t    var edge = g.edge(e);\n\t    edge.elem = this;\n\t\n\t    if (edge.id) {\n\t      domEdge.attr(\"id\", edge.id);\n\t    }\n\t\n\t    util.applyClass(domEdge, edge[\"class\"],\n\t      (domEdge.classed(\"update\") ? \"update \" : \"\") + \"edgePath\");\n\t  });\n\t\n\t  svgPaths.selectAll(\"path.path\")\n\t    .each(function(e) {\n\t      var edge = g.edge(e);\n\t      edge.arrowheadId = _.uniqueId(\"arrowhead\");\n\t\n\t      var domEdge = d3.select(this)\n\t        .attr(\"marker-end\", function() {\n\t          return \"url(#\" + edge.arrowheadId + \")\";\n\t        })\n\t        .style(\"fill\", \"none\");\n\t\n\t      util.applyTransition(domEdge, g)\n\t        .attr(\"d\", function(e) { return calcPoints(g, e); });\n\t\n\t      util.applyStyle(domEdge, edge.style);\n\t    });\n\t\n\t  svgPaths.selectAll(\"defs *\").remove();\n\t  svgPaths.selectAll(\"defs\")\n\t    .each(function(e) {\n\t      var edge = g.edge(e),\n\t          arrowhead = arrows[edge.arrowhead];\n\t      arrowhead(d3.select(this), edge.arrowheadId, edge, \"arrowhead\");\n\t    });\n\t\n\t  return svgPaths;\n\t}\n\t\n\tfunction calcPoints(g, e) {\n\t  var edge = g.edge(e),\n\t      tail = g.node(e.v),\n\t      head = g.node(e.w),\n\t      points = edge.points.slice(1, edge.points.length - 1);\n\t  points.unshift(intersectNode(tail, points[0]));\n\t  points.push(intersectNode(head, points[points.length - 1]));\n\t\n\t  return createLine(edge, points);\n\t}\n\t\n\tfunction createLine(edge, points) {\n\t  var line = d3.svg.line()\n\t    .x(function(d) { return d.x; })\n\t    .y(function(d) { return d.y; });\n\t\n\t  if (_.has(edge, \"lineInterpolate\")) {\n\t    line.interpolate(edge.lineInterpolate);\n\t  }\n\t\n\t  if (_.has(edge, \"lineTension\")) {\n\t    line.tension(Number(edge.lineTension));\n\t  }\n\t\n\t  return line(points);\n\t}\n\t\n\tfunction getCoords(elem) {\n\t  var bbox = elem.getBBox(),\n\t      matrix = elem.getTransformToElement(elem.ownerSVGElement)\n\t        .translate(bbox.width / 2, bbox.height / 2);\n\t  return { x: matrix.e, y: matrix.f };\n\t}\n\t\n\tfunction enter(svgPaths, g) {\n\t  var svgPathsEnter = svgPaths.enter()\n\t    .append(\"g\")\n\t      .attr(\"class\", \"edgePath\")\n\t      .style(\"opacity\", 0);\n\t  svgPathsEnter.append(\"path\")\n\t    .attr(\"class\", \"path\")\n\t    .attr(\"d\", function(e) {\n\t      var edge = g.edge(e),\n\t          sourceElem = g.node(e.v).elem,\n\t          points = _.range(edge.points.length).map(function() { return getCoords(sourceElem); });\n\t      return createLine(edge, points);\n\t    });\n\t  svgPathsEnter.append(\"defs\");\n\t}\n\t\n\tfunction exit(svgPaths, g) {\n\t  var svgPathExit = svgPaths.exit();\n\t  util.applyTransition(svgPathExit, g)\n\t    .style(\"opacity\", 0)\n\t    .remove();\n\t\n\t  util.applyTransition(svgPathExit.select(\"path.path\"), g)\n\t    .attr(\"d\", function(e) {\n\t      var source = g.node(e.v);\n\t\n\t      if (source) {\n\t        var points = _.range(this.pathSegList.length).map(function() { return source; });\n\t        return createLine({}, points);\n\t      } else {\n\t        return d3.select(this).attr(\"d\");\n\t      }\n\t    });\n\t}\n\t\n\t},{\"./d3\":11,\"./intersect/intersect-node\":18,\"./lodash\":25,\"./util\":31}],10:[function(require,module,exports){\n\t\"use strict\";\n\t\n\tvar _ = require(\"./lodash\"),\n\t    addLabel = require(\"./label/add-label\"),\n\t    util = require(\"./util\"),\n\t    d3 = require(\"./d3\");\n\t\n\tmodule.exports = createNodes;\n\t\n\tfunction createNodes(selection, g, shapes) {\n\t  var simpleNodes = g.nodes().filter(function(v) { return !util.isSubgraph(g, v); });\n\t  var svgNodes = selection.selectAll(\"g.node\")\n\t    .data(simpleNodes, function(v) { return v; })\n\t    .classed(\"update\", true);\n\t\n\t  svgNodes.selectAll(\"*\").remove();\n\t  svgNodes.enter()\n\t    .append(\"g\")\n\t      .attr(\"class\", \"node\")\n\t      .style(\"opacity\", 0);\n\t  svgNodes.each(function(v) {\n\t    var node = g.node(v),\n\t        thisGroup = d3.select(this),\n\t        labelGroup = thisGroup.append(\"g\").attr(\"class\", \"label\"),\n\t        labelDom = addLabel(labelGroup, node),\n\t        shape = shapes[node.shape],\n\t        bbox = _.pick(labelDom.node().getBBox(), \"width\", \"height\");\n\t\n\t    node.elem = this;\n\t\n\t    if (node.id) { thisGroup.attr(\"id\", node.id); }\n\t    if (node.labelId) { labelGroup.attr(\"id\", node.labelId); }\n\t    util.applyClass(thisGroup, node[\"class\"],\n\t      (thisGroup.classed(\"update\") ? \"update \" : \"\") + \"node\");\n\t\n\t    if (_.has(node, \"width\")) { bbox.width = node.width; }\n\t    if (_.has(node, \"height\")) { bbox.height = node.height; }\n\t\n\t    bbox.width += node.paddingLeft + node.paddingRight;\n\t    bbox.height += node.paddingTop + node.paddingBottom;\n\t    labelGroup.attr(\"transform\", \"translate(\" +\n\t      ((node.paddingLeft - node.paddingRight) / 2) + \",\" +\n\t      ((node.paddingTop - node.paddingBottom) / 2) + \")\");\n\t\n\t    var shapeSvg = shape(d3.select(this), bbox, node);\n\t    util.applyStyle(shapeSvg, node.style);\n\t\n\t    var shapeBBox = shapeSvg.node().getBBox();\n\t    node.width = shapeBBox.width;\n\t    node.height = shapeBBox.height;\n\t  });\n\t\n\t  util.applyTransition(svgNodes.exit(), g)\n\t    .style(\"opacity\", 0)\n\t    .remove();\n\t\n\t  return svgNodes;\n\t}\n\t\n\t},{\"./d3\":11,\"./label/add-label\":22,\"./lodash\":25,\"./util\":31}],11:[function(require,module,exports){\n\t// Stub to get D3 either via NPM or from the global object\n\tmodule.exports = window.d3;\n\t\n\t},{}],12:[function(require,module,exports){\n\t/* global window */\n\t\n\tvar dagre;\n\t\n\tif (require) {\n\t  try {\n\t    dagre = require(\"dagre\");\n\t  } catch (e) {}\n\t}\n\t\n\tif (!dagre) {\n\t  dagre = window.dagre;\n\t}\n\t\n\tmodule.exports = dagre;\n\t\n\t},{\"dagre\":54}],13:[function(require,module,exports){\n\t/* global window */\n\t\n\tvar graphlib;\n\t\n\tif (require) {\n\t  try {\n\t    graphlib = require(\"graphlib\");\n\t  } catch (e) {}\n\t}\n\t\n\tif (!graphlib) {\n\t  graphlib = window.graphlib;\n\t}\n\t\n\tmodule.exports = graphlib;\n\t\n\t},{\"graphlib\":33}],14:[function(require,module,exports){\n\tmodule.exports = {\n\t  node: require(\"./intersect-node\"),\n\t  circle: require(\"./intersect-circle\"),\n\t  ellipse: require(\"./intersect-ellipse\"),\n\t  polygon: require(\"./intersect-polygon\"),\n\t  rect: require(\"./intersect-rect\")\n\t};\n\t\n\t},{\"./intersect-circle\":15,\"./intersect-ellipse\":16,\"./intersect-node\":18,\"./intersect-polygon\":19,\"./intersect-rect\":20}],15:[function(require,module,exports){\n\tvar intersectEllipse = require(\"./intersect-ellipse\");\n\t\n\tmodule.exports = intersectCircle;\n\t\n\tfunction intersectCircle(node, rx, point) {\n\t  return intersectEllipse(node, rx, rx, point);\n\t}\n\t\n\t},{\"./intersect-ellipse\":16}],16:[function(require,module,exports){\n\tmodule.exports = intersectEllipse;\n\t\n\tfunction intersectEllipse(node, rx, ry, point) {\n\t  // Formulae from: http://mathworld.wolfram.com/Ellipse-LineIntersection.html\n\t\n\t  var cx = node.x;\n\t  var cy = node.y;\n\t\n\t  var px = cx - point.x;\n\t  var py = cy - point.y;\n\t\n\t  var det = Math.sqrt(rx * rx * py * py + ry * ry * px * px);\n\t\n\t  var dx = Math.abs(rx * ry * px / det);\n\t  if (point.x < cx) {\n\t    dx = -dx;\n\t  }\n\t  var dy = Math.abs(rx * ry * py / det);\n\t  if (point.y < cy) {\n\t    dy = -dy;\n\t  }\n\t\n\t  return {x: cx + dx, y: cy + dy};\n\t}\n\t\n\t\n\t},{}],17:[function(require,module,exports){\n\tmodule.exports = intersectLine;\n\t\n\t/*\n\t * Returns the point at which two lines, p and q, intersect or returns\n\t * undefined if they do not intersect.\n\t */\n\tfunction intersectLine(p1, p2, q1, q2) {\n\t  // Algorithm from J. Avro, (ed.) Graphics Gems, No 2, Morgan Kaufmann, 1994,\n\t  // p7 and p473.\n\t\n\t  var a1, a2, b1, b2, c1, c2;\n\t  var r1, r2 , r3, r4;\n\t  var denom, offset, num;\n\t  var x, y;\n\t\n\t  // Compute a1, b1, c1, where line joining points 1 and 2 is F(x,y) = a1 x +\n\t  // b1 y + c1 = 0.\n\t  a1 = p2.y - p1.y;\n\t  b1 = p1.x - p2.x;\n\t  c1 = (p2.x * p1.y) - (p1.x * p2.y);\n\t\n\t  // Compute r3 and r4.\n\t  r3 = ((a1 * q1.x) + (b1 * q1.y) + c1);\n\t  r4 = ((a1 * q2.x) + (b1 * q2.y) + c1);\n\t\n\t  // Check signs of r3 and r4. If both point 3 and point 4 lie on\n\t  // same side of line 1, the line segments do not intersect.\n\t  if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n\t    return /*DONT_INTERSECT*/;\n\t  }\n\t\n\t  // Compute a2, b2, c2 where line joining points 3 and 4 is G(x,y) = a2 x + b2 y + c2 = 0\n\t  a2 = q2.y - q1.y;\n\t  b2 = q1.x - q2.x;\n\t  c2 = (q2.x * q1.y) - (q1.x * q2.y);\n\t\n\t  // Compute r1 and r2\n\t  r1 = (a2 * p1.x) + (b2 * p1.yy) + c2;\n\t  r2 = (a2 * p2.x) + (b2 * p2.y) + c2;\n\t\n\t  // Check signs of r1 and r2. If both point 1 and point 2 lie\n\t  // on same side of second line segment, the line segments do\n\t  // not intersect.\n\t  if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n\t    return /*DONT_INTERSECT*/;\n\t  }\n\t\n\t  // Line segments intersect: compute intersection point.\n\t  denom = (a1 * b2) - (a2 * b1);\n\t  if (denom === 0) {\n\t    return /*COLLINEAR*/;\n\t  }\n\t\n\t  offset = Math.abs(denom / 2);\n\t\n\t  // The denom/2 is to get rounding instead of truncating. It\n\t  // is added or subtracted to the numerator, depending upon the\n\t  // sign of the numerator.\n\t  num = (b1 * c2) - (b2 * c1);\n\t  x = (num < 0) ? ((num - offset) / denom) : ((num + offset) / denom);\n\t\n\t  num = (a2 * c1) - (a1 * c2);\n\t  y = (num < 0) ? ((num - offset) / denom) : ((num + offset) / denom);\n\t\n\t  return { x: x, y: y };\n\t}\n\t\n\tfunction sameSign(r1, r2) {\n\t  return r1 * r2 > 0;\n\t}\n\t\n\t},{}],18:[function(require,module,exports){\n\tmodule.exports = intersectNode;\n\t\n\tfunction intersectNode(node, point) {\n\t  return node.intersect(point);\n\t}\n\t\n\t},{}],19:[function(require,module,exports){\n\tvar intersectLine = require(\"./intersect-line\");\n\t\n\tmodule.exports = intersectPolygon;\n\t\n\t/*\n\t * Returns the point ({x, y}) at which the point argument intersects with the\n\t * node argument assuming that it has the shape specified by polygon.\n\t */\n\tfunction intersectPolygon(node, polyPoints, point) {\n\t  var x1 = node.x;\n\t  var y1 = node.y;\n\t\n\t  var intersections = [];\n\t\n\t  var minX = Number.POSITIVE_INFINITY,\n\t      minY = Number.POSITIVE_INFINITY;\n\t  polyPoints.forEach(function(entry) {\n\t    minX = Math.min(minX, entry.x);\n\t    minY = Math.min(minY, entry.y);\n\t  });\n\t\n\t  var left = x1 - node.width / 2 - minX;\n\t  var top =  y1 - node.height / 2 - minY;\n\t\n\t  for (var i = 0; i < polyPoints.length; i++) {\n\t    var p1 = polyPoints[i];\n\t    var p2 = polyPoints[i < polyPoints.length - 1 ? i + 1 : 0];\n\t    var intersect = intersectLine(node, point,\n\t      {x: left + p1.x, y: top + p1.y}, {x: left + p2.x, y: top + p2.y});\n\t    if (intersect) {\n\t      intersections.push(intersect);\n\t    }\n\t  }\n\t\n\t  if (!intersections.length) {\n\t    console.log(\"NO INTERSECTION FOUND, RETURN NODE CENTER\", node);\n\t    return node;\n\t  }\n\t\n\t  if (intersections.length > 1) {\n\t    // More intersections, find the one nearest to edge end point\n\t    intersections.sort(function(p, q) {\n\t      var pdx = p.x - point.x,\n\t          pdy = p.y - point.y,\n\t          distp = Math.sqrt(pdx * pdx + pdy * pdy),\n\t\n\t          qdx = q.x - point.x,\n\t          qdy = q.y - point.y,\n\t          distq = Math.sqrt(qdx * qdx + qdy * qdy);\n\t\n\t      return (distp < distq) ? -1 : (distp === distq ? 0 : 1);\n\t    });\n\t  }\n\t  return intersections[0];\n\t}\n\t\n\t},{\"./intersect-line\":17}],20:[function(require,module,exports){\n\tmodule.exports = intersectRect;\n\t\n\tfunction intersectRect(node, point) {\n\t  var x = node.x;\n\t  var y = node.y;\n\t\n\t  // Rectangle intersection algorithm from:\n\t  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n\t  var dx = point.x - x;\n\t  var dy = point.y - y;\n\t  var w = node.width / 2;\n\t  var h = node.height / 2;\n\t\n\t  var sx, sy;\n\t  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n\t    // Intersection is top or bottom of rect.\n\t    if (dy < 0) {\n\t      h = -h;\n\t    }\n\t    sx = dy === 0 ? 0 : h * dx / dy;\n\t    sy = h;\n\t  } else {\n\t    // Intersection is left or right of rect.\n\t    if (dx < 0) {\n\t      w = -w;\n\t    }\n\t    sx = w;\n\t    sy = dx === 0 ? 0 : w * dy / dx;\n\t  }\n\t\n\t  return {x: x + sx, y: y + sy};\n\t}\n\t\n\t},{}],21:[function(require,module,exports){\n\tvar util = require(\"../util\");\n\t\n\tmodule.exports = addHtmlLabel;\n\t\n\tfunction addHtmlLabel(root, node) {\n\t  var fo = root\n\t    .append(\"foreignObject\")\n\t      .attr(\"width\", \"100000\");\n\t\n\t  var div = fo\n\t    .append(\"xhtml:div\");\n\t\n\t  var label = node.label;\n\t  switch(typeof label) {\n\t    case \"function\":\n\t      div.insert(label);\n\t      break;\n\t    case \"object\":\n\t      // Currently we assume this is a DOM object.\n\t      div.insert(function() { return label; });\n\t      break;\n\t    default: div.html(label);\n\t  }\n\t\n\t  util.applyStyle(div, node.labelStyle);\n\t  div.style(\"display\", \"inline-block\");\n\t  // Fix for firefox\n\t  div.style(\"white-space\", \"nowrap\");\n\t\n\t  // TODO find a better way to get dimensions for foreignObjects...\n\t  var w, h;\n\t  div\n\t    .each(function() {\n\t      w = this.clientWidth;\n\t      h = this.clientHeight;\n\t    });\n\t\n\t  fo\n\t    .attr(\"width\", w)\n\t    .attr(\"height\", h);\n\t\n\t  return fo;\n\t}\n\t\n\t},{\"../util\":31}],22:[function(require,module,exports){\n\tvar addTextLabel = require(\"./add-text-label\"),\n\t    addHtmlLabel = require(\"./add-html-label\"),\n\t    addSVGLabel  = require(\"./add-svg-label\");\n\t\n\tmodule.exports = addLabel;\n\t\n\tfunction addLabel(root, node, location) {\n\t  var label = node.label;\n\t  var labelSvg = root.append(\"g\");\n\t\n\t  // Allow the label to be a string, a function that returns a DOM element, or\n\t  // a DOM element itself.\n\t  if (node.labelType === \"svg\") {\n\t    addSVGLabel(labelSvg, node);\n\t  } else if (typeof label !== \"string\" || node.labelType === \"html\") {\n\t    addHtmlLabel(labelSvg, node);\n\t  } else {\n\t    addTextLabel(labelSvg, node);\n\t  }\n\t\n\t  var labelBBox = labelSvg.node().getBBox();\n\t  var y;\n\t  switch(location) {\n\t    case \"top\":\n\t      y = (-node.height / 2);\n\t      break;\n\t    case \"bottom\":\n\t      y = (node.height / 2) - labelBBox.height;\n\t      break;\n\t    default:\n\t      y = (-labelBBox.height / 2);\n\t  }\n\t  labelSvg.attr(\"transform\",\n\t                \"translate(\" + (-labelBBox.width / 2) + \",\" + y + \")\");\n\t\n\t  return labelSvg;\n\t}\n\t\n\t},{\"./add-html-label\":21,\"./add-svg-label\":23,\"./add-text-label\":24}],23:[function(require,module,exports){\n\tvar util = require(\"../util\");\n\t\n\tmodule.exports = addSVGLabel;\n\t\n\tfunction addSVGLabel(root, node) {\n\t  var domNode = root;\n\t\n\t  domNode.node().appendChild(node.label);\n\t\n\t  util.applyStyle(domNode, node.labelStyle);\n\t\n\t  return domNode;\n\t}\n\t\n\t},{\"../util\":31}],24:[function(require,module,exports){\n\tvar util = require(\"../util\");\n\t\n\tmodule.exports = addTextLabel;\n\t\n\t/*\n\t * Attaches a text label to the specified root. Handles escape sequences.\n\t */\n\tfunction addTextLabel(root, node) {\n\t  var domNode = root.append(\"text\");\n\t\n\t  var lines = processEscapeSequences(node.label).split(\"\\n\");\n\t  for (var i = 0; i < lines.length; i++) {\n\t    domNode\n\t      .append(\"tspan\")\n\t        .attr(\"xml:space\", \"preserve\")\n\t        .attr(\"dy\", \"1em\")\n\t        .attr(\"x\", \"1\")\n\t        .text(lines[i]);\n\t  }\n\t\n\t  util.applyStyle(domNode, node.labelStyle);\n\t\n\t  return domNode;\n\t}\n\t\n\tfunction processEscapeSequences(text) {\n\t  var newText = \"\",\n\t      escaped = false,\n\t      ch;\n\t  for (var i = 0; i < text.length; ++i) {\n\t    ch = text[i];\n\t    if (escaped) {\n\t      switch(ch) {\n\t        case \"n\": newText += \"\\n\"; break;\n\t        default: newText += ch;\n\t      }\n\t      escaped = false;\n\t    } else if (ch === \"\\\\\") {\n\t      escaped = true;\n\t    } else {\n\t      newText += ch;\n\t    }\n\t  }\n\t  return newText;\n\t}\n\t\n\t},{\"../util\":31}],25:[function(require,module,exports){\n\t/* global window */\n\t\n\tvar lodash;\n\t\n\tif (require) {\n\t  try {\n\t    lodash = require(\"lodash\");\n\t  } catch (e) {}\n\t}\n\t\n\tif (!lodash) {\n\t  lodash = window._;\n\t}\n\t\n\tmodule.exports = lodash;\n\t\n\t},{\"lodash\":53}],26:[function(require,module,exports){\n\t\"use strict\";\n\t\n\tvar util = require(\"./util\"),\n\t    d3 = require(\"./d3\");\n\t\n\tmodule.exports = positionClusters;\n\t\n\tfunction positionClusters(selection, g) {\n\t  var created = selection.filter(function() { return !d3.select(this).classed(\"update\"); });\n\t\n\t  function translate(v) {\n\t    var node = g.node(v);\n\t    return \"translate(\" + node.x + \",\" + node.y + \")\";\n\t  }\n\t\n\t  created.attr(\"transform\", translate);\n\t\n\t  util.applyTransition(selection, g)\n\t      .style(\"opacity\", 1)\n\t      .attr(\"transform\", translate);\n\t\n\t  util.applyTransition(created.selectAll(\"rect\"), g)\n\t      .attr(\"width\", function(v) { return g.node(v).width; })\n\t      .attr(\"height\", function(v) { return g.node(v).height; })\n\t      .attr(\"x\", function(v) {\n\t        var node = g.node(v);\n\t        return -node.width / 2;\n\t      })\n\t      .attr(\"y\", function(v) {\n\t        var node = g.node(v);\n\t        return -node.height / 2;\n\t      });\n\t\n\t}\n\t\n\t},{\"./d3\":11,\"./util\":31}],27:[function(require,module,exports){\n\t\"use strict\";\n\t\n\tvar util = require(\"./util\"),\n\t    d3 = require(\"./d3\"),\n\t    _ = require(\"./lodash\");\n\t\n\tmodule.exports = positionEdgeLabels;\n\t\n\tfunction positionEdgeLabels(selection, g) {\n\t  var created = selection.filter(function() { return !d3.select(this).classed(\"update\"); });\n\t\n\t  function translate(e) {\n\t    var edge = g.edge(e);\n\t    return _.has(edge, \"x\") ? \"translate(\" + edge.x + \",\" + edge.y + \")\" : \"\";\n\t  }\n\t\n\t  created.attr(\"transform\", translate);\n\t\n\t  util.applyTransition(selection, g)\n\t    .style(\"opacity\", 1)\n\t    .attr(\"transform\", translate);\n\t}\n\t\n\t},{\"./d3\":11,\"./lodash\":25,\"./util\":31}],28:[function(require,module,exports){\n\t\"use strict\";\n\t\n\tvar util = require(\"./util\"),\n\t    d3 = require(\"./d3\");\n\t\n\tmodule.exports = positionNodes;\n\t\n\tfunction positionNodes(selection, g) {\n\t  var created = selection.filter(function() { return !d3.select(this).classed(\"update\"); });\n\t\n\t  function translate(v) {\n\t    var node = g.node(v);\n\t    return \"translate(\" + node.x + \",\" + node.y + \")\";\n\t  }\n\t\n\t  created.attr(\"transform\", translate);\n\t\n\t  util.applyTransition(selection, g)\n\t    .style(\"opacity\", 1)\n\t    .attr(\"transform\", translate);\n\t}\n\t\n\t},{\"./d3\":11,\"./util\":31}],29:[function(require,module,exports){\n\tvar _ = require(\"./lodash\"),\n\t    layout = require(\"./dagre\").layout;\n\t\n\tmodule.exports = render;\n\t\n\t// This design is based on http://bost.ocks.org/mike/chart/.\n\tfunction render() {\n\t  var createNodes = require(\"./create-nodes\"),\n\t      createClusters = require(\"./create-clusters\"),\n\t      createEdgeLabels = require(\"./create-edge-labels\"),\n\t      createEdgePaths = require(\"./create-edge-paths\"),\n\t      positionNodes = require(\"./position-nodes\"),\n\t      positionEdgeLabels = require(\"./position-edge-labels\"),\n\t      positionClusters = require(\"./position-clusters\"),\n\t      shapes = require(\"./shapes\"),\n\t      arrows = require(\"./arrows\");\n\t\n\t  var fn = function(svg, g) {\n\t    preProcessGraph(g);\n\t\n\t    var outputGroup = createOrSelectGroup(svg, \"output\"),\n\t        clustersGroup = createOrSelectGroup(outputGroup, \"clusters\"),\n\t        edgePathsGroup = createOrSelectGroup(outputGroup, \"edgePaths\"),\n\t        edgeLabels = createEdgeLabels(createOrSelectGroup(outputGroup, \"edgeLabels\"), g),\n\t        nodes = createNodes(createOrSelectGroup(outputGroup, \"nodes\"), g, shapes);\n\t\n\t    layout(g);\n\t\n\t    positionNodes(nodes, g);\n\t    positionEdgeLabels(edgeLabels, g);\n\t    createEdgePaths(edgePathsGroup, g, arrows);\n\t\n\t    var clusters = createClusters(clustersGroup, g);\n\t    positionClusters(clusters, g);\n\t\n\t    postProcessGraph(g);\n\t  };\n\t\n\t  fn.createNodes = function(value) {\n\t    if (!arguments.length) return createNodes;\n\t    createNodes = value;\n\t    return fn;\n\t  };\n\t\n\t  fn.createClusters = function(value) {\n\t    if (!arguments.length) return createClusters;\n\t    createClusters = value;\n\t    return fn;\n\t  };\n\t\n\t  fn.createEdgeLabels = function(value) {\n\t    if (!arguments.length) return createEdgeLabels;\n\t    createEdgeLabels = value;\n\t    return fn;\n\t  };\n\t\n\t  fn.createEdgePaths = function(value) {\n\t    if (!arguments.length) return createEdgePaths;\n\t    createEdgePaths = value;\n\t    return fn;\n\t  };\n\t\n\t  fn.shapes = function(value) {\n\t    if (!arguments.length) return shapes;\n\t    shapes = value;\n\t    return fn;\n\t  };\n\t\n\t  fn.arrows = function(value) {\n\t    if (!arguments.length) return arrows;\n\t    arrows = value;\n\t    return fn;\n\t  };\n\t\n\t  return fn;\n\t}\n\t\n\tvar NODE_DEFAULT_ATTRS = {\n\t  paddingLeft: 10,\n\t  paddingRight: 10,\n\t  paddingTop: 10,\n\t  paddingBottom: 10,\n\t  rx: 0,\n\t  ry: 0,\n\t  shape: \"rect\"\n\t};\n\t\n\tvar EDGE_DEFAULT_ATTRS = {\n\t  arrowhead: \"normal\",\n\t  lineInterpolate: \"linear\"\n\t};\n\t\n\tfunction preProcessGraph(g) {\n\t  g.nodes().forEach(function(v) {\n\t    var node = g.node(v);\n\t    if (!_.has(node, \"label\") && !g.children(v).length) { node.label = v; }\n\t\n\t    if (_.has(node, \"paddingX\")) {\n\t      _.defaults(node, {\n\t        paddingLeft: node.paddingX,\n\t        paddingRight: node.paddingX\n\t      });\n\t    }\n\t\n\t    if (_.has(node, \"paddingY\")) {\n\t      _.defaults(node, {\n\t        paddingTop: node.paddingY,\n\t        paddingBottom: node.paddingY\n\t      });\n\t    }\n\t\n\t    if (_.has(node, \"padding\")) {\n\t      _.defaults(node, {\n\t        paddingLeft: node.padding,\n\t        paddingRight: node.padding,\n\t        paddingTop: node.padding,\n\t        paddingBottom: node.padding\n\t      });\n\t    }\n\t\n\t    _.defaults(node, NODE_DEFAULT_ATTRS);\n\t\n\t    _.each([\"paddingLeft\", \"paddingRight\", \"paddingTop\", \"paddingBottom\"], function(k) {\n\t      node[k] = Number(node[k]);\n\t    });\n\t\n\t    // Save dimensions for restore during post-processing\n\t    if (_.has(node, \"width\")) { node._prevWidth = node.width; }\n\t    if (_.has(node, \"height\")) { node._prevHeight = node.height; }\n\t  });\n\t\n\t  g.edges().forEach(function(e) {\n\t    var edge = g.edge(e);\n\t    if (!_.has(edge, \"label\")) { edge.label = \"\"; }\n\t    _.defaults(edge, EDGE_DEFAULT_ATTRS);\n\t  });\n\t}\n\t\n\tfunction postProcessGraph(g) {\n\t  _.each(g.nodes(), function(v) {\n\t    var node = g.node(v);\n\t\n\t    // Restore original dimensions\n\t    if (_.has(node, \"_prevWidth\")) {\n\t      node.width = node._prevWidth;\n\t    } else {\n\t      delete node.width;\n\t    }\n\t\n\t    if (_.has(node, \"_prevHeight\")) {\n\t      node.height = node._prevHeight;\n\t    } else {\n\t      delete node.height;\n\t    }\n\t\n\t    delete node._prevWidth;\n\t    delete node._prevHeight;\n\t  });\n\t}\n\t\n\tfunction createOrSelectGroup(root, name) {\n\t  var selection = root.select(\"g.\" + name);\n\t  if (selection.empty()) {\n\t    selection = root.append(\"g\").attr(\"class\", name);\n\t  }\n\t  return selection;\n\t}\n\t\n\t},{\"./arrows\":6,\"./create-clusters\":7,\"./create-edge-labels\":8,\"./create-edge-paths\":9,\"./create-nodes\":10,\"./dagre\":12,\"./lodash\":25,\"./position-clusters\":26,\"./position-edge-labels\":27,\"./position-nodes\":28,\"./shapes\":30}],30:[function(require,module,exports){\n\t\"use strict\";\n\t\n\tvar intersectRect = require(\"./intersect/intersect-rect\"),\n\t    intersectEllipse = require(\"./intersect/intersect-ellipse\"),\n\t    intersectCircle = require(\"./intersect/intersect-circle\"),\n\t    intersectPolygon = require(\"./intersect/intersect-polygon\");\n\t\n\tmodule.exports = {\n\t  rect: rect,\n\t  ellipse: ellipse,\n\t  circle: circle,\n\t  diamond: diamond\n\t};\n\t\n\tfunction rect(parent, bbox, node) {\n\t  var shapeSvg = parent.insert(\"rect\", \":first-child\")\n\t        .attr(\"rx\", node.rx)\n\t        .attr(\"ry\", node.ry)\n\t        .attr(\"x\", -bbox.width / 2)\n\t        .attr(\"y\", -bbox.height / 2)\n\t        .attr(\"width\", bbox.width)\n\t        .attr(\"height\", bbox.height);\n\t\n\t  node.intersect = function(point) {\n\t    return intersectRect(node, point);\n\t  };\n\t\n\t  return shapeSvg;\n\t}\n\t\n\tfunction ellipse(parent, bbox, node) {\n\t  var rx = bbox.width / 2,\n\t      ry = bbox.height / 2,\n\t      shapeSvg = parent.insert(\"ellipse\", \":first-child\")\n\t        .attr(\"x\", -bbox.width / 2)\n\t        .attr(\"y\", -bbox.height / 2)\n\t        .attr(\"rx\", rx)\n\t        .attr(\"ry\", ry);\n\t\n\t  node.intersect = function(point) {\n\t    return intersectEllipse(node, rx, ry, point);\n\t  };\n\t\n\t  return shapeSvg;\n\t}\n\t\n\tfunction circle(parent, bbox, node) {\n\t  var r = Math.max(bbox.width, bbox.height) / 2,\n\t      shapeSvg = parent.insert(\"circle\", \":first-child\")\n\t        .attr(\"x\", -bbox.width / 2)\n\t        .attr(\"y\", -bbox.height / 2)\n\t        .attr(\"r\", r);\n\t\n\t  node.intersect = function(point) {\n\t    return intersectCircle(node, r, point);\n\t  };\n\t\n\t  return shapeSvg;\n\t}\n\t\n\t// Circumscribe an ellipse for the bounding box with a diamond shape. I derived\n\t// the function to calculate the diamond shape from:\n\t// http://mathforum.org/kb/message.jspa?messageID=3750236\n\tfunction diamond(parent, bbox, node) {\n\t  var w = (bbox.width * Math.SQRT2) / 2,\n\t      h = (bbox.height * Math.SQRT2) / 2,\n\t      points = [\n\t        { x:  0, y: -h },\n\t        { x: -w, y:  0 },\n\t        { x:  0, y:  h },\n\t        { x:  w, y:  0 }\n\t      ],\n\t      shapeSvg = parent.insert(\"polygon\", \":first-child\")\n\t        .attr(\"points\", points.map(function(p) { return p.x + \",\" + p.y; }).join(\" \"));\n\t\n\t  node.intersect = function(p) {\n\t    return intersectPolygon(node, points, p);\n\t  };\n\t\n\t  return shapeSvg;\n\t}\n\t\n\t},{\"./intersect/intersect-circle\":15,\"./intersect/intersect-ellipse\":16,\"./intersect/intersect-polygon\":19,\"./intersect/intersect-rect\":20}],31:[function(require,module,exports){\n\tvar _ = require(\"./lodash\");\n\t\n\t// Public utility functions\n\tmodule.exports = {\n\t  isSubgraph: isSubgraph,\n\t  edgeToId: edgeToId,\n\t  applyStyle: applyStyle,\n\t  applyClass: applyClass,\n\t  applyTransition: applyTransition\n\t};\n\t\n\t/*\n\t * Returns true if the specified node in the graph is a subgraph node. A\n\t * subgraph node is one that contains other nodes.\n\t */\n\tfunction isSubgraph(g, v) {\n\t  return !!g.children(v).length;\n\t}\n\t\n\tfunction edgeToId(e) {\n\t  return escapeId(e.v) + \":\" + escapeId(e.w) + \":\" + escapeId(e.name);\n\t}\n\t\n\tvar ID_DELIM = /:/g;\n\tfunction escapeId(str) {\n\t  return str ? String(str).replace(ID_DELIM, \"\\\\:\") : \"\";\n\t}\n\t\n\tfunction applyStyle(dom, styleFn) {\n\t  if (styleFn) {\n\t    dom.attr(\"style\", styleFn);\n\t  }\n\t}\n\t\n\tfunction applyClass(dom, classFn, otherClasses) {\n\t  if (classFn) {\n\t    dom\n\t      .attr(\"class\", classFn)\n\t      .attr(\"class\", otherClasses + \" \" + dom.attr(\"class\"));\n\t  }\n\t}\n\t\n\tfunction applyTransition(selection, g) {\n\t  var graph = g.graph();\n\t\n\t  if (_.isPlainObject(graph)) {\n\t    var transition = graph.transition;\n\t    if (_.isFunction(transition)) {\n\t      return transition(selection);\n\t    }\n\t  }\n\t\n\t  return selection;\n\t}\n\t\n\t},{\"./lodash\":25}],32:[function(require,module,exports){\n\tmodule.exports = \"0.4.10\";\n\t\n\t},{}],33:[function(require,module,exports){\n\t/**\n\t * Copyright (c) 2014, Chris Pettitt\n\t * All rights reserved.\n\t *\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are met:\n\t *\n\t * 1. Redistributions of source code must retain the above copyright notice, this\n\t * list of conditions and the following disclaimer.\n\t *\n\t * 2. Redistributions in binary form must reproduce the above copyright notice,\n\t * this list of conditions and the following disclaimer in the documentation\n\t * and/or other materials provided with the distribution.\n\t *\n\t * 3. Neither the name of the copyright holder nor the names of its contributors\n\t * may be used to endorse or promote products derived from this software without\n\t * specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n\t * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\t * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\t * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n\t * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\t * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\t * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\t * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n\t * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\t * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\t\n\tvar lib = require(\"./lib\");\n\t\n\tmodule.exports = {\n\t  Graph: lib.Graph,\n\t  json: require(\"./lib/json\"),\n\t  alg: require(\"./lib/alg\"),\n\t  version: lib.version\n\t};\n\t\n\t},{\"./lib\":49,\"./lib/alg\":40,\"./lib/json\":50}],34:[function(require,module,exports){\n\tvar _ = require(\"../lodash\");\n\t\n\tmodule.exports = components;\n\t\n\tfunction components(g) {\n\t  var visited = {},\n\t      cmpts = [],\n\t      cmpt;\n\t\n\t  function dfs(v) {\n\t    if (_.has(visited, v)) return;\n\t    visited[v] = true;\n\t    cmpt.push(v);\n\t    _.each(g.successors(v), dfs);\n\t    _.each(g.predecessors(v), dfs);\n\t  }\n\t\n\t  _.each(g.nodes(), function(v) {\n\t    cmpt = [];\n\t    dfs(v);\n\t    if (cmpt.length) {\n\t      cmpts.push(cmpt);\n\t    }\n\t  });\n\t\n\t  return cmpts;\n\t}\n\t\n\t},{\"../lodash\":51}],35:[function(require,module,exports){\n\tvar _ = require(\"../lodash\");\n\t\n\tmodule.exports = dfs;\n\t\n\t/*\n\t * A helper that preforms a pre- or post-order traversal on the input graph\n\t * and returns the nodes in the order they were visited. This algorithm treats\n\t * the input as undirected.\n\t *\n\t * Order must be one of \"pre\" or \"post\".\n\t */\n\tfunction dfs(g, vs, order) {\n\t  if (!_.isArray(vs)) {\n\t    vs = [vs];\n\t  }\n\t\n\t  var acc = [],\n\t      visited = {};\n\t  _.each(vs, function(v) {\n\t    if (!g.hasNode(v)) {\n\t      throw new Error(\"Graph does not have node: \" + v);\n\t    }\n\t\n\t    doDfs(g, v, order === \"post\", visited, acc);\n\t  });\n\t  return acc;\n\t}\n\t\n\tfunction doDfs(g, v, postorder, visited, acc) {\n\t  if (!_.has(visited, v)) {\n\t    visited[v] = true;\n\t\n\t    if (!postorder) { acc.push(v); }\n\t    _.each(g.neighbors(v), function(w) {\n\t      doDfs(g, w, postorder, visited, acc);\n\t    });\n\t    if (postorder) { acc.push(v); }\n\t  }\n\t}\n\t\n\t},{\"../lodash\":51}],36:[function(require,module,exports){\n\tvar dijkstra = require(\"./dijkstra\"),\n\t    _ = require(\"../lodash\");\n\t\n\tmodule.exports = dijkstraAll;\n\t\n\tfunction dijkstraAll(g, weightFunc, edgeFunc) {\n\t  return _.transform(g.nodes(), function(acc, v) {\n\t    acc[v] = dijkstra(g, v, weightFunc, edgeFunc);\n\t  }, {});\n\t}\n\t\n\t},{\"../lodash\":51,\"./dijkstra\":37}],37:[function(require,module,exports){\n\tvar _ = require(\"../lodash\"),\n\t    PriorityQueue = require(\"../data/priority-queue\");\n\t\n\tmodule.exports = dijkstra;\n\t\n\tvar DEFAULT_WEIGHT_FUNC = _.constant(1);\n\t\n\tfunction dijkstra(g, source, weightFn, edgeFn) {\n\t  return runDijkstra(g, String(source),\n\t                     weightFn || DEFAULT_WEIGHT_FUNC,\n\t                     edgeFn || function(v) { return g.outEdges(v); });\n\t}\n\t\n\tfunction runDijkstra(g, source, weightFn, edgeFn) {\n\t  var results = {},\n\t      pq = new PriorityQueue(),\n\t      v, vEntry;\n\t\n\t  var updateNeighbors = function(edge) {\n\t    var w = edge.v !== v ? edge.v : edge.w,\n\t        wEntry = results[w],\n\t        weight = weightFn(edge),\n\t        distance = vEntry.distance + weight;\n\t\n\t    if (weight < 0) {\n\t      throw new Error(\"dijkstra does not allow negative edge weights. \" +\n\t                      \"Bad edge: \" + edge + \" Weight: \" + weight);\n\t    }\n\t\n\t    if (distance < wEntry.distance) {\n\t      wEntry.distance = distance;\n\t      wEntry.predecessor = v;\n\t      pq.decrease(w, distance);\n\t    }\n\t  };\n\t\n\t  g.nodes().forEach(function(v) {\n\t    var distance = v === source ? 0 : Number.POSITIVE_INFINITY;\n\t    results[v] = { distance: distance };\n\t    pq.add(v, distance);\n\t  });\n\t\n\t  while (pq.size() > 0) {\n\t    v = pq.removeMin();\n\t    vEntry = results[v];\n\t    if (vEntry.distance === Number.POSITIVE_INFINITY) {\n\t      break;\n\t    }\n\t\n\t    edgeFn(v).forEach(updateNeighbors);\n\t  }\n\t\n\t  return results;\n\t}\n\t\n\t},{\"../data/priority-queue\":47,\"../lodash\":51}],38:[function(require,module,exports){\n\tvar _ = require(\"../lodash\"),\n\t    tarjan = require(\"./tarjan\");\n\t\n\tmodule.exports = findCycles;\n\t\n\tfunction findCycles(g) {\n\t  return _.filter(tarjan(g), function(cmpt) {\n\t    return cmpt.length > 1 || (cmpt.length === 1 && g.hasEdge(cmpt[0], cmpt[0]));\n\t  });\n\t}\n\t\n\t},{\"../lodash\":51,\"./tarjan\":45}],39:[function(require,module,exports){\n\tvar _ = require(\"../lodash\");\n\t\n\tmodule.exports = floydWarshall;\n\t\n\tvar DEFAULT_WEIGHT_FUNC = _.constant(1);\n\t\n\tfunction floydWarshall(g, weightFn, edgeFn) {\n\t  return runFloydWarshall(g,\n\t                          weightFn || DEFAULT_WEIGHT_FUNC,\n\t                          edgeFn || function(v) { return g.outEdges(v); });\n\t}\n\t\n\tfunction runFloydWarshall(g, weightFn, edgeFn) {\n\t  var results = {},\n\t      nodes = g.nodes();\n\t\n\t  nodes.forEach(function(v) {\n\t    results[v] = {};\n\t    results[v][v] = { distance: 0 };\n\t    nodes.forEach(function(w) {\n\t      if (v !== w) {\n\t        results[v][w] = { distance: Number.POSITIVE_INFINITY };\n\t      }\n\t    });\n\t    edgeFn(v).forEach(function(edge) {\n\t      var w = edge.v === v ? edge.w : edge.v,\n\t          d = weightFn(edge);\n\t      results[v][w] = { distance: d, predecessor: v };\n\t    });\n\t  });\n\t\n\t  nodes.forEach(function(k) {\n\t    var rowK = results[k];\n\t    nodes.forEach(function(i) {\n\t      var rowI = results[i];\n\t      nodes.forEach(function(j) {\n\t        var ik = rowI[k];\n\t        var kj = rowK[j];\n\t        var ij = rowI[j];\n\t        var altDistance = ik.distance + kj.distance;\n\t        if (altDistance < ij.distance) {\n\t          ij.distance = altDistance;\n\t          ij.predecessor = kj.predecessor;\n\t        }\n\t      });\n\t    });\n\t  });\n\t\n\t  return results;\n\t}\n\t\n\t},{\"../lodash\":51}],40:[function(require,module,exports){\n\tmodule.exports = {\n\t  components: require(\"./components\"),\n\t  dijkstra: require(\"./dijkstra\"),\n\t  dijkstraAll: require(\"./dijkstra-all\"),\n\t  findCycles: require(\"./find-cycles\"),\n\t  floydWarshall: require(\"./floyd-warshall\"),\n\t  isAcyclic: require(\"./is-acyclic\"),\n\t  postorder: require(\"./postorder\"),\n\t  preorder: require(\"./preorder\"),\n\t  prim: require(\"./prim\"),\n\t  tarjan: require(\"./tarjan\"),\n\t  topsort: require(\"./topsort\")\n\t};\n\t\n\t},{\"./components\":34,\"./dijkstra\":37,\"./dijkstra-all\":36,\"./find-cycles\":38,\"./floyd-warshall\":39,\"./is-acyclic\":41,\"./postorder\":42,\"./preorder\":43,\"./prim\":44,\"./tarjan\":45,\"./topsort\":46}],41:[function(require,module,exports){\n\tvar topsort = require(\"./topsort\");\n\t\n\tmodule.exports = isAcyclic;\n\t\n\tfunction isAcyclic(g) {\n\t  try {\n\t    topsort(g);\n\t  } catch (e) {\n\t    if (e instanceof topsort.CycleException) {\n\t      return false;\n\t    }\n\t    throw e;\n\t  }\n\t  return true;\n\t}\n\t\n\t},{\"./topsort\":46}],42:[function(require,module,exports){\n\tvar dfs = require(\"./dfs\");\n\t\n\tmodule.exports = postorder;\n\t\n\tfunction postorder(g, vs) {\n\t  return dfs(g, vs, \"post\");\n\t}\n\t\n\t},{\"./dfs\":35}],43:[function(require,module,exports){\n\tvar dfs = require(\"./dfs\");\n\t\n\tmodule.exports = preorder;\n\t\n\tfunction preorder(g, vs) {\n\t  return dfs(g, vs, \"pre\");\n\t}\n\t\n\t},{\"./dfs\":35}],44:[function(require,module,exports){\n\tvar _ = require(\"../lodash\"),\n\t    Graph = require(\"../graph\"),\n\t    PriorityQueue = require(\"../data/priority-queue\");\n\t\n\tmodule.exports = prim;\n\t\n\tfunction prim(g, weightFunc) {\n\t  var result = new Graph(),\n\t      parents = {},\n\t      pq = new PriorityQueue(),\n\t      v;\n\t\n\t  function updateNeighbors(edge) {\n\t    var w = edge.v === v ? edge.w : edge.v,\n\t        pri = pq.priority(w);\n\t    if (pri !== undefined) {\n\t      var edgeWeight = weightFunc(edge);\n\t      if (edgeWeight < pri) {\n\t        parents[w] = v;\n\t        pq.decrease(w, edgeWeight);\n\t      }\n\t    }\n\t  }\n\t\n\t  if (g.nodeCount() === 0) {\n\t    return result;\n\t  }\n\t\n\t  _.each(g.nodes(), function(v) {\n\t    pq.add(v, Number.POSITIVE_INFINITY);\n\t    result.setNode(v);\n\t  });\n\t\n\t  // Start from an arbitrary node\n\t  pq.decrease(g.nodes()[0], 0);\n\t\n\t  var init = false;\n\t  while (pq.size() > 0) {\n\t    v = pq.removeMin();\n\t    if (_.has(parents, v)) {\n\t      result.setEdge(v, parents[v]);\n\t    } else if (init) {\n\t      throw new Error(\"Input graph is not connected: \" + g);\n\t    } else {\n\t      init = true;\n\t    }\n\t\n\t    g.nodeEdges(v).forEach(updateNeighbors);\n\t  }\n\t\n\t  return result;\n\t}\n\t\n\t},{\"../data/priority-queue\":47,\"../graph\":48,\"../lodash\":51}],45:[function(require,module,exports){\n\tvar _ = require(\"../lodash\");\n\t\n\tmodule.exports = tarjan;\n\t\n\tfunction tarjan(g) {\n\t  var index = 0,\n\t      stack = [],\n\t      visited = {}, // node id -> { onStack, lowlink, index }\n\t      results = [];\n\t\n\t  function dfs(v) {\n\t    var entry = visited[v] = {\n\t      onStack: true,\n\t      lowlink: index,\n\t      index: index++\n\t    };\n\t    stack.push(v);\n\t\n\t    g.successors(v).forEach(function(w) {\n\t      if (!_.has(visited, w)) {\n\t        dfs(w);\n\t        entry.lowlink = Math.min(entry.lowlink, visited[w].lowlink);\n\t      } else if (visited[w].onStack) {\n\t        entry.lowlink = Math.min(entry.lowlink, visited[w].index);\n\t      }\n\t    });\n\t\n\t    if (entry.lowlink === entry.index) {\n\t      var cmpt = [],\n\t          w;\n\t      do {\n\t        w = stack.pop();\n\t        visited[w].onStack = false;\n\t        cmpt.push(w);\n\t      } while (v !== w);\n\t      results.push(cmpt);\n\t    }\n\t  }\n\t\n\t  g.nodes().forEach(function(v) {\n\t    if (!_.has(visited, v)) {\n\t      dfs(v);\n\t    }\n\t  });\n\t\n\t  return results;\n\t}\n\t\n\t},{\"../lodash\":51}],46:[function(require,module,exports){\n\tvar _ = require(\"../lodash\");\n\t\n\tmodule.exports = topsort;\n\ttopsort.CycleException = CycleException;\n\t\n\tfunction topsort(g) {\n\t  var visited = {},\n\t      stack = {},\n\t      results = [];\n\t\n\t  function visit(node) {\n\t    if (_.has(stack, node)) {\n\t      throw new CycleException();\n\t    }\n\t\n\t    if (!_.has(visited, node)) {\n\t      stack[node] = true;\n\t      visited[node] = true;\n\t      _.each(g.predecessors(node), visit);\n\t      delete stack[node];\n\t      results.push(node);\n\t    }\n\t  }\n\t\n\t  _.each(g.sinks(), visit);\n\t\n\t  if (_.size(visited) !== g.nodeCount()) {\n\t    throw new CycleException();\n\t  }\n\t\n\t  return results;\n\t}\n\t\n\tfunction CycleException() {}\n\t\n\t},{\"../lodash\":51}],47:[function(require,module,exports){\n\tvar _ = require(\"../lodash\");\n\t\n\tmodule.exports = PriorityQueue;\n\t\n\t/**\n\t * A min-priority queue data structure. This algorithm is derived from Cormen,\n\t * et al., \"Introduction to Algorithms\". The basic idea of a min-priority\n\t * queue is that you can efficiently (in O(1) time) get the smallest key in\n\t * the queue. Adding and removing elements takes O(log n) time. A key can\n\t * have its priority decreased in O(log n) time.\n\t */\n\tfunction PriorityQueue() {\n\t  this._arr = [];\n\t  this._keyIndices = {};\n\t}\n\t\n\t/**\n\t * Returns the number of elements in the queue. Takes `O(1)` time.\n\t */\n\tPriorityQueue.prototype.size = function() {\n\t  return this._arr.length;\n\t};\n\t\n\t/**\n\t * Returns the keys that are in the queue. Takes `O(n)` time.\n\t */\n\tPriorityQueue.prototype.keys = function() {\n\t  return this._arr.map(function(x) { return x.key; });\n\t};\n\t\n\t/**\n\t * Returns `true` if **key** is in the queue and `false` if not.\n\t */\n\tPriorityQueue.prototype.has = function(key) {\n\t  return _.has(this._keyIndices, key);\n\t};\n\t\n\t/**\n\t * Returns the priority for **key**. If **key** is not present in the queue\n\t * then this function returns `undefined`. Takes `O(1)` time.\n\t *\n\t * @param {Object} key\n\t */\n\tPriorityQueue.prototype.priority = function(key) {\n\t  var index = this._keyIndices[key];\n\t  if (index !== undefined) {\n\t    return this._arr[index].priority;\n\t  }\n\t};\n\t\n\t/**\n\t * Returns the key for the minimum element in this queue. If the queue is\n\t * empty this function throws an Error. Takes `O(1)` time.\n\t */\n\tPriorityQueue.prototype.min = function() {\n\t  if (this.size() === 0) {\n\t    throw new Error(\"Queue underflow\");\n\t  }\n\t  return this._arr[0].key;\n\t};\n\t\n\t/**\n\t * Inserts a new key into the priority queue. If the key already exists in\n\t * the queue this function returns `false`; otherwise it will return `true`.\n\t * Takes `O(n)` time.\n\t *\n\t * @param {Object} key the key to add\n\t * @param {Number} priority the initial priority for the key\n\t */\n\tPriorityQueue.prototype.add = function(key, priority) {\n\t  var keyIndices = this._keyIndices;\n\t  key = String(key);\n\t  if (!_.has(keyIndices, key)) {\n\t    var arr = this._arr;\n\t    var index = arr.length;\n\t    keyIndices[key] = index;\n\t    arr.push({key: key, priority: priority});\n\t    this._decrease(index);\n\t    return true;\n\t  }\n\t  return false;\n\t};\n\t\n\t/**\n\t * Removes and returns the smallest key in the queue. Takes `O(log n)` time.\n\t */\n\tPriorityQueue.prototype.removeMin = function() {\n\t  this._swap(0, this._arr.length - 1);\n\t  var min = this._arr.pop();\n\t  delete this._keyIndices[min.key];\n\t  this._heapify(0);\n\t  return min.key;\n\t};\n\t\n\t/**\n\t * Decreases the priority for **key** to **priority**. If the new priority is\n\t * greater than the previous priority, this function will throw an Error.\n\t *\n\t * @param {Object} key the key for which to raise priority\n\t * @param {Number} priority the new priority for the key\n\t */\n\tPriorityQueue.prototype.decrease = function(key, priority) {\n\t  var index = this._keyIndices[key];\n\t  if (priority > this._arr[index].priority) {\n\t    throw new Error(\"New priority is greater than current priority. \" +\n\t        \"Key: \" + key + \" Old: \" + this._arr[index].priority + \" New: \" + priority);\n\t  }\n\t  this._arr[index].priority = priority;\n\t  this._decrease(index);\n\t};\n\t\n\tPriorityQueue.prototype._heapify = function(i) {\n\t  var arr = this._arr;\n\t  var l = 2 * i,\n\t      r = l + 1,\n\t      largest = i;\n\t  if (l < arr.length) {\n\t    largest = arr[l].priority < arr[largest].priority ? l : largest;\n\t    if (r < arr.length) {\n\t      largest = arr[r].priority < arr[largest].priority ? r : largest;\n\t    }\n\t    if (largest !== i) {\n\t      this._swap(i, largest);\n\t      this._heapify(largest);\n\t    }\n\t  }\n\t};\n\t\n\tPriorityQueue.prototype._decrease = function(index) {\n\t  var arr = this._arr;\n\t  var priority = arr[index].priority;\n\t  var parent;\n\t  while (index !== 0) {\n\t    parent = index >> 1;\n\t    if (arr[parent].priority < priority) {\n\t      break;\n\t    }\n\t    this._swap(index, parent);\n\t    index = parent;\n\t  }\n\t};\n\t\n\tPriorityQueue.prototype._swap = function(i, j) {\n\t  var arr = this._arr;\n\t  var keyIndices = this._keyIndices;\n\t  var origArrI = arr[i];\n\t  var origArrJ = arr[j];\n\t  arr[i] = origArrJ;\n\t  arr[j] = origArrI;\n\t  keyIndices[origArrJ.key] = i;\n\t  keyIndices[origArrI.key] = j;\n\t};\n\t\n\t},{\"../lodash\":51}],48:[function(require,module,exports){\n\t\"use strict\";\n\t\n\tvar _ = require(\"./lodash\");\n\t\n\tmodule.exports = Graph;\n\t\n\tvar DEFAULT_EDGE_NAME = \"\\x00\",\n\t    GRAPH_NODE = \"\\x00\",\n\t    EDGE_KEY_DELIM = \"\\x01\";\n\t\n\t// Implementation notes:\n\t//\n\t//  * Node id query functions should return string ids for the nodes\n\t//  * Edge id query functions should return an \"edgeObj\", edge object, that is\n\t//    composed of enough information to uniquely identify an edge: {v, w, name}.\n\t//  * Internally we use an \"edgeId\", a stringified form of the edgeObj, to\n\t//    reference edges. This is because we need a performant way to look these\n\t//    edges up and, object properties, which have string keys, are the closest\n\t//    we're going to get to a performant hashtable in JavaScript.\n\t\n\tfunction Graph(opts) {\n\t  this._isDirected = _.has(opts, \"directed\") ? opts.directed : true;\n\t  this._isMultigraph = _.has(opts, \"multigraph\") ? opts.multigraph : false;\n\t  this._isCompound = _.has(opts, \"compound\") ? opts.compound : false;\n\t\n\t  // Label for the graph itself\n\t  this._label = undefined;\n\t\n\t  // Defaults to be set when creating a new node\n\t  this._defaultNodeLabelFn = _.constant(undefined);\n\t\n\t  // Defaults to be set when creating a new edge\n\t  this._defaultEdgeLabelFn = _.constant(undefined);\n\t\n\t  // v -> label\n\t  this._nodes = {};\n\t\n\t  if (this._isCompound) {\n\t    // v -> parent\n\t    this._parent = {};\n\t\n\t    // v -> children\n\t    this._children = {};\n\t    this._children[GRAPH_NODE] = {};\n\t  }\n\t\n\t  // v -> edgeObj\n\t  this._in = {};\n\t\n\t  // u -> v -> Number\n\t  this._preds = {};\n\t\n\t  // v -> edgeObj\n\t  this._out = {};\n\t\n\t  // v -> w -> Number\n\t  this._sucs = {};\n\t\n\t  // e -> edgeObj\n\t  this._edgeObjs = {};\n\t\n\t  // e -> label\n\t  this._edgeLabels = {};\n\t}\n\t\n\t/* Number of nodes in the graph. Should only be changed by the implementation. */\n\tGraph.prototype._nodeCount = 0;\n\t\n\t/* Number of edges in the graph. Should only be changed by the implementation. */\n\tGraph.prototype._edgeCount = 0;\n\t\n\t\n\t/* === Graph functions ========= */\n\t\n\tGraph.prototype.isDirected = function() {\n\t  return this._isDirected;\n\t};\n\t\n\tGraph.prototype.isMultigraph = function() {\n\t  return this._isMultigraph;\n\t};\n\t\n\tGraph.prototype.isCompound = function() {\n\t  return this._isCompound;\n\t};\n\t\n\tGraph.prototype.setGraph = function(label) {\n\t  this._label = label;\n\t  return this;\n\t};\n\t\n\tGraph.prototype.graph = function() {\n\t  return this._label;\n\t};\n\t\n\t\n\t/* === Node functions ========== */\n\t\n\tGraph.prototype.setDefaultNodeLabel = function(newDefault) {\n\t  if (!_.isFunction(newDefault)) {\n\t    newDefault = _.constant(newDefault);\n\t  }\n\t  this._defaultNodeLabelFn = newDefault;\n\t  return this;\n\t};\n\t\n\tGraph.prototype.nodeCount = function() {\n\t  return this._nodeCount;\n\t};\n\t\n\tGraph.prototype.nodes = function() {\n\t  return _.keys(this._nodes);\n\t};\n\t\n\tGraph.prototype.sources = function() {\n\t  return _.filter(this.nodes(), function(v) {\n\t    return _.isEmpty(this._in[v]);\n\t  }, this);\n\t};\n\t\n\tGraph.prototype.sinks = function() {\n\t  return _.filter(this.nodes(), function(v) {\n\t    return _.isEmpty(this._out[v]);\n\t  }, this);\n\t};\n\t\n\tGraph.prototype.setNodes = function(vs, value) {\n\t  var args = arguments;\n\t  _.each(vs, function(v) {\n\t    if (args.length > 1) {\n\t      this.setNode(v, value);\n\t    } else {\n\t      this.setNode(v);\n\t    }\n\t  }, this);\n\t  return this;\n\t};\n\t\n\tGraph.prototype.setNode = function(v, value) {\n\t  if (_.has(this._nodes, v)) {\n\t    if (arguments.length > 1) {\n\t      this._nodes[v] = value;\n\t    }\n\t    return this;\n\t  }\n\t\n\t  this._nodes[v] = arguments.length > 1 ? value : this._defaultNodeLabelFn(v);\n\t  if (this._isCompound) {\n\t    this._parent[v] = GRAPH_NODE;\n\t    this._children[v] = {};\n\t    this._children[GRAPH_NODE][v] = true;\n\t  }\n\t  this._in[v] = {};\n\t  this._preds[v] = {};\n\t  this._out[v] = {};\n\t  this._sucs[v] = {};\n\t  ++this._nodeCount;\n\t  return this;\n\t};\n\t\n\tGraph.prototype.node = function(v) {\n\t  return this._nodes[v];\n\t};\n\t\n\tGraph.prototype.hasNode = function(v) {\n\t  return _.has(this._nodes, v);\n\t};\n\t\n\tGraph.prototype.removeNode =  function(v) {\n\t  var self = this;\n\t  if (_.has(this._nodes, v)) {\n\t    var removeEdge = function(e) { self.removeEdge(self._edgeObjs[e]); };\n\t    delete this._nodes[v];\n\t    if (this._isCompound) {\n\t      this._removeFromParentsChildList(v);\n\t      delete this._parent[v];\n\t      _.each(this.children(v), function(child) {\n\t        this.setParent(child);\n\t      }, this);\n\t      delete this._children[v];\n\t    }\n\t    _.each(_.keys(this._in[v]), removeEdge);\n\t    delete this._in[v];\n\t    delete this._preds[v];\n\t    _.each(_.keys(this._out[v]), removeEdge);\n\t    delete this._out[v];\n\t    delete this._sucs[v];\n\t    --this._nodeCount;\n\t  }\n\t  return this;\n\t};\n\t\n\tGraph.prototype.setParent = function(v, parent) {\n\t  if (!this._isCompound) {\n\t    throw new Error(\"Cannot set parent in a non-compound graph\");\n\t  }\n\t\n\t  if (_.isUndefined(parent)) {\n\t    parent = GRAPH_NODE;\n\t  } else {\n\t    // Coerce parent to string\n\t    parent += \"\";\n\t    for (var ancestor = parent;\n\t         !_.isUndefined(ancestor);\n\t         ancestor = this.parent(ancestor)) {\n\t      if (ancestor === v) {\n\t        throw new Error(\"Setting \" + parent+ \" as parent of \" + v +\n\t                        \" would create create a cycle\");\n\t      }\n\t    }\n\t\n\t    this.setNode(parent);\n\t  }\n\t\n\t  this.setNode(v);\n\t  this._removeFromParentsChildList(v);\n\t  this._parent[v] = parent;\n\t  this._children[parent][v] = true;\n\t  return this;\n\t};\n\t\n\tGraph.prototype._removeFromParentsChildList = function(v) {\n\t  delete this._children[this._parent[v]][v];\n\t};\n\t\n\tGraph.prototype.parent = function(v) {\n\t  if (this._isCompound) {\n\t    var parent = this._parent[v];\n\t    if (parent !== GRAPH_NODE) {\n\t      return parent;\n\t    }\n\t  }\n\t};\n\t\n\tGraph.prototype.children = function(v) {\n\t  if (_.isUndefined(v)) {\n\t    v = GRAPH_NODE;\n\t  }\n\t\n\t  if (this._isCompound) {\n\t    var children = this._children[v];\n\t    if (children) {\n\t      return _.keys(children);\n\t    }\n\t  } else if (v === GRAPH_NODE) {\n\t    return this.nodes();\n\t  } else if (this.hasNode(v)) {\n\t    return [];\n\t  }\n\t};\n\t\n\tGraph.prototype.predecessors = function(v) {\n\t  var predsV = this._preds[v];\n\t  if (predsV) {\n\t    return _.keys(predsV);\n\t  }\n\t};\n\t\n\tGraph.prototype.successors = function(v) {\n\t  var sucsV = this._sucs[v];\n\t  if (sucsV) {\n\t    return _.keys(sucsV);\n\t  }\n\t};\n\t\n\tGraph.prototype.neighbors = function(v) {\n\t  var preds = this.predecessors(v);\n\t  if (preds) {\n\t    return _.union(preds, this.successors(v));\n\t  }\n\t};\n\t\n\tGraph.prototype.filterNodes = function(filter) {\n\t  var copy = new this.constructor({\n\t    directed: this._isDirected,\n\t    multigraph: this._isMultigraph,\n\t    compound: this._isCompound\n\t  });\n\t\n\t  copy.setGraph(this.graph());\n\t\n\t  _.each(this._nodes, function(value, v) {\n\t    if (filter(v)) {\n\t      copy.setNode(v, value);\n\t    }\n\t  }, this);\n\t\n\t  _.each(this._edgeObjs, function(e) {\n\t    if (copy.hasNode(e.v) && copy.hasNode(e.w)) {\n\t      copy.setEdge(e, this.edge(e));\n\t    }\n\t  }, this);\n\t\n\t  var self = this;\n\t  var parents = {};\n\t  function findParent(v) {\n\t    var parent = self.parent(v);\n\t    if (parent === undefined || copy.hasNode(parent)) {\n\t      parents[v] = parent;\n\t      return parent;\n\t    } else if (parent in parents) {\n\t      return parents[parent];\n\t    } else {\n\t      return findParent(parent);\n\t    }\n\t  }\n\t\n\t  if (this._isCompound) {\n\t    _.each(copy.nodes(), function(v) {\n\t      copy.setParent(v, findParent(v));\n\t    });\n\t  }\n\t\n\t  return copy;\n\t};\n\t\n\t/* === Edge functions ========== */\n\t\n\tGraph.prototype.setDefaultEdgeLabel = function(newDefault) {\n\t  if (!_.isFunction(newDefault)) {\n\t    newDefault = _.constant(newDefault);\n\t  }\n\t  this._defaultEdgeLabelFn = newDefault;\n\t  return this;\n\t};\n\t\n\tGraph.prototype.edgeCount = function() {\n\t  return this._edgeCount;\n\t};\n\t\n\tGraph.prototype.edges = function() {\n\t  return _.values(this._edgeObjs);\n\t};\n\t\n\tGraph.prototype.setPath = function(vs, value) {\n\t  var self = this,\n\t      args = arguments;\n\t  _.reduce(vs, function(v, w) {\n\t    if (args.length > 1) {\n\t      self.setEdge(v, w, value);\n\t    } else {\n\t      self.setEdge(v, w);\n\t    }\n\t    return w;\n\t  });\n\t  return this;\n\t};\n\t\n\t/*\n\t * setEdge(v, w, [value, [name]])\n\t * setEdge({ v, w, [name] }, [value])\n\t */\n\tGraph.prototype.setEdge = function() {\n\t  var v, w, name, value,\n\t      valueSpecified = false,\n\t      arg0 = arguments[0];\n\t\n\t  if (typeof arg0 === \"object\" && arg0 !== null && \"v\" in arg0) {\n\t    v = arg0.v;\n\t    w = arg0.w;\n\t    name = arg0.name;\n\t    if (arguments.length === 2) {\n\t      value = arguments[1];\n\t      valueSpecified = true;\n\t    }\n\t  } else {\n\t    v = arg0;\n\t    w = arguments[1];\n\t    name = arguments[3];\n\t    if (arguments.length > 2) {\n\t      value = arguments[2];\n\t      valueSpecified = true;\n\t    }\n\t  }\n\t\n\t  v = \"\" + v;\n\t  w = \"\" + w;\n\t  if (!_.isUndefined(name)) {\n\t    name = \"\" + name;\n\t  }\n\t\n\t  var e = edgeArgsToId(this._isDirected, v, w, name);\n\t  if (_.has(this._edgeLabels, e)) {\n\t    if (valueSpecified) {\n\t      this._edgeLabels[e] = value;\n\t    }\n\t    return this;\n\t  }\n\t\n\t  if (!_.isUndefined(name) && !this._isMultigraph) {\n\t    throw new Error(\"Cannot set a named edge when isMultigraph = false\");\n\t  }\n\t\n\t  // It didn't exist, so we need to create it.\n\t  // First ensure the nodes exist.\n\t  this.setNode(v);\n\t  this.setNode(w);\n\t\n\t  this._edgeLabels[e] = valueSpecified ? value : this._defaultEdgeLabelFn(v, w, name);\n\t\n\t  var edgeObj = edgeArgsToObj(this._isDirected, v, w, name);\n\t  // Ensure we add undirected edges in a consistent way.\n\t  v = edgeObj.v;\n\t  w = edgeObj.w;\n\t\n\t  Object.freeze(edgeObj);\n\t  this._edgeObjs[e] = edgeObj;\n\t  incrementOrInitEntry(this._preds[w], v);\n\t  incrementOrInitEntry(this._sucs[v], w);\n\t  this._in[w][e] = edgeObj;\n\t  this._out[v][e] = edgeObj;\n\t  this._edgeCount++;\n\t  return this;\n\t};\n\t\n\tGraph.prototype.edge = function(v, w, name) {\n\t  var e = (arguments.length === 1\n\t            ? edgeObjToId(this._isDirected, arguments[0])\n\t            : edgeArgsToId(this._isDirected, v, w, name));\n\t  return this._edgeLabels[e];\n\t};\n\t\n\tGraph.prototype.hasEdge = function(v, w, name) {\n\t  var e = (arguments.length === 1\n\t            ? edgeObjToId(this._isDirected, arguments[0])\n\t            : edgeArgsToId(this._isDirected, v, w, name));\n\t  return _.has(this._edgeLabels, e);\n\t};\n\t\n\tGraph.prototype.removeEdge = function(v, w, name) {\n\t  var e = (arguments.length === 1\n\t            ? edgeObjToId(this._isDirected, arguments[0])\n\t            : edgeArgsToId(this._isDirected, v, w, name)),\n\t      edge = this._edgeObjs[e];\n\t  if (edge) {\n\t    v = edge.v;\n\t    w = edge.w;\n\t    delete this._edgeLabels[e];\n\t    delete this._edgeObjs[e];\n\t    decrementOrRemoveEntry(this._preds[w], v);\n\t    decrementOrRemoveEntry(this._sucs[v], w);\n\t    delete this._in[w][e];\n\t    delete this._out[v][e];\n\t    this._edgeCount--;\n\t  }\n\t  return this;\n\t};\n\t\n\tGraph.prototype.inEdges = function(v, u) {\n\t  var inV = this._in[v];\n\t  if (inV) {\n\t    var edges = _.values(inV);\n\t    if (!u) {\n\t      return edges;\n\t    }\n\t    return _.filter(edges, function(edge) { return edge.v === u; });\n\t  }\n\t};\n\t\n\tGraph.prototype.outEdges = function(v, w) {\n\t  var outV = this._out[v];\n\t  if (outV) {\n\t    var edges = _.values(outV);\n\t    if (!w) {\n\t      return edges;\n\t    }\n\t    return _.filter(edges, function(edge) { return edge.w === w; });\n\t  }\n\t};\n\t\n\tGraph.prototype.nodeEdges = function(v, w) {\n\t  var inEdges = this.inEdges(v, w);\n\t  if (inEdges) {\n\t    return inEdges.concat(this.outEdges(v, w));\n\t  }\n\t};\n\t\n\tfunction incrementOrInitEntry(map, k) {\n\t  if (map[k]) {\n\t    map[k]++;\n\t  } else {\n\t    map[k] = 1;\n\t  }\n\t}\n\t\n\tfunction decrementOrRemoveEntry(map, k) {\n\t  if (!--map[k]) { delete map[k]; }\n\t}\n\t\n\tfunction edgeArgsToId(isDirected, v_, w_, name) {\n\t  var v = \"\" + v_;\n\t  var w = \"\" + w_;\n\t  if (!isDirected && v > w) {\n\t    var tmp = v;\n\t    v = w;\n\t    w = tmp;\n\t  }\n\t  return v + EDGE_KEY_DELIM + w + EDGE_KEY_DELIM +\n\t             (_.isUndefined(name) ? DEFAULT_EDGE_NAME : name);\n\t}\n\t\n\tfunction edgeArgsToObj(isDirected, v_, w_, name) {\n\t  var v = \"\" + v_;\n\t  var w = \"\" + w_;\n\t  if (!isDirected && v > w) {\n\t    var tmp = v;\n\t    v = w;\n\t    w = tmp;\n\t  }\n\t  var edgeObj =  { v: v, w: w };\n\t  if (name) {\n\t    edgeObj.name = name;\n\t  }\n\t  return edgeObj;\n\t}\n\t\n\tfunction edgeObjToId(isDirected, edgeObj) {\n\t  return edgeArgsToId(isDirected, edgeObj.v, edgeObj.w, edgeObj.name);\n\t}\n\t\n\t},{\"./lodash\":51}],49:[function(require,module,exports){\n\t// Includes only the \"core\" of graphlib\n\tmodule.exports = {\n\t  Graph: require(\"./graph\"),\n\t  version: require(\"./version\")\n\t};\n\t\n\t},{\"./graph\":48,\"./version\":52}],50:[function(require,module,exports){\n\tvar _ = require(\"./lodash\"),\n\t    Graph = require(\"./graph\");\n\t\n\tmodule.exports = {\n\t  write: write,\n\t  read: read\n\t};\n\t\n\tfunction write(g) {\n\t  var json = {\n\t    options: {\n\t      directed: g.isDirected(),\n\t      multigraph: g.isMultigraph(),\n\t      compound: g.isCompound()\n\t    },\n\t    nodes: writeNodes(g),\n\t    edges: writeEdges(g)\n\t  };\n\t  if (!_.isUndefined(g.graph())) {\n\t    json.value = _.clone(g.graph());\n\t  }\n\t  return json;\n\t}\n\t\n\tfunction writeNodes(g) {\n\t  return _.map(g.nodes(), function(v) {\n\t    var nodeValue = g.node(v),\n\t        parent = g.parent(v),\n\t        node = { v: v };\n\t    if (!_.isUndefined(nodeValue)) {\n\t      node.value = nodeValue;\n\t    }\n\t    if (!_.isUndefined(parent)) {\n\t      node.parent = parent;\n\t    }\n\t    return node;\n\t  });\n\t}\n\t\n\tfunction writeEdges(g) {\n\t  return _.map(g.edges(), function(e) {\n\t    var edgeValue = g.edge(e),\n\t        edge = { v: e.v, w: e.w };\n\t    if (!_.isUndefined(e.name)) {\n\t      edge.name = e.name;\n\t    }\n\t    if (!_.isUndefined(edgeValue)) {\n\t      edge.value = edgeValue;\n\t    }\n\t    return edge;\n\t  });\n\t}\n\t\n\tfunction read(json) {\n\t  var g = new Graph(json.options).setGraph(json.value);\n\t  _.each(json.nodes, function(entry) {\n\t    g.setNode(entry.v, entry.value);\n\t    if (entry.parent) {\n\t      g.setParent(entry.v, entry.parent);\n\t    }\n\t  });\n\t  _.each(json.edges, function(entry) {\n\t    g.setEdge({ v: entry.v, w: entry.w, name: entry.name }, entry.value);\n\t  });\n\t  return g;\n\t}\n\t\n\t},{\"./graph\":48,\"./lodash\":51}],51:[function(require,module,exports){\n\t/* global window */\n\t\n\tvar lodash;\n\t\n\tif (typeof require === \"function\") {\n\t  try {\n\t    lodash = require(\"lodash\");\n\t  } catch (e) {}\n\t}\n\t\n\tif (!lodash) {\n\t  lodash = window._;\n\t}\n\t\n\tmodule.exports = lodash;\n\t\n\t},{\"lodash\":53}],52:[function(require,module,exports){\n\tmodule.exports = '1.0.7';\n\t\n\t},{}],53:[function(require,module,exports){\n\t(function (global){\n\t/**\n\t * @license\n\t * lodash 3.10.1 (Custom Build) <https://lodash.com/>\n\t * Build: `lodash modern -d -o ./index.js`\n\t * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n\t * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n\t * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t * Available under MIT license <https://lodash.com/license>\n\t */\n\t;(function() {\n\t\n\t  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n\t  var undefined;\n\t\n\t  /** Used as the semantic version number. */\n\t  var VERSION = '3.10.1';\n\t\n\t  /** Used to compose bitmasks for wrapper metadata. */\n\t  var BIND_FLAG = 1,\n\t      BIND_KEY_FLAG = 2,\n\t      CURRY_BOUND_FLAG = 4,\n\t      CURRY_FLAG = 8,\n\t      CURRY_RIGHT_FLAG = 16,\n\t      PARTIAL_FLAG = 32,\n\t      PARTIAL_RIGHT_FLAG = 64,\n\t      ARY_FLAG = 128,\n\t      REARG_FLAG = 256;\n\t\n\t  /** Used as default options for `_.trunc`. */\n\t  var DEFAULT_TRUNC_LENGTH = 30,\n\t      DEFAULT_TRUNC_OMISSION = '...';\n\t\n\t  /** Used to detect when a function becomes hot. */\n\t  var HOT_COUNT = 150,\n\t      HOT_SPAN = 16;\n\t\n\t  /** Used as the size to enable large array optimizations. */\n\t  var LARGE_ARRAY_SIZE = 200;\n\t\n\t  /** Used to indicate the type of lazy iteratees. */\n\t  var LAZY_FILTER_FLAG = 1,\n\t      LAZY_MAP_FLAG = 2;\n\t\n\t  /** Used as the `TypeError` message for \"Functions\" methods. */\n\t  var FUNC_ERROR_TEXT = 'Expected a function';\n\t\n\t  /** Used as the internal argument placeholder. */\n\t  var PLACEHOLDER = '__lodash_placeholder__';\n\t\n\t  /** `Object#toString` result references. */\n\t  var argsTag = '[object Arguments]',\n\t      arrayTag = '[object Array]',\n\t      boolTag = '[object Boolean]',\n\t      dateTag = '[object Date]',\n\t      errorTag = '[object Error]',\n\t      funcTag = '[object Function]',\n\t      mapTag = '[object Map]',\n\t      numberTag = '[object Number]',\n\t      objectTag = '[object Object]',\n\t      regexpTag = '[object RegExp]',\n\t      setTag = '[object Set]',\n\t      stringTag = '[object String]',\n\t      weakMapTag = '[object WeakMap]';\n\t\n\t  var arrayBufferTag = '[object ArrayBuffer]',\n\t      float32Tag = '[object Float32Array]',\n\t      float64Tag = '[object Float64Array]',\n\t      int8Tag = '[object Int8Array]',\n\t      int16Tag = '[object Int16Array]',\n\t      int32Tag = '[object Int32Array]',\n\t      uint8Tag = '[object Uint8Array]',\n\t      uint8ClampedTag = '[object Uint8ClampedArray]',\n\t      uint16Tag = '[object Uint16Array]',\n\t      uint32Tag = '[object Uint32Array]';\n\t\n\t  /** Used to match empty string literals in compiled template source. */\n\t  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n\t      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n\t      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\t\n\t  /** Used to match HTML entities and HTML characters. */\n\t  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n\t      reUnescapedHtml = /[&<>\"'`]/g,\n\t      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n\t      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\t\n\t  /** Used to match template delimiters. */\n\t  var reEscape = /<%-([\\s\\S]+?)%>/g,\n\t      reEvaluate = /<%([\\s\\S]+?)%>/g,\n\t      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\t\n\t  /** Used to match property names within property paths. */\n\t  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n\t      reIsPlainProp = /^\\w*$/,\n\t      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\t\n\t  /**\n\t   * Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns)\n\t   * and those outlined by [`EscapeRegExpPattern`](http://ecma-international.org/ecma-262/6.0/#sec-escaperegexppattern).\n\t   */\n\t  var reRegExpChars = /^[:!,]|[\\\\^$.*+?()[\\]{}|\\/]|(^[0-9a-fA-Fnrtuvx])|([\\n\\r\\u2028\\u2029])/g,\n\t      reHasRegExpChars = RegExp(reRegExpChars.source);\n\t\n\t  /** Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks). */\n\t  var reComboMark = /[\\u0300-\\u036f\\ufe20-\\ufe23]/g;\n\t\n\t  /** Used to match backslashes in property paths. */\n\t  var reEscapeChar = /\\\\(\\\\)?/g;\n\t\n\t  /** Used to match [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components). */\n\t  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\t\n\t  /** Used to match `RegExp` flags from their coerced string values. */\n\t  var reFlags = /\\w*$/;\n\t\n\t  /** Used to detect hexadecimal string values. */\n\t  var reHasHexPrefix = /^0[xX]/;\n\t\n\t  /** Used to detect host constructors (Safari > 5). */\n\t  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\t\n\t  /** Used to detect unsigned integer values. */\n\t  var reIsUint = /^\\d+$/;\n\t\n\t  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n\t  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\t\n\t  /** Used to ensure capturing order of template delimiters. */\n\t  var reNoMatch = /($^)/;\n\t\n\t  /** Used to match unescaped characters in compiled string literals. */\n\t  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\t\n\t  /** Used to match words to create compound words. */\n\t  var reWords = (function() {\n\t    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n\t        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n\t\n\t    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n\t  }());\n\t\n\t  /** Used to assign default `context` object properties. */\n\t  var contextProps = [\n\t    'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n\t    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number',\n\t    'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'isFinite',\n\t    'parseFloat', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',\n\t    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap'\n\t  ];\n\t\n\t  /** Used to make template sourceURLs easier to identify. */\n\t  var templateCounter = -1;\n\t\n\t  /** Used to identify `toStringTag` values of typed arrays. */\n\t  var typedArrayTags = {};\n\t  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n\t  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n\t  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n\t  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n\t  typedArrayTags[uint32Tag] = true;\n\t  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n\t  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n\t  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n\t  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n\t  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n\t  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n\t  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\t\n\t  /** Used to identify `toStringTag` values supported by `_.clone`. */\n\t  var cloneableTags = {};\n\t  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n\t  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n\t  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n\t  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n\t  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n\t  cloneableTags[numberTag] = cloneableTags[objectTag] =\n\t  cloneableTags[regexpTag] = cloneableTags[stringTag] =\n\t  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n\t  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n\t  cloneableTags[errorTag] = cloneableTags[funcTag] =\n\t  cloneableTags[mapTag] = cloneableTags[setTag] =\n\t  cloneableTags[weakMapTag] = false;\n\t\n\t  /** Used to map latin-1 supplementary letters to basic latin letters. */\n\t  var deburredLetters = {\n\t    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n\t    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n\t    '\\xc7': 'C',  '\\xe7': 'c',\n\t    '\\xd0': 'D',  '\\xf0': 'd',\n\t    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n\t    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n\t    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n\t    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n\t    '\\xd1': 'N',  '\\xf1': 'n',\n\t    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n\t    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n\t    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n\t    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n\t    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n\t    '\\xc6': 'Ae', '\\xe6': 'ae',\n\t    '\\xde': 'Th', '\\xfe': 'th',\n\t    '\\xdf': 'ss'\n\t  };\n\t\n\t  /** Used to map characters to HTML entities. */\n\t  var htmlEscapes = {\n\t    '&': '&amp;',\n\t    '<': '&lt;',\n\t    '>': '&gt;',\n\t    '\"': '&quot;',\n\t    \"'\": '&#39;',\n\t    '`': '&#96;'\n\t  };\n\t\n\t  /** Used to map HTML entities to characters. */\n\t  var htmlUnescapes = {\n\t    '&amp;': '&',\n\t    '&lt;': '<',\n\t    '&gt;': '>',\n\t    '&quot;': '\"',\n\t    '&#39;': \"'\",\n\t    '&#96;': '`'\n\t  };\n\t\n\t  /** Used to determine if values are of the language type `Object`. */\n\t  var objectTypes = {\n\t    'function': true,\n\t    'object': true\n\t  };\n\t\n\t  /** Used to escape characters for inclusion in compiled regexes. */\n\t  var regexpEscapes = {\n\t    '0': 'x30', '1': 'x31', '2': 'x32', '3': 'x33', '4': 'x34',\n\t    '5': 'x35', '6': 'x36', '7': 'x37', '8': 'x38', '9': 'x39',\n\t    'A': 'x41', 'B': 'x42', 'C': 'x43', 'D': 'x44', 'E': 'x45', 'F': 'x46',\n\t    'a': 'x61', 'b': 'x62', 'c': 'x63', 'd': 'x64', 'e': 'x65', 'f': 'x66',\n\t    'n': 'x6e', 'r': 'x72', 't': 'x74', 'u': 'x75', 'v': 'x76', 'x': 'x78'\n\t  };\n\t\n\t  /** Used to escape characters for inclusion in compiled string literals. */\n\t  var stringEscapes = {\n\t    '\\\\': '\\\\',\n\t    \"'\": \"'\",\n\t    '\\n': 'n',\n\t    '\\r': 'r',\n\t    '\\u2028': 'u2028',\n\t    '\\u2029': 'u2029'\n\t  };\n\t\n\t  /** Detect free variable `exports`. */\n\t  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\t\n\t  /** Detect free variable `module`. */\n\t  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\t\n\t  /** Detect free variable `global` from Node.js. */\n\t  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global && global.Object && global;\n\t\n\t  /** Detect free variable `self`. */\n\t  var freeSelf = objectTypes[typeof self] && self && self.Object && self;\n\t\n\t  /** Detect free variable `window`. */\n\t  var freeWindow = objectTypes[typeof window] && window && window.Object && window;\n\t\n\t  /** Detect the popular CommonJS extension `module.exports`. */\n\t  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\t\n\t  /**\n\t   * Used as a reference to the global object.\n\t   *\n\t   * The `this` value is used if it's the global object to avoid Greasemonkey's\n\t   * restricted `window` object, otherwise the `window` object is used.\n\t   */\n\t  var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || freeSelf || this;\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * The base implementation of `compareAscending` which compares values and\n\t   * sorts them in ascending order without guaranteeing a stable sort.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to compare.\n\t   * @param {*} other The other value to compare.\n\t   * @returns {number} Returns the sort order indicator for `value`.\n\t   */\n\t  function baseCompareAscending(value, other) {\n\t    if (value !== other) {\n\t      var valIsNull = value === null,\n\t          valIsUndef = value === undefined,\n\t          valIsReflexive = value === value;\n\t\n\t      var othIsNull = other === null,\n\t          othIsUndef = other === undefined,\n\t          othIsReflexive = other === other;\n\t\n\t      if ((value > other && !othIsNull) || !valIsReflexive ||\n\t          (valIsNull && !othIsUndef && othIsReflexive) ||\n\t          (valIsUndef && othIsReflexive)) {\n\t        return 1;\n\t      }\n\t      if ((value < other && !valIsNull) || !othIsReflexive ||\n\t          (othIsNull && !valIsUndef && valIsReflexive) ||\n\t          (othIsUndef && valIsReflexive)) {\n\t        return -1;\n\t      }\n\t    }\n\t    return 0;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n\t   * support for callback shorthands and `this` binding.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseFindIndex(array, predicate, fromRight) {\n\t    var length = array.length,\n\t        index = fromRight ? length : -1;\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      if (predicate(array[index], index, array)) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.indexOf` without support for binary searches.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseIndexOf(array, value, fromIndex) {\n\t    if (value !== value) {\n\t      return indexOfNaN(array, fromIndex);\n\t    }\n\t    var index = fromIndex - 1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (array[index] === value) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.isFunction` without support for environments\n\t   * with incorrect `typeof` results.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t   */\n\t  function baseIsFunction(value) {\n\t    // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n\t    // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n\t    return typeof value == 'function' || false;\n\t  }\n\t\n\t  /**\n\t   * Converts `value` to a string if it's not one. An empty string is returned\n\t   * for `null` or `undefined` values.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to process.\n\t   * @returns {string} Returns the string.\n\t   */\n\t  function baseToString(value) {\n\t    return value == null ? '' : (value + '');\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n\t   * of `string` that is not found in `chars`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @param {string} chars The characters to find.\n\t   * @returns {number} Returns the index of the first character not found in `chars`.\n\t   */\n\t  function charsLeftIndex(string, chars) {\n\t    var index = -1,\n\t        length = string.length;\n\t\n\t    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimRight` to get the index of the last character\n\t   * of `string` that is not found in `chars`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @param {string} chars The characters to find.\n\t   * @returns {number} Returns the index of the last character not found in `chars`.\n\t   */\n\t  function charsRightIndex(string, chars) {\n\t    var index = string.length;\n\t\n\t    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.sortBy` to compare transformed elements of a collection and stable\n\t   * sort them in ascending order.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to compare.\n\t   * @param {Object} other The other object to compare.\n\t   * @returns {number} Returns the sort order indicator for `object`.\n\t   */\n\t  function compareAscending(object, other) {\n\t    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);\n\t  }\n\t\n\t  /**\n\t   * Used by `_.sortByOrder` to compare multiple properties of a value to another\n\t   * and stable sort them.\n\t   *\n\t   * If `orders` is unspecified, all valuess are sorted in ascending order. Otherwise,\n\t   * a value is sorted in ascending order if its corresponding order is \"asc\", and\n\t   * descending if \"desc\".\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to compare.\n\t   * @param {Object} other The other object to compare.\n\t   * @param {boolean[]} orders The order to sort by for each property.\n\t   * @returns {number} Returns the sort order indicator for `object`.\n\t   */\n\t  function compareMultiple(object, other, orders) {\n\t    var index = -1,\n\t        objCriteria = object.criteria,\n\t        othCriteria = other.criteria,\n\t        length = objCriteria.length,\n\t        ordersLength = orders.length;\n\t\n\t    while (++index < length) {\n\t      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);\n\t      if (result) {\n\t        if (index >= ordersLength) {\n\t          return result;\n\t        }\n\t        var order = orders[index];\n\t        return result * ((order === 'asc' || order === true) ? 1 : -1);\n\t      }\n\t    }\n\t    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n\t    // that causes it, under certain circumstances, to provide the same value for\n\t    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n\t    // for more details.\n\t    //\n\t    // This also ensures a stable sort in V8 and other engines.\n\t    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n\t    return object.index - other.index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n\t   *\n\t   * @private\n\t   * @param {string} letter The matched letter to deburr.\n\t   * @returns {string} Returns the deburred letter.\n\t   */\n\t  function deburrLetter(letter) {\n\t    return deburredLetters[letter];\n\t  }\n\t\n\t  /**\n\t   * Used by `_.escape` to convert characters to HTML entities.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeHtmlChar(chr) {\n\t    return htmlEscapes[chr];\n\t  }\n\t\n\t  /**\n\t   * Used by `_.escapeRegExp` to escape characters for inclusion in compiled regexes.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @param {string} leadingChar The capture group for a leading character.\n\t   * @param {string} whitespaceChar The capture group for a whitespace character.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeRegExpChar(chr, leadingChar, whitespaceChar) {\n\t    if (leadingChar) {\n\t      chr = regexpEscapes[chr];\n\t    } else if (whitespaceChar) {\n\t      chr = stringEscapes[chr];\n\t    }\n\t    return '\\\\' + chr;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeStringChar(chr) {\n\t    return '\\\\' + stringEscapes[chr];\n\t  }\n\t\n\t  /**\n\t   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n\t   */\n\t  function indexOfNaN(array, fromIndex, fromRight) {\n\t    var length = array.length,\n\t        index = fromIndex + (fromRight ? 0 : -1);\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      var other = array[index];\n\t      if (other !== other) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * Checks if `value` is object-like.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t   */\n\t  function isObjectLike(value) {\n\t    return !!value && typeof value == 'object';\n\t  }\n\t\n\t  /**\n\t   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n\t   * character code is whitespace.\n\t   *\n\t   * @private\n\t   * @param {number} charCode The character code to inspect.\n\t   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.\n\t   */\n\t  function isSpace(charCode) {\n\t    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 ||\n\t      (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));\n\t  }\n\t\n\t  /**\n\t   * Replaces all `placeholder` elements in `array` with an internal placeholder\n\t   * and returns an array of their indexes.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {*} placeholder The placeholder to replace.\n\t   * @returns {Array} Returns the new array of placeholder indexes.\n\t   */\n\t  function replaceHolders(array, placeholder) {\n\t    var index = -1,\n\t        length = array.length,\n\t        resIndex = -1,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      if (array[index] === placeholder) {\n\t        array[index] = PLACEHOLDER;\n\t        result[++resIndex] = index;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * An implementation of `_.uniq` optimized for sorted arrays without support\n\t   * for callback shorthands and `this` binding.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {Function} [iteratee] The function invoked per iteration.\n\t   * @returns {Array} Returns the new duplicate-value-free array.\n\t   */\n\t  function sortedUniq(array, iteratee) {\n\t    var seen,\n\t        index = -1,\n\t        length = array.length,\n\t        resIndex = -1,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      var value = array[index],\n\t          computed = iteratee ? iteratee(value, index, array) : value;\n\t\n\t      if (!index || seen !== computed) {\n\t        seen = computed;\n\t        result[++resIndex] = value;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\n\t   * character of `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {number} Returns the index of the first non-whitespace character.\n\t   */\n\t  function trimmedLeftIndex(string) {\n\t    var index = -1,\n\t        length = string.length;\n\t\n\t    while (++index < length && isSpace(string.charCodeAt(index))) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\n\t   * character of `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {number} Returns the index of the last non-whitespace character.\n\t   */\n\t  function trimmedRightIndex(string) {\n\t    var index = string.length;\n\t\n\t    while (index-- && isSpace(string.charCodeAt(index))) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.unescape` to convert HTML entities to characters.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to unescape.\n\t   * @returns {string} Returns the unescaped character.\n\t   */\n\t  function unescapeHtmlChar(chr) {\n\t    return htmlUnescapes[chr];\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Create a new pristine `lodash` function using the given `context` object.\n\t   *\n\t   * @static\n\t   * @memberOf _\n\t   * @category Utility\n\t   * @param {Object} [context=root] The context object.\n\t   * @returns {Function} Returns a new `lodash` function.\n\t   * @example\n\t   *\n\t   * _.mixin({ 'foo': _.constant('foo') });\n\t   *\n\t   * var lodash = _.runInContext();\n\t   * lodash.mixin({ 'bar': lodash.constant('bar') });\n\t   *\n\t   * _.isFunction(_.foo);\n\t   * // => true\n\t   * _.isFunction(_.bar);\n\t   * // => false\n\t   *\n\t   * lodash.isFunction(lodash.foo);\n\t   * // => false\n\t   * lodash.isFunction(lodash.bar);\n\t   * // => true\n\t   *\n\t   * // using `context` to mock `Date#getTime` use in `_.now`\n\t   * var mock = _.runInContext({\n\t   *   'Date': function() {\n\t   *     return { 'getTime': getTimeMock };\n\t   *   }\n\t   * });\n\t   *\n\t   * // or creating a suped-up `defer` in Node.js\n\t   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n\t   */\n\t  function runInContext(context) {\n\t    // Avoid issues with some ES3 environments that attempt to use values, named\n\t    // after built-in constructors like `Object`, for the creation of literals.\n\t    // ES5 clears this up by stating that literals must use built-in constructors.\n\t    // See https://es5.github.io/#x11.1.5 for more details.\n\t    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\t\n\t    /** Native constructor references. */\n\t    var Array = context.Array,\n\t        Date = context.Date,\n\t        Error = context.Error,\n\t        Function = context.Function,\n\t        Math = context.Math,\n\t        Number = context.Number,\n\t        Object = context.Object,\n\t        RegExp = context.RegExp,\n\t        String = context.String,\n\t        TypeError = context.TypeError;\n\t\n\t    /** Used for native method references. */\n\t    var arrayProto = Array.prototype,\n\t        objectProto = Object.prototype,\n\t        stringProto = String.prototype;\n\t\n\t    /** Used to resolve the decompiled source of functions. */\n\t    var fnToString = Function.prototype.toString;\n\t\n\t    /** Used to check objects for own properties. */\n\t    var hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t    /** Used to generate unique IDs. */\n\t    var idCounter = 0;\n\t\n\t    /**\n\t     * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n\t     * of values.\n\t     */\n\t    var objToString = objectProto.toString;\n\t\n\t    /** Used to restore the original `_` reference in `_.noConflict`. */\n\t    var oldDash = root._;\n\t\n\t    /** Used to detect if a method is native. */\n\t    var reIsNative = RegExp('^' +\n\t      fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n\t      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n\t    );\n\t\n\t    /** Native method references. */\n\t    var ArrayBuffer = context.ArrayBuffer,\n\t        clearTimeout = context.clearTimeout,\n\t        parseFloat = context.parseFloat,\n\t        pow = Math.pow,\n\t        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n\t        Set = getNative(context, 'Set'),\n\t        setTimeout = context.setTimeout,\n\t        splice = arrayProto.splice,\n\t        Uint8Array = context.Uint8Array,\n\t        WeakMap = getNative(context, 'WeakMap');\n\t\n\t    /* Native method references for those with the same name as other `lodash` methods. */\n\t    var nativeCeil = Math.ceil,\n\t        nativeCreate = getNative(Object, 'create'),\n\t        nativeFloor = Math.floor,\n\t        nativeIsArray = getNative(Array, 'isArray'),\n\t        nativeIsFinite = context.isFinite,\n\t        nativeKeys = getNative(Object, 'keys'),\n\t        nativeMax = Math.max,\n\t        nativeMin = Math.min,\n\t        nativeNow = getNative(Date, 'now'),\n\t        nativeParseInt = context.parseInt,\n\t        nativeRandom = Math.random;\n\t\n\t    /** Used as references for `-Infinity` and `Infinity`. */\n\t    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,\n\t        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\t\n\t    /** Used as references for the maximum length and index of an array. */\n\t    var MAX_ARRAY_LENGTH = 4294967295,\n\t        MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n\t        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\t\n\t    /**\n\t     * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n\t     * of an array-like value.\n\t     */\n\t    var MAX_SAFE_INTEGER = 9007199254740991;\n\t\n\t    /** Used to store function metadata. */\n\t    var metaMap = WeakMap && new WeakMap;\n\t\n\t    /** Used to lookup unminified function names. */\n\t    var realNames = {};\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` object which wraps `value` to enable implicit chaining.\n\t     * Methods that operate on and return arrays, collections, and functions can\n\t     * be chained together. Methods that retrieve a single value or may return a\n\t     * primitive value will automatically end the chain returning the unwrapped\n\t     * value. Explicit chaining may be enabled using `_.chain`. The execution of\n\t     * chained methods is lazy, that is, execution is deferred until `_#value`\n\t     * is implicitly or explicitly called.\n\t     *\n\t     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n\t     * fusion is an optimization strategy which merge iteratee calls; this can help\n\t     * to avoid the creation of intermediate data structures and greatly reduce the\n\t     * number of iteratee executions.\n\t     *\n\t     * Chaining is supported in custom builds as long as the `_#value` method is\n\t     * directly or indirectly included in the build.\n\t     *\n\t     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n\t     *\n\t     * The wrapper `Array` methods are:\n\t     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\n\t     * `splice`, and `unshift`\n\t     *\n\t     * The wrapper `String` methods are:\n\t     * `replace` and `split`\n\t     *\n\t     * The wrapper methods that support shortcut fusion are:\n\t     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n\t     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n\t     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\n\t     * and `where`\n\t     *\n\t     * The chainable wrapper methods are:\n\t     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n\t     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n\t     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defaultsDeep`,\n\t     * `defer`, `delay`, `difference`, `drop`, `dropRight`, `dropRightWhile`,\n\t     * `dropWhile`, `fill`, `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`,\n\t     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n\t     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n\t     * `invoke`, `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`,\n\t     * `matchesProperty`, `memoize`, `merge`, `method`, `methodOf`, `mixin`,\n\t     * `modArgs`, `negate`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n\t     * `partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, `pull`,\n\t     * `pullAt`, `push`, `range`, `rearg`, `reject`, `remove`, `rest`, `restParam`,\n\t     * `reverse`, `set`, `shuffle`, `slice`, `sort`, `sortBy`, `sortByAll`,\n\t     * `sortByOrder`, `splice`, `spread`, `take`, `takeRight`, `takeRightWhile`,\n\t     * `takeWhile`, `tap`, `throttle`, `thru`, `times`, `toArray`, `toPlainObject`,\n\t     * `transform`, `union`, `uniq`, `unshift`, `unzip`, `unzipWith`, `values`,\n\t     * `valuesIn`, `where`, `without`, `wrap`, `xor`, `zip`, `zipObject`, `zipWith`\n\t     *\n\t     * The wrapper methods that are **not** chainable by default are:\n\t     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clone`, `cloneDeep`,\n\t     * `deburr`, `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`,\n\t     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`,\n\t     * `floor`, `get`, `gt`, `gte`, `has`, `identity`, `includes`, `indexOf`,\n\t     * `inRange`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n\t     * `isEmpty`, `isEqual`, `isError`, `isFinite` `isFunction`, `isMatch`,\n\t     * `isNative`, `isNaN`, `isNull`, `isNumber`, `isObject`, `isPlainObject`,\n\t     * `isRegExp`, `isString`, `isUndefined`, `isTypedArray`, `join`, `kebabCase`,\n\t     * `last`, `lastIndexOf`, `lt`, `lte`, `max`, `min`, `noConflict`, `noop`,\n\t     * `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`, `random`, `reduce`,\n\t     * `reduceRight`, `repeat`, `result`, `round`, `runInContext`, `shift`, `size`,\n\t     * `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`, `startCase`,\n\t     * `startsWith`, `sum`, `template`, `trim`, `trimLeft`, `trimRight`, `trunc`,\n\t     * `unescape`, `uniqueId`, `value`, and `words`\n\t     *\n\t     * The wrapper method `sample` will return a wrapped value when `n` is provided,\n\t     * otherwise an unwrapped value is returned.\n\t     *\n\t     * @name _\n\t     * @constructor\n\t     * @category Chain\n\t     * @param {*} value The value to wrap in a `lodash` instance.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2, 3]);\n\t     *\n\t     * // returns an unwrapped value\n\t     * wrapped.reduce(function(total, n) {\n\t     *   return total + n;\n\t     * });\n\t     * // => 6\n\t     *\n\t     * // returns a wrapped value\n\t     * var squares = wrapped.map(function(n) {\n\t     *   return n * n;\n\t     * });\n\t     *\n\t     * _.isArray(squares);\n\t     * // => false\n\t     *\n\t     * _.isArray(squares.value());\n\t     * // => true\n\t     */\n\t    function lodash(value) {\n\t      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n\t        if (value instanceof LodashWrapper) {\n\t          return value;\n\t        }\n\t        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {\n\t          return wrapperClone(value);\n\t        }\n\t      }\n\t      return new LodashWrapper(value);\n\t    }\n\t\n\t    /**\n\t     * The function whose prototype all chaining wrappers inherit from.\n\t     *\n\t     * @private\n\t     */\n\t    function baseLodash() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * The base constructor for creating `lodash` wrapper objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to wrap.\n\t     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n\t     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n\t     */\n\t    function LodashWrapper(value, chainAll, actions) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = actions || [];\n\t      this.__chain__ = !!chainAll;\n\t    }\n\t\n\t    /**\n\t     * An object environment feature flags.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type Object\n\t     */\n\t    var support = lodash.support = {};\n\t\n\t    /**\n\t     * By default, the template delimiters used by lodash are like those in\n\t     * embedded Ruby (ERB). Change the following template settings to use\n\t     * alternative delimiters.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type Object\n\t     */\n\t    lodash.templateSettings = {\n\t\n\t      /**\n\t       * Used to detect `data` property values to be HTML-escaped.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type RegExp\n\t       */\n\t      'escape': reEscape,\n\t\n\t      /**\n\t       * Used to detect code to be evaluated.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type RegExp\n\t       */\n\t      'evaluate': reEvaluate,\n\t\n\t      /**\n\t       * Used to detect `data` property values to inject.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type RegExp\n\t       */\n\t      'interpolate': reInterpolate,\n\t\n\t      /**\n\t       * Used to reference the data object in the template text.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type string\n\t       */\n\t      'variable': '',\n\t\n\t      /**\n\t       * Used to import variables into the compiled template.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type Object\n\t       */\n\t      'imports': {\n\t\n\t        /**\n\t         * A reference to the `lodash` function.\n\t         *\n\t         * @memberOf _.templateSettings.imports\n\t         * @type Function\n\t         */\n\t        '_': lodash\n\t      }\n\t    };\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to wrap.\n\t     */\n\t    function LazyWrapper(value) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = [];\n\t      this.__dir__ = 1;\n\t      this.__filtered__ = false;\n\t      this.__iteratees__ = [];\n\t      this.__takeCount__ = POSITIVE_INFINITY;\n\t      this.__views__ = [];\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the lazy wrapper object.\n\t     *\n\t     * @private\n\t     * @name clone\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the cloned `LazyWrapper` object.\n\t     */\n\t    function lazyClone() {\n\t      var result = new LazyWrapper(this.__wrapped__);\n\t      result.__actions__ = arrayCopy(this.__actions__);\n\t      result.__dir__ = this.__dir__;\n\t      result.__filtered__ = this.__filtered__;\n\t      result.__iteratees__ = arrayCopy(this.__iteratees__);\n\t      result.__takeCount__ = this.__takeCount__;\n\t      result.__views__ = arrayCopy(this.__views__);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses the direction of lazy iteration.\n\t     *\n\t     * @private\n\t     * @name reverse\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n\t     */\n\t    function lazyReverse() {\n\t      if (this.__filtered__) {\n\t        var result = new LazyWrapper(this);\n\t        result.__dir__ = -1;\n\t        result.__filtered__ = true;\n\t      } else {\n\t        result = this.clone();\n\t        result.__dir__ *= -1;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Extracts the unwrapped value from its lazy wrapper.\n\t     *\n\t     * @private\n\t     * @name value\n\t     * @memberOf LazyWrapper\n\t     * @returns {*} Returns the unwrapped value.\n\t     */\n\t    function lazyValue() {\n\t      var array = this.__wrapped__.value(),\n\t          dir = this.__dir__,\n\t          isArr = isArray(array),\n\t          isRight = dir < 0,\n\t          arrLength = isArr ? array.length : 0,\n\t          view = getView(0, arrLength, this.__views__),\n\t          start = view.start,\n\t          end = view.end,\n\t          length = end - start,\n\t          index = isRight ? end : (start - 1),\n\t          iteratees = this.__iteratees__,\n\t          iterLength = iteratees.length,\n\t          resIndex = 0,\n\t          takeCount = nativeMin(length, this.__takeCount__);\n\t\n\t      if (!isArr || arrLength < LARGE_ARRAY_SIZE || (arrLength == length && takeCount == length)) {\n\t        return baseWrapperValue((isRight && isArr) ? array.reverse() : array, this.__actions__);\n\t      }\n\t      var result = [];\n\t\n\t      outer:\n\t      while (length-- && resIndex < takeCount) {\n\t        index += dir;\n\t\n\t        var iterIndex = -1,\n\t            value = array[index];\n\t\n\t        while (++iterIndex < iterLength) {\n\t          var data = iteratees[iterIndex],\n\t              iteratee = data.iteratee,\n\t              type = data.type,\n\t              computed = iteratee(value);\n\t\n\t          if (type == LAZY_MAP_FLAG) {\n\t            value = computed;\n\t          } else if (!computed) {\n\t            if (type == LAZY_FILTER_FLAG) {\n\t              continue outer;\n\t            } else {\n\t              break outer;\n\t            }\n\t          }\n\t        }\n\t        result[resIndex++] = value;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a cache object to store key/value pairs.\n\t     *\n\t     * @private\n\t     * @static\n\t     * @name Cache\n\t     * @memberOf _.memoize\n\t     */\n\t    function MapCache() {\n\t      this.__data__ = {};\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the cache.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf _.memoize.Cache\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.\n\t     */\n\t    function mapDelete(key) {\n\t      return this.has(key) && delete this.__data__[key];\n\t    }\n\t\n\t    /**\n\t     * Gets the cached value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf _.memoize.Cache\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the cached value.\n\t     */\n\t    function mapGet(key) {\n\t      return key == '__proto__' ? undefined : this.__data__[key];\n\t    }\n\t\n\t    /**\n\t     * Checks if a cached value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf _.memoize.Cache\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function mapHas(key) {\n\t      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);\n\t    }\n\t\n\t    /**\n\t     * Sets `value` to `key` of the cache.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf _.memoize.Cache\n\t     * @param {string} key The key of the value to cache.\n\t     * @param {*} value The value to cache.\n\t     * @returns {Object} Returns the cache object.\n\t     */\n\t    function mapSet(key, value) {\n\t      if (key != '__proto__') {\n\t        this.__data__[key] = value;\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     *\n\t     * Creates a cache object to store unique values.\n\t     *\n\t     * @private\n\t     * @param {Array} [values] The values to cache.\n\t     */\n\t    function SetCache(values) {\n\t      var length = values ? values.length : 0;\n\t\n\t      this.data = { 'hash': nativeCreate(null), 'set': new Set };\n\t      while (length--) {\n\t        this.push(values[length]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is in `cache` mimicking the return signature of\n\t     * `_.indexOf` by returning `0` if the value is found, else `-1`.\n\t     *\n\t     * @private\n\t     * @param {Object} cache The cache to search.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns `0` if `value` is found, else `-1`.\n\t     */\n\t    function cacheIndexOf(cache, value) {\n\t      var data = cache.data,\n\t          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];\n\t\n\t      return result ? 0 : -1;\n\t    }\n\t\n\t    /**\n\t     * Adds `value` to the cache.\n\t     *\n\t     * @private\n\t     * @name push\n\t     * @memberOf SetCache\n\t     * @param {*} value The value to cache.\n\t     */\n\t    function cachePush(value) {\n\t      var data = this.data;\n\t      if (typeof value == 'string' || isObject(value)) {\n\t        data.set.add(value);\n\t      } else {\n\t        data.hash[value] = true;\n\t      }\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a new array joining `array` with `other`.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to join.\n\t     * @param {Array} other The other array to join.\n\t     * @returns {Array} Returns the new concatenated array.\n\t     */\n\t    function arrayConcat(array, other) {\n\t      var index = -1,\n\t          length = array.length,\n\t          othIndex = -1,\n\t          othLength = other.length,\n\t          result = Array(length + othLength);\n\t\n\t      while (++index < length) {\n\t        result[index] = array[index];\n\t      }\n\t      while (++othIndex < othLength) {\n\t        result[index++] = other[othIndex];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Copies the values of `source` to `array`.\n\t     *\n\t     * @private\n\t     * @param {Array} source The array to copy values from.\n\t     * @param {Array} [array=[]] The array to copy values to.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function arrayCopy(source, array) {\n\t      var index = -1,\n\t          length = source.length;\n\t\n\t      array || (array = Array(length));\n\t      while (++index < length) {\n\t        array[index] = source[index];\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.forEach` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function arrayEach(array, iteratee) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        if (iteratee(array[index], index, array) === false) {\n\t          break;\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.forEachRight` for arrays without support for\n\t     * callback shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function arrayEachRight(array, iteratee) {\n\t      var length = array.length;\n\t\n\t      while (length--) {\n\t        if (iteratee(array[length], length, array) === false) {\n\t          break;\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.every` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function arrayEvery(array, predicate) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        if (!predicate(array[index], index, array)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseExtremum` for arrays which invokes `iteratee`\n\t     * with one argument: (value).\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} comparator The function used to compare values.\n\t     * @param {*} exValue The initial extremum value.\n\t     * @returns {*} Returns the extremum value.\n\t     */\n\t    function arrayExtremum(array, iteratee, comparator, exValue) {\n\t      var index = -1,\n\t          length = array.length,\n\t          computed = exValue,\n\t          result = computed;\n\t\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            current = +iteratee(value);\n\t\n\t        if (comparator(current, computed)) {\n\t          computed = current;\n\t          result = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.filter` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     */\n\t    function arrayFilter(array, predicate) {\n\t      var index = -1,\n\t          length = array.length,\n\t          resIndex = -1,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (predicate(value, index, array)) {\n\t          result[++resIndex] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.map` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     */\n\t    function arrayMap(array, iteratee) {\n\t      var index = -1,\n\t          length = array.length,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        result[index] = iteratee(array[index], index, array);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Appends the elements of `values` to `array`.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to append.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function arrayPush(array, values) {\n\t      var index = -1,\n\t          length = values.length,\n\t          offset = array.length;\n\t\n\t      while (++index < length) {\n\t        array[offset + index] = values[index];\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.reduce` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @param {boolean} [initFromArray] Specify using the first element of `array`\n\t     *  as the initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     */\n\t    function arrayReduce(array, iteratee, accumulator, initFromArray) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      if (initFromArray && length) {\n\t        accumulator = array[++index];\n\t      }\n\t      while (++index < length) {\n\t        accumulator = iteratee(accumulator, array[index], index, array);\n\t      }\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.reduceRight` for arrays without support for\n\t     * callback shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @param {boolean} [initFromArray] Specify using the last element of `array`\n\t     *  as the initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     */\n\t    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n\t      var length = array.length;\n\t      if (initFromArray && length) {\n\t        accumulator = array[--length];\n\t      }\n\t      while (length--) {\n\t        accumulator = iteratee(accumulator, array[length], length, array);\n\t      }\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.some` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function arraySome(array, predicate) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        if (predicate(array[index], index, array)) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.sum` for arrays without support for callback\n\t     * shorthands and `this` binding..\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {number} Returns the sum.\n\t     */\n\t    function arraySum(array, iteratee) {\n\t      var length = array.length,\n\t          result = 0;\n\t\n\t      while (length--) {\n\t        result += +iteratee(array[length]) || 0;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.defaults` to customize its `_.assign` use.\n\t     *\n\t     * @private\n\t     * @param {*} objectValue The destination object property value.\n\t     * @param {*} sourceValue The source object property value.\n\t     * @returns {*} Returns the value to assign to the destination object.\n\t     */\n\t    function assignDefaults(objectValue, sourceValue) {\n\t      return objectValue === undefined ? sourceValue : objectValue;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.template` to customize its `_.assign` use.\n\t     *\n\t     * **Note:** This function is like `assignDefaults` except that it ignores\n\t     * inherited property values when checking if a property is `undefined`.\n\t     *\n\t     * @private\n\t     * @param {*} objectValue The destination object property value.\n\t     * @param {*} sourceValue The source object property value.\n\t     * @param {string} key The key associated with the object and source values.\n\t     * @param {Object} object The destination object.\n\t     * @returns {*} Returns the value to assign to the destination object.\n\t     */\n\t    function assignOwnDefaults(objectValue, sourceValue, key, object) {\n\t      return (objectValue === undefined || !hasOwnProperty.call(object, key))\n\t        ? sourceValue\n\t        : objectValue;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.assign` for customizing assigned values without\n\t     * support for argument juggling, multiple sources, and `this` binding `customizer`\n\t     * functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {Function} customizer The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function assignWith(object, source, customizer) {\n\t      var index = -1,\n\t          props = keys(source),\n\t          length = props.length;\n\t\n\t      while (++index < length) {\n\t        var key = props[index],\n\t            value = object[key],\n\t            result = customizer(value, source[key], key, object, source);\n\t\n\t        if ((result === result ? (result !== value) : (value === value)) ||\n\t            (value === undefined && !(key in object))) {\n\t          object[key] = result;\n\t        }\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.assign` without support for argument juggling,\n\t     * multiple sources, and `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseAssign(object, source) {\n\t      return source == null\n\t        ? object\n\t        : baseCopy(source, keys(source), object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.at` without support for string collections\n\t     * and individual key arguments.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {number[]|string[]} props The property names or indexes of elements to pick.\n\t     * @returns {Array} Returns the new array of picked elements.\n\t     */\n\t    function baseAt(collection, props) {\n\t      var index = -1,\n\t          isNil = collection == null,\n\t          isArr = !isNil && isArrayLike(collection),\n\t          length = isArr ? collection.length : 0,\n\t          propsLength = props.length,\n\t          result = Array(propsLength);\n\t\n\t      while(++index < propsLength) {\n\t        var key = props[index];\n\t        if (isArr) {\n\t          result[index] = isIndex(key, length) ? collection[key] : undefined;\n\t        } else {\n\t          result[index] = isNil ? undefined : collection[key];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Copies properties of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy properties from.\n\t     * @param {Array} props The property names to copy.\n\t     * @param {Object} [object={}] The object to copy properties to.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseCopy(source, props, object) {\n\t      object || (object = {});\n\t\n\t      var index = -1,\n\t          length = props.length;\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        object[key] = source[key];\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.callback` which supports specifying the\n\t     * number of arguments to provide to `func`.\n\t     *\n\t     * @private\n\t     * @param {*} [func=_.identity] The value to convert to a callback.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {number} [argCount] The number of arguments to provide to `func`.\n\t     * @returns {Function} Returns the callback.\n\t     */\n\t    function baseCallback(func, thisArg, argCount) {\n\t      var type = typeof func;\n\t      if (type == 'function') {\n\t        return thisArg === undefined\n\t          ? func\n\t          : bindCallback(func, thisArg, argCount);\n\t      }\n\t      if (func == null) {\n\t        return identity;\n\t      }\n\t      if (type == 'object') {\n\t        return baseMatches(func);\n\t      }\n\t      return thisArg === undefined\n\t        ? property(func)\n\t        : baseMatchesProperty(func, thisArg);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.clone` without support for argument juggling\n\t     * and `this` binding `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @param {Function} [customizer] The function to customize cloning values.\n\t     * @param {string} [key] The key of `value`.\n\t     * @param {Object} [object] The object `value` belongs to.\n\t     * @param {Array} [stackA=[]] Tracks traversed source objects.\n\t     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n\t     * @returns {*} Returns the cloned value.\n\t     */\n\t    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n\t      var result;\n\t      if (customizer) {\n\t        result = object ? customizer(value, key, object) : customizer(value);\n\t      }\n\t      if (result !== undefined) {\n\t        return result;\n\t      }\n\t      if (!isObject(value)) {\n\t        return value;\n\t      }\n\t      var isArr = isArray(value);\n\t      if (isArr) {\n\t        result = initCloneArray(value);\n\t        if (!isDeep) {\n\t          return arrayCopy(value, result);\n\t        }\n\t      } else {\n\t        var tag = objToString.call(value),\n\t            isFunc = tag == funcTag;\n\t\n\t        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n\t          result = initCloneObject(isFunc ? {} : value);\n\t          if (!isDeep) {\n\t            return baseAssign(result, value);\n\t          }\n\t        } else {\n\t          return cloneableTags[tag]\n\t            ? initCloneByTag(value, tag, isDeep)\n\t            : (object ? value : {});\n\t        }\n\t      }\n\t      // Check for circular references and return its corresponding clone.\n\t      stackA || (stackA = []);\n\t      stackB || (stackB = []);\n\t\n\t      var length = stackA.length;\n\t      while (length--) {\n\t        if (stackA[length] == value) {\n\t          return stackB[length];\n\t        }\n\t      }\n\t      // Add the source value to the stack of traversed objects and associate it with its clone.\n\t      stackA.push(value);\n\t      stackB.push(result);\n\t\n\t      // Recursively populate clone (susceptible to call stack limits).\n\t      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n\t        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.create` without support for assigning\n\t     * properties to the created object.\n\t     *\n\t     * @private\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    var baseCreate = (function() {\n\t      function object() {}\n\t      return function(prototype) {\n\t        if (isObject(prototype)) {\n\t          object.prototype = prototype;\n\t          var result = new object;\n\t          object.prototype = undefined;\n\t        }\n\t        return result || {};\n\t      };\n\t    }());\n\t\n\t    /**\n\t     * The base implementation of `_.delay` and `_.defer` which accepts an index\n\t     * of where to slice the arguments to provide to `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {Object} args The arguments provide to `func`.\n\t     * @returns {number} Returns the timer id.\n\t     */\n\t    function baseDelay(func, wait, args) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return setTimeout(function() { func.apply(undefined, args); }, wait);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.difference` which accepts a single array\n\t     * of values to exclude.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Array} values The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     */\n\t    function baseDifference(array, values) {\n\t      var length = array ? array.length : 0,\n\t          result = [];\n\t\n\t      if (!length) {\n\t        return result;\n\t      }\n\t      var index = -1,\n\t          indexOf = getIndexOf(),\n\t          isCommon = indexOf == baseIndexOf,\n\t          cache = (isCommon && values.length >= LARGE_ARRAY_SIZE) ? createCache(values) : null,\n\t          valuesLength = values.length;\n\t\n\t      if (cache) {\n\t        indexOf = cacheIndexOf;\n\t        isCommon = false;\n\t        values = cache;\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index];\n\t\n\t        if (isCommon && value === value) {\n\t          var valuesIndex = valuesLength;\n\t          while (valuesIndex--) {\n\t            if (values[valuesIndex] === value) {\n\t              continue outer;\n\t            }\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (indexOf(values, value, 0) < 0) {\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forEach` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object|string} Returns `collection`.\n\t     */\n\t    var baseEach = createBaseEach(baseForOwn);\n\t\n\t    /**\n\t     * The base implementation of `_.forEachRight` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object|string} Returns `collection`.\n\t     */\n\t    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\t\n\t    /**\n\t     * The base implementation of `_.every` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`\n\t     */\n\t    function baseEvery(collection, predicate) {\n\t      var result = true;\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = !!predicate(value, index, collection);\n\t        return result;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the extremum value of `collection` invoking `iteratee` for each value\n\t     * in `collection` to generate the criterion by which the value is ranked.\n\t     * The `iteratee` is invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} comparator The function used to compare values.\n\t     * @param {*} exValue The initial extremum value.\n\t     * @returns {*} Returns the extremum value.\n\t     */\n\t    function baseExtremum(collection, iteratee, comparator, exValue) {\n\t      var computed = exValue,\n\t          result = computed;\n\t\n\t      baseEach(collection, function(value, index, collection) {\n\t        var current = +iteratee(value, index, collection);\n\t        if (comparator(current, computed) || (current === exValue && current === result)) {\n\t          computed = current;\n\t          result = value;\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.fill` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function baseFill(array, value, start, end) {\n\t      var length = array.length;\n\t\n\t      start = start == null ? 0 : (+start || 0);\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = (end === undefined || end > length) ? length : (+end || 0);\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      length = start > end ? 0 : (end >>> 0);\n\t      start >>>= 0;\n\t\n\t      while (start < length) {\n\t        array[start++] = value;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.filter` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     */\n\t    function baseFilter(collection, predicate) {\n\t      var result = [];\n\t      baseEach(collection, function(value, index, collection) {\n\t        if (predicate(value, index, collection)) {\n\t          result.push(value);\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n\t     * without support for callback shorthands and `this` binding, which iterates\n\t     * over `collection` using the provided `eachFunc`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @param {Function} eachFunc The function to iterate over `collection`.\n\t     * @param {boolean} [retKey] Specify returning the key of the found element\n\t     *  instead of the element itself.\n\t     * @returns {*} Returns the found element or its key, else `undefined`.\n\t     */\n\t    function baseFind(collection, predicate, eachFunc, retKey) {\n\t      var result;\n\t      eachFunc(collection, function(value, key, collection) {\n\t        if (predicate(value, key, collection)) {\n\t          result = retKey ? key : value;\n\t          return false;\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.flatten` with added support for restricting\n\t     * flattening and specifying the start index.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to flatten.\n\t     * @param {boolean} [isDeep] Specify a deep flatten.\n\t     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n\t     * @param {Array} [result=[]] The initial result value.\n\t     * @returns {Array} Returns the new flattened array.\n\t     */\n\t    function baseFlatten(array, isDeep, isStrict, result) {\n\t      result || (result = []);\n\t\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (isObjectLike(value) && isArrayLike(value) &&\n\t            (isStrict || isArray(value) || isArguments(value))) {\n\t          if (isDeep) {\n\t            // Recursively flatten arrays (susceptible to call stack limits).\n\t            baseFlatten(value, isDeep, isStrict, result);\n\t          } else {\n\t            arrayPush(result, value);\n\t          }\n\t        } else if (!isStrict) {\n\t          result[result.length] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n\t     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n\t     * each property. Iteratee functions may exit iteration early by explicitly\n\t     * returning `false`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseFor = createBaseFor();\n\t\n\t    /**\n\t     * This function is like `baseFor` except that it iterates over properties\n\t     * in the opposite order.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseForRight = createBaseFor(true);\n\t\n\t    /**\n\t     * The base implementation of `_.forIn` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForIn(object, iteratee) {\n\t      return baseFor(object, iteratee, keysIn);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forOwn` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwn(object, iteratee) {\n\t      return baseFor(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forOwnRight` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwnRight(object, iteratee) {\n\t      return baseForRight(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.functions` which creates an array of\n\t     * `object` function property names filtered from those provided.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Array} props The property names to filter.\n\t     * @returns {Array} Returns the new array of filtered property names.\n\t     */\n\t    function baseFunctions(object, props) {\n\t      var index = -1,\n\t          length = props.length,\n\t          resIndex = -1,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        if (isFunction(object[key])) {\n\t          result[++resIndex] = key;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `get` without support for string paths\n\t     * and default values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array} path The path of the property to get.\n\t     * @param {string} [pathKey] The key representation of path.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseGet(object, path, pathKey) {\n\t      if (object == null) {\n\t        return;\n\t      }\n\t      if (pathKey !== undefined && pathKey in toObject(object)) {\n\t        path = [pathKey];\n\t      }\n\t      var index = 0,\n\t          length = path.length;\n\t\n\t      while (object != null && index < length) {\n\t        object = object[path[index++]];\n\t      }\n\t      return (index && index == length) ? object : undefined;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isEqual` without support for `this` binding\n\t     * `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize comparing values.\n\t     * @param {boolean} [isLoose] Specify performing partial comparisons.\n\t     * @param {Array} [stackA] Tracks traversed `value` objects.\n\t     * @param {Array} [stackB] Tracks traversed `other` objects.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     */\n\t    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n\t      if (value === other) {\n\t        return true;\n\t      }\n\t      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n\t        return value !== value && other !== other;\n\t      }\n\t      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqual` for arrays and objects which performs\n\t     * deep comparisons and tracks traversed objects enabling objects with circular\n\t     * references to be compared.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparing objects.\n\t     * @param {boolean} [isLoose] Specify performing partial comparisons.\n\t     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n\t     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n\t      var objIsArr = isArray(object),\n\t          othIsArr = isArray(other),\n\t          objTag = arrayTag,\n\t          othTag = arrayTag;\n\t\n\t      if (!objIsArr) {\n\t        objTag = objToString.call(object);\n\t        if (objTag == argsTag) {\n\t          objTag = objectTag;\n\t        } else if (objTag != objectTag) {\n\t          objIsArr = isTypedArray(object);\n\t        }\n\t      }\n\t      if (!othIsArr) {\n\t        othTag = objToString.call(other);\n\t        if (othTag == argsTag) {\n\t          othTag = objectTag;\n\t        } else if (othTag != objectTag) {\n\t          othIsArr = isTypedArray(other);\n\t        }\n\t      }\n\t      var objIsObj = objTag == objectTag,\n\t          othIsObj = othTag == objectTag,\n\t          isSameTag = objTag == othTag;\n\t\n\t      if (isSameTag && !(objIsArr || objIsObj)) {\n\t        return equalByTag(object, other, objTag);\n\t      }\n\t      if (!isLoose) {\n\t        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n\t            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\t\n\t        if (objIsWrapped || othIsWrapped) {\n\t          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n\t        }\n\t      }\n\t      if (!isSameTag) {\n\t        return false;\n\t      }\n\t      // Assume cyclic values are equal.\n\t      // For more information on detecting circular references see https://es5.github.io/#JO.\n\t      stackA || (stackA = []);\n\t      stackB || (stackB = []);\n\t\n\t      var length = stackA.length;\n\t      while (length--) {\n\t        if (stackA[length] == object) {\n\t          return stackB[length] == other;\n\t        }\n\t      }\n\t      // Add `object` and `other` to the stack of traversed objects.\n\t      stackA.push(object);\n\t      stackB.push(other);\n\t\n\t      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\t\n\t      stackA.pop();\n\t      stackB.pop();\n\t\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isMatch` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Array} matchData The propery names, values, and compare flags to match.\n\t     * @param {Function} [customizer] The function to customize comparing objects.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     */\n\t    function baseIsMatch(object, matchData, customizer) {\n\t      var index = matchData.length,\n\t          length = index,\n\t          noCustomizer = !customizer;\n\t\n\t      if (object == null) {\n\t        return !length;\n\t      }\n\t      object = toObject(object);\n\t      while (index--) {\n\t        var data = matchData[index];\n\t        if ((noCustomizer && data[2])\n\t              ? data[1] !== object[data[0]]\n\t              : !(data[0] in object)\n\t            ) {\n\t          return false;\n\t        }\n\t      }\n\t      while (++index < length) {\n\t        data = matchData[index];\n\t        var key = data[0],\n\t            objValue = object[key],\n\t            srcValue = data[1];\n\t\n\t        if (noCustomizer && data[2]) {\n\t          if (objValue === undefined && !(key in object)) {\n\t            return false;\n\t          }\n\t        } else {\n\t          var result = customizer ? customizer(objValue, srcValue, key) : undefined;\n\t          if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {\n\t            return false;\n\t          }\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.map` without support for callback shorthands\n\t     * and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     */\n\t    function baseMap(collection, iteratee) {\n\t      var index = -1,\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value, key, collection) {\n\t        result[++index] = iteratee(value, key, collection);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matches` which does not clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseMatches(source) {\n\t      var matchData = getMatchData(source);\n\t      if (matchData.length == 1 && matchData[0][2]) {\n\t        var key = matchData[0][0],\n\t            value = matchData[0][1];\n\t\n\t        return function(object) {\n\t          if (object == null) {\n\t            return false;\n\t          }\n\t          return object[key] === value && (value !== undefined || (key in toObject(object)));\n\t        };\n\t      }\n\t      return function(object) {\n\t        return baseIsMatch(object, matchData);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matchesProperty` which does not clone `srcValue`.\n\t     *\n\t     * @private\n\t     * @param {string} path The path of the property to get.\n\t     * @param {*} srcValue The value to compare.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseMatchesProperty(path, srcValue) {\n\t      var isArr = isArray(path),\n\t          isCommon = isKey(path) && isStrictComparable(srcValue),\n\t          pathKey = (path + '');\n\t\n\t      path = toPath(path);\n\t      return function(object) {\n\t        if (object == null) {\n\t          return false;\n\t        }\n\t        var key = pathKey;\n\t        object = toObject(object);\n\t        if ((isArr || !isCommon) && !(key in object)) {\n\t          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t          if (object == null) {\n\t            return false;\n\t          }\n\t          key = last(path);\n\t          object = toObject(object);\n\t        }\n\t        return object[key] === srcValue\n\t          ? (srcValue !== undefined || (key in object))\n\t          : baseIsEqual(srcValue, object[key], undefined, true);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.merge` without support for argument juggling,\n\t     * multiple sources, and `this` binding `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {Function} [customizer] The function to customize merged values.\n\t     * @param {Array} [stackA=[]] Tracks traversed source objects.\n\t     * @param {Array} [stackB=[]] Associates values with source counterparts.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseMerge(object, source, customizer, stackA, stackB) {\n\t      if (!isObject(object)) {\n\t        return object;\n\t      }\n\t      var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),\n\t          props = isSrcArr ? undefined : keys(source);\n\t\n\t      arrayEach(props || source, function(srcValue, key) {\n\t        if (props) {\n\t          key = srcValue;\n\t          srcValue = source[key];\n\t        }\n\t        if (isObjectLike(srcValue)) {\n\t          stackA || (stackA = []);\n\t          stackB || (stackB = []);\n\t          baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n\t        }\n\t        else {\n\t          var value = object[key],\n\t              result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n\t              isCommon = result === undefined;\n\t\n\t          if (isCommon) {\n\t            result = srcValue;\n\t          }\n\t          if ((result !== undefined || (isSrcArr && !(key in object))) &&\n\t              (isCommon || (result === result ? (result !== value) : (value === value)))) {\n\t            object[key] = result;\n\t          }\n\t        }\n\t      });\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseMerge` for arrays and objects which performs\n\t     * deep merges and tracks traversed objects enabling objects with circular\n\t     * references to be merged.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {string} key The key of the value to merge.\n\t     * @param {Function} mergeFunc The function to merge values.\n\t     * @param {Function} [customizer] The function to customize merged values.\n\t     * @param {Array} [stackA=[]] Tracks traversed source objects.\n\t     * @param {Array} [stackB=[]] Associates values with source counterparts.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n\t      var length = stackA.length,\n\t          srcValue = source[key];\n\t\n\t      while (length--) {\n\t        if (stackA[length] == srcValue) {\n\t          object[key] = stackB[length];\n\t          return;\n\t        }\n\t      }\n\t      var value = object[key],\n\t          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n\t          isCommon = result === undefined;\n\t\n\t      if (isCommon) {\n\t        result = srcValue;\n\t        if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {\n\t          result = isArray(value)\n\t            ? value\n\t            : (isArrayLike(value) ? arrayCopy(value) : []);\n\t        }\n\t        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n\t          result = isArguments(value)\n\t            ? toPlainObject(value)\n\t            : (isPlainObject(value) ? value : {});\n\t        }\n\t        else {\n\t          isCommon = false;\n\t        }\n\t      }\n\t      // Add the source value to the stack of traversed objects and associate\n\t      // it with its merged value.\n\t      stackA.push(srcValue);\n\t      stackB.push(result);\n\t\n\t      if (isCommon) {\n\t        // Recursively merge objects and arrays (susceptible to call stack limits).\n\t        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n\t      } else if (result === result ? (result !== value) : (value === value)) {\n\t        object[key] = result;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.property` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {string} key The key of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseProperty(key) {\n\t      return function(object) {\n\t        return object == null ? undefined : object[key];\n\t      };\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseProperty` which supports deep paths.\n\t     *\n\t     * @private\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function basePropertyDeep(path) {\n\t      var pathKey = (path + '');\n\t      path = toPath(path);\n\t      return function(object) {\n\t        return baseGet(object, path, pathKey);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAt` without support for individual\n\t     * index arguments and capturing the removed elements.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {number[]} indexes The indexes of elements to remove.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAt(array, indexes) {\n\t      var length = array ? indexes.length : 0;\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        if (index != previous && isIndex(index)) {\n\t          var previous = index;\n\t          splice.call(array, index, 1);\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.random` without support for argument juggling\n\t     * and returning floating-point numbers.\n\t     *\n\t     * @private\n\t     * @param {number} min The minimum possible value.\n\t     * @param {number} max The maximum possible value.\n\t     * @returns {number} Returns the random number.\n\t     */\n\t    function baseRandom(min, max) {\n\t      return min + nativeFloor(nativeRandom() * (max - min + 1));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.reduce` and `_.reduceRight` without support\n\t     * for callback shorthands and `this` binding, which iterates over `collection`\n\t     * using the provided `eachFunc`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {*} accumulator The initial value.\n\t     * @param {boolean} initFromCollection Specify using the first or last element\n\t     *  of `collection` as the initial value.\n\t     * @param {Function} eachFunc The function to iterate over `collection`.\n\t     * @returns {*} Returns the accumulated value.\n\t     */\n\t    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n\t      eachFunc(collection, function(value, index, collection) {\n\t        accumulator = initFromCollection\n\t          ? (initFromCollection = false, value)\n\t          : iteratee(accumulator, value, index, collection);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `setData` without support for hot loop detection.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var baseSetData = !metaMap ? identity : function(func, data) {\n\t      metaMap.set(func, data);\n\t      return func;\n\t    };\n\t\n\t    /**\n\t     * The base implementation of `_.slice` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseSlice(array, start, end) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      start = start == null ? 0 : (+start || 0);\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = (end === undefined || end > length) ? length : (+end || 0);\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      length = start > end ? 0 : ((end - start) >>> 0);\n\t      start >>>= 0;\n\t\n\t      var result = Array(length);\n\t      while (++index < length) {\n\t        result[index] = array[index + start];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.some` without support for callback shorthands\n\t     * and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function baseSome(collection, predicate) {\n\t      var result;\n\t\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = predicate(value, index, collection);\n\t        return !result;\n\t      });\n\t      return !!result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortBy` which uses `comparer` to define\n\t     * the sort order of `array` and replaces criteria objects with their\n\t     * corresponding values.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to sort.\n\t     * @param {Function} comparer The function to define sort order.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function baseSortBy(array, comparer) {\n\t      var length = array.length;\n\t\n\t      array.sort(comparer);\n\t      while (length--) {\n\t        array[length] = array[length].value;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortByOrder` without param guards.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n\t     * @param {boolean[]} orders The sort orders of `iteratees`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     */\n\t    function baseSortByOrder(collection, iteratees, orders) {\n\t      var callback = getCallback(),\n\t          index = -1;\n\t\n\t      iteratees = arrayMap(iteratees, function(iteratee) { return callback(iteratee); });\n\t\n\t      var result = baseMap(collection, function(value) {\n\t        var criteria = arrayMap(iteratees, function(iteratee) { return iteratee(value); });\n\t        return { 'criteria': criteria, 'index': ++index, 'value': value };\n\t      });\n\t\n\t      return baseSortBy(result, function(object, other) {\n\t        return compareMultiple(object, other, orders);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sum` without support for callback shorthands\n\t     * and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {number} Returns the sum.\n\t     */\n\t    function baseSum(collection, iteratee) {\n\t      var result = 0;\n\t      baseEach(collection, function(value, index, collection) {\n\t        result += +iteratee(value, index, collection) || 0;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.uniq` without support for callback shorthands\n\t     * and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The function invoked per iteration.\n\t     * @returns {Array} Returns the new duplicate-value-free array.\n\t     */\n\t    function baseUniq(array, iteratee) {\n\t      var index = -1,\n\t          indexOf = getIndexOf(),\n\t          length = array.length,\n\t          isCommon = indexOf == baseIndexOf,\n\t          isLarge = isCommon && length >= LARGE_ARRAY_SIZE,\n\t          seen = isLarge ? createCache() : null,\n\t          result = [];\n\t\n\t      if (seen) {\n\t        indexOf = cacheIndexOf;\n\t        isCommon = false;\n\t      } else {\n\t        isLarge = false;\n\t        seen = iteratee ? [] : result;\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value, index, array) : value;\n\t\n\t        if (isCommon && value === value) {\n\t          var seenIndex = seen.length;\n\t          while (seenIndex--) {\n\t            if (seen[seenIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (iteratee) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (indexOf(seen, computed, 0) < 0) {\n\t          if (iteratee || isLarge) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.values` and `_.valuesIn` which creates an\n\t     * array of `object` property values corresponding to the property names\n\t     * of `props`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array} props The property names to get values for.\n\t     * @returns {Object} Returns the array of property values.\n\t     */\n\t    function baseValues(object, props) {\n\t      var index = -1,\n\t          length = props.length,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        result[index] = object[props[index]];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,\n\t     * and `_.takeWhile` without support for callback shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseWhile(array, predicate, isDrop, fromRight) {\n\t      var length = array.length,\n\t          index = fromRight ? length : -1;\n\t\n\t      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}\n\t      return isDrop\n\t        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n\t        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `wrapperValue` which returns the result of\n\t     * performing a sequence of actions on the unwrapped `value`, where each\n\t     * successive action is supplied the return value of the previous.\n\t     *\n\t     * @private\n\t     * @param {*} value The unwrapped value.\n\t     * @param {Array} actions Actions to peform to resolve the unwrapped value.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseWrapperValue(value, actions) {\n\t      var result = value;\n\t      if (result instanceof LazyWrapper) {\n\t        result = result.value();\n\t      }\n\t      var index = -1,\n\t          length = actions.length;\n\t\n\t      while (++index < length) {\n\t        var action = actions[index];\n\t        result = action.func.apply(action.thisArg, arrayPush([result], action.args));\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Performs a binary search of `array` to determine the index at which `value`\n\t     * should be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function binaryIndex(array, value, retHighest) {\n\t      var low = 0,\n\t          high = array ? array.length : low;\n\t\n\t      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n\t        while (low < high) {\n\t          var mid = (low + high) >>> 1,\n\t              computed = array[mid];\n\t\n\t          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {\n\t            low = mid + 1;\n\t          } else {\n\t            high = mid;\n\t          }\n\t        }\n\t        return high;\n\t      }\n\t      return binaryIndexBy(array, value, identity, retHighest);\n\t    }\n\t\n\t    /**\n\t     * This function is like `binaryIndex` except that it invokes `iteratee` for\n\t     * `value` and each element of `array` to compute their sort ranking. The\n\t     * iteratee is invoked with one argument; (value).\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function binaryIndexBy(array, value, iteratee, retHighest) {\n\t      value = iteratee(value);\n\t\n\t      var low = 0,\n\t          high = array ? array.length : 0,\n\t          valIsNaN = value !== value,\n\t          valIsNull = value === null,\n\t          valIsUndef = value === undefined;\n\t\n\t      while (low < high) {\n\t        var mid = nativeFloor((low + high) / 2),\n\t            computed = iteratee(array[mid]),\n\t            isDef = computed !== undefined,\n\t            isReflexive = computed === computed;\n\t\n\t        if (valIsNaN) {\n\t          var setLow = isReflexive || retHighest;\n\t        } else if (valIsNull) {\n\t          setLow = isReflexive && isDef && (retHighest || computed != null);\n\t        } else if (valIsUndef) {\n\t          setLow = isReflexive && (retHighest || isDef);\n\t        } else if (computed == null) {\n\t          setLow = false;\n\t        } else {\n\t          setLow = retHighest ? (computed <= value) : (computed < value);\n\t        }\n\t        if (setLow) {\n\t          low = mid + 1;\n\t        } else {\n\t          high = mid;\n\t        }\n\t      }\n\t      return nativeMin(high, MAX_ARRAY_INDEX);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseCallback` which only supports `this` binding\n\t     * and specifying the number of arguments to provide to `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {number} [argCount] The number of arguments to provide to `func`.\n\t     * @returns {Function} Returns the callback.\n\t     */\n\t    function bindCallback(func, thisArg, argCount) {\n\t      if (typeof func != 'function') {\n\t        return identity;\n\t      }\n\t      if (thisArg === undefined) {\n\t        return func;\n\t      }\n\t      switch (argCount) {\n\t        case 1: return function(value) {\n\t          return func.call(thisArg, value);\n\t        };\n\t        case 3: return function(value, index, collection) {\n\t          return func.call(thisArg, value, index, collection);\n\t        };\n\t        case 4: return function(accumulator, value, index, collection) {\n\t          return func.call(thisArg, accumulator, value, index, collection);\n\t        };\n\t        case 5: return function(value, other, key, object, source) {\n\t          return func.call(thisArg, value, other, key, object, source);\n\t        };\n\t      }\n\t      return function() {\n\t        return func.apply(thisArg, arguments);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the given array buffer.\n\t     *\n\t     * @private\n\t     * @param {ArrayBuffer} buffer The array buffer to clone.\n\t     * @returns {ArrayBuffer} Returns the cloned array buffer.\n\t     */\n\t    function bufferClone(buffer) {\n\t      var result = new ArrayBuffer(buffer.byteLength),\n\t          view = new Uint8Array(result);\n\t\n\t      view.set(new Uint8Array(buffer));\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array that is the composition of partially applied arguments,\n\t     * placeholders, and provided arguments into a single array of arguments.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} args The provided arguments.\n\t     * @param {Array} partials The arguments to prepend to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgs(args, partials, holders) {\n\t      var holdersLength = holders.length,\n\t          argsIndex = -1,\n\t          argsLength = nativeMax(args.length - holdersLength, 0),\n\t          leftIndex = -1,\n\t          leftLength = partials.length,\n\t          result = Array(leftLength + argsLength);\n\t\n\t      while (++leftIndex < leftLength) {\n\t        result[leftIndex] = partials[leftIndex];\n\t      }\n\t      while (++argsIndex < holdersLength) {\n\t        result[holders[argsIndex]] = args[argsIndex];\n\t      }\n\t      while (argsLength--) {\n\t        result[leftIndex++] = args[argsIndex++];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This function is like `composeArgs` except that the arguments composition\n\t     * is tailored for `_.partialRight`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} args The provided arguments.\n\t     * @param {Array} partials The arguments to append to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgsRight(args, partials, holders) {\n\t      var holdersIndex = -1,\n\t          holdersLength = holders.length,\n\t          argsIndex = -1,\n\t          argsLength = nativeMax(args.length - holdersLength, 0),\n\t          rightIndex = -1,\n\t          rightLength = partials.length,\n\t          result = Array(argsLength + rightLength);\n\t\n\t      while (++argsIndex < argsLength) {\n\t        result[argsIndex] = args[argsIndex];\n\t      }\n\t      var offset = argsIndex;\n\t      while (++rightIndex < rightLength) {\n\t        result[offset + rightIndex] = partials[rightIndex];\n\t      }\n\t      while (++holdersIndex < holdersLength) {\n\t        result[offset + holders[holdersIndex]] = args[argsIndex++];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.countBy`, `_.groupBy`, `_.indexBy`, or `_.partition` function.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set keys and values of the accumulator object.\n\t     * @param {Function} [initializer] The function to initialize the accumulator object.\n\t     * @returns {Function} Returns the new aggregator function.\n\t     */\n\t    function createAggregator(setter, initializer) {\n\t      return function(collection, iteratee, thisArg) {\n\t        var result = initializer ? initializer() : {};\n\t        iteratee = getCallback(iteratee, thisArg, 3);\n\t\n\t        if (isArray(collection)) {\n\t          var index = -1,\n\t              length = collection.length;\n\t\n\t          while (++index < length) {\n\t            var value = collection[index];\n\t            setter(result, value, iteratee(value, index, collection), collection);\n\t          }\n\t        } else {\n\t          baseEach(collection, function(value, key, collection) {\n\t            setter(result, value, iteratee(value, key, collection), collection);\n\t          });\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.assign`, `_.defaults`, or `_.merge` function.\n\t     *\n\t     * @private\n\t     * @param {Function} assigner The function to assign values.\n\t     * @returns {Function} Returns the new assigner function.\n\t     */\n\t    function createAssigner(assigner) {\n\t      return restParam(function(object, sources) {\n\t        var index = -1,\n\t            length = object == null ? 0 : sources.length,\n\t            customizer = length > 2 ? sources[length - 2] : undefined,\n\t            guard = length > 2 ? sources[2] : undefined,\n\t            thisArg = length > 1 ? sources[length - 1] : undefined;\n\t\n\t        if (typeof customizer == 'function') {\n\t          customizer = bindCallback(customizer, thisArg, 5);\n\t          length -= 2;\n\t        } else {\n\t          customizer = typeof thisArg == 'function' ? thisArg : undefined;\n\t          length -= (customizer ? 1 : 0);\n\t        }\n\t        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n\t          customizer = length < 3 ? undefined : customizer;\n\t          length = 1;\n\t        }\n\t        while (++index < length) {\n\t          var source = sources[index];\n\t          if (source) {\n\t            assigner(object, source, customizer);\n\t          }\n\t        }\n\t        return object;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a `baseEach` or `baseEachRight` function.\n\t     *\n\t     * @private\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseEach(eachFunc, fromRight) {\n\t      return function(collection, iteratee) {\n\t        var length = collection ? getLength(collection) : 0;\n\t        if (!isLength(length)) {\n\t          return eachFunc(collection, iteratee);\n\t        }\n\t        var index = fromRight ? length : -1,\n\t            iterable = toObject(collection);\n\t\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          if (iteratee(iterable[index], index, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return collection;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a base function for `_.forIn` or `_.forInRight`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseFor(fromRight) {\n\t      return function(object, iteratee, keysFunc) {\n\t        var iterable = toObject(object),\n\t            props = keysFunc(object),\n\t            length = props.length,\n\t            index = fromRight ? length : -1;\n\t\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          var key = props[index];\n\t          if (iteratee(iterable[key], key, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return object;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` and invokes it with the `this`\n\t     * binding of `thisArg`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @returns {Function} Returns the new bound function.\n\t     */\n\t    function createBindWrapper(func, thisArg) {\n\t      var Ctor = createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return fn.apply(thisArg, arguments);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `Set` cache object to optimize linear searches of large arrays.\n\t     *\n\t     * @private\n\t     * @param {Array} [values] The values to cache.\n\t     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n\t     */\n\t    function createCache(values) {\n\t      return (nativeCreate && Set) ? new SetCache(values) : null;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that produces compound words out of the words in a\n\t     * given string.\n\t     *\n\t     * @private\n\t     * @param {Function} callback The function to combine each word.\n\t     * @returns {Function} Returns the new compounder function.\n\t     */\n\t    function createCompounder(callback) {\n\t      return function(string) {\n\t        var index = -1,\n\t            array = words(deburr(string)),\n\t            length = array.length,\n\t            result = '';\n\t\n\t        while (++index < length) {\n\t          result = callback(result, array[index], index);\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that produces an instance of `Ctor` regardless of\n\t     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n\t     *\n\t     * @private\n\t     * @param {Function} Ctor The constructor to wrap.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCtorWrapper(Ctor) {\n\t      return function() {\n\t        // Use a `switch` statement to work with class constructors.\n\t        // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n\t        // for more details.\n\t        var args = arguments;\n\t        switch (args.length) {\n\t          case 0: return new Ctor;\n\t          case 1: return new Ctor(args[0]);\n\t          case 2: return new Ctor(args[0], args[1]);\n\t          case 3: return new Ctor(args[0], args[1], args[2]);\n\t          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n\t          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n\t          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n\t          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n\t        }\n\t        var thisBinding = baseCreate(Ctor.prototype),\n\t            result = Ctor.apply(thisBinding, args);\n\t\n\t        // Mimic the constructor's `return` behavior.\n\t        // See https://es5.github.io/#x13.2.2 for more details.\n\t        return isObject(result) ? result : thisBinding;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.curry` or `_.curryRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} flag The curry bit flag.\n\t     * @returns {Function} Returns the new curry function.\n\t     */\n\t    function createCurry(flag) {\n\t      function curryFunc(func, arity, guard) {\n\t        if (guard && isIterateeCall(func, arity, guard)) {\n\t          arity = undefined;\n\t        }\n\t        var result = createWrapper(func, flag, undefined, undefined, undefined, undefined, undefined, arity);\n\t        result.placeholder = curryFunc.placeholder;\n\t        return result;\n\t      }\n\t      return curryFunc;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.defaults` or `_.defaultsDeep` function.\n\t     *\n\t     * @private\n\t     * @param {Function} assigner The function to assign values.\n\t     * @param {Function} customizer The function to customize assigned values.\n\t     * @returns {Function} Returns the new defaults function.\n\t     */\n\t    function createDefaults(assigner, customizer) {\n\t      return restParam(function(args) {\n\t        var object = args[0];\n\t        if (object == null) {\n\t          return object;\n\t        }\n\t        args.push(customizer);\n\t        return assigner.apply(undefined, args);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.max` or `_.min` function.\n\t     *\n\t     * @private\n\t     * @param {Function} comparator The function used to compare values.\n\t     * @param {*} exValue The initial extremum value.\n\t     * @returns {Function} Returns the new extremum function.\n\t     */\n\t    function createExtremum(comparator, exValue) {\n\t      return function(collection, iteratee, thisArg) {\n\t        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n\t          iteratee = undefined;\n\t        }\n\t        iteratee = getCallback(iteratee, thisArg, 3);\n\t        if (iteratee.length == 1) {\n\t          collection = isArray(collection) ? collection : toIterable(collection);\n\t          var result = arrayExtremum(collection, iteratee, comparator, exValue);\n\t          if (!(collection.length && result === exValue)) {\n\t            return result;\n\t          }\n\t        }\n\t        return baseExtremum(collection, iteratee, comparator, exValue);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.find` or `_.findLast` function.\n\t     *\n\t     * @private\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new find function.\n\t     */\n\t    function createFind(eachFunc, fromRight) {\n\t      return function(collection, predicate, thisArg) {\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t        if (isArray(collection)) {\n\t          var index = baseFindIndex(collection, predicate, fromRight);\n\t          return index > -1 ? collection[index] : undefined;\n\t        }\n\t        return baseFind(collection, predicate, eachFunc);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.findIndex` or `_.findLastIndex` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new find function.\n\t     */\n\t    function createFindIndex(fromRight) {\n\t      return function(array, predicate, thisArg) {\n\t        if (!(array && array.length)) {\n\t          return -1;\n\t        }\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t        return baseFindIndex(array, predicate, fromRight);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.findKey` or `_.findLastKey` function.\n\t     *\n\t     * @private\n\t     * @param {Function} objectFunc The function to iterate over an object.\n\t     * @returns {Function} Returns the new find function.\n\t     */\n\t    function createFindKey(objectFunc) {\n\t      return function(object, predicate, thisArg) {\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t        return baseFind(object, predicate, objectFunc, true);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.flow` or `_.flowRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new flow function.\n\t     */\n\t    function createFlow(fromRight) {\n\t      return function() {\n\t        var wrapper,\n\t            length = arguments.length,\n\t            index = fromRight ? length : -1,\n\t            leftIndex = 0,\n\t            funcs = Array(length);\n\t\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          var func = funcs[leftIndex++] = arguments[index];\n\t          if (typeof func != 'function') {\n\t            throw new TypeError(FUNC_ERROR_TEXT);\n\t          }\n\t          if (!wrapper && LodashWrapper.prototype.thru && getFuncName(func) == 'wrapper') {\n\t            wrapper = new LodashWrapper([], true);\n\t          }\n\t        }\n\t        index = wrapper ? -1 : length;\n\t        while (++index < length) {\n\t          func = funcs[index];\n\t\n\t          var funcName = getFuncName(func),\n\t              data = funcName == 'wrapper' ? getData(func) : undefined;\n\t\n\t          if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1) {\n\t            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n\t          } else {\n\t            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n\t          }\n\t        }\n\t        return function() {\n\t          var args = arguments,\n\t              value = args[0];\n\t\n\t          if (wrapper && args.length == 1 && isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n\t            return wrapper.plant(value).value();\n\t          }\n\t          var index = 0,\n\t              result = length ? funcs[index].apply(this, args) : value;\n\t\n\t          while (++index < length) {\n\t            result = funcs[index].call(this, result);\n\t          }\n\t          return result;\n\t        };\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.forEach` or `_.forEachRight`.\n\t     *\n\t     * @private\n\t     * @param {Function} arrayFunc The function to iterate over an array.\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @returns {Function} Returns the new each function.\n\t     */\n\t    function createForEach(arrayFunc, eachFunc) {\n\t      return function(collection, iteratee, thisArg) {\n\t        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n\t          ? arrayFunc(collection, iteratee)\n\t          : eachFunc(collection, bindCallback(iteratee, thisArg, 3));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.forIn` or `_.forInRight`.\n\t     *\n\t     * @private\n\t     * @param {Function} objectFunc The function to iterate over an object.\n\t     * @returns {Function} Returns the new each function.\n\t     */\n\t    function createForIn(objectFunc) {\n\t      return function(object, iteratee, thisArg) {\n\t        if (typeof iteratee != 'function' || thisArg !== undefined) {\n\t          iteratee = bindCallback(iteratee, thisArg, 3);\n\t        }\n\t        return objectFunc(object, iteratee, keysIn);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.forOwn` or `_.forOwnRight`.\n\t     *\n\t     * @private\n\t     * @param {Function} objectFunc The function to iterate over an object.\n\t     * @returns {Function} Returns the new each function.\n\t     */\n\t    function createForOwn(objectFunc) {\n\t      return function(object, iteratee, thisArg) {\n\t        if (typeof iteratee != 'function' || thisArg !== undefined) {\n\t          iteratee = bindCallback(iteratee, thisArg, 3);\n\t        }\n\t        return objectFunc(object, iteratee);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.mapKeys` or `_.mapValues`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [isMapKeys] Specify mapping keys instead of values.\n\t     * @returns {Function} Returns the new map function.\n\t     */\n\t    function createObjectMapper(isMapKeys) {\n\t      return function(object, iteratee, thisArg) {\n\t        var result = {};\n\t        iteratee = getCallback(iteratee, thisArg, 3);\n\t\n\t        baseForOwn(object, function(value, key, object) {\n\t          var mapped = iteratee(value, key, object);\n\t          key = isMapKeys ? mapped : key;\n\t          value = isMapKeys ? value : mapped;\n\t          result[key] = value;\n\t        });\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.padLeft` or `_.padRight`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify padding from the right.\n\t     * @returns {Function} Returns the new pad function.\n\t     */\n\t    function createPadDir(fromRight) {\n\t      return function(string, length, chars) {\n\t        string = baseToString(string);\n\t        return (fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.partial` or `_.partialRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} flag The partial bit flag.\n\t     * @returns {Function} Returns the new partial function.\n\t     */\n\t    function createPartial(flag) {\n\t      var partialFunc = restParam(function(func, partials) {\n\t        var holders = replaceHolders(partials, partialFunc.placeholder);\n\t        return createWrapper(func, flag, undefined, partials, holders);\n\t      });\n\t      return partialFunc;\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.reduce` or `_.reduceRight`.\n\t     *\n\t     * @private\n\t     * @param {Function} arrayFunc The function to iterate over an array.\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @returns {Function} Returns the new each function.\n\t     */\n\t    function createReduce(arrayFunc, eachFunc) {\n\t      return function(collection, iteratee, accumulator, thisArg) {\n\t        var initFromArray = arguments.length < 3;\n\t        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n\t          ? arrayFunc(collection, iteratee, accumulator, initFromArray)\n\t          : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` and invokes it with optional `this`\n\t     * binding of, partial application, and currying.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to reference.\n\t     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n\t     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n\t      var isAry = bitmask & ARY_FLAG,\n\t          isBind = bitmask & BIND_FLAG,\n\t          isBindKey = bitmask & BIND_KEY_FLAG,\n\t          isCurry = bitmask & CURRY_FLAG,\n\t          isCurryBound = bitmask & CURRY_BOUND_FLAG,\n\t          isCurryRight = bitmask & CURRY_RIGHT_FLAG,\n\t          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        // Avoid `arguments` object use disqualifying optimizations by\n\t        // converting it to an array before providing it to other functions.\n\t        var length = arguments.length,\n\t            index = length,\n\t            args = Array(length);\n\t\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        if (partials) {\n\t          args = composeArgs(args, partials, holders);\n\t        }\n\t        if (partialsRight) {\n\t          args = composeArgsRight(args, partialsRight, holdersRight);\n\t        }\n\t        if (isCurry || isCurryRight) {\n\t          var placeholder = wrapper.placeholder,\n\t              argsHolders = replaceHolders(args, placeholder);\n\t\n\t          length -= argsHolders.length;\n\t          if (length < arity) {\n\t            var newArgPos = argPos ? arrayCopy(argPos) : undefined,\n\t                newArity = nativeMax(arity - length, 0),\n\t                newsHolders = isCurry ? argsHolders : undefined,\n\t                newHoldersRight = isCurry ? undefined : argsHolders,\n\t                newPartials = isCurry ? args : undefined,\n\t                newPartialsRight = isCurry ? undefined : args;\n\t\n\t            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n\t            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\t\n\t            if (!isCurryBound) {\n\t              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n\t            }\n\t            var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\n\t                result = createHybridWrapper.apply(undefined, newData);\n\t\n\t            if (isLaziable(func)) {\n\t              setData(result, newData);\n\t            }\n\t            result.placeholder = placeholder;\n\t            return result;\n\t          }\n\t        }\n\t        var thisBinding = isBind ? thisArg : this,\n\t            fn = isBindKey ? thisBinding[func] : func;\n\t\n\t        if (argPos) {\n\t          args = reorder(args, argPos);\n\t        }\n\t        if (isAry && ary < args.length) {\n\t          args.length = ary;\n\t        }\n\t        if (this && this !== root && this instanceof wrapper) {\n\t          fn = Ctor || createCtorWrapper(func);\n\t        }\n\t        return fn.apply(thisBinding, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates the padding required for `string` based on the given `length`.\n\t     * The `chars` string is truncated if the number of characters exceeds `length`.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to create padding for.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the pad for `string`.\n\t     */\n\t    function createPadding(string, length, chars) {\n\t      var strLength = string.length;\n\t      length = +length;\n\t\n\t      if (strLength >= length || !nativeIsFinite(length)) {\n\t        return '';\n\t      }\n\t      var padLength = length - strLength;\n\t      chars = chars == null ? ' ' : (chars + '');\n\t      return repeat(chars, nativeCeil(padLength / chars.length)).slice(0, padLength);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` and invokes it with the optional `this`\n\t     * binding of `thisArg` and the `partials` prepended to those provided to\n\t     * the wrapper.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {Array} partials The arguments to prepend to those provided to the new function.\n\t     * @returns {Function} Returns the new bound function.\n\t     */\n\t    function createPartialWrapper(func, bitmask, thisArg, partials) {\n\t      var isBind = bitmask & BIND_FLAG,\n\t          Ctor = createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        // Avoid `arguments` object use disqualifying optimizations by\n\t        // converting it to an array before providing it `func`.\n\t        var argsIndex = -1,\n\t            argsLength = arguments.length,\n\t            leftIndex = -1,\n\t            leftLength = partials.length,\n\t            args = Array(leftLength + argsLength);\n\t\n\t        while (++leftIndex < leftLength) {\n\t          args[leftIndex] = partials[leftIndex];\n\t        }\n\t        while (argsLength--) {\n\t          args[leftIndex++] = arguments[++argsIndex];\n\t        }\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return fn.apply(isBind ? thisArg : this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.ceil`, `_.floor`, or `_.round` function.\n\t     *\n\t     * @private\n\t     * @param {string} methodName The name of the `Math` method to use when rounding.\n\t     * @returns {Function} Returns the new round function.\n\t     */\n\t    function createRound(methodName) {\n\t      var func = Math[methodName];\n\t      return function(number, precision) {\n\t        precision = precision === undefined ? 0 : (+precision || 0);\n\t        if (precision) {\n\t          precision = pow(10, precision);\n\t          return func(number * precision) / precision;\n\t        }\n\t        return func(number);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.sortedIndex` or `_.sortedLastIndex` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {Function} Returns the new index function.\n\t     */\n\t    function createSortedIndex(retHighest) {\n\t      return function(array, value, iteratee, thisArg) {\n\t        var callback = getCallback(iteratee);\n\t        return (iteratee == null && callback === baseCallback)\n\t          ? binaryIndex(array, value, retHighest)\n\t          : binaryIndexBy(array, value, callback(iteratee, thisArg, 1), retHighest);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that either curries or invokes `func` with optional\n\t     * `this` binding and partially applied arguments.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to reference.\n\t     * @param {number} bitmask The bitmask of flags.\n\t     *  The bitmask may be composed of the following flags:\n\t     *     1 - `_.bind`\n\t     *     2 - `_.bindKey`\n\t     *     4 - `_.curry` or `_.curryRight` of a bound function\n\t     *     8 - `_.curry`\n\t     *    16 - `_.curryRight`\n\t     *    32 - `_.partial`\n\t     *    64 - `_.partialRight`\n\t     *   128 - `_.rearg`\n\t     *   256 - `_.ary`\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to be partially applied.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isBindKey = bitmask & BIND_KEY_FLAG;\n\t      if (!isBindKey && typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var length = partials ? partials.length : 0;\n\t      if (!length) {\n\t        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n\t        partials = holders = undefined;\n\t      }\n\t      length -= (holders ? holders.length : 0);\n\t      if (bitmask & PARTIAL_RIGHT_FLAG) {\n\t        var partialsRight = partials,\n\t            holdersRight = holders;\n\t\n\t        partials = holders = undefined;\n\t      }\n\t      var data = isBindKey ? undefined : getData(func),\n\t          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\t\n\t      if (data) {\n\t        mergeData(newData, data);\n\t        bitmask = newData[1];\n\t        arity = newData[9];\n\t      }\n\t      newData[9] = arity == null\n\t        ? (isBindKey ? 0 : func.length)\n\t        : (nativeMax(arity - length, 0) || 0);\n\t\n\t      if (bitmask == BIND_FLAG) {\n\t        var result = createBindWrapper(newData[0], newData[2]);\n\t      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n\t        result = createPartialWrapper.apply(undefined, newData);\n\t      } else {\n\t        result = createHybridWrapper.apply(undefined, newData);\n\t      }\n\t      var setter = data ? baseSetData : setData;\n\t      return setter(result, newData);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for arrays with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to compare.\n\t     * @param {Array} other The other array to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparing arrays.\n\t     * @param {boolean} [isLoose] Specify performing partial comparisons.\n\t     * @param {Array} [stackA] Tracks traversed `value` objects.\n\t     * @param {Array} [stackB] Tracks traversed `other` objects.\n\t     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n\t     */\n\t    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n\t      var index = -1,\n\t          arrLength = array.length,\n\t          othLength = other.length;\n\t\n\t      if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n\t        return false;\n\t      }\n\t      // Ignore non-index properties.\n\t      while (++index < arrLength) {\n\t        var arrValue = array[index],\n\t            othValue = other[index],\n\t            result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;\n\t\n\t        if (result !== undefined) {\n\t          if (result) {\n\t            continue;\n\t          }\n\t          return false;\n\t        }\n\t        // Recursively compare arrays (susceptible to call stack limits).\n\t        if (isLoose) {\n\t          if (!arraySome(other, function(othValue) {\n\t                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n\t              })) {\n\t            return false;\n\t          }\n\t        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for comparing objects of\n\t     * the same `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports comparing values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {string} tag The `toStringTag` of the objects to compare.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalByTag(object, other, tag) {\n\t      switch (tag) {\n\t        case boolTag:\n\t        case dateTag:\n\t          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n\t          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n\t          return +object == +other;\n\t\n\t        case errorTag:\n\t          return object.name == other.name && object.message == other.message;\n\t\n\t        case numberTag:\n\t          // Treat `NaN` vs. `NaN` as equal.\n\t          return (object != +object)\n\t            ? other != +other\n\t            : object == +other;\n\t\n\t        case regexpTag:\n\t        case stringTag:\n\t          // Coerce regexes to strings and treat strings primitives and string\n\t          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n\t          return object == (other + '');\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for objects with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparing values.\n\t     * @param {boolean} [isLoose] Specify performing partial comparisons.\n\t     * @param {Array} [stackA] Tracks traversed `value` objects.\n\t     * @param {Array} [stackB] Tracks traversed `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n\t      var objProps = keys(object),\n\t          objLength = objProps.length,\n\t          othProps = keys(other),\n\t          othLength = othProps.length;\n\t\n\t      if (objLength != othLength && !isLoose) {\n\t        return false;\n\t      }\n\t      var index = objLength;\n\t      while (index--) {\n\t        var key = objProps[index];\n\t        if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n\t          return false;\n\t        }\n\t      }\n\t      var skipCtor = isLoose;\n\t      while (++index < objLength) {\n\t        key = objProps[index];\n\t        var objValue = object[key],\n\t            othValue = other[key],\n\t            result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;\n\t\n\t        // Recursively compare objects (susceptible to call stack limits).\n\t        if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n\t          return false;\n\t        }\n\t        skipCtor || (skipCtor = key == 'constructor');\n\t      }\n\t      if (!skipCtor) {\n\t        var objCtor = object.constructor,\n\t            othCtor = other.constructor;\n\t\n\t        // Non `Object` object instances with different constructors are not equal.\n\t        if (objCtor != othCtor &&\n\t            ('constructor' in object && 'constructor' in other) &&\n\t            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n\t              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Gets the appropriate \"callback\" function. If the `_.callback` method is\n\t     * customized this function returns the custom method, otherwise it returns\n\t     * the `baseCallback` function. If arguments are provided the chosen function\n\t     * is invoked with them and its result is returned.\n\t     *\n\t     * @private\n\t     * @returns {Function} Returns the chosen function or its result.\n\t     */\n\t    function getCallback(func, thisArg, argCount) {\n\t      var result = lodash.callback || callback;\n\t      result = result === callback ? baseCallback : result;\n\t      return argCount ? result(func, thisArg, argCount) : result;\n\t    }\n\t\n\t    /**\n\t     * Gets metadata for `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {*} Returns the metadata for `func`.\n\t     */\n\t    var getData = !metaMap ? noop : function(func) {\n\t      return metaMap.get(func);\n\t    };\n\t\n\t    /**\n\t     * Gets the name of `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {string} Returns the function name.\n\t     */\n\t    function getFuncName(func) {\n\t      var result = func.name,\n\t          array = realNames[result],\n\t          length = array ? array.length : 0;\n\t\n\t      while (length--) {\n\t        var data = array[length],\n\t            otherFunc = data.func;\n\t        if (otherFunc == null || otherFunc == func) {\n\t          return data.name;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n\t     * customized this function returns the custom method, otherwise it returns\n\t     * the `baseIndexOf` function. If arguments are provided the chosen function\n\t     * is invoked with them and its result is returned.\n\t     *\n\t     * @private\n\t     * @returns {Function|number} Returns the chosen function or its result.\n\t     */\n\t    function getIndexOf(collection, target, fromIndex) {\n\t      var result = lodash.indexOf || indexOf;\n\t      result = result === indexOf ? baseIndexOf : result;\n\t      return collection ? result(collection, target, fromIndex) : result;\n\t    }\n\t\n\t    /**\n\t     * Gets the \"length\" property value of `object`.\n\t     *\n\t     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n\t     * that affects Safari on at least iOS 8.1-8.3 ARM64.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {*} Returns the \"length\" value.\n\t     */\n\t    var getLength = baseProperty('length');\n\t\n\t    /**\n\t     * Gets the propery names, values, and compare flags of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the match data of `object`.\n\t     */\n\t    function getMatchData(object) {\n\t      var result = pairs(object),\n\t          length = result.length;\n\t\n\t      while (length--) {\n\t        result[length][2] = isStrictComparable(result[length][1]);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the native function at `key` of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {string} key The key of the method to get.\n\t     * @returns {*} Returns the function if it's native, else `undefined`.\n\t     */\n\t    function getNative(object, key) {\n\t      var value = object == null ? undefined : object[key];\n\t      return isNative(value) ? value : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the view.\n\t     * @param {number} end The end of the view.\n\t     * @param {Array} transforms The transformations to apply to the view.\n\t     * @returns {Object} Returns an object containing the `start` and `end`\n\t     *  positions of the view.\n\t     */\n\t    function getView(start, end, transforms) {\n\t      var index = -1,\n\t          length = transforms.length;\n\t\n\t      while (++index < length) {\n\t        var data = transforms[index],\n\t            size = data.size;\n\t\n\t        switch (data.type) {\n\t          case 'drop':      start += size; break;\n\t          case 'dropRight': end -= size; break;\n\t          case 'take':      end = nativeMin(end, start + size); break;\n\t          case 'takeRight': start = nativeMax(start, end - size); break;\n\t        }\n\t      }\n\t      return { 'start': start, 'end': end };\n\t    }\n\t\n\t    /**\n\t     * Initializes an array clone.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to clone.\n\t     * @returns {Array} Returns the initialized clone.\n\t     */\n\t    function initCloneArray(array) {\n\t      var length = array.length,\n\t          result = new array.constructor(length);\n\t\n\t      // Add array properties assigned by `RegExp#exec`.\n\t      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n\t        result.index = array.index;\n\t        result.input = array.input;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneObject(object) {\n\t      var Ctor = object.constructor;\n\t      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n\t        Ctor = Object;\n\t      }\n\t      return new Ctor;\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone based on its `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports cloning values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @param {string} tag The `toStringTag` of the object to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneByTag(object, tag, isDeep) {\n\t      var Ctor = object.constructor;\n\t      switch (tag) {\n\t        case arrayBufferTag:\n\t          return bufferClone(object);\n\t\n\t        case boolTag:\n\t        case dateTag:\n\t          return new Ctor(+object);\n\t\n\t        case float32Tag: case float64Tag:\n\t        case int8Tag: case int16Tag: case int32Tag:\n\t        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n\t          var buffer = object.buffer;\n\t          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\t\n\t        case numberTag:\n\t        case stringTag:\n\t          return new Ctor(object);\n\t\n\t        case regexpTag:\n\t          var result = new Ctor(object.source, reFlags.exec(object));\n\t          result.lastIndex = object.lastIndex;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Invokes the method at `path` on `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {Array} args The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     */\n\t    function invokePath(object, path, args) {\n\t      if (object != null && !isKey(path, object)) {\n\t        path = toPath(path);\n\t        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t        path = last(path);\n\t      }\n\t      var func = object == null ? object : object[path];\n\t      return func == null ? undefined : func.apply(object, args);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is array-like.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n\t     */\n\t    function isArrayLike(value) {\n\t      return value != null && isLength(getLength(value));\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like index.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n\t     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n\t     */\n\t    function isIndex(value, length) {\n\t      value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n\t      length = length == null ? MAX_SAFE_INTEGER : length;\n\t      return value > -1 && value % 1 == 0 && value < length;\n\t    }\n\t\n\t    /**\n\t     * Checks if the provided arguments are from an iteratee call.\n\t     *\n\t     * @private\n\t     * @param {*} value The potential iteratee value argument.\n\t     * @param {*} index The potential iteratee index or key argument.\n\t     * @param {*} object The potential iteratee object argument.\n\t     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n\t     */\n\t    function isIterateeCall(value, index, object) {\n\t      if (!isObject(object)) {\n\t        return false;\n\t      }\n\t      var type = typeof index;\n\t      if (type == 'number'\n\t          ? (isArrayLike(object) && isIndex(index, object.length))\n\t          : (type == 'string' && index in object)) {\n\t        var other = object[index];\n\t        return value === value ? (value === other) : (other !== other);\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a property name and not a property path.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {Object} [object] The object to query keys on.\n\t     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n\t     */\n\t    function isKey(value, object) {\n\t      var type = typeof value;\n\t      if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n\t        return true;\n\t      }\n\t      if (isArray(value)) {\n\t        return false;\n\t      }\n\t      var result = !reIsDeepProp.test(value);\n\t      return result || (object != null && value in toObject(object));\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` has a lazy counterpart.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to check.\n\t     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n\t     */\n\t    function isLaziable(func) {\n\t      var funcName = getFuncName(func);\n\t      if (!(funcName in LazyWrapper.prototype)) {\n\t        return false;\n\t      }\n\t      var other = lodash[funcName];\n\t      if (func === other) {\n\t        return true;\n\t      }\n\t      var data = getData(other);\n\t      return !!data && func === data[0];\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like length.\n\t     *\n\t     * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n\t     */\n\t    function isLength(value) {\n\t      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` if suitable for strict\n\t     *  equality comparisons, else `false`.\n\t     */\n\t    function isStrictComparable(value) {\n\t      return value === value && !isObject(value);\n\t    }\n\t\n\t    /**\n\t     * Merges the function metadata of `source` into `data`.\n\t     *\n\t     * Merging metadata reduces the number of wrappers required to invoke a function.\n\t     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n\t     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n\t     * augment function arguments, making the order in which they are executed important,\n\t     * preventing the merging of metadata. However, we make an exception for a safe\n\t     * common case where curried functions have `_.ary` and or `_.rearg` applied.\n\t     *\n\t     * @private\n\t     * @param {Array} data The destination metadata.\n\t     * @param {Array} source The source metadata.\n\t     * @returns {Array} Returns `data`.\n\t     */\n\t    function mergeData(data, source) {\n\t      var bitmask = data[1],\n\t          srcBitmask = source[1],\n\t          newBitmask = bitmask | srcBitmask,\n\t          isCommon = newBitmask < ARY_FLAG;\n\t\n\t      var isCombo =\n\t        (srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG) ||\n\t        (srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8]) ||\n\t        (srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG);\n\t\n\t      // Exit early if metadata can't be merged.\n\t      if (!(isCommon || isCombo)) {\n\t        return data;\n\t      }\n\t      // Use source `thisArg` if available.\n\t      if (srcBitmask & BIND_FLAG) {\n\t        data[2] = source[2];\n\t        // Set when currying a bound function.\n\t        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n\t      }\n\t      // Compose partial arguments.\n\t      var value = source[3];\n\t      if (value) {\n\t        var partials = data[3];\n\t        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n\t        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n\t      }\n\t      // Compose partial right arguments.\n\t      value = source[5];\n\t      if (value) {\n\t        partials = data[5];\n\t        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n\t        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n\t      }\n\t      // Use source `argPos` if available.\n\t      value = source[7];\n\t      if (value) {\n\t        data[7] = arrayCopy(value);\n\t      }\n\t      // Use source `ary` if it's smaller.\n\t      if (srcBitmask & ARY_FLAG) {\n\t        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n\t      }\n\t      // Use source `arity` if one is not provided.\n\t      if (data[9] == null) {\n\t        data[9] = source[9];\n\t      }\n\t      // Use source `func` and merge bitmasks.\n\t      data[0] = source[0];\n\t      data[1] = newBitmask;\n\t\n\t      return data;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n\t     *\n\t     * @private\n\t     * @param {*} objectValue The destination object property value.\n\t     * @param {*} sourceValue The source object property value.\n\t     * @returns {*} Returns the value to assign to the destination object.\n\t     */\n\t    function mergeDefaults(objectValue, sourceValue) {\n\t      return objectValue === undefined ? sourceValue : merge(objectValue, sourceValue, mergeDefaults);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.pick` which picks `object` properties specified\n\t     * by `props`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {string[]} props The property names to pick.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function pickByArray(object, props) {\n\t      object = toObject(object);\n\t\n\t      var index = -1,\n\t          length = props.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        if (key in object) {\n\t          result[key] = object[key];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.pick` which picks `object` properties `predicate`\n\t     * returns truthy for.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function pickByCallback(object, predicate) {\n\t      var result = {};\n\t      baseForIn(object, function(value, key, object) {\n\t        if (predicate(value, key, object)) {\n\t          result[key] = value;\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reorder `array` according to the specified indexes where the element at\n\t     * the first index is assigned as the first element, the element at\n\t     * the second index is assigned as the second element, and so on.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to reorder.\n\t     * @param {Array} indexes The arranged array indexes.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function reorder(array, indexes) {\n\t      var arrLength = array.length,\n\t          length = nativeMin(indexes.length, arrLength),\n\t          oldArray = arrayCopy(array);\n\t\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Sets metadata for `func`.\n\t     *\n\t     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n\t     * period of time, it will trip its breaker and transition to an identity function\n\t     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n\t     * for more details.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var setData = (function() {\n\t      var count = 0,\n\t          lastCalled = 0;\n\t\n\t      return function(key, value) {\n\t        var stamp = now(),\n\t            remaining = HOT_SPAN - (stamp - lastCalled);\n\t\n\t        lastCalled = stamp;\n\t        if (remaining > 0) {\n\t          if (++count >= HOT_COUNT) {\n\t            return key;\n\t          }\n\t        } else {\n\t          count = 0;\n\t        }\n\t        return baseSetData(key, value);\n\t      };\n\t    }());\n\t\n\t    /**\n\t     * A fallback implementation of `Object.keys` which creates an array of the\n\t     * own enumerable property names of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function shimKeys(object) {\n\t      var props = keysIn(object),\n\t          propsLength = props.length,\n\t          length = propsLength && object.length;\n\t\n\t      var allowIndexes = !!length && isLength(length) &&\n\t        (isArray(object) || isArguments(object));\n\t\n\t      var index = -1,\n\t          result = [];\n\t\n\t      while (++index < propsLength) {\n\t        var key = props[index];\n\t        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an array-like object if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {Array|Object} Returns the array-like object.\n\t     */\n\t    function toIterable(value) {\n\t      if (value == null) {\n\t        return [];\n\t      }\n\t      if (!isArrayLike(value)) {\n\t        return values(value);\n\t      }\n\t      return isObject(value) ? value : Object(value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an object if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {Object} Returns the object.\n\t     */\n\t    function toObject(value) {\n\t      return isObject(value) ? value : Object(value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to property path array if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {Array} Returns the property path array.\n\t     */\n\t    function toPath(value) {\n\t      if (isArray(value)) {\n\t        return value;\n\t      }\n\t      var result = [];\n\t      baseToString(value).replace(rePropName, function(match, number, quote, string) {\n\t        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `wrapper`.\n\t     *\n\t     * @private\n\t     * @param {Object} wrapper The wrapper to clone.\n\t     * @returns {Object} Returns the cloned wrapper.\n\t     */\n\t    function wrapperClone(wrapper) {\n\t      return wrapper instanceof LazyWrapper\n\t        ? wrapper.clone()\n\t        : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an array of elements split into groups the length of `size`.\n\t     * If `collection` can't be split evenly, the final chunk will be the remaining\n\t     * elements.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to process.\n\t     * @param {number} [size=1] The length of each chunk.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the new array containing chunks.\n\t     * @example\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 2);\n\t     * // => [['a', 'b'], ['c', 'd']]\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 3);\n\t     * // => [['a', 'b', 'c'], ['d']]\n\t     */\n\t    function chunk(array, size, guard) {\n\t      if (guard ? isIterateeCall(array, size, guard) : size == null) {\n\t        size = 1;\n\t      } else {\n\t        size = nativeMax(nativeFloor(size) || 1, 1);\n\t      }\n\t      var index = 0,\n\t          length = array ? array.length : 0,\n\t          resIndex = -1,\n\t          result = Array(nativeCeil(length / size));\n\t\n\t      while (index < length) {\n\t        result[++resIndex] = baseSlice(array, index, (index += size));\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array with all falsey values removed. The values `false`, `null`,\n\t     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to compact.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.compact([0, 1, false, 2, '', 3]);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function compact(array) {\n\t      var index = -1,\n\t          length = array ? array.length : 0,\n\t          resIndex = -1,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (value) {\n\t          result[++resIndex] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique `array` values not included in the other\n\t     * provided arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The arrays of values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.difference([1, 2, 3], [4, 2]);\n\t     * // => [1, 3]\n\t     */\n\t    var difference = restParam(function(array, values) {\n\t      return (isObjectLike(array) && isArrayLike(array))\n\t        ? baseDifference(array, baseFlatten(values, false, true))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.drop([1, 2, 3]);\n\t     * // => [2, 3]\n\t     *\n\t     * _.drop([1, 2, 3], 2);\n\t     * // => [3]\n\t     *\n\t     * _.drop([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.drop([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function drop(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n\t        n = 1;\n\t      }\n\t      return baseSlice(array, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropRight([1, 2, 3]);\n\t     * // => [1, 2]\n\t     *\n\t     * _.dropRight([1, 2, 3], 2);\n\t     * // => [1]\n\t     *\n\t     * _.dropRight([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.dropRight([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function dropRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n\t        n = 1;\n\t      }\n\t      n = length - (+n || 0);\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the end.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that match the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropRightWhile([1, 2, 3], function(n) {\n\t     *   return n > 1;\n\t     * });\n\t     * // => [1]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.dropRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n\t     * // => ['barney', 'fred']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.dropRightWhile(users, 'active', false), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.dropRightWhile(users, 'active'), 'user');\n\t     * // => ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropRightWhile(array, predicate, thisArg) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getCallback(predicate, thisArg, 3), true, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the beginning.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropWhile([1, 2, 3], function(n) {\n\t     *   return n < 3;\n\t     * });\n\t     * // => [3]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');\n\t     * // => ['fred', 'pebbles']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.dropWhile(users, 'active', false), 'user');\n\t     * // => ['pebbles']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.dropWhile(users, 'active'), 'user');\n\t     * // => ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropWhile(array, predicate, thisArg) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getCallback(predicate, thisArg, 3), true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Fills elements of `array` with `value` from `start` up to, but not\n\t     * including, `end`.\n\t     *\n\t     * **Note:** This method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.fill(array, 'a');\n\t     * console.log(array);\n\t     * // => ['a', 'a', 'a']\n\t     *\n\t     * _.fill(Array(3), 2);\n\t     * // => [2, 2, 2]\n\t     *\n\t     * _.fill([4, 6, 8], '*', 1, 2);\n\t     * // => [4, '*', 8]\n\t     */\n\t    function fill(array, value, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      return baseFill(array, value, start, end);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the index of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.findIndex(users, function(chr) {\n\t     *   return chr.user == 'barney';\n\t     * });\n\t     * // => 0\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.findIndex(users, { 'user': 'fred', 'active': false });\n\t     * // => 1\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.findIndex(users, 'active', false);\n\t     * // => 0\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.findIndex(users, 'active');\n\t     * // => 2\n\t     */\n\t    var findIndex = createFindIndex();\n\t\n\t    /**\n\t     * This method is like `_.findIndex` except that it iterates over elements\n\t     * of `collection` from right to left.\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.findLastIndex(users, function(chr) {\n\t     *   return chr.user == 'pebbles';\n\t     * });\n\t     * // => 2\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n\t     * // => 0\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.findLastIndex(users, 'active', false);\n\t     * // => 2\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.findLastIndex(users, 'active');\n\t     * // => 0\n\t     */\n\t    var findLastIndex = createFindIndex(true);\n\t\n\t    /**\n\t     * Gets the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias head\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the first element of `array`.\n\t     * @example\n\t     *\n\t     * _.first([1, 2, 3]);\n\t     * // => 1\n\t     *\n\t     * _.first([]);\n\t     * // => undefined\n\t     */\n\t    function first(array) {\n\t      return array ? array[0] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Flattens a nested array. If `isDeep` is `true` the array is recursively\n\t     * flattened, otherwise it is only flattened a single level.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @param {boolean} [isDeep] Specify a deep flatten.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flatten([1, [2, 3, [4]]]);\n\t     * // => [1, 2, 3, [4]]\n\t     *\n\t     * // using `isDeep`\n\t     * _.flatten([1, [2, 3, [4]]], true);\n\t     * // => [1, 2, 3, 4]\n\t     */\n\t    function flatten(array, isDeep, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (guard && isIterateeCall(array, isDeep, guard)) {\n\t        isDeep = false;\n\t      }\n\t      return length ? baseFlatten(array, isDeep) : [];\n\t    }\n\t\n\t    /**\n\t     * Recursively flattens a nested array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to recursively flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flattenDeep([1, [2, 3, [4]]]);\n\t     * // => [1, 2, 3, 4]\n\t     */\n\t    function flattenDeep(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? baseFlatten(array, true) : [];\n\t    }\n\t\n\t    /**\n\t     * Gets the index at which the first occurrence of `value` is found in `array`\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n\t     * from the end of `array`. If `array` is sorted providing `true` for `fromIndex`\n\t     * performs a faster binary search.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n\t     *  to perform a binary search on a sorted array.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.indexOf([1, 2, 1, 2], 2);\n\t     * // => 1\n\t     *\n\t     * // using `fromIndex`\n\t     * _.indexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 3\n\t     *\n\t     * // performing a binary search\n\t     * _.indexOf([1, 1, 2, 2], 2, true);\n\t     * // => 2\n\t     */\n\t    function indexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      if (typeof fromIndex == 'number') {\n\t        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n\t      } else if (fromIndex) {\n\t        var index = binaryIndex(array, value);\n\t        if (index < length &&\n\t            (value === value ? (value === array[index]) : (array[index] !== array[index]))) {\n\t          return index;\n\t        }\n\t        return -1;\n\t      }\n\t      return baseIndexOf(array, value, fromIndex || 0);\n\t    }\n\t\n\t    /**\n\t     * Gets all but the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.initial([1, 2, 3]);\n\t     * // => [1, 2]\n\t     */\n\t    function initial(array) {\n\t      return dropRight(array, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values that are included in all of the provided\n\t     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of shared values.\n\t     * @example\n\t     * _.intersection([1, 2], [4, 2], [2, 1]);\n\t     * // => [2]\n\t     */\n\t    var intersection = restParam(function(arrays) {\n\t      var othLength = arrays.length,\n\t          othIndex = othLength,\n\t          caches = Array(length),\n\t          indexOf = getIndexOf(),\n\t          isCommon = indexOf == baseIndexOf,\n\t          result = [];\n\t\n\t      while (othIndex--) {\n\t        var value = arrays[othIndex] = isArrayLike(value = arrays[othIndex]) ? value : [];\n\t        caches[othIndex] = (isCommon && value.length >= 120) ? createCache(othIndex && value) : null;\n\t      }\n\t      var array = arrays[0],\n\t          index = -1,\n\t          length = array ? array.length : 0,\n\t          seen = caches[0];\n\t\n\t      outer:\n\t      while (++index < length) {\n\t        value = array[index];\n\t        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {\n\t          var othIndex = othLength;\n\t          while (--othIndex) {\n\t            var cache = caches[othIndex];\n\t            if ((cache ? cacheIndexOf(cache, value) : indexOf(arrays[othIndex], value, 0)) < 0) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (seen) {\n\t            seen.push(value);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Gets the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the last element of `array`.\n\t     * @example\n\t     *\n\t     * _.last([1, 2, 3]);\n\t     * // => 3\n\t     */\n\t    function last(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? array[length - 1] : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.indexOf` except that it iterates over elements of\n\t     * `array` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n\t     *  or `true` to perform a binary search on a sorted array.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.lastIndexOf([1, 2, 1, 2], 2);\n\t     * // => 3\n\t     *\n\t     * // using `fromIndex`\n\t     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 1\n\t     *\n\t     * // performing a binary search\n\t     * _.lastIndexOf([1, 1, 2, 2], 2, true);\n\t     * // => 3\n\t     */\n\t    function lastIndexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = length;\n\t      if (typeof fromIndex == 'number') {\n\t        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n\t      } else if (fromIndex) {\n\t        index = binaryIndex(array, value, true) - 1;\n\t        var other = array[index];\n\t        if (value === value ? (value === other) : (other !== other)) {\n\t          return index;\n\t        }\n\t        return -1;\n\t      }\n\t      if (value !== value) {\n\t        return indexOfNaN(array, index, true);\n\t      }\n\t      while (index--) {\n\t        if (array[index] === value) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * Removes all provided values from `array` using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * **Note:** Unlike `_.without`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...*} [values] The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 1, 2, 3];\n\t     *\n\t     * _.pull(array, 2, 3);\n\t     * console.log(array);\n\t     * // => [1, 1]\n\t     */\n\t    function pull() {\n\t      var args = arguments,\n\t          array = args[0];\n\t\n\t      if (!(array && array.length)) {\n\t        return array;\n\t      }\n\t      var index = 0,\n\t          indexOf = getIndexOf(),\n\t          length = args.length;\n\t\n\t      while (++index < length) {\n\t        var fromIndex = 0,\n\t            value = args[index];\n\t\n\t        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n\t          splice.call(array, fromIndex, 1);\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Removes elements from `array` corresponding to the given indexes and returns\n\t     * an array of the removed elements. Indexes may be specified as an array of\n\t     * indexes or as individual arguments.\n\t     *\n\t     * **Note:** Unlike `_.at`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n\t     *  specified as individual indexes or arrays of indexes.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [5, 10, 15, 20];\n\t     * var evens = _.pullAt(array, 1, 3);\n\t     *\n\t     * console.log(array);\n\t     * // => [5, 15]\n\t     *\n\t     * console.log(evens);\n\t     * // => [10, 20]\n\t     */\n\t    var pullAt = restParam(function(array, indexes) {\n\t      indexes = baseFlatten(indexes);\n\t\n\t      var result = baseAt(array, indexes);\n\t      basePullAt(array, indexes.sort(baseCompareAscending));\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Removes all elements from `array` that `predicate` returns truthy for\n\t     * and returns an array of the removed elements. The predicate is bound to\n\t     * `thisArg` and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * **Note:** Unlike `_.filter`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 4];\n\t     * var evens = _.remove(array, function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 3]\n\t     *\n\t     * console.log(evens);\n\t     * // => [2, 4]\n\t     */\n\t    function remove(array, predicate, thisArg) {\n\t      var result = [];\n\t      if (!(array && array.length)) {\n\t        return result;\n\t      }\n\t      var index = -1,\n\t          indexes = [],\n\t          length = array.length;\n\t\n\t      predicate = getCallback(predicate, thisArg, 3);\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (predicate(value, index, array)) {\n\t          result.push(value);\n\t          indexes.push(index);\n\t        }\n\t      }\n\t      basePullAt(array, indexes);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets all but the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias tail\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.rest([1, 2, 3]);\n\t     * // => [2, 3]\n\t     */\n\t    function rest(array) {\n\t      return drop(array, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` from `start` up to, but not including, `end`.\n\t     *\n\t     * **Note:** This method is used instead of `Array#slice` to support node\n\t     * lists in IE < 9 and to ensure dense arrays are returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function slice(array, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      return baseSlice(array, start, end);\n\t    }\n\t\n\t    /**\n\t     * Uses a binary search to determine the lowest index at which `value` should\n\t     * be inserted into `array` in order to maintain its sort order. If an iteratee\n\t     * function is provided it is invoked for `value` and each element of `array`\n\t     * to compute their sort ranking. The iteratee is bound to `thisArg` and\n\t     * invoked with one argument; (value).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedIndex([30, 50], 40);\n\t     * // => 1\n\t     *\n\t     * _.sortedIndex([4, 4, 5, 5], 5);\n\t     * // => 2\n\t     *\n\t     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n\t     *\n\t     * // using an iteratee function\n\t     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n\t     *   return this.data[word];\n\t     * }, dict);\n\t     * // => 1\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n\t     * // => 1\n\t     */\n\t    var sortedIndex = createSortedIndex();\n\t\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it returns the highest\n\t     * index at which `value` should be inserted into `array` in order to\n\t     * maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndex([4, 4, 5, 5], 5);\n\t     * // => 4\n\t     */\n\t    var sortedLastIndex = createSortedIndex(true);\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.take([1, 2, 3]);\n\t     * // => [1]\n\t     *\n\t     * _.take([1, 2, 3], 2);\n\t     * // => [1, 2]\n\t     *\n\t     * _.take([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.take([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function take(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n\t        n = 1;\n\t      }\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeRight([1, 2, 3]);\n\t     * // => [3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 2);\n\t     * // => [2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function takeRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n\t        n = 1;\n\t      }\n\t      n = length - (+n || 0);\n\t      return baseSlice(array, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the end. Elements are\n\t     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`\n\t     * and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeRightWhile([1, 2, 3], function(n) {\n\t     *   return n > 1;\n\t     * });\n\t     * // => [2, 3]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n\t     * // => ['pebbles']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.takeRightWhile(users, 'active', false), 'user');\n\t     * // => ['fred', 'pebbles']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.takeRightWhile(users, 'active'), 'user');\n\t     * // => []\n\t     */\n\t    function takeRightWhile(array, predicate, thisArg) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getCallback(predicate, thisArg, 3), false, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the beginning. Elements\n\t     * are taken until `predicate` returns falsey. The predicate is bound to\n\t     * `thisArg` and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeWhile([1, 2, 3], function(n) {\n\t     *   return n < 3;\n\t     * });\n\t     * // => [1, 2]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false},\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.takeWhile(users, 'active', false), 'user');\n\t     * // => ['barney', 'fred']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.takeWhile(users, 'active'), 'user');\n\t     * // => []\n\t     */\n\t    function takeWhile(array, predicate, thisArg) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getCallback(predicate, thisArg, 3))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values, in order, from all of the provided arrays\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.union([1, 2], [4, 2], [2, 1]);\n\t     * // => [1, 2, 4]\n\t     */\n\t    var union = restParam(function(arrays) {\n\t      return baseUniq(baseFlatten(arrays, false, true));\n\t    });\n\t\n\t    /**\n\t     * Creates a duplicate-free version of an array, using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons, in which only the first occurence of each element\n\t     * is kept. Providing `true` for `isSorted` performs a faster search algorithm\n\t     * for sorted arrays. If an iteratee function is provided it is invoked for\n\t     * each element in the array to generate the criterion by which uniqueness\n\t     * is computed. The `iteratee` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias unique\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {boolean} [isSorted] Specify the array is sorted.\n\t     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new duplicate-value-free array.\n\t     * @example\n\t     *\n\t     * _.uniq([2, 1, 2]);\n\t     * // => [2, 1]\n\t     *\n\t     * // using `isSorted`\n\t     * _.uniq([1, 1, 2], true);\n\t     * // => [1, 2]\n\t     *\n\t     * // using an iteratee function\n\t     * _.uniq([1, 2.5, 1.5, 2], function(n) {\n\t     *   return this.floor(n);\n\t     * }, Math);\n\t     * // => [1, 2.5]\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    function uniq(array, isSorted, iteratee, thisArg) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (isSorted != null && typeof isSorted != 'boolean') {\n\t        thisArg = iteratee;\n\t        iteratee = isIterateeCall(array, isSorted, thisArg) ? undefined : isSorted;\n\t        isSorted = false;\n\t      }\n\t      var callback = getCallback();\n\t      if (!(iteratee == null && callback === baseCallback)) {\n\t        iteratee = callback(iteratee, thisArg, 3);\n\t      }\n\t      return (isSorted && getIndexOf() == baseIndexOf)\n\t        ? sortedUniq(array, iteratee)\n\t        : baseUniq(array, iteratee);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts an array of grouped\n\t     * elements and creates an array regrouping the elements to their pre-zip\n\t     * configuration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n\t     * // => [['fred', 30, true], ['barney', 40, false]]\n\t     *\n\t     * _.unzip(zipped);\n\t     * // => [['fred', 'barney'], [30, 40], [true, false]]\n\t     */\n\t    function unzip(array) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      var index = -1,\n\t          length = 0;\n\t\n\t      array = arrayFilter(array, function(group) {\n\t        if (isArrayLike(group)) {\n\t          length = nativeMax(group.length, length);\n\t          return true;\n\t        }\n\t      });\n\t      var result = Array(length);\n\t      while (++index < length) {\n\t        result[index] = arrayMap(array, baseProperty(index));\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.unzip` except that it accepts an iteratee to specify\n\t     * how regrouped values should be combined. The `iteratee` is bound to `thisArg`\n\t     * and invoked with four arguments: (accumulator, value, index, group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @param {Function} [iteratee] The function to combine regrouped values.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n\t     * // => [[1, 10, 100], [2, 20, 200]]\n\t     *\n\t     * _.unzipWith(zipped, _.add);\n\t     * // => [3, 30, 300]\n\t     */\n\t    function unzipWith(array, iteratee, thisArg) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      var result = unzip(array);\n\t      if (iteratee == null) {\n\t        return result;\n\t      }\n\t      iteratee = bindCallback(iteratee, thisArg, 4);\n\t      return arrayMap(result, function(group) {\n\t        return arrayReduce(group, iteratee, undefined, true);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates an array excluding all provided values using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to filter.\n\t     * @param {...*} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.without([1, 2, 1, 3], 1, 2);\n\t     * // => [3]\n\t     */\n\t    var without = restParam(function(array, values) {\n\t      return isArrayLike(array)\n\t        ? baseDifference(array, values)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n\t     * of the provided arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of values.\n\t     * @example\n\t     *\n\t     * _.xor([1, 2], [4, 2]);\n\t     * // => [1, 4]\n\t     */\n\t    function xor() {\n\t      var index = -1,\n\t          length = arguments.length;\n\t\n\t      while (++index < length) {\n\t        var array = arguments[index];\n\t        if (isArrayLike(array)) {\n\t          var result = result\n\t            ? arrayPush(baseDifference(result, array), baseDifference(array, result))\n\t            : array;\n\t        }\n\t      }\n\t      return result ? baseUniq(result) : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of grouped elements, the first of which contains the first\n\t     * elements of the given arrays, the second of which contains the second elements\n\t     * of the given arrays, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n\t     * // => [['fred', 30, true], ['barney', 40, false]]\n\t     */\n\t    var zip = restParam(unzip);\n\t\n\t    /**\n\t     * The inverse of `_.pairs`; this method returns an object composed from arrays\n\t     * of property names and values. Provide either a single two dimensional array,\n\t     * e.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names\n\t     * and one of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias object\n\t     * @category Array\n\t     * @param {Array} props The property names.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObject([['fred', 30], ['barney', 40]]);\n\t     * // => { 'fred': 30, 'barney': 40 }\n\t     *\n\t     * _.zipObject(['fred', 'barney'], [30, 40]);\n\t     * // => { 'fred': 30, 'barney': 40 }\n\t     */\n\t    function zipObject(props, values) {\n\t      var index = -1,\n\t          length = props ? props.length : 0,\n\t          result = {};\n\t\n\t      if (length && !values && !isArray(props[0])) {\n\t        values = [];\n\t      }\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        if (values) {\n\t          result[key] = values[index];\n\t        } else if (key) {\n\t          result[key[0]] = key[1];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts an iteratee to specify\n\t     * how grouped values should be combined. The `iteratee` is bound to `thisArg`\n\t     * and invoked with four arguments: (accumulator, value, index, group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @param {Function} [iteratee] The function to combine grouped values.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zipWith([1, 2], [10, 20], [100, 200], _.add);\n\t     * // => [111, 222]\n\t     */\n\t    var zipWith = restParam(function(arrays) {\n\t      var length = arrays.length,\n\t          iteratee = length > 2 ? arrays[length - 2] : undefined,\n\t          thisArg = length > 1 ? arrays[length - 1] : undefined;\n\t\n\t      if (length > 2 && typeof iteratee == 'function') {\n\t        length -= 2;\n\t      } else {\n\t        iteratee = (length > 1 && typeof thisArg == 'function') ? (--length, thisArg) : undefined;\n\t        thisArg = undefined;\n\t      }\n\t      arrays.length = length;\n\t      return unzipWith(arrays, iteratee, thisArg);\n\t    });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` object that wraps `value` with explicit method\n\t     * chaining enabled.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @param {*} value The value to wrap.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36 },\n\t     *   { 'user': 'fred',    'age': 40 },\n\t     *   { 'user': 'pebbles', 'age': 1 }\n\t     * ];\n\t     *\n\t     * var youngest = _.chain(users)\n\t     *   .sortBy('age')\n\t     *   .map(function(chr) {\n\t     *     return chr.user + ' is ' + chr.age;\n\t     *   })\n\t     *   .first()\n\t     *   .value();\n\t     * // => 'pebbles is 1'\n\t     */\n\t    function chain(value) {\n\t      var result = lodash(value);\n\t      result.__chain__ = true;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method invokes `interceptor` and returns `value`. The interceptor is\n\t     * bound to `thisArg` and invoked with one argument; (value). The purpose of\n\t     * this method is to \"tap into\" a method chain in order to perform operations\n\t     * on intermediate results within the chain.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @param {*} [thisArg] The `this` binding of `interceptor`.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3])\n\t     *  .tap(function(array) {\n\t     *    array.pop();\n\t     *  })\n\t     *  .reverse()\n\t     *  .value();\n\t     * // => [2, 1]\n\t     */\n\t    function tap(value, interceptor, thisArg) {\n\t      interceptor.call(thisArg, value);\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.tap` except that it returns the result of `interceptor`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @param {*} [thisArg] The `this` binding of `interceptor`.\n\t     * @returns {*} Returns the result of `interceptor`.\n\t     * @example\n\t     *\n\t     * _('  abc  ')\n\t     *  .chain()\n\t     *  .trim()\n\t     *  .thru(function(value) {\n\t     *    return [value];\n\t     *  })\n\t     *  .value();\n\t     * // => ['abc']\n\t     */\n\t    function thru(value, interceptor, thisArg) {\n\t      return interceptor.call(thisArg, value);\n\t    }\n\t\n\t    /**\n\t     * Enables explicit method chaining on the wrapper object.\n\t     *\n\t     * @name chain\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // without explicit chaining\n\t     * _(users).first();\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     *\n\t     * // with explicit chaining\n\t     * _(users).chain()\n\t     *   .first()\n\t     *   .pick('user')\n\t     *   .value();\n\t     * // => { 'user': 'barney' }\n\t     */\n\t    function wrapperChain() {\n\t      return chain(this);\n\t    }\n\t\n\t    /**\n\t     * Executes the chained sequence and returns the wrapped result.\n\t     *\n\t     * @name commit\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2];\n\t     * var wrapped = _(array).push(3);\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2]\n\t     *\n\t     * wrapped = wrapped.commit();\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * wrapped.last();\n\t     * // => 3\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperCommit() {\n\t      return new LodashWrapper(this.value(), this.__chain__);\n\t    }\n\t\n\t    /**\n\t     * Creates a new array joining a wrapped array with any additional arrays\n\t     * and/or values.\n\t     *\n\t     * @name concat\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @param {...*} [values] The values to concatenate.\n\t     * @returns {Array} Returns the new concatenated array.\n\t     * @example\n\t     *\n\t     * var array = [1];\n\t     * var wrapped = _(array).concat(2, [3], [[4]]);\n\t     *\n\t     * console.log(wrapped.value());\n\t     * // => [1, 2, 3, [4]]\n\t     *\n\t     * console.log(array);\n\t     * // => [1]\n\t     */\n\t    var wrapperConcat = restParam(function(values) {\n\t      values = baseFlatten(values);\n\t      return this.thru(function(array) {\n\t        return arrayConcat(isArray(array) ? array : [toObject(array)], values);\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n\t     *\n\t     * @name plant\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2];\n\t     * var wrapped = _(array).map(function(value) {\n\t     *   return Math.pow(value, 2);\n\t     * });\n\t     *\n\t     * var other = [3, 4];\n\t     * var otherWrapped = wrapped.plant(other);\n\t     *\n\t     * otherWrapped.value();\n\t     * // => [9, 16]\n\t     *\n\t     * wrapped.value();\n\t     * // => [1, 4]\n\t     */\n\t    function wrapperPlant(value) {\n\t      var result,\n\t          parent = this;\n\t\n\t      while (parent instanceof baseLodash) {\n\t        var clone = wrapperClone(parent);\n\t        if (result) {\n\t          previous.__wrapped__ = clone;\n\t        } else {\n\t          result = clone;\n\t        }\n\t        var previous = clone;\n\t        parent = parent.__wrapped__;\n\t      }\n\t      previous.__wrapped__ = value;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses the wrapped array so the first element becomes the last, the\n\t     * second element becomes the second to last, and so on.\n\t     *\n\t     * **Note:** This method mutates the wrapped array.\n\t     *\n\t     * @name reverse\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {Object} Returns the new reversed `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _(array).reverse().value()\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function wrapperReverse() {\n\t      var value = this.__wrapped__;\n\t\n\t      var interceptor = function(value) {\n\t        return (wrapped && wrapped.__dir__ < 0) ? value : value.reverse();\n\t      };\n\t      if (value instanceof LazyWrapper) {\n\t        var wrapped = value;\n\t        if (this.__actions__.length) {\n\t          wrapped = new LazyWrapper(this);\n\t        }\n\t        wrapped = wrapped.reverse();\n\t        wrapped.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n\t        return new LodashWrapper(wrapped, this.__chain__);\n\t      }\n\t      return this.thru(interceptor);\n\t    }\n\t\n\t    /**\n\t     * Produces the result of coercing the unwrapped value to a string.\n\t     *\n\t     * @name toString\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {string} Returns the coerced string value.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3]).toString();\n\t     * // => '1,2,3'\n\t     */\n\t    function wrapperToString() {\n\t      return (this.value() + '');\n\t    }\n\t\n\t    /**\n\t     * Executes the chained sequence to extract the unwrapped value.\n\t     *\n\t     * @name value\n\t     * @memberOf _\n\t     * @alias run, toJSON, valueOf\n\t     * @category Chain\n\t     * @returns {*} Returns the resolved unwrapped value.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3]).value();\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperValue() {\n\t      return baseWrapperValue(this.__wrapped__, this.__actions__);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an array of elements corresponding to the given keys, or indexes,\n\t     * of `collection`. Keys may be specified as individual arguments or as arrays\n\t     * of keys.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {...(number|number[]|string|string[])} [props] The property names\n\t     *  or indexes of elements to pick, specified individually or in arrays.\n\t     * @returns {Array} Returns the new array of picked elements.\n\t     * @example\n\t     *\n\t     * _.at(['a', 'b', 'c'], [0, 2]);\n\t     * // => ['a', 'c']\n\t     *\n\t     * _.at(['barney', 'fred', 'pebbles'], 0, 2);\n\t     * // => ['barney', 'pebbles']\n\t     */\n\t    var at = restParam(function(collection, props) {\n\t      return baseAt(collection, baseFlatten(props));\n\t    });\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is the number of times the key was returned by `iteratee`.\n\t     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.countBy([4.3, 6.1, 6.4], function(n) {\n\t     *   return Math.floor(n);\n\t     * });\n\t     * // => { '4': 1, '6': 2 }\n\t     *\n\t     * _.countBy([4.3, 6.1, 6.4], function(n) {\n\t     *   return this.floor(n);\n\t     * }, Math);\n\t     * // => { '4': 1, '6': 2 }\n\t     *\n\t     * _.countBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': 2, '5': 1 }\n\t     */\n\t    var countBy = createAggregator(function(result, value, key) {\n\t      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n\t    });\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n\t     * The predicate is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias all\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.every([true, 1, null, 'yes'], Boolean);\n\t     * // => false\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'active': false },\n\t     *   { 'user': 'fred',   'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.every(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.every(users, 'active', false);\n\t     * // => true\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.every(users, 'active');\n\t     * // => false\n\t     */\n\t    function every(collection, predicate, thisArg) {\n\t      var func = isArray(collection) ? arrayEvery : baseEvery;\n\t      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n\t        predicate = undefined;\n\t      }\n\t      if (typeof predicate != 'function' || thisArg !== undefined) {\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t      }\n\t      return func(collection, predicate);\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning an array of all elements\n\t     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias select\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @example\n\t     *\n\t     * _.filter([4, 5, 6], function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     * // => [4, 6]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.filter(users, 'active', false), 'user');\n\t     * // => ['fred']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.filter(users, 'active'), 'user');\n\t     * // => ['barney']\n\t     */\n\t    function filter(collection, predicate, thisArg) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      predicate = getCallback(predicate, thisArg, 3);\n\t      return func(collection, predicate);\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning the first element\n\t     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias detect\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': true },\n\t     *   { 'user': 'fred',    'age': 40, 'active': false },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n\t     * ];\n\t     *\n\t     * _.result(_.find(users, function(chr) {\n\t     *   return chr.age < 40;\n\t     * }), 'user');\n\t     * // => 'barney'\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n\t     * // => 'pebbles'\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.result(_.find(users, 'active', false), 'user');\n\t     * // => 'fred'\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.result(_.find(users, 'active'), 'user');\n\t     * // => 'barney'\n\t     */\n\t    var find = createFind(baseEach);\n\t\n\t    /**\n\t     * This method is like `_.find` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * _.findLast([1, 2, 3, 4], function(n) {\n\t     *   return n % 2 == 1;\n\t     * });\n\t     * // => 3\n\t     */\n\t    var findLast = createFind(baseEachRight, true);\n\t\n\t    /**\n\t     * Performs a deep comparison between each element in `collection` and the\n\t     * source object, returning the first element that has equivalent property\n\t     * values.\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties. For comparing a single\n\t     * own or inherited property value see `_.matchesProperty`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');\n\t     * // => 'barney'\n\t     *\n\t     * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');\n\t     * // => 'fred'\n\t     */\n\t    function findWhere(collection, source) {\n\t      return find(collection, baseMatches(source));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection` invoking `iteratee` for each element.\n\t     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection). Iteratee functions may exit iteration early\n\t     * by explicitly returning `false`.\n\t     *\n\t     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n\t     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n\t     * may be used for object iteration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias each\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array|Object|string} Returns `collection`.\n\t     * @example\n\t     *\n\t     * _([1, 2]).forEach(function(n) {\n\t     *   console.log(n);\n\t     * }).value();\n\t     * // => logs each value from left to right and returns the array\n\t     *\n\t     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n\t     *   console.log(n, key);\n\t     * });\n\t     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n\t     */\n\t    var forEach = createForEach(arrayEach, baseEach);\n\t\n\t    /**\n\t     * This method is like `_.forEach` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias eachRight\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array|Object|string} Returns `collection`.\n\t     * @example\n\t     *\n\t     * _([1, 2]).forEachRight(function(n) {\n\t     *   console.log(n);\n\t     * }).value();\n\t     * // => logs each value from right to left and returns the array\n\t     */\n\t    var forEachRight = createForEach(arrayEachRight, baseEachRight);\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is an array of the elements responsible for generating the key.\n\t     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n\t     *   return Math.floor(n);\n\t     * });\n\t     * // => { '4': [4.2], '6': [6.1, 6.4] }\n\t     *\n\t     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n\t     *   return this.floor(n);\n\t     * }, Math);\n\t     * // => { '4': [4.2], '6': [6.1, 6.4] }\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.groupBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': ['one', 'two'], '5': ['three'] }\n\t     */\n\t    var groupBy = createAggregator(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, key)) {\n\t        result[key].push(value);\n\t      } else {\n\t        result[key] = [value];\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Checks if `value` is in `collection` using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n\t     * from the end of `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias contains, include\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {*} target The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n\t     * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n\t     * @example\n\t     *\n\t     * _.includes([1, 2, 3], 1);\n\t     * // => true\n\t     *\n\t     * _.includes([1, 2, 3], 1, 2);\n\t     * // => false\n\t     *\n\t     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n\t     * // => true\n\t     *\n\t     * _.includes('pebbles', 'eb');\n\t     * // => true\n\t     */\n\t    function includes(collection, target, fromIndex, guard) {\n\t      var length = collection ? getLength(collection) : 0;\n\t      if (!isLength(length)) {\n\t        collection = values(collection);\n\t        length = collection.length;\n\t      }\n\t      if (typeof fromIndex != 'number' || (guard && isIterateeCall(target, fromIndex, guard))) {\n\t        fromIndex = 0;\n\t      } else {\n\t        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n\t      }\n\t      return (typeof collection == 'string' || !isArray(collection) && isString(collection))\n\t        ? (fromIndex <= length && collection.indexOf(target, fromIndex) > -1)\n\t        : (!!length && getIndexOf(collection, target, fromIndex) > -1);\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is the last element responsible for generating the key. The\n\t     * iteratee function is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * var keyData = [\n\t     *   { 'dir': 'left', 'code': 97 },\n\t     *   { 'dir': 'right', 'code': 100 }\n\t     * ];\n\t     *\n\t     * _.indexBy(keyData, 'dir');\n\t     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n\t     *\n\t     * _.indexBy(keyData, function(object) {\n\t     *   return String.fromCharCode(object.code);\n\t     * });\n\t     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\t     *\n\t     * _.indexBy(keyData, function(object) {\n\t     *   return this.fromCharCode(object.code);\n\t     * }, String);\n\t     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\t     */\n\t    var indexBy = createAggregator(function(result, value, key) {\n\t      result[key] = value;\n\t    });\n\t\n\t    /**\n\t     * Invokes the method at `path` of each element in `collection`, returning\n\t     * an array of the results of each invoked method. Any additional arguments\n\t     * are provided to each invoked method. If `methodName` is a function it is\n\t     * invoked for, and `this` bound to, each element in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Array|Function|string} path The path of the method to invoke or\n\t     *  the function invoked per iteration.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n\t     * // => [[1, 5, 7], [1, 2, 3]]\n\t     *\n\t     * _.invoke([123, 456], String.prototype.split, '');\n\t     * // => [['1', '2', '3'], ['4', '5', '6']]\n\t     */\n\t    var invoke = restParam(function(collection, path, args) {\n\t      var index = -1,\n\t          isFunc = typeof path == 'function',\n\t          isProp = isKey(path),\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value) {\n\t        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n\t        result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);\n\t      });\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Creates an array of values by running each element in `collection` through\n\t     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n\t     *\n\t     * The guarded methods are:\n\t     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`,\n\t     * `drop`, `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`,\n\t     * `parseInt`, `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`,\n\t     * `trimLeft`, `trimRight`, `trunc`, `random`, `range`, `sample`, `some`,\n\t     * `sum`, `uniq`, and `words`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias collect\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new mapped array.\n\t     * @example\n\t     *\n\t     * function timesThree(n) {\n\t     *   return n * 3;\n\t     * }\n\t     *\n\t     * _.map([1, 2], timesThree);\n\t     * // => [3, 6]\n\t     *\n\t     * _.map({ 'a': 1, 'b': 2 }, timesThree);\n\t     * // => [3, 6] (iteration order is not guaranteed)\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.map(users, 'user');\n\t     * // => ['barney', 'fred']\n\t     */\n\t    function map(collection, iteratee, thisArg) {\n\t      var func = isArray(collection) ? arrayMap : baseMap;\n\t      iteratee = getCallback(iteratee, thisArg, 3);\n\t      return func(collection, iteratee);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements split into two groups, the first of which\n\t     * contains elements `predicate` returns truthy for, while the second of which\n\t     * contains elements `predicate` returns falsey for. The predicate is bound\n\t     * to `thisArg` and invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.partition([1, 2, 3], function(n) {\n\t     *   return n % 2;\n\t     * });\n\t     * // => [[1, 3], [2]]\n\t     *\n\t     * _.partition([1.2, 2.3, 3.4], function(n) {\n\t     *   return this.floor(n) % 2;\n\t     * }, Math);\n\t     * // => [[1.2, 3.4], [2.3]]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': false },\n\t     *   { 'user': 'fred',    'age': 40, 'active': true },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n\t     * ];\n\t     *\n\t     * var mapper = function(array) {\n\t     *   return _.pluck(array, 'user');\n\t     * };\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);\n\t     * // => [['pebbles'], ['barney', 'fred']]\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.map(_.partition(users, 'active', false), mapper);\n\t     * // => [['barney', 'pebbles'], ['fred']]\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.map(_.partition(users, 'active'), mapper);\n\t     * // => [['fred'], ['barney', 'pebbles']]\n\t     */\n\t    var partition = createAggregator(function(result, value, key) {\n\t      result[key ? 0 : 1].push(value);\n\t    }, function() { return [[], []]; });\n\t\n\t    /**\n\t     * Gets the property value of `path` from all elements in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Array|string} path The path of the property to pluck.\n\t     * @returns {Array} Returns the property values.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * _.pluck(users, 'user');\n\t     * // => ['barney', 'fred']\n\t     *\n\t     * var userIndex = _.indexBy(users, 'user');\n\t     * _.pluck(userIndex, 'age');\n\t     * // => [36, 40] (iteration order is not guaranteed)\n\t     */\n\t    function pluck(collection, path) {\n\t      return map(collection, property(path));\n\t    }\n\t\n\t    /**\n\t     * Reduces `collection` to a value which is the accumulated result of running\n\t     * each element in `collection` through `iteratee`, where each successive\n\t     * invocation is supplied the return value of the previous. If `accumulator`\n\t     * is not provided the first element of `collection` is used as the initial\n\t     * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:\n\t     * (accumulator, value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n\t     *\n\t     * The guarded methods are:\n\t     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `sortByAll`,\n\t     * and `sortByOrder`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias foldl, inject\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * _.reduce([1, 2], function(total, n) {\n\t     *   return total + n;\n\t     * });\n\t     * // => 3\n\t     *\n\t     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n\t     *   result[key] = n * 3;\n\t     *   return result;\n\t     * }, {});\n\t     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\n\t     */\n\t    var reduce = createReduce(arrayReduce, baseEach);\n\t\n\t    /**\n\t     * This method is like `_.reduce` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias foldr\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * var array = [[0, 1], [2, 3], [4, 5]];\n\t     *\n\t     * _.reduceRight(array, function(flattened, other) {\n\t     *   return flattened.concat(other);\n\t     * }, []);\n\t     * // => [4, 5, 2, 3, 0, 1]\n\t     */\n\t    var reduceRight = createReduce(arrayReduceRight, baseEachRight);\n\t\n\t    /**\n\t     * The opposite of `_.filter`; this method returns the elements of `collection`\n\t     * that `predicate` does **not** return truthy for.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @example\n\t     *\n\t     * _.reject([1, 2, 3, 4], function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     * // => [1, 3]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false },\n\t     *   { 'user': 'fred',   'age': 40, 'active': true }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.reject(users, 'active', false), 'user');\n\t     * // => ['fred']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.reject(users, 'active'), 'user');\n\t     * // => ['barney']\n\t     */\n\t    function reject(collection, predicate, thisArg) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      predicate = getCallback(predicate, thisArg, 3);\n\t      return func(collection, function(value, index, collection) {\n\t        return !predicate(value, index, collection);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Gets a random element or `n` random elements from a collection.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to sample.\n\t     * @param {number} [n] The number of elements to sample.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {*} Returns the random sample(s).\n\t     * @example\n\t     *\n\t     * _.sample([1, 2, 3, 4]);\n\t     * // => 2\n\t     *\n\t     * _.sample([1, 2, 3, 4], 2);\n\t     * // => [3, 1]\n\t     */\n\t    function sample(collection, n, guard) {\n\t      if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n\t        collection = toIterable(collection);\n\t        var length = collection.length;\n\t        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n\t      }\n\t      var index = -1,\n\t          result = toArray(collection),\n\t          length = result.length,\n\t          lastIndex = length - 1;\n\t\n\t      n = nativeMin(n < 0 ? 0 : (+n || 0), length);\n\t      while (++index < n) {\n\t        var rand = baseRandom(index, lastIndex),\n\t            value = result[rand];\n\t\n\t        result[rand] = result[index];\n\t        result[index] = value;\n\t      }\n\t      result.length = n;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of shuffled values, using a version of the\n\t     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to shuffle.\n\t     * @returns {Array} Returns the new shuffled array.\n\t     * @example\n\t     *\n\t     * _.shuffle([1, 2, 3, 4]);\n\t     * // => [4, 1, 3, 2]\n\t     */\n\t    function shuffle(collection) {\n\t      return sample(collection, POSITIVE_INFINITY);\n\t    }\n\t\n\t    /**\n\t     * Gets the size of `collection` by returning its length for array-like\n\t     * values or the number of own enumerable properties for objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to inspect.\n\t     * @returns {number} Returns the size of `collection`.\n\t     * @example\n\t     *\n\t     * _.size([1, 2, 3]);\n\t     * // => 3\n\t     *\n\t     * _.size({ 'a': 1, 'b': 2 });\n\t     * // => 2\n\t     *\n\t     * _.size('pebbles');\n\t     * // => 7\n\t     */\n\t    function size(collection) {\n\t      var length = collection ? getLength(collection) : 0;\n\t      return isLength(length) ? length : keys(collection).length;\n\t    }\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **any** element of `collection`.\n\t     * The function returns as soon as it finds a passing value and does not iterate\n\t     * over the entire collection. The predicate is bound to `thisArg` and invoked\n\t     * with three arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias any\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.some([null, 0, 'yes', false], Boolean);\n\t     * // => true\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'active': true },\n\t     *   { 'user': 'fred',   'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.some(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.some(users, 'active', false);\n\t     * // => true\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.some(users, 'active');\n\t     * // => true\n\t     */\n\t    function some(collection, predicate, thisArg) {\n\t      var func = isArray(collection) ? arraySome : baseSome;\n\t      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n\t        predicate = undefined;\n\t      }\n\t      if (typeof predicate != 'function' || thisArg !== undefined) {\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t      }\n\t      return func(collection, predicate);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements, sorted in ascending order by the results of\n\t     * running each element in a collection through `iteratee`. This method performs\n\t     * a stable sort, that is, it preserves the original sort order of equal elements.\n\t     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * _.sortBy([1, 2, 3], function(n) {\n\t     *   return Math.sin(n);\n\t     * });\n\t     * // => [3, 1, 2]\n\t     *\n\t     * _.sortBy([1, 2, 3], function(n) {\n\t     *   return this.sin(n);\n\t     * }, Math);\n\t     * // => [3, 1, 2]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred' },\n\t     *   { 'user': 'pebbles' },\n\t     *   { 'user': 'barney' }\n\t     * ];\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.sortBy(users, 'user'), 'user');\n\t     * // => ['barney', 'fred', 'pebbles']\n\t     */\n\t    function sortBy(collection, iteratee, thisArg) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n\t        iteratee = undefined;\n\t      }\n\t      var index = -1;\n\t      iteratee = getCallback(iteratee, thisArg, 3);\n\t\n\t      var result = baseMap(collection, function(value, key, collection) {\n\t        return { 'criteria': iteratee(value, key, collection), 'index': ++index, 'value': value };\n\t      });\n\t      return baseSortBy(result, compareAscending);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortBy` except that it can sort by multiple iteratees\n\t     * or property names.\n\t     *\n\t     * If a property name is provided for an iteratee the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If an object is provided for an iteratee the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {...(Function|Function[]|Object|Object[]|string|string[])} iteratees\n\t     *  The iteratees to sort by, specified as individual values or arrays of values.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 42 },\n\t     *   { 'user': 'barney', 'age': 34 }\n\t     * ];\n\t     *\n\t     * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n\t     * // => [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n\t     *\n\t     * _.map(_.sortByAll(users, 'user', function(chr) {\n\t     *   return Math.floor(chr.age / 10);\n\t     * }), _.values);\n\t     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n\t     */\n\t    var sortByAll = restParam(function(collection, iteratees) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      var guard = iteratees[2];\n\t      if (guard && isIterateeCall(iteratees[0], iteratees[1], guard)) {\n\t        iteratees.length = 1;\n\t      }\n\t      return baseSortByOrder(collection, baseFlatten(iteratees), []);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.sortByAll` except that it allows specifying the\n\t     * sort orders of the iteratees to sort by. If `orders` is unspecified, all\n\t     * values are sorted in ascending order. Otherwise, a value is sorted in\n\t     * ascending order if its corresponding order is \"asc\", and descending if \"desc\".\n\t     *\n\t     * If a property name is provided for an iteratee the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If an object is provided for an iteratee the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n\t     * @param {boolean[]} [orders] The sort orders of `iteratees`.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 34 },\n\t     *   { 'user': 'fred',   'age': 42 },\n\t     *   { 'user': 'barney', 'age': 36 }\n\t     * ];\n\t     *\n\t     * // sort by `user` in ascending order and by `age` in descending order\n\t     * _.map(_.sortByOrder(users, ['user', 'age'], ['asc', 'desc']), _.values);\n\t     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n\t     */\n\t    function sortByOrder(collection, iteratees, orders, guard) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      if (guard && isIterateeCall(iteratees, orders, guard)) {\n\t        orders = undefined;\n\t      }\n\t      if (!isArray(iteratees)) {\n\t        iteratees = iteratees == null ? [] : [iteratees];\n\t      }\n\t      if (!isArray(orders)) {\n\t        orders = orders == null ? [] : [orders];\n\t      }\n\t      return baseSortByOrder(collection, iteratees, orders);\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between each element in `collection` and the\n\t     * source object, returning an array of all elements that have equivalent\n\t     * property values.\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties. For comparing a single\n\t     * own or inherited property value see `_.matchesProperty`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n\t     *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n\t     * ];\n\t     *\n\t     * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n\t     * // => ['fred']\n\t     */\n\t    function where(collection, source) {\n\t      return filter(collection, baseMatches(source));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Gets the number of milliseconds that have elapsed since the Unix epoch\n\t     * (1 January 1970 00:00:00 UTC).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Date\n\t     * @example\n\t     *\n\t     * _.defer(function(stamp) {\n\t     *   console.log(_.now() - stamp);\n\t     * }, _.now());\n\t     * // => logs the number of milliseconds it took for the deferred function to be invoked\n\t     */\n\t    var now = nativeNow || function() {\n\t      return new Date().getTime();\n\t    };\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The opposite of `_.before`; this method creates a function that invokes\n\t     * `func` once it is called `n` or more times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {number} n The number of calls before `func` is invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var saves = ['profile', 'settings'];\n\t     *\n\t     * var done = _.after(saves.length, function() {\n\t     *   console.log('done saving!');\n\t     * });\n\t     *\n\t     * _.forEach(saves, function(type) {\n\t     *   asyncSave({ 'type': type, 'complete': done });\n\t     * });\n\t     * // => logs 'done saving!' after the two async saves have completed\n\t     */\n\t    function after(n, func) {\n\t      if (typeof func != 'function') {\n\t        if (typeof n == 'function') {\n\t          var temp = n;\n\t          n = func;\n\t          func = temp;\n\t        } else {\n\t          throw new TypeError(FUNC_ERROR_TEXT);\n\t        }\n\t      }\n\t      n = nativeIsFinite(n = +n) ? n : 0;\n\t      return function() {\n\t        if (--n < 1) {\n\t          return func.apply(this, arguments);\n\t        }\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that accepts up to `n` arguments ignoring any\n\t     * additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @param {number} [n=func.length] The arity cap.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function ary(func, n, guard) {\n\t      if (guard && isIterateeCall(func, n, guard)) {\n\t        n = undefined;\n\t      }\n\t      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);\n\t      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func`, with the `this` binding and arguments\n\t     * of the created function, while it is called less than `n` times. Subsequent\n\t     * calls to the created function return the result of the last `func` invocation.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {number} n The number of calls at which `func` is no longer invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * jQuery('#add').on('click', _.before(5, addContactToList));\n\t     * // => allows adding up to 4 contacts to the list\n\t     */\n\t    function before(n, func) {\n\t      var result;\n\t      if (typeof func != 'function') {\n\t        if (typeof n == 'function') {\n\t          var temp = n;\n\t          n = func;\n\t          func = temp;\n\t        } else {\n\t          throw new TypeError(FUNC_ERROR_TEXT);\n\t        }\n\t      }\n\t      return function() {\n\t        if (--n > 0) {\n\t          result = func.apply(this, arguments);\n\t        }\n\t        if (n <= 1) {\n\t          func = undefined;\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n\t     * and prepends any additional `_.bind` arguments to those provided to the\n\t     * bound function.\n\t     *\n\t     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** Unlike native `Function#bind` this method does not set the \"length\"\n\t     * property of bound functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, punctuation) {\n\t     *   return greeting + ' ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * var bound = _.bind(greet, object, 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * // using placeholders\n\t     * var bound = _.bind(greet, object, _, '!');\n\t     * bound('hi');\n\t     * // => 'hi fred!'\n\t     */\n\t    var bind = restParam(function(func, thisArg, partials) {\n\t      var bitmask = BIND_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, bind.placeholder);\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrapper(func, bitmask, thisArg, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Binds methods of an object to the object itself, overwriting the existing\n\t     * method. Method names may be specified as individual arguments or as arrays\n\t     * of method names. If no method names are provided all enumerable function\n\t     * properties, own and inherited, of `object` are bound.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of bound functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Object} object The object to bind and assign the bound methods to.\n\t     * @param {...(string|string[])} [methodNames] The object method names to bind,\n\t     *  specified as individual method names or arrays of method names.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var view = {\n\t     *   'label': 'docs',\n\t     *   'onClick': function() {\n\t     *     console.log('clicked ' + this.label);\n\t     *   }\n\t     * };\n\t     *\n\t     * _.bindAll(view);\n\t     * jQuery('#docs').on('click', view.onClick);\n\t     * // => logs 'clicked docs' when the element is clicked\n\t     */\n\t    var bindAll = restParam(function(object, methodNames) {\n\t      methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);\n\t\n\t      var index = -1,\n\t          length = methodNames.length;\n\t\n\t      while (++index < length) {\n\t        var key = methodNames[index];\n\t        object[key] = createWrapper(object[key], BIND_FLAG, object);\n\t      }\n\t      return object;\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `object[key]` and prepends\n\t     * any additional `_.bindKey` arguments to those provided to the bound function.\n\t     *\n\t     * This method differs from `_.bind` by allowing bound functions to reference\n\t     * methods that may be redefined or don't yet exist.\n\t     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n\t     * for more details.\n\t     *\n\t     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Object} object The object the method belongs to.\n\t     * @param {string} key The key of the method.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var object = {\n\t     *   'user': 'fred',\n\t     *   'greet': function(greeting, punctuation) {\n\t     *     return greeting + ' ' + this.user + punctuation;\n\t     *   }\n\t     * };\n\t     *\n\t     * var bound = _.bindKey(object, 'greet', 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * object.greet = function(greeting, punctuation) {\n\t     *   return greeting + 'ya ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * bound('!');\n\t     * // => 'hiya fred!'\n\t     *\n\t     * // using placeholders\n\t     * var bound = _.bindKey(object, 'greet', _, '!');\n\t     * bound('hi');\n\t     * // => 'hiya fred!'\n\t     */\n\t    var bindKey = restParam(function(object, key, partials) {\n\t      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, bindKey.placeholder);\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrapper(key, bitmask, object, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that accepts one or more arguments of `func` that when\n\t     * called either invokes `func` returning its result, if all `func` arguments\n\t     * have been provided, or returns a function that accepts one or more of the\n\t     * remaining `func` arguments, and so on. The arity of `func` may be specified\n\t     * if `func.length` is not sufficient.\n\t     *\n\t     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curry(abc);\n\t     *\n\t     * curried(1)(2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // using placeholders\n\t     * curried(1)(_, 3)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    var curry = createCurry(CURRY_FLAG);\n\t\n\t    /**\n\t     * This method is like `_.curry` except that arguments are applied to `func`\n\t     * in the manner of `_.partialRight` instead of `_.partial`.\n\t     *\n\t     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curryRight(abc);\n\t     *\n\t     * curried(3)(2)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(2, 3)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // using placeholders\n\t     * curried(3)(1, _)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    var curryRight = createCurry(CURRY_RIGHT_FLAG);\n\t\n\t    /**\n\t     * Creates a debounced function that delays invoking `func` until after `wait`\n\t     * milliseconds have elapsed since the last time the debounced function was\n\t     * invoked. The debounced function comes with a `cancel` method to cancel\n\t     * delayed invocations. Provide an options object to indicate that `func`\n\t     * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n\t     * Subsequent calls to the debounced function return the result of the last\n\t     * `func` invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n\t     * on the trailing edge of the timeout only if the the debounced function is\n\t     * invoked more than once during the `wait` timeout.\n\t     *\n\t     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n\t     * for details over the differences between `_.debounce` and `_.throttle`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to debounce.\n\t     * @param {number} [wait=0] The number of milliseconds to delay.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.leading=false] Specify invoking on the leading\n\t     *  edge of the timeout.\n\t     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n\t     *  delayed before it is invoked.\n\t     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n\t     *  edge of the timeout.\n\t     * @returns {Function} Returns the new debounced function.\n\t     * @example\n\t     *\n\t     * // avoid costly calculations while the window size is in flux\n\t     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n\t     *\n\t     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n\t     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n\t     *   'leading': true,\n\t     *   'trailing': false\n\t     * }));\n\t     *\n\t     * // ensure `batchLog` is invoked once after 1 second of debounced calls\n\t     * var source = new EventSource('/stream');\n\t     * jQuery(source).on('message', _.debounce(batchLog, 250, {\n\t     *   'maxWait': 1000\n\t     * }));\n\t     *\n\t     * // cancel a debounced call\n\t     * var todoChanges = _.debounce(batchLog, 1000);\n\t     * Object.observe(models.todo, todoChanges);\n\t     *\n\t     * Object.observe(models, function(changes) {\n\t     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n\t     *     todoChanges.cancel();\n\t     *   }\n\t     * }, ['delete']);\n\t     *\n\t     * // ...at some point `models.todo` is changed\n\t     * models.todo.completed = true;\n\t     *\n\t     * // ...before 1 second has passed `models.todo` is deleted\n\t     * // which cancels the debounced `todoChanges` call\n\t     * delete models.todo;\n\t     */\n\t    function debounce(func, wait, options) {\n\t      var args,\n\t          maxTimeoutId,\n\t          result,\n\t          stamp,\n\t          thisArg,\n\t          timeoutId,\n\t          trailingCall,\n\t          lastCalled = 0,\n\t          maxWait = false,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      wait = wait < 0 ? 0 : (+wait || 0);\n\t      if (options === true) {\n\t        var leading = true;\n\t        trailing = false;\n\t      } else if (isObject(options)) {\n\t        leading = !!options.leading;\n\t        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t\n\t      function cancel() {\n\t        if (timeoutId) {\n\t          clearTimeout(timeoutId);\n\t        }\n\t        if (maxTimeoutId) {\n\t          clearTimeout(maxTimeoutId);\n\t        }\n\t        lastCalled = 0;\n\t        maxTimeoutId = timeoutId = trailingCall = undefined;\n\t      }\n\t\n\t      function complete(isCalled, id) {\n\t        if (id) {\n\t          clearTimeout(id);\n\t        }\n\t        maxTimeoutId = timeoutId = trailingCall = undefined;\n\t        if (isCalled) {\n\t          lastCalled = now();\n\t          result = func.apply(thisArg, args);\n\t          if (!timeoutId && !maxTimeoutId) {\n\t            args = thisArg = undefined;\n\t          }\n\t        }\n\t      }\n\t\n\t      function delayed() {\n\t        var remaining = wait - (now() - stamp);\n\t        if (remaining <= 0 || remaining > wait) {\n\t          complete(trailingCall, maxTimeoutId);\n\t        } else {\n\t          timeoutId = setTimeout(delayed, remaining);\n\t        }\n\t      }\n\t\n\t      function maxDelayed() {\n\t        complete(trailing, timeoutId);\n\t      }\n\t\n\t      function debounced() {\n\t        args = arguments;\n\t        stamp = now();\n\t        thisArg = this;\n\t        trailingCall = trailing && (timeoutId || !leading);\n\t\n\t        if (maxWait === false) {\n\t          var leadingCall = leading && !timeoutId;\n\t        } else {\n\t          if (!maxTimeoutId && !leading) {\n\t            lastCalled = stamp;\n\t          }\n\t          var remaining = maxWait - (stamp - lastCalled),\n\t              isCalled = remaining <= 0 || remaining > maxWait;\n\t\n\t          if (isCalled) {\n\t            if (maxTimeoutId) {\n\t              maxTimeoutId = clearTimeout(maxTimeoutId);\n\t            }\n\t            lastCalled = stamp;\n\t            result = func.apply(thisArg, args);\n\t          }\n\t          else if (!maxTimeoutId) {\n\t            maxTimeoutId = setTimeout(maxDelayed, remaining);\n\t          }\n\t        }\n\t        if (isCalled && timeoutId) {\n\t          timeoutId = clearTimeout(timeoutId);\n\t        }\n\t        else if (!timeoutId && wait !== maxWait) {\n\t          timeoutId = setTimeout(delayed, wait);\n\t        }\n\t        if (leadingCall) {\n\t          isCalled = true;\n\t          result = func.apply(thisArg, args);\n\t        }\n\t        if (isCalled && !timeoutId && !maxTimeoutId) {\n\t          args = thisArg = undefined;\n\t        }\n\t        return result;\n\t      }\n\t      debounced.cancel = cancel;\n\t      return debounced;\n\t    }\n\t\n\t    /**\n\t     * Defers invoking the `func` until the current call stack has cleared. Any\n\t     * additional arguments are provided to `func` when it is invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to defer.\n\t     * @param {...*} [args] The arguments to invoke the function with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.defer(function(text) {\n\t     *   console.log(text);\n\t     * }, 'deferred');\n\t     * // logs 'deferred' after one or more milliseconds\n\t     */\n\t    var defer = restParam(function(func, args) {\n\t      return baseDelay(func, 1, args);\n\t    });\n\t\n\t    /**\n\t     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n\t     * provided to `func` when it is invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {...*} [args] The arguments to invoke the function with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.delay(function(text) {\n\t     *   console.log(text);\n\t     * }, 1000, 'later');\n\t     * // => logs 'later' after one second\n\t     */\n\t    var delay = restParam(function(func, wait, args) {\n\t      return baseDelay(func, wait, args);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that returns the result of invoking the provided\n\t     * functions with the `this` binding of the created function, where each\n\t     * successive invocation is supplied the return value of the previous.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {...Function} [funcs] Functions to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flow(_.add, square);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flow = createFlow();\n\t\n\t    /**\n\t     * This method is like `_.flow` except that it creates a function that\n\t     * invokes the provided functions from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias backflow, compose\n\t     * @category Function\n\t     * @param {...Function} [funcs] Functions to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flowRight(square, _.add);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flowRight = createFlow(true);\n\t\n\t    /**\n\t     * Creates a function that memoizes the result of `func`. If `resolver` is\n\t     * provided it determines the cache key for storing the result based on the\n\t     * arguments provided to the memoized function. By default, the first argument\n\t     * provided to the memoized function is coerced to a string and used as the\n\t     * cache key. The `func` is invoked with the `this` binding of the memoized\n\t     * function.\n\t     *\n\t     * **Note:** The cache is exposed as the `cache` property on the memoized\n\t     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n\t     * constructor with one whose instances implement the [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n\t     * method interface of `get`, `has`, and `set`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to have its output memoized.\n\t     * @param {Function} [resolver] The function to resolve the cache key.\n\t     * @returns {Function} Returns the new memoizing function.\n\t     * @example\n\t     *\n\t     * var upperCase = _.memoize(function(string) {\n\t     *   return string.toUpperCase();\n\t     * });\n\t     *\n\t     * upperCase('fred');\n\t     * // => 'FRED'\n\t     *\n\t     * // modifying the result cache\n\t     * upperCase.cache.set('fred', 'BARNEY');\n\t     * upperCase('fred');\n\t     * // => 'BARNEY'\n\t     *\n\t     * // replacing `_.memoize.Cache`\n\t     * var object = { 'user': 'fred' };\n\t     * var other = { 'user': 'barney' };\n\t     * var identity = _.memoize(_.identity);\n\t     *\n\t     * identity(object);\n\t     * // => { 'user': 'fred' }\n\t     * identity(other);\n\t     * // => { 'user': 'fred' }\n\t     *\n\t     * _.memoize.Cache = WeakMap;\n\t     * var identity = _.memoize(_.identity);\n\t     *\n\t     * identity(object);\n\t     * // => { 'user': 'fred' }\n\t     * identity(other);\n\t     * // => { 'user': 'barney' }\n\t     */\n\t    function memoize(func, resolver) {\n\t      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var memoized = function() {\n\t        var args = arguments,\n\t            key = resolver ? resolver.apply(this, args) : args[0],\n\t            cache = memoized.cache;\n\t\n\t        if (cache.has(key)) {\n\t          return cache.get(key);\n\t        }\n\t        var result = func.apply(this, args);\n\t        memoized.cache = cache.set(key, result);\n\t        return result;\n\t      };\n\t      memoized.cache = new memoize.Cache;\n\t      return memoized;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that runs each argument through a corresponding\n\t     * transform function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to wrap.\n\t     * @param {...(Function|Function[])} [transforms] The functions to transform\n\t     * arguments, specified as individual functions or arrays of functions.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function doubled(n) {\n\t     *   return n * 2;\n\t     * }\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var modded = _.modArgs(function(x, y) {\n\t     *   return [x, y];\n\t     * }, square, doubled);\n\t     *\n\t     * modded(1, 2);\n\t     * // => [1, 4]\n\t     *\n\t     * modded(5, 10);\n\t     * // => [25, 20]\n\t     */\n\t    var modArgs = restParam(function(func, transforms) {\n\t      transforms = baseFlatten(transforms);\n\t      if (typeof func != 'function' || !arrayEvery(transforms, baseIsFunction)) {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var length = transforms.length;\n\t      return restParam(function(args) {\n\t        var index = nativeMin(args.length, length);\n\t        while (index--) {\n\t          args[index] = transforms[index](args[index]);\n\t        }\n\t        return func.apply(this, args);\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a function that negates the result of the predicate `func`. The\n\t     * `func` predicate is invoked with the `this` binding and arguments of the\n\t     * created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} predicate The predicate to negate.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function isEven(n) {\n\t     *   return n % 2 == 0;\n\t     * }\n\t     *\n\t     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n\t     * // => [1, 3, 5]\n\t     */\n\t    function negate(predicate) {\n\t      if (typeof predicate != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return function() {\n\t        return !predicate.apply(this, arguments);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that is restricted to invoking `func` once. Repeat calls\n\t     * to the function return the value of the first call. The `func` is invoked\n\t     * with the `this` binding and arguments of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var initialize = _.once(createApplication);\n\t     * initialize();\n\t     * initialize();\n\t     * // `initialize` invokes `createApplication` once\n\t     */\n\t    function once(func) {\n\t      return before(2, func);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with `partial` arguments prepended\n\t     * to those provided to the new function. This method is like `_.bind` except\n\t     * it does **not** alter the `this` binding.\n\t     *\n\t     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * };\n\t     *\n\t     * var sayHelloTo = _.partial(greet, 'hello');\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     *\n\t     * // using placeholders\n\t     * var greetFred = _.partial(greet, _, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     */\n\t    var partial = createPartial(PARTIAL_FLAG);\n\t\n\t    /**\n\t     * This method is like `_.partial` except that partially applied arguments\n\t     * are appended to those provided to the new function.\n\t     *\n\t     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * };\n\t     *\n\t     * var greetFred = _.partialRight(greet, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     *\n\t     * // using placeholders\n\t     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     */\n\t    var partialRight = createPartial(PARTIAL_RIGHT_FLAG);\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments arranged according\n\t     * to the specified indexes where the argument value at the first index is\n\t     * provided as the first argument, the argument value at the second index is\n\t     * provided as the second argument, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to rearrange arguments for.\n\t     * @param {...(number|number[])} indexes The arranged argument indexes,\n\t     *  specified as individual indexes or arrays of indexes.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var rearged = _.rearg(function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * }, 2, 0, 1);\n\t     *\n\t     * rearged('b', 'c', 'a')\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * var map = _.rearg(_.map, [1, 0]);\n\t     * map(function(n) {\n\t     *   return n * 3;\n\t     * }, [1, 2, 3]);\n\t     * // => [3, 6, 9]\n\t     */\n\t    var rearg = restParam(function(func, indexes) {\n\t      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes));\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the\n\t     * created function and arguments from `start` and beyond provided as an array.\n\t     *\n\t     * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.restParam(function(what, names) {\n\t     *   return what + ' ' + _.initial(names).join(', ') +\n\t     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n\t     * });\n\t     *\n\t     * say('hello', 'fred', 'barney', 'pebbles');\n\t     * // => 'hello fred, barney, & pebbles'\n\t     */\n\t    function restParam(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n\t      return function() {\n\t        var args = arguments,\n\t            index = -1,\n\t            length = nativeMax(args.length - start, 0),\n\t            rest = Array(length);\n\t\n\t        while (++index < length) {\n\t          rest[index] = args[start + index];\n\t        }\n\t        switch (start) {\n\t          case 0: return func.call(this, rest);\n\t          case 1: return func.call(this, args[0], rest);\n\t          case 2: return func.call(this, args[0], args[1], rest);\n\t        }\n\t        var otherArgs = Array(start + 1);\n\t        index = -1;\n\t        while (++index < start) {\n\t          otherArgs[index] = args[index];\n\t        }\n\t        otherArgs[start] = rest;\n\t        return func.apply(this, otherArgs);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the created\n\t     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n\t     *\n\t     * **Note:** This method is based on the [spread operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to spread arguments over.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.spread(function(who, what) {\n\t     *   return who + ' says ' + what;\n\t     * });\n\t     *\n\t     * say(['fred', 'hello']);\n\t     * // => 'fred says hello'\n\t     *\n\t     * // with a Promise\n\t     * var numbers = Promise.all([\n\t     *   Promise.resolve(40),\n\t     *   Promise.resolve(36)\n\t     * ]);\n\t     *\n\t     * numbers.then(_.spread(function(x, y) {\n\t     *   return x + y;\n\t     * }));\n\t     * // => a Promise of 76\n\t     */\n\t    function spread(func) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return function(array) {\n\t        return func.apply(this, array);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a throttled function that only invokes `func` at most once per\n\t     * every `wait` milliseconds. The throttled function comes with a `cancel`\n\t     * method to cancel delayed invocations. Provide an options object to indicate\n\t     * that `func` should be invoked on the leading and/or trailing edge of the\n\t     * `wait` timeout. Subsequent calls to the throttled function return the\n\t     * result of the last `func` call.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n\t     * on the trailing edge of the timeout only if the the throttled function is\n\t     * invoked more than once during the `wait` timeout.\n\t     *\n\t     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n\t     * for details over the differences between `_.throttle` and `_.debounce`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to throttle.\n\t     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.leading=true] Specify invoking on the leading\n\t     *  edge of the timeout.\n\t     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n\t     *  edge of the timeout.\n\t     * @returns {Function} Returns the new throttled function.\n\t     * @example\n\t     *\n\t     * // avoid excessively updating the position while scrolling\n\t     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n\t     *\n\t     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n\t     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n\t     *   'trailing': false\n\t     * }));\n\t     *\n\t     * // cancel a trailing throttled call\n\t     * jQuery(window).on('popstate', throttled.cancel);\n\t     */\n\t    function throttle(func, wait, options) {\n\t      var leading = true,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      if (options === false) {\n\t        leading = false;\n\t      } else if (isObject(options)) {\n\t        leading = 'leading' in options ? !!options.leading : leading;\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t      return debounce(func, wait, { 'leading': leading, 'maxWait': +wait, 'trailing': trailing });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that provides `value` to the wrapper function as its\n\t     * first argument. Any additional arguments provided to the function are\n\t     * appended to those provided to the wrapper function. The wrapper is invoked\n\t     * with the `this` binding of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {*} value The value to wrap.\n\t     * @param {Function} wrapper The wrapper function.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var p = _.wrap(_.escape, function(func, text) {\n\t     *   return '<p>' + func(text) + '</p>';\n\t     * });\n\t     *\n\t     * p('fred, barney, & pebbles');\n\t     * // => '<p>fred, barney, &amp; pebbles</p>'\n\t     */\n\t    function wrap(value, wrapper) {\n\t      wrapper = wrapper == null ? identity : wrapper;\n\t      return createWrapper(wrapper, PARTIAL_FLAG, undefined, [value], []);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n\t     * otherwise they are assigned by reference. If `customizer` is provided it is\n\t     * invoked to produce the cloned values. If `customizer` returns `undefined`\n\t     * cloning is handled by the method instead. The `customizer` is bound to\n\t     * `thisArg` and invoked with two argument; (value [, index|key, object]).\n\t     *\n\t     * **Note:** This method is loosely based on the\n\t     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n\t     * The enumerable properties of `arguments` objects and objects created by\n\t     * constructors other than `Object` are cloned to plain `Object` objects. An\n\t     * empty object is returned for uncloneable values such as functions, DOM nodes,\n\t     * Maps, Sets, and WeakMaps.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @param {Function} [customizer] The function to customize cloning values.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {*} Returns the cloned value.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * var shallow = _.clone(users);\n\t     * shallow[0] === users[0];\n\t     * // => true\n\t     *\n\t     * var deep = _.clone(users, true);\n\t     * deep[0] === users[0];\n\t     * // => false\n\t     *\n\t     * // using a customizer callback\n\t     * var el = _.clone(document.body, function(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(false);\n\t     *   }\n\t     * });\n\t     *\n\t     * el === document.body\n\t     * // => false\n\t     * el.nodeName\n\t     * // => BODY\n\t     * el.childNodes.length;\n\t     * // => 0\n\t     */\n\t    function clone(value, isDeep, customizer, thisArg) {\n\t      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n\t        isDeep = false;\n\t      }\n\t      else if (typeof isDeep == 'function') {\n\t        thisArg = customizer;\n\t        customizer = isDeep;\n\t        isDeep = false;\n\t      }\n\t      return typeof customizer == 'function'\n\t        ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 1))\n\t        : baseClone(value, isDeep);\n\t    }\n\t\n\t    /**\n\t     * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n\t     * to produce the cloned values. If `customizer` returns `undefined` cloning\n\t     * is handled by the method instead. The `customizer` is bound to `thisArg`\n\t     * and invoked with two argument; (value [, index|key, object]).\n\t     *\n\t     * **Note:** This method is loosely based on the\n\t     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n\t     * The enumerable properties of `arguments` objects and objects created by\n\t     * constructors other than `Object` are cloned to plain `Object` objects. An\n\t     * empty object is returned for uncloneable values such as functions, DOM nodes,\n\t     * Maps, Sets, and WeakMaps.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to deep clone.\n\t     * @param {Function} [customizer] The function to customize cloning values.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * var deep = _.cloneDeep(users);\n\t     * deep[0] === users[0];\n\t     * // => false\n\t     *\n\t     * // using a customizer callback\n\t     * var el = _.cloneDeep(document.body, function(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(true);\n\t     *   }\n\t     * });\n\t     *\n\t     * el === document.body\n\t     * // => false\n\t     * el.nodeName\n\t     * // => BODY\n\t     * el.childNodes.length;\n\t     * // => 20\n\t     */\n\t    function cloneDeep(value, customizer, thisArg) {\n\t      return typeof customizer == 'function'\n\t        ? baseClone(value, true, bindCallback(customizer, thisArg, 1))\n\t        : baseClone(value, true);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is greater than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.gt(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.gt(1, 3);\n\t     * // => false\n\t     */\n\t    function gt(value, other) {\n\t      return value > other;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is greater than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.gte(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.gte(1, 3);\n\t     * // => false\n\t     */\n\t    function gte(value, other) {\n\t      return value >= other;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `arguments` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArguments(function() { return arguments; }());\n\t     * // => true\n\t     *\n\t     * _.isArguments([1, 2, 3]);\n\t     * // => false\n\t     */\n\t    function isArguments(value) {\n\t      return isObjectLike(value) && isArrayLike(value) &&\n\t        hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `Array` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArray([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArray(function() { return arguments; }());\n\t     * // => false\n\t     */\n\t    var isArray = nativeIsArray || function(value) {\n\t      return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n\t    };\n\t\n\t    /**\n\t     * Checks if `value` is classified as a boolean primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isBoolean(false);\n\t     * // => true\n\t     *\n\t     * _.isBoolean(null);\n\t     * // => false\n\t     */\n\t    function isBoolean(value) {\n\t      return value === true || value === false || (isObjectLike(value) && objToString.call(value) == boolTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Date` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isDate(new Date);\n\t     * // => true\n\t     *\n\t     * _.isDate('Mon April 23 2012');\n\t     * // => false\n\t     */\n\t    function isDate(value) {\n\t      return isObjectLike(value) && objToString.call(value) == dateTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a DOM element.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n\t     * @example\n\t     *\n\t     * _.isElement(document.body);\n\t     * // => true\n\t     *\n\t     * _.isElement('<body>');\n\t     * // => false\n\t     */\n\t    function isElement(value) {\n\t      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is empty. A value is considered empty unless it is an\n\t     * `arguments` object, array, string, or jQuery-like collection with a length\n\t     * greater than `0` or an object with own enumerable properties.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {Array|Object|string} value The value to inspect.\n\t     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n\t     * @example\n\t     *\n\t     * _.isEmpty(null);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(true);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(1);\n\t     * // => true\n\t     *\n\t     * _.isEmpty([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isEmpty({ 'a': 1 });\n\t     * // => false\n\t     */\n\t    function isEmpty(value) {\n\t      if (value == null) {\n\t        return true;\n\t      }\n\t      if (isArrayLike(value) && (isArray(value) || isString(value) || isArguments(value) ||\n\t          (isObjectLike(value) && isFunction(value.splice)))) {\n\t        return !value.length;\n\t      }\n\t      return !keys(value).length;\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between two values to determine if they are\n\t     * equivalent. If `customizer` is provided it is invoked to compare values.\n\t     * If `customizer` returns `undefined` comparisons are handled by the method\n\t     * instead. The `customizer` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, other [, index|key]).\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties. Functions and DOM nodes\n\t     * are **not** supported. Provide a customizer function to extend support\n\t     * for comparing other values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias eq\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize value comparisons.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var other = { 'user': 'fred' };\n\t     *\n\t     * object == other;\n\t     * // => false\n\t     *\n\t     * _.isEqual(object, other);\n\t     * // => true\n\t     *\n\t     * // using a customizer callback\n\t     * var array = ['hello', 'goodbye'];\n\t     * var other = ['hi', 'goodbye'];\n\t     *\n\t     * _.isEqual(array, other, function(value, other) {\n\t     *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n\t     *     return true;\n\t     *   }\n\t     * });\n\t     * // => true\n\t     */\n\t    function isEqual(value, other, customizer, thisArg) {\n\t      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n\t      var result = customizer ? customizer(value, other) : undefined;\n\t      return  result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n\t     * `SyntaxError`, `TypeError`, or `URIError` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isError(new Error);\n\t     * // => true\n\t     *\n\t     * _.isError(Error);\n\t     * // => false\n\t     */\n\t    function isError(value) {\n\t      return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a finite primitive number.\n\t     *\n\t     * **Note:** This method is based on [`Number.isFinite`](http://ecma-international.org/ecma-262/6.0/#sec-number.isfinite).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFinite(10);\n\t     * // => true\n\t     *\n\t     * _.isFinite('10');\n\t     * // => false\n\t     *\n\t     * _.isFinite(true);\n\t     * // => false\n\t     *\n\t     * _.isFinite(Object(10));\n\t     * // => false\n\t     *\n\t     * _.isFinite(Infinity);\n\t     * // => false\n\t     */\n\t    function isFinite(value) {\n\t      return typeof value == 'number' && nativeIsFinite(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Function` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFunction(_);\n\t     * // => true\n\t     *\n\t     * _.isFunction(/abc/);\n\t     * // => false\n\t     */\n\t    function isFunction(value) {\n\t      // The use of `Object#toString` avoids issues with the `typeof` operator\n\t      // in older versions of Chrome and Safari which return 'function' for regexes\n\t      // and Safari 8 equivalents which return 'object' for typed array constructors.\n\t      return isObject(value) && objToString.call(value) == funcTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n\t     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObject({});\n\t     * // => true\n\t     *\n\t     * _.isObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObject(1);\n\t     * // => false\n\t     */\n\t    function isObject(value) {\n\t      // Avoid a V8 JIT bug in Chrome 19-20.\n\t      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n\t      var type = typeof value;\n\t      return !!value && (type == 'object' || type == 'function');\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between `object` and `source` to determine if\n\t     * `object` contains equivalent property values. If `customizer` is provided\n\t     * it is invoked to compare values. If `customizer` returns `undefined`\n\t     * comparisons are handled by the method instead. The `customizer` is bound\n\t     * to `thisArg` and invoked with three arguments: (value, other, index|key).\n\t     *\n\t     * **Note:** This method supports comparing properties of arrays, booleans,\n\t     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n\t     * and DOM nodes are **not** supported. Provide a customizer function to extend\n\t     * support for comparing other values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Function} [customizer] The function to customize value comparisons.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred', 'age': 40 };\n\t     *\n\t     * _.isMatch(object, { 'age': 40 });\n\t     * // => true\n\t     *\n\t     * _.isMatch(object, { 'age': 36 });\n\t     * // => false\n\t     *\n\t     * // using a customizer callback\n\t     * var object = { 'greeting': 'hello' };\n\t     * var source = { 'greeting': 'hi' };\n\t     *\n\t     * _.isMatch(object, source, function(value, other) {\n\t     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n\t     * });\n\t     * // => true\n\t     */\n\t    function isMatch(object, source, customizer, thisArg) {\n\t      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n\t      return baseIsMatch(object, getMatchData(source), customizer);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `NaN`.\n\t     *\n\t     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n\t     * which returns `true` for `undefined` and other non-numeric values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNaN(NaN);\n\t     * // => true\n\t     *\n\t     * _.isNaN(new Number(NaN));\n\t     * // => true\n\t     *\n\t     * isNaN(undefined);\n\t     * // => true\n\t     *\n\t     * _.isNaN(undefined);\n\t     * // => false\n\t     */\n\t    function isNaN(value) {\n\t      // An `NaN` primitive is the only value that is not equal to itself.\n\t      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n\t      return isNumber(value) && value != +value;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a native function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNative(Array.prototype.push);\n\t     * // => true\n\t     *\n\t     * _.isNative(_);\n\t     * // => false\n\t     */\n\t    function isNative(value) {\n\t      if (value == null) {\n\t        return false;\n\t      }\n\t      if (isFunction(value)) {\n\t        return reIsNative.test(fnToString.call(value));\n\t      }\n\t      return isObjectLike(value) && reIsHostCtor.test(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNull(null);\n\t     * // => true\n\t     *\n\t     * _.isNull(void 0);\n\t     * // => false\n\t     */\n\t    function isNull(value) {\n\t      return value === null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Number` primitive or object.\n\t     *\n\t     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n\t     * as numbers, use the `_.isFinite` method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNumber(8.4);\n\t     * // => true\n\t     *\n\t     * _.isNumber(NaN);\n\t     * // => true\n\t     *\n\t     * _.isNumber('8.4');\n\t     * // => false\n\t     */\n\t    function isNumber(value) {\n\t      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a plain object, that is, an object created by the\n\t     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n\t     *\n\t     * **Note:** This method assumes objects created by the `Object` constructor\n\t     * have no inherited enumerable properties.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * _.isPlainObject(new Foo);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject({ 'x': 0, 'y': 0 });\n\t     * // => true\n\t     *\n\t     * _.isPlainObject(Object.create(null));\n\t     * // => true\n\t     */\n\t    function isPlainObject(value) {\n\t      var Ctor;\n\t\n\t      // Exit early for non `Object` objects.\n\t      if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isArguments(value)) ||\n\t          (!hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n\t        return false;\n\t      }\n\t      // IE < 9 iterates inherited properties before own properties. If the first\n\t      // iterated property is an object's own property then there are no inherited\n\t      // enumerable properties.\n\t      var result;\n\t      // In most environments an object's own properties are iterated before\n\t      // its inherited properties. If the last iterated property is an object's\n\t      // own property then there are no inherited enumerable properties.\n\t      baseForIn(value, function(subValue, key) {\n\t        result = key;\n\t      });\n\t      return result === undefined || hasOwnProperty.call(value, result);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `RegExp` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isRegExp(/abc/);\n\t     * // => true\n\t     *\n\t     * _.isRegExp('/abc/');\n\t     * // => false\n\t     */\n\t    function isRegExp(value) {\n\t      return isObject(value) && objToString.call(value) == regexpTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `String` primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isString('abc');\n\t     * // => true\n\t     *\n\t     * _.isString(1);\n\t     * // => false\n\t     */\n\t    function isString(value) {\n\t      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a typed array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isTypedArray(new Uint8Array);\n\t     * // => true\n\t     *\n\t     * _.isTypedArray([]);\n\t     * // => false\n\t     */\n\t    function isTypedArray(value) {\n\t      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isUndefined(void 0);\n\t     * // => true\n\t     *\n\t     * _.isUndefined(null);\n\t     * // => false\n\t     */\n\t    function isUndefined(value) {\n\t      return value === undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is less than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.lt(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.lt(3, 1);\n\t     * // => false\n\t     */\n\t    function lt(value, other) {\n\t      return value < other;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is less than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.lte(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 1);\n\t     * // => false\n\t     */\n\t    function lte(value, other) {\n\t      return value <= other;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the converted array.\n\t     * @example\n\t     *\n\t     * (function() {\n\t     *   return _.toArray(arguments).slice(1);\n\t     * }(1, 2, 3));\n\t     * // => [2, 3]\n\t     */\n\t    function toArray(value) {\n\t      var length = value ? getLength(value) : 0;\n\t      if (!isLength(length)) {\n\t        return values(value);\n\t      }\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      return arrayCopy(value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a plain object flattening inherited enumerable\n\t     * properties of `value` to own properties of the plain object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Object} Returns the converted plain object.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.assign({ 'a': 1 }, new Foo);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     *\n\t     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n\t     * // => { 'a': 1, 'b': 2, 'c': 3 }\n\t     */\n\t    function toPlainObject(value) {\n\t      return baseCopy(value, keysIn(value));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Recursively merges own enumerable properties of the source object(s), that\n\t     * don't resolve to `undefined` into the destination object. Subsequent sources\n\t     * overwrite property assignments of previous sources. If `customizer` is\n\t     * provided it is invoked to produce the merged values of the destination and\n\t     * source properties. If `customizer` returns `undefined` merging is handled\n\t     * by the method instead. The `customizer` is bound to `thisArg` and invoked\n\t     * with five arguments: (objectValue, sourceValue, key, object, source).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n\t     * };\n\t     *\n\t     * var ages = {\n\t     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n\t     * };\n\t     *\n\t     * _.merge(users, ages);\n\t     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n\t     *\n\t     * // using a customizer callback\n\t     * var object = {\n\t     *   'fruits': ['apple'],\n\t     *   'vegetables': ['beet']\n\t     * };\n\t     *\n\t     * var other = {\n\t     *   'fruits': ['banana'],\n\t     *   'vegetables': ['carrot']\n\t     * };\n\t     *\n\t     * _.merge(object, other, function(a, b) {\n\t     *   if (_.isArray(a)) {\n\t     *     return a.concat(b);\n\t     *   }\n\t     * });\n\t     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n\t     */\n\t    var merge = createAssigner(baseMerge);\n\t\n\t    /**\n\t     * Assigns own enumerable properties of source object(s) to the destination\n\t     * object. Subsequent sources overwrite property assignments of previous sources.\n\t     * If `customizer` is provided it is invoked to produce the assigned values.\n\t     * The `customizer` is bound to `thisArg` and invoked with five arguments:\n\t     * (objectValue, sourceValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object` and is based on\n\t     * [`Object.assign`](http://ecma-international.org/ecma-262/6.0/#sec-object.assign).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias extend\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n\t     * // => { 'user': 'fred', 'age': 40 }\n\t     *\n\t     * // using a customizer callback\n\t     * var defaults = _.partialRight(_.assign, function(value, other) {\n\t     *   return _.isUndefined(value) ? other : value;\n\t     * });\n\t     *\n\t     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     */\n\t    var assign = createAssigner(function(object, source, customizer) {\n\t      return customizer\n\t        ? assignWith(object, source, customizer)\n\t        : baseAssign(object, source);\n\t    });\n\t\n\t    /**\n\t     * Creates an object that inherits from the given `prototype` object. If a\n\t     * `properties` object is provided its own enumerable properties are assigned\n\t     * to the created object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @param {Object} [properties] The properties to assign to the object.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * function Shape() {\n\t     *   this.x = 0;\n\t     *   this.y = 0;\n\t     * }\n\t     *\n\t     * function Circle() {\n\t     *   Shape.call(this);\n\t     * }\n\t     *\n\t     * Circle.prototype = _.create(Shape.prototype, {\n\t     *   'constructor': Circle\n\t     * });\n\t     *\n\t     * var circle = new Circle;\n\t     * circle instanceof Circle;\n\t     * // => true\n\t     *\n\t     * circle instanceof Shape;\n\t     * // => true\n\t     */\n\t    function create(prototype, properties, guard) {\n\t      var result = baseCreate(prototype);\n\t      if (guard && isIterateeCall(prototype, properties, guard)) {\n\t        properties = undefined;\n\t      }\n\t      return properties ? baseAssign(result, properties) : result;\n\t    }\n\t\n\t    /**\n\t     * Assigns own enumerable properties of source object(s) to the destination\n\t     * object for all destination properties that resolve to `undefined`. Once a\n\t     * property is set, additional values of the same property are ignored.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     */\n\t    var defaults = createDefaults(assign, assignDefaults);\n\t\n\t    /**\n\t     * This method is like `_.defaults` except that it recursively assigns\n\t     * default properties.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n\t     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n\t     *\n\t     */\n\t    var defaultsDeep = createDefaults(merge, mergeDefaults);\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the key of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findKey(users, function(chr) {\n\t     *   return chr.age < 40;\n\t     * });\n\t     * // => 'barney' (iteration order is not guaranteed)\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.findKey(users, { 'age': 1, 'active': true });\n\t     * // => 'pebbles'\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.findKey(users, 'active', false);\n\t     * // => 'fred'\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.findKey(users, 'active');\n\t     * // => 'barney'\n\t     */\n\t    var findKey = createFindKey(baseForOwn);\n\t\n\t    /**\n\t     * This method is like `_.findKey` except that it iterates over elements of\n\t     * a collection in the opposite order.\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findLastKey(users, function(chr) {\n\t     *   return chr.age < 40;\n\t     * });\n\t     * // => returns `pebbles` assuming `_.findKey` returns `barney`\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.findLastKey(users, { 'age': 36, 'active': true });\n\t     * // => 'barney'\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.findLastKey(users, 'active', false);\n\t     * // => 'fred'\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.findLastKey(users, 'active');\n\t     * // => 'pebbles'\n\t     */\n\t    var findLastKey = createFindKey(baseForOwnRight);\n\t\n\t    /**\n\t     * Iterates over own and inherited enumerable properties of an object invoking\n\t     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n\t     * with three arguments: (value, key, object). Iteratee functions may exit\n\t     * iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forIn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n\t     */\n\t    var forIn = createForIn(baseFor);\n\t\n\t    /**\n\t     * This method is like `_.forIn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forInRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n\t     */\n\t    var forInRight = createForIn(baseForRight);\n\t\n\t    /**\n\t     * Iterates over own enumerable properties of an object invoking `iteratee`\n\t     * for each property. The `iteratee` is bound to `thisArg` and invoked with\n\t     * three arguments: (value, key, object). Iteratee functions may exit iteration\n\t     * early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'a' and 'b' (iteration order is not guaranteed)\n\t     */\n\t    var forOwn = createForOwn(baseForOwn);\n\t\n\t    /**\n\t     * This method is like `_.forOwn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwnRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'\n\t     */\n\t    var forOwnRight = createForOwn(baseForOwnRight);\n\t\n\t    /**\n\t     * Creates an array of function property names from all enumerable properties,\n\t     * own and inherited, of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias methods\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the new array of property names.\n\t     * @example\n\t     *\n\t     * _.functions(_);\n\t     * // => ['after', 'ary', 'assign', ...]\n\t     */\n\t    function functions(object) {\n\t      return baseFunctions(object, keysIn(object));\n\t    }\n\t\n\t    /**\n\t     * Gets the property value at `path` of `object`. If the resolved value is\n\t     * `undefined` the `defaultValue` is used in its place.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.get(object, 'a[0].b.c');\n\t     * // => 3\n\t     *\n\t     * _.get(object, ['a', '0', 'b', 'c']);\n\t     * // => 3\n\t     *\n\t     * _.get(object, 'a.b.c', 'default');\n\t     * // => 'default'\n\t     */\n\t    function get(object, path, defaultValue) {\n\t      var result = object == null ? undefined : baseGet(object, toPath(path), path + '');\n\t      return result === undefined ? defaultValue : result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` is a direct property.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` is a direct property, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': { 'b': { 'c': 3 } } };\n\t     *\n\t     * _.has(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.has(object, 'a.b.c');\n\t     * // => true\n\t     *\n\t     * _.has(object, ['a', 'b', 'c']);\n\t     * // => true\n\t     */\n\t    function has(object, path) {\n\t      if (object == null) {\n\t        return false;\n\t      }\n\t      var result = hasOwnProperty.call(object, path);\n\t      if (!result && !isKey(path)) {\n\t        path = toPath(path);\n\t        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t        if (object == null) {\n\t          return false;\n\t        }\n\t        path = last(path);\n\t        result = hasOwnProperty.call(object, path);\n\t      }\n\t      return result || (isLength(object.length) && isIndex(path, object.length) &&\n\t        (isArray(object) || isArguments(object)));\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the inverted keys and values of `object`.\n\t     * If `object` contains duplicate values, subsequent values overwrite property\n\t     * assignments of previous values unless `multiValue` is `true`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @param {boolean} [multiValue] Allow multiple values per key.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invert(object);\n\t     * // => { '1': 'c', '2': 'b' }\n\t     *\n\t     * // with `multiValue`\n\t     * _.invert(object, true);\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     */\n\t    function invert(object, multiValue, guard) {\n\t      if (guard && isIterateeCall(object, multiValue, guard)) {\n\t        multiValue = undefined;\n\t      }\n\t      var index = -1,\n\t          props = keys(object),\n\t          length = props.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var key = props[index],\n\t            value = object[key];\n\t\n\t        if (multiValue) {\n\t          if (hasOwnProperty.call(result, value)) {\n\t            result[value].push(key);\n\t          } else {\n\t            result[value] = [key];\n\t          }\n\t        }\n\t        else {\n\t          result[value] = key;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects. See the\n\t     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n\t     * for more details.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keys(new Foo);\n\t     * // => ['a', 'b'] (iteration order is not guaranteed)\n\t     *\n\t     * _.keys('hi');\n\t     * // => ['0', '1']\n\t     */\n\t    var keys = !nativeKeys ? shimKeys : function(object) {\n\t      var Ctor = object == null ? undefined : object.constructor;\n\t      if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n\t          (typeof object != 'function' && isArrayLike(object))) {\n\t        return shimKeys(object);\n\t      }\n\t      return isObject(object) ? nativeKeys(object) : [];\n\t    };\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keysIn(new Foo);\n\t     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n\t     */\n\t    function keysIn(object) {\n\t      if (object == null) {\n\t        return [];\n\t      }\n\t      if (!isObject(object)) {\n\t        object = Object(object);\n\t      }\n\t      var length = object.length;\n\t      length = (length && isLength(length) &&\n\t        (isArray(object) || isArguments(object)) && length) || 0;\n\t\n\t      var Ctor = object.constructor,\n\t          index = -1,\n\t          isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n\t          result = Array(length),\n\t          skipIndexes = length > 0;\n\t\n\t      while (++index < length) {\n\t        result[index] = (index + '');\n\t      }\n\t      for (var key in object) {\n\t        if (!(skipIndexes && isIndex(key, length)) &&\n\t            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.mapValues`; this method creates an object with the\n\t     * same values as `object` and keys generated by running each own enumerable\n\t     * property of `object` through `iteratee`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @example\n\t     *\n\t     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n\t     *   return key + value;\n\t     * });\n\t     * // => { 'a1': 1, 'b2': 2 }\n\t     */\n\t    var mapKeys = createObjectMapper(true);\n\t\n\t    /**\n\t     * Creates an object with the same keys as `object` and values generated by\n\t     * running each own enumerable property of `object` through `iteratee`. The\n\t     * iteratee function is bound to `thisArg` and invoked with three arguments:\n\t     * (value, key, object).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @example\n\t     *\n\t     * _.mapValues({ 'a': 1, 'b': 2 }, function(n) {\n\t     *   return n * 3;\n\t     * });\n\t     * // => { 'a': 3, 'b': 6 }\n\t     *\n\t     * var users = {\n\t     *   'fred':    { 'user': 'fred',    'age': 40 },\n\t     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n\t     * };\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.mapValues(users, 'age');\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     */\n\t    var mapValues = createObjectMapper();\n\t\n\t    /**\n\t     * The opposite of `_.pick`; this method creates an object composed of the\n\t     * own and inherited enumerable properties of `object` that are not omitted.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function|...(string|string[])} [predicate] The function invoked per\n\t     *  iteration or property names to omit, specified as individual property\n\t     *  names or arrays of property names.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred', 'age': 40 };\n\t     *\n\t     * _.omit(object, 'age');\n\t     * // => { 'user': 'fred' }\n\t     *\n\t     * _.omit(object, _.isNumber);\n\t     * // => { 'user': 'fred' }\n\t     */\n\t    var omit = restParam(function(object, props) {\n\t      if (object == null) {\n\t        return {};\n\t      }\n\t      if (typeof props[0] != 'function') {\n\t        var props = arrayMap(baseFlatten(props), String);\n\t        return pickByArray(object, baseDifference(keysIn(object), props));\n\t      }\n\t      var predicate = bindCallback(props[0], props[1], 3);\n\t      return pickByCallback(object, function(value, key, object) {\n\t        return !predicate(value, key, object);\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a two dimensional array of the key-value pairs for `object`,\n\t     * e.g. `[[key1, value1], [key2, value2]]`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the new array of key-value pairs.\n\t     * @example\n\t     *\n\t     * _.pairs({ 'barney': 36, 'fred': 40 });\n\t     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n\t     */\n\t    function pairs(object) {\n\t      object = toObject(object);\n\t\n\t      var index = -1,\n\t          props = keys(object),\n\t          length = props.length,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        result[index] = [key, object[key]];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the picked `object` properties. Property\n\t     * names may be specified as individual arguments or as arrays of property\n\t     * names. If `predicate` is provided it is invoked for each property of `object`\n\t     * picking the properties `predicate` returns truthy for. The predicate is\n\t     * bound to `thisArg` and invoked with three arguments: (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function|...(string|string[])} [predicate] The function invoked per\n\t     *  iteration or property names to pick, specified as individual property\n\t     *  names or arrays of property names.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred', 'age': 40 };\n\t     *\n\t     * _.pick(object, 'user');\n\t     * // => { 'user': 'fred' }\n\t     *\n\t     * _.pick(object, _.isString);\n\t     * // => { 'user': 'fred' }\n\t     */\n\t    var pick = restParam(function(object, props) {\n\t      if (object == null) {\n\t        return {};\n\t      }\n\t      return typeof props[0] == 'function'\n\t        ? pickByCallback(object, bindCallback(props[0], props[1], 3))\n\t        : pickByArray(object, baseFlatten(props));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.get` except that if the resolved value is a function\n\t     * it is invoked with the `this` binding of its parent object and its result\n\t     * is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to resolve.\n\t     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n\t     *\n\t     * _.result(object, 'a[0].b.c1');\n\t     * // => 3\n\t     *\n\t     * _.result(object, 'a[0].b.c2');\n\t     * // => 4\n\t     *\n\t     * _.result(object, 'a.b.c', 'default');\n\t     * // => 'default'\n\t     *\n\t     * _.result(object, 'a.b.c', _.constant('default'));\n\t     * // => 'default'\n\t     */\n\t    function result(object, path, defaultValue) {\n\t      var result = object == null ? undefined : object[path];\n\t      if (result === undefined) {\n\t        if (object != null && !isKey(path, object)) {\n\t          path = toPath(path);\n\t          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t          result = object == null ? undefined : object[last(path)];\n\t        }\n\t        result = result === undefined ? defaultValue : result;\n\t      }\n\t      return isFunction(result) ? result.call(object) : result;\n\t    }\n\t\n\t    /**\n\t     * Sets the property value of `path` on `object`. If a portion of `path`\n\t     * does not exist it is created.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to augment.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.set(object, 'a[0].b.c', 4);\n\t     * console.log(object.a[0].b.c);\n\t     * // => 4\n\t     *\n\t     * _.set(object, 'x[0].y.z', 5);\n\t     * console.log(object.x[0].y.z);\n\t     * // => 5\n\t     */\n\t    function set(object, path, value) {\n\t      if (object == null) {\n\t        return object;\n\t      }\n\t      var pathKey = (path + '');\n\t      path = (object[pathKey] != null || isKey(path, object)) ? [pathKey] : toPath(path);\n\t\n\t      var index = -1,\n\t          length = path.length,\n\t          lastIndex = length - 1,\n\t          nested = object;\n\t\n\t      while (nested != null && ++index < length) {\n\t        var key = path[index];\n\t        if (isObject(nested)) {\n\t          if (index == lastIndex) {\n\t            nested[key] = value;\n\t          } else if (nested[key] == null) {\n\t            nested[key] = isIndex(path[index + 1]) ? [] : {};\n\t          }\n\t        }\n\t        nested = nested[key];\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * An alternative to `_.reduce`; this method transforms `object` to a new\n\t     * `accumulator` object which is the result of running each of its own enumerable\n\t     * properties through `iteratee`, with each invocation potentially mutating\n\t     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n\t     * with four arguments: (accumulator, value, key, object). Iteratee functions\n\t     * may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Array|Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The custom accumulator value.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * _.transform([2, 3, 4], function(result, n) {\n\t     *   result.push(n *= n);\n\t     *   return n % 2 == 0;\n\t     * });\n\t     * // => [4, 9]\n\t     *\n\t     * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {\n\t     *   result[key] = n * 3;\n\t     * });\n\t     * // => { 'a': 3, 'b': 6 }\n\t     */\n\t    function transform(object, iteratee, accumulator, thisArg) {\n\t      var isArr = isArray(object) || isTypedArray(object);\n\t      iteratee = getCallback(iteratee, thisArg, 4);\n\t\n\t      if (accumulator == null) {\n\t        if (isArr || isObject(object)) {\n\t          var Ctor = object.constructor;\n\t          if (isArr) {\n\t            accumulator = isArray(object) ? new Ctor : [];\n\t          } else {\n\t            accumulator = baseCreate(isFunction(Ctor) ? Ctor.prototype : undefined);\n\t          }\n\t        } else {\n\t          accumulator = {};\n\t        }\n\t      }\n\t      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n\t        return iteratee(accumulator, value, index, object);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable property values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.values(new Foo);\n\t     * // => [1, 2] (iteration order is not guaranteed)\n\t     *\n\t     * _.values('hi');\n\t     * // => ['h', 'i']\n\t     */\n\t    function values(object) {\n\t      return baseValues(object, keys(object));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable property values\n\t     * of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.valuesIn(new Foo);\n\t     * // => [1, 2, 3] (iteration order is not guaranteed)\n\t     */\n\t    function valuesIn(object) {\n\t      return baseValues(object, keysIn(object));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Checks if `n` is between `start` and up to but not including, `end`. If\n\t     * `end` is not specified it is set to `start` with `start` then set to `0`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Number\n\t     * @param {number} n The number to check.\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `n` is in the range, else `false`.\n\t     * @example\n\t     *\n\t     * _.inRange(3, 2, 4);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 8);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(2, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(1.2, 2);\n\t     * // => true\n\t     *\n\t     * _.inRange(5.2, 4);\n\t     * // => false\n\t     */\n\t    function inRange(value, start, end) {\n\t      start = +start || 0;\n\t      if (end === undefined) {\n\t        end = start;\n\t        start = 0;\n\t      } else {\n\t        end = +end || 0;\n\t      }\n\t      return value >= nativeMin(start, end) && value < nativeMax(start, end);\n\t    }\n\t\n\t    /**\n\t     * Produces a random number between `min` and `max` (inclusive). If only one\n\t     * argument is provided a number between `0` and the given number is returned.\n\t     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n\t     * number is returned instead of an integer.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Number\n\t     * @param {number} [min=0] The minimum possible value.\n\t     * @param {number} [max=1] The maximum possible value.\n\t     * @param {boolean} [floating] Specify returning a floating-point number.\n\t     * @returns {number} Returns the random number.\n\t     * @example\n\t     *\n\t     * _.random(0, 5);\n\t     * // => an integer between 0 and 5\n\t     *\n\t     * _.random(5);\n\t     * // => also an integer between 0 and 5\n\t     *\n\t     * _.random(5, true);\n\t     * // => a floating-point number between 0 and 5\n\t     *\n\t     * _.random(1.2, 5.2);\n\t     * // => a floating-point number between 1.2 and 5.2\n\t     */\n\t    function random(min, max, floating) {\n\t      if (floating && isIterateeCall(min, max, floating)) {\n\t        max = floating = undefined;\n\t      }\n\t      var noMin = min == null,\n\t          noMax = max == null;\n\t\n\t      if (floating == null) {\n\t        if (noMax && typeof min == 'boolean') {\n\t          floating = min;\n\t          min = 1;\n\t        }\n\t        else if (typeof max == 'boolean') {\n\t          floating = max;\n\t          noMax = true;\n\t        }\n\t      }\n\t      if (noMin && noMax) {\n\t        max = 1;\n\t        noMax = false;\n\t      }\n\t      min = +min || 0;\n\t      if (noMax) {\n\t        max = min;\n\t        min = 0;\n\t      } else {\n\t        max = +max || 0;\n\t      }\n\t      if (floating || min % 1 || max % 1) {\n\t        var rand = nativeRandom();\n\t        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);\n\t      }\n\t      return baseRandom(min, max);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the camel cased string.\n\t     * @example\n\t     *\n\t     * _.camelCase('Foo Bar');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('--foo-bar');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('__foo_bar__');\n\t     * // => 'fooBar'\n\t     */\n\t    var camelCase = createCompounder(function(result, word, index) {\n\t      word = word.toLowerCase();\n\t      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);\n\t    });\n\t\n\t    /**\n\t     * Capitalizes the first character of `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to capitalize.\n\t     * @returns {string} Returns the capitalized string.\n\t     * @example\n\t     *\n\t     * _.capitalize('fred');\n\t     * // => 'Fred'\n\t     */\n\t    function capitalize(string) {\n\t      string = baseToString(string);\n\t      return string && (string.charAt(0).toUpperCase() + string.slice(1));\n\t    }\n\t\n\t    /**\n\t     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n\t     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to deburr.\n\t     * @returns {string} Returns the deburred string.\n\t     * @example\n\t     *\n\t     * _.deburr('déjà vu');\n\t     * // => 'deja vu'\n\t     */\n\t    function deburr(string) {\n\t      string = baseToString(string);\n\t      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n\t    }\n\t\n\t    /**\n\t     * Checks if `string` ends with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=string.length] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n\t     * @example\n\t     *\n\t     * _.endsWith('abc', 'c');\n\t     * // => true\n\t     *\n\t     * _.endsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.endsWith('abc', 'b', 2);\n\t     * // => true\n\t     */\n\t    function endsWith(string, target, position) {\n\t      string = baseToString(string);\n\t      target = (target + '');\n\t\n\t      var length = string.length;\n\t      position = position === undefined\n\t        ? length\n\t        : nativeMin(position < 0 ? 0 : (+position || 0), length);\n\t\n\t      position -= target.length;\n\t      return position >= 0 && string.indexOf(target, position) == position;\n\t    }\n\t\n\t    /**\n\t     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\", in `string` to\n\t     * their corresponding HTML entities.\n\t     *\n\t     * **Note:** No other characters are escaped. To escape additional characters\n\t     * use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * Though the \">\" character is escaped for symmetry, characters like\n\t     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n\t     * unless they're part of a tag or unquoted attribute value.\n\t     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n\t     * (under \"semi-related fun fact\") for more details.\n\t     *\n\t     * Backticks are escaped because in Internet Explorer < 9, they can break out\n\t     * of attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n\t     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n\t     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n\t     * for more details.\n\t     *\n\t     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n\t     * to reduce XSS vectors.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escape('fred, barney, & pebbles');\n\t     * // => 'fred, barney, &amp; pebbles'\n\t     */\n\t    function escape(string) {\n\t      // Reset `lastIndex` because in IE < 9 `String#replace` does not.\n\t      string = baseToString(string);\n\t      return (string && reHasUnescapedHtml.test(string))\n\t        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n\t     * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escapeRegExp('[lodash](https://lodash.com/)');\n\t     * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n\t     */\n\t    function escapeRegExp(string) {\n\t      string = baseToString(string);\n\t      return (string && reHasRegExpChars.test(string))\n\t        ? string.replace(reRegExpChars, escapeRegExpChar)\n\t        : (string || '(?:)');\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the kebab cased string.\n\t     * @example\n\t     *\n\t     * _.kebabCase('Foo Bar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('fooBar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('__foo_bar__');\n\t     * // => 'foo-bar'\n\t     */\n\t    var kebabCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '-' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Pads `string` on the left and right sides if it's shorter than `length`.\n\t     * Padding characters are truncated if they can't be evenly divided by `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.pad('abc', 8);\n\t     * // => '  abc   '\n\t     *\n\t     * _.pad('abc', 8, '_-');\n\t     * // => '_-abc_-_'\n\t     *\n\t     * _.pad('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function pad(string, length, chars) {\n\t      string = baseToString(string);\n\t      length = +length;\n\t\n\t      var strLength = string.length;\n\t      if (strLength >= length || !nativeIsFinite(length)) {\n\t        return string;\n\t      }\n\t      var mid = (length - strLength) / 2,\n\t          leftLength = nativeFloor(mid),\n\t          rightLength = nativeCeil(mid);\n\t\n\t      chars = createPadding('', rightLength, chars);\n\t      return chars.slice(0, leftLength) + string + chars;\n\t    }\n\t\n\t    /**\n\t     * Pads `string` on the left side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padLeft('abc', 6);\n\t     * // => '   abc'\n\t     *\n\t     * _.padLeft('abc', 6, '_-');\n\t     * // => '_-_abc'\n\t     *\n\t     * _.padLeft('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    var padLeft = createPadDir();\n\t\n\t    /**\n\t     * Pads `string` on the right side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padRight('abc', 6);\n\t     * // => 'abc   '\n\t     *\n\t     * _.padRight('abc', 6, '_-');\n\t     * // => 'abc_-_'\n\t     *\n\t     * _.padRight('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    var padRight = createPadDir(true);\n\t\n\t    /**\n\t     * Converts `string` to an integer of the specified radix. If `radix` is\n\t     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n\t     * in which case a `radix` of `16` is used.\n\t     *\n\t     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)\n\t     * of `parseInt`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} string The string to convert.\n\t     * @param {number} [radix] The radix to interpret `value` by.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.parseInt('08');\n\t     * // => 8\n\t     *\n\t     * _.map(['6', '08', '10'], _.parseInt);\n\t     * // => [6, 8, 10]\n\t     */\n\t    function parseInt(string, radix, guard) {\n\t      // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.\n\t      // Chrome fails to trim leading <BOM> whitespace characters.\n\t      // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n\t      if (guard ? isIterateeCall(string, radix, guard) : radix == null) {\n\t        radix = 0;\n\t      } else if (radix) {\n\t        radix = +radix;\n\t      }\n\t      string = trim(string);\n\t      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n\t    }\n\t\n\t    /**\n\t     * Repeats the given string `n` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to repeat.\n\t     * @param {number} [n=0] The number of times to repeat the string.\n\t     * @returns {string} Returns the repeated string.\n\t     * @example\n\t     *\n\t     * _.repeat('*', 3);\n\t     * // => '***'\n\t     *\n\t     * _.repeat('abc', 2);\n\t     * // => 'abcabc'\n\t     *\n\t     * _.repeat('abc', 0);\n\t     * // => ''\n\t     */\n\t    function repeat(string, n) {\n\t      var result = '';\n\t      string = baseToString(string);\n\t      n = +n;\n\t      if (n < 1 || !string || !nativeIsFinite(n)) {\n\t        return result;\n\t      }\n\t      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n\t      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n\t      do {\n\t        if (n % 2) {\n\t          result += string;\n\t        }\n\t        n = nativeFloor(n / 2);\n\t        string += string;\n\t      } while (n);\n\t\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the snake cased string.\n\t     * @example\n\t     *\n\t     * _.snakeCase('Foo Bar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('fooBar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('--foo-bar');\n\t     * // => 'foo_bar'\n\t     */\n\t    var snakeCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '_' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the start cased string.\n\t     * @example\n\t     *\n\t     * _.startCase('--foo-bar');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('fooBar');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('__foo_bar__');\n\t     * // => 'Foo Bar'\n\t     */\n\t    var startCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));\n\t    });\n\t\n\t    /**\n\t     * Checks if `string` starts with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=0] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n\t     * @example\n\t     *\n\t     * _.startsWith('abc', 'a');\n\t     * // => true\n\t     *\n\t     * _.startsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.startsWith('abc', 'b', 1);\n\t     * // => true\n\t     */\n\t    function startsWith(string, target, position) {\n\t      string = baseToString(string);\n\t      position = position == null\n\t        ? 0\n\t        : nativeMin(position < 0 ? 0 : (+position || 0), string.length);\n\t\n\t      return string.lastIndexOf(target, position) == position;\n\t    }\n\t\n\t    /**\n\t     * Creates a compiled template function that can interpolate data properties\n\t     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n\t     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n\t     * properties may be accessed as free variables in the template. If a setting\n\t     * object is provided it takes precedence over `_.templateSettings` values.\n\t     *\n\t     * **Note:** In the development build `_.template` utilizes\n\t     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n\t     * for easier debugging.\n\t     *\n\t     * For more information on precompiling templates see\n\t     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n\t     *\n\t     * For more information on Chrome extension sandboxes see\n\t     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The template string.\n\t     * @param {Object} [options] The options object.\n\t     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n\t     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n\t     * @param {Object} [options.imports] An object to import into the template as free variables.\n\t     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n\t     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n\t     * @param {string} [options.variable] The data object variable name.\n\t     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n\t     * @returns {Function} Returns the compiled template function.\n\t     * @example\n\t     *\n\t     * // using the \"interpolate\" delimiter to create a compiled template\n\t     * var compiled = _.template('hello <%= user %>!');\n\t     * compiled({ 'user': 'fred' });\n\t     * // => 'hello fred!'\n\t     *\n\t     * // using the HTML \"escape\" delimiter to escape data property values\n\t     * var compiled = _.template('<b><%- value %></b>');\n\t     * compiled({ 'value': '<script>' });\n\t     * // => '<b>&lt;script&gt;</b>'\n\t     *\n\t     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n\t     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // using the internal `print` function in \"evaluate\" delimiters\n\t     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n\t     * compiled({ 'user': 'barney' });\n\t     * // => 'hello barney!'\n\t     *\n\t     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n\t     * var compiled = _.template('hello ${ user }!');\n\t     * compiled({ 'user': 'pebbles' });\n\t     * // => 'hello pebbles!'\n\t     *\n\t     * // using custom template delimiters\n\t     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n\t     * var compiled = _.template('hello {{ user }}!');\n\t     * compiled({ 'user': 'mustache' });\n\t     * // => 'hello mustache!'\n\t     *\n\t     * // using backslashes to treat delimiters as plain text\n\t     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n\t     * compiled({ 'value': 'ignored' });\n\t     * // => '<%- value %>'\n\t     *\n\t     * // using the `imports` option to import `jQuery` as `jq`\n\t     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n\t     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // using the `sourceURL` option to specify a custom sourceURL for the template\n\t     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n\t     * compiled(data);\n\t     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n\t     *\n\t     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n\t     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n\t     * compiled.source;\n\t     * // => function(data) {\n\t     * //   var __t, __p = '';\n\t     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n\t     * //   return __p;\n\t     * // }\n\t     *\n\t     * // using the `source` property to inline compiled templates for meaningful\n\t     * // line numbers in error messages and a stack trace\n\t     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n\t     *   var JST = {\\\n\t     *     \"main\": ' + _.template(mainText).source + '\\\n\t     *   };\\\n\t     * ');\n\t     */\n\t    function template(string, options, otherOptions) {\n\t      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n\t      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n\t      var settings = lodash.templateSettings;\n\t\n\t      if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n\t        options = otherOptions = undefined;\n\t      }\n\t      string = baseToString(string);\n\t      options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n\t\n\t      var imports = assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n\t          importsKeys = keys(imports),\n\t          importsValues = baseValues(imports, importsKeys);\n\t\n\t      var isEscaping,\n\t          isEvaluating,\n\t          index = 0,\n\t          interpolate = options.interpolate || reNoMatch,\n\t          source = \"__p += '\";\n\t\n\t      // Compile the regexp to match each delimiter.\n\t      var reDelimiters = RegExp(\n\t        (options.escape || reNoMatch).source + '|' +\n\t        interpolate.source + '|' +\n\t        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n\t        (options.evaluate || reNoMatch).source + '|$'\n\t      , 'g');\n\t\n\t      // Use a sourceURL for easier debugging.\n\t      var sourceURL = '//# sourceURL=' +\n\t        ('sourceURL' in options\n\t          ? options.sourceURL\n\t          : ('lodash.templateSources[' + (++templateCounter) + ']')\n\t        ) + '\\n';\n\t\n\t      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n\t        interpolateValue || (interpolateValue = esTemplateValue);\n\t\n\t        // Escape characters that can't be included in string literals.\n\t        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\t\n\t        // Replace delimiters with snippets.\n\t        if (escapeValue) {\n\t          isEscaping = true;\n\t          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n\t        }\n\t        if (evaluateValue) {\n\t          isEvaluating = true;\n\t          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n\t        }\n\t        if (interpolateValue) {\n\t          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n\t        }\n\t        index = offset + match.length;\n\t\n\t        // The JS engine embedded in Adobe products requires returning the `match`\n\t        // string in order to produce the correct `offset` value.\n\t        return match;\n\t      });\n\t\n\t      source += \"';\\n\";\n\t\n\t      // If `variable` is not specified wrap a with-statement around the generated\n\t      // code to add the data object to the top of the scope chain.\n\t      var variable = options.variable;\n\t      if (!variable) {\n\t        source = 'with (obj) {\\n' + source + '\\n}\\n';\n\t      }\n\t      // Cleanup code by stripping empty strings.\n\t      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n\t        .replace(reEmptyStringMiddle, '$1')\n\t        .replace(reEmptyStringTrailing, '$1;');\n\t\n\t      // Frame code as the function body.\n\t      source = 'function(' + (variable || 'obj') + ') {\\n' +\n\t        (variable\n\t          ? ''\n\t          : 'obj || (obj = {});\\n'\n\t        ) +\n\t        \"var __t, __p = ''\" +\n\t        (isEscaping\n\t           ? ', __e = _.escape'\n\t           : ''\n\t        ) +\n\t        (isEvaluating\n\t          ? ', __j = Array.prototype.join;\\n' +\n\t            \"function print() { __p += __j.call(arguments, '') }\\n\"\n\t          : ';\\n'\n\t        ) +\n\t        source +\n\t        'return __p\\n}';\n\t\n\t      var result = attempt(function() {\n\t        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n\t      });\n\t\n\t      // Provide the compiled function's source by its `toString` method or\n\t      // the `source` property as a convenience for inlining compiled templates.\n\t      result.source = source;\n\t      if (isError(result)) {\n\t        throw result;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Removes leading and trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trim('  abc  ');\n\t     * // => 'abc'\n\t     *\n\t     * _.trim('-_-abc-_-', '_-');\n\t     * // => 'abc'\n\t     *\n\t     * _.map(['  foo  ', '  bar  '], _.trim);\n\t     * // => ['foo', 'bar']\n\t     */\n\t    function trim(string, chars, guard) {\n\t      var value = string;\n\t      string = baseToString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n\t        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);\n\t      }\n\t      chars = (chars + '');\n\t      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);\n\t    }\n\t\n\t    /**\n\t     * Removes leading whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimLeft('  abc  ');\n\t     * // => 'abc  '\n\t     *\n\t     * _.trimLeft('-_-abc-_-', '_-');\n\t     * // => 'abc-_-'\n\t     */\n\t    function trimLeft(string, chars, guard) {\n\t      var value = string;\n\t      string = baseToString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n\t        return string.slice(trimmedLeftIndex(string));\n\t      }\n\t      return string.slice(charsLeftIndex(string, (chars + '')));\n\t    }\n\t\n\t    /**\n\t     * Removes trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimRight('  abc  ');\n\t     * // => '  abc'\n\t     *\n\t     * _.trimRight('-_-abc-_-', '_-');\n\t     * // => '-_-abc'\n\t     */\n\t    function trimRight(string, chars, guard) {\n\t      var value = string;\n\t      string = baseToString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n\t        return string.slice(0, trimmedRightIndex(string) + 1);\n\t      }\n\t      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);\n\t    }\n\t\n\t    /**\n\t     * Truncates `string` if it's longer than the given maximum string length.\n\t     * The last characters of the truncated string are replaced with the omission\n\t     * string which defaults to \"...\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to truncate.\n\t     * @param {Object|number} [options] The options object or maximum string length.\n\t     * @param {number} [options.length=30] The maximum string length.\n\t     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n\t     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {string} Returns the truncated string.\n\t     * @example\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino');\n\t     * // => 'hi-diddly-ho there, neighbo...'\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino', 24);\n\t     * // => 'hi-diddly-ho there, n...'\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': ' '\n\t     * });\n\t     * // => 'hi-diddly-ho there,...'\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': /,? +/\n\t     * });\n\t     * // => 'hi-diddly-ho there...'\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino', {\n\t     *   'omission': ' [...]'\n\t     * });\n\t     * // => 'hi-diddly-ho there, neig [...]'\n\t     */\n\t    function trunc(string, options, guard) {\n\t      if (guard && isIterateeCall(string, options, guard)) {\n\t        options = undefined;\n\t      }\n\t      var length = DEFAULT_TRUNC_LENGTH,\n\t          omission = DEFAULT_TRUNC_OMISSION;\n\t\n\t      if (options != null) {\n\t        if (isObject(options)) {\n\t          var separator = 'separator' in options ? options.separator : separator;\n\t          length = 'length' in options ? (+options.length || 0) : length;\n\t          omission = 'omission' in options ? baseToString(options.omission) : omission;\n\t        } else {\n\t          length = +options || 0;\n\t        }\n\t      }\n\t      string = baseToString(string);\n\t      if (length >= string.length) {\n\t        return string;\n\t      }\n\t      var end = length - omission.length;\n\t      if (end < 1) {\n\t        return omission;\n\t      }\n\t      var result = string.slice(0, end);\n\t      if (separator == null) {\n\t        return result + omission;\n\t      }\n\t      if (isRegExp(separator)) {\n\t        if (string.slice(end).search(separator)) {\n\t          var match,\n\t              newEnd,\n\t              substring = string.slice(0, end);\n\t\n\t          if (!separator.global) {\n\t            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n\t          }\n\t          separator.lastIndex = 0;\n\t          while ((match = separator.exec(substring))) {\n\t            newEnd = match.index;\n\t          }\n\t          result = result.slice(0, newEnd == null ? end : newEnd);\n\t        }\n\t      } else if (string.indexOf(separator, end) != end) {\n\t        var index = result.lastIndexOf(separator);\n\t        if (index > -1) {\n\t          result = result.slice(0, index);\n\t        }\n\t      }\n\t      return result + omission;\n\t    }\n\t\n\t    /**\n\t     * The inverse of `_.escape`; this method converts the HTML entities\n\t     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n\t     * corresponding characters.\n\t     *\n\t     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n\t     * entities use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to unescape.\n\t     * @returns {string} Returns the unescaped string.\n\t     * @example\n\t     *\n\t     * _.unescape('fred, barney, &amp; pebbles');\n\t     * // => 'fred, barney, & pebbles'\n\t     */\n\t    function unescape(string) {\n\t      string = baseToString(string);\n\t      return (string && reHasEscapedHtml.test(string))\n\t        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Splits `string` into an array of its words.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to inspect.\n\t     * @param {RegExp|string} [pattern] The pattern to match words.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the words of `string`.\n\t     * @example\n\t     *\n\t     * _.words('fred, barney, & pebbles');\n\t     * // => ['fred', 'barney', 'pebbles']\n\t     *\n\t     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n\t     * // => ['fred', 'barney', '&', 'pebbles']\n\t     */\n\t    function words(string, pattern, guard) {\n\t      if (guard && isIterateeCall(string, pattern, guard)) {\n\t        pattern = undefined;\n\t      }\n\t      string = baseToString(string);\n\t      return string.match(pattern || reWords) || [];\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Attempts to invoke `func`, returning either the result or the caught error\n\t     * object. Any additional arguments are provided to `func` when it is invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Function} func The function to attempt.\n\t     * @returns {*} Returns the `func` result or error object.\n\t     * @example\n\t     *\n\t     * // avoid throwing errors for invalid selectors\n\t     * var elements = _.attempt(function(selector) {\n\t     *   return document.querySelectorAll(selector);\n\t     * }, '>_>');\n\t     *\n\t     * if (_.isError(elements)) {\n\t     *   elements = [];\n\t     * }\n\t     */\n\t    var attempt = restParam(function(func, args) {\n\t      try {\n\t        return func.apply(undefined, args);\n\t      } catch(e) {\n\t        return isError(e) ? e : new Error(e);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n\t     * and arguments of the created function. If `func` is a property name the\n\t     * created callback returns the property value for a given element. If `func`\n\t     * is an object the created callback returns `true` for elements that contain\n\t     * the equivalent object properties, otherwise it returns `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias iteratee\n\t     * @category Utility\n\t     * @param {*} [func=_.identity] The value to convert to a callback.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Function} Returns the callback.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // wrap to create custom callback shorthands\n\t     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n\t     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n\t     *   if (!match) {\n\t     *     return callback(func, thisArg);\n\t     *   }\n\t     *   return function(object) {\n\t     *     return match[2] == 'gt'\n\t     *       ? object[match[1]] > match[3]\n\t     *       : object[match[1]] < match[3];\n\t     *   };\n\t     * });\n\t     *\n\t     * _.filter(users, 'age__gt36');\n\t     * // => [{ 'user': 'fred', 'age': 40 }]\n\t     */\n\t    function callback(func, thisArg, guard) {\n\t      if (guard && isIterateeCall(func, thisArg, guard)) {\n\t        thisArg = undefined;\n\t      }\n\t      return isObjectLike(func)\n\t        ? matches(func)\n\t        : baseCallback(func, thisArg);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {*} value The value to return from the new function.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var getter = _.constant(object);\n\t     *\n\t     * getter() === object;\n\t     * // => true\n\t     */\n\t    function constant(value) {\n\t      return function() {\n\t        return value;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * This method returns the first argument provided to it.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {*} value Any value.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * _.identity(object) === object;\n\t     * // => true\n\t     */\n\t    function identity(value) {\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a deep comparison between a given object\n\t     * and `source`, returning `true` if the given object has equivalent property\n\t     * values, else `false`.\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties. For comparing a single\n\t     * own or inherited property value see `_.matchesProperty`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n\t     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n\t     */\n\t    function matches(source) {\n\t      return baseMatches(baseClone(source, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that compares the property value of `path` on a given\n\t     * object to `value`.\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * _.find(users, _.matchesProperty('user', 'fred'));\n\t     * // => { 'user': 'fred' }\n\t     */\n\t    function matchesProperty(path, srcValue) {\n\t      return baseMatchesProperty(path, baseClone(srcValue, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `path` on a given object.\n\t     * Any additional arguments are provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n\t     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.method('a.b.c'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.invoke(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n\t     * // => [1, 2]\n\t     */\n\t    var method = restParam(function(path, args) {\n\t      return function(object) {\n\t        return invokePath(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.method`; this method creates a function that invokes\n\t     * the method at a given path on `object`. Any additional arguments are\n\t     * provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Object} object The object to query.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var array = _.times(3, _.constant),\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    var methodOf = restParam(function(object, args) {\n\t      return function(path) {\n\t        return invokePath(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * Adds all own enumerable function properties of a source object to the\n\t     * destination object. If `object` is a function then methods are added to\n\t     * its prototype as well.\n\t     *\n\t     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n\t     * avoid conflicts caused by modifying the original.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Function|Object} [object=lodash] The destination object.\n\t     * @param {Object} source The object of functions to add.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.chain=true] Specify whether the functions added\n\t     *  are chainable.\n\t     * @returns {Function|Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function vowels(string) {\n\t     *   return _.filter(string, function(v) {\n\t     *     return /[aeiou]/i.test(v);\n\t     *   });\n\t     * }\n\t     *\n\t     * _.mixin({ 'vowels': vowels });\n\t     * _.vowels('fred');\n\t     * // => ['e']\n\t     *\n\t     * _('fred').vowels().value();\n\t     * // => ['e']\n\t     *\n\t     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n\t     * _('fred').vowels();\n\t     * // => ['e']\n\t     */\n\t    function mixin(object, source, options) {\n\t      if (options == null) {\n\t        var isObj = isObject(source),\n\t            props = isObj ? keys(source) : undefined,\n\t            methodNames = (props && props.length) ? baseFunctions(source, props) : undefined;\n\t\n\t        if (!(methodNames ? methodNames.length : isObj)) {\n\t          methodNames = false;\n\t          options = source;\n\t          source = object;\n\t          object = this;\n\t        }\n\t      }\n\t      if (!methodNames) {\n\t        methodNames = baseFunctions(source, keys(source));\n\t      }\n\t      var chain = true,\n\t          index = -1,\n\t          isFunc = isFunction(object),\n\t          length = methodNames.length;\n\t\n\t      if (options === false) {\n\t        chain = false;\n\t      } else if (isObject(options) && 'chain' in options) {\n\t        chain = options.chain;\n\t      }\n\t      while (++index < length) {\n\t        var methodName = methodNames[index],\n\t            func = source[methodName];\n\t\n\t        object[methodName] = func;\n\t        if (isFunc) {\n\t          object.prototype[methodName] = (function(func) {\n\t            return function() {\n\t              var chainAll = this.__chain__;\n\t              if (chain || chainAll) {\n\t                var result = object(this.__wrapped__),\n\t                    actions = result.__actions__ = arrayCopy(this.__actions__);\n\t\n\t                actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n\t                result.__chain__ = chainAll;\n\t                return result;\n\t              }\n\t              return func.apply(object, arrayPush([this.value()], arguments));\n\t            };\n\t          }(func));\n\t        }\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Reverts the `_` variable to its previous value and returns a reference to\n\t     * the `lodash` function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @returns {Function} Returns the `lodash` function.\n\t     * @example\n\t     *\n\t     * var lodash = _.noConflict();\n\t     */\n\t    function noConflict() {\n\t      root._ = oldDash;\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * A no-operation function that returns `undefined` regardless of the\n\t     * arguments it receives.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * _.noop(object) === undefined;\n\t     * // => true\n\t     */\n\t    function noop() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns the property value at `path` on a\n\t     * given object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': { 'c': 2 } } },\n\t     *   { 'a': { 'b': { 'c': 1 } } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.property('a.b.c'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n\t     * // => [1, 2]\n\t     */\n\t    function property(path) {\n\t      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.property`; this method creates a function that returns\n\t     * the property value at a given path on `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Object} object The object to query.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var array = [0, 1, 2],\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    function propertyOf(object) {\n\t      return function(path) {\n\t        return baseGet(object, toPath(path), path + '');\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates an array of numbers (positive and/or negative) progressing from\n\t     * `start` up to, but not including, `end`. If `end` is not specified it is\n\t     * set to `start` with `start` then set to `0`. If `end` is less than `start`\n\t     * a zero-length range is created unless a negative `step` is specified.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the new array of numbers.\n\t     * @example\n\t     *\n\t     * _.range(4);\n\t     * // => [0, 1, 2, 3]\n\t     *\n\t     * _.range(1, 5);\n\t     * // => [1, 2, 3, 4]\n\t     *\n\t     * _.range(0, 20, 5);\n\t     * // => [0, 5, 10, 15]\n\t     *\n\t     * _.range(0, -4, -1);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.range(0);\n\t     * // => []\n\t     */\n\t    function range(start, end, step) {\n\t      if (step && isIterateeCall(start, end, step)) {\n\t        end = step = undefined;\n\t      }\n\t      start = +start || 0;\n\t      step = step == null ? 1 : (+step || 0);\n\t\n\t      if (end == null) {\n\t        end = start;\n\t        start = 0;\n\t      } else {\n\t        end = +end || 0;\n\t      }\n\t      // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.\n\t      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.\n\t      var index = -1,\n\t          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        result[index] = start;\n\t        start += step;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Invokes the iteratee function `n` times, returning an array of the results\n\t     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n\t     * one argument; (index).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {number} n The number of times to invoke `iteratee`.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n\t     * // => [3, 6, 4]\n\t     *\n\t     * _.times(3, function(n) {\n\t     *   mage.castSpell(n);\n\t     * });\n\t     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2`\n\t     *\n\t     * _.times(3, function(n) {\n\t     *   this.cast(n);\n\t     * }, mage);\n\t     * // => also invokes `mage.castSpell(n)` three times\n\t     */\n\t    function times(n, iteratee, thisArg) {\n\t      n = nativeFloor(n);\n\t\n\t      // Exit early to avoid a JSC JIT bug in Safari 8\n\t      // where `Array(0)` is treated as `Array(1)`.\n\t      if (n < 1 || !nativeIsFinite(n)) {\n\t        return [];\n\t      }\n\t      var index = -1,\n\t          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n\t\n\t      iteratee = bindCallback(iteratee, thisArg, 1);\n\t      while (++index < n) {\n\t        if (index < MAX_ARRAY_LENGTH) {\n\t          result[index] = iteratee(index);\n\t        } else {\n\t          iteratee(index);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {string} [prefix] The value to prefix the ID with.\n\t     * @returns {string} Returns the unique ID.\n\t     * @example\n\t     *\n\t     * _.uniqueId('contact_');\n\t     * // => 'contact_104'\n\t     *\n\t     * _.uniqueId();\n\t     * // => '105'\n\t     */\n\t    function uniqueId(prefix) {\n\t      var id = ++idCounter;\n\t      return baseToString(prefix) + id;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Adds two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} augend The first number to add.\n\t     * @param {number} addend The second number to add.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * _.add(6, 4);\n\t     * // => 10\n\t     */\n\t    function add(augend, addend) {\n\t      return (+augend || 0) + (+addend || 0);\n\t    }\n\t\n\t    /**\n\t     * Calculates `n` rounded up to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} n The number to round up.\n\t     * @param {number} [precision=0] The precision to round up to.\n\t     * @returns {number} Returns the rounded up number.\n\t     * @example\n\t     *\n\t     * _.ceil(4.006);\n\t     * // => 5\n\t     *\n\t     * _.ceil(6.004, 2);\n\t     * // => 6.01\n\t     *\n\t     * _.ceil(6040, -2);\n\t     * // => 6100\n\t     */\n\t    var ceil = createRound('ceil');\n\t\n\t    /**\n\t     * Calculates `n` rounded down to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} n The number to round down.\n\t     * @param {number} [precision=0] The precision to round down to.\n\t     * @returns {number} Returns the rounded down number.\n\t     * @example\n\t     *\n\t     * _.floor(4.006);\n\t     * // => 4\n\t     *\n\t     * _.floor(0.046, 2);\n\t     * // => 0.04\n\t     *\n\t     * _.floor(4060, -2);\n\t     * // => 4000\n\t     */\n\t    var floor = createRound('floor');\n\t\n\t    /**\n\t     * Gets the maximum value of `collection`. If `collection` is empty or falsey\n\t     * `-Infinity` is returned. If an iteratee function is provided it is invoked\n\t     * for each value in `collection` to generate the criterion by which the value\n\t     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, index, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * _.max([4, 2, 8, 6]);\n\t     * // => 8\n\t     *\n\t     * _.max([]);\n\t     * // => -Infinity\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * _.max(users, function(chr) {\n\t     *   return chr.age;\n\t     * });\n\t     * // => { 'user': 'fred', 'age': 40 }\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.max(users, 'age');\n\t     * // => { 'user': 'fred', 'age': 40 }\n\t     */\n\t    var max = createExtremum(gt, NEGATIVE_INFINITY);\n\t\n\t    /**\n\t     * Gets the minimum value of `collection`. If `collection` is empty or falsey\n\t     * `Infinity` is returned. If an iteratee function is provided it is invoked\n\t     * for each value in `collection` to generate the criterion by which the value\n\t     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, index, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * _.min([4, 2, 8, 6]);\n\t     * // => 2\n\t     *\n\t     * _.min([]);\n\t     * // => Infinity\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * _.min(users, function(chr) {\n\t     *   return chr.age;\n\t     * });\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.min(users, 'age');\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     */\n\t    var min = createExtremum(lt, POSITIVE_INFINITY);\n\t\n\t    /**\n\t     * Calculates `n` rounded to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} n The number to round.\n\t     * @param {number} [precision=0] The precision to round to.\n\t     * @returns {number} Returns the rounded number.\n\t     * @example\n\t     *\n\t     * _.round(4.006);\n\t     * // => 4\n\t     *\n\t     * _.round(4.006, 2);\n\t     * // => 4.01\n\t     *\n\t     * _.round(4060, -2);\n\t     * // => 4100\n\t     */\n\t    var round = createRound('round');\n\t\n\t    /**\n\t     * Gets the sum of the values in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * _.sum([4, 6]);\n\t     * // => 10\n\t     *\n\t     * _.sum({ 'a': 4, 'b': 6 });\n\t     * // => 10\n\t     *\n\t     * var objects = [\n\t     *   { 'n': 4 },\n\t     *   { 'n': 6 }\n\t     * ];\n\t     *\n\t     * _.sum(objects, function(object) {\n\t     *   return object.n;\n\t     * });\n\t     * // => 10\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.sum(objects, 'n');\n\t     * // => 10\n\t     */\n\t    function sum(collection, iteratee, thisArg) {\n\t      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n\t        iteratee = undefined;\n\t      }\n\t      iteratee = getCallback(iteratee, thisArg, 3);\n\t      return iteratee.length == 1\n\t        ? arraySum(isArray(collection) ? collection : toIterable(collection), iteratee)\n\t        : baseSum(collection, iteratee);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Ensure wrappers are instances of `baseLodash`.\n\t    lodash.prototype = baseLodash.prototype;\n\t\n\t    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LodashWrapper.prototype.constructor = LodashWrapper;\n\t\n\t    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LazyWrapper.prototype.constructor = LazyWrapper;\n\t\n\t    // Add functions to the `Map` cache.\n\t    MapCache.prototype['delete'] = mapDelete;\n\t    MapCache.prototype.get = mapGet;\n\t    MapCache.prototype.has = mapHas;\n\t    MapCache.prototype.set = mapSet;\n\t\n\t    // Add functions to the `Set` cache.\n\t    SetCache.prototype.push = cachePush;\n\t\n\t    // Assign cache to `_.memoize`.\n\t    memoize.Cache = MapCache;\n\t\n\t    // Add functions that return wrapped values when chaining.\n\t    lodash.after = after;\n\t    lodash.ary = ary;\n\t    lodash.assign = assign;\n\t    lodash.at = at;\n\t    lodash.before = before;\n\t    lodash.bind = bind;\n\t    lodash.bindAll = bindAll;\n\t    lodash.bindKey = bindKey;\n\t    lodash.callback = callback;\n\t    lodash.chain = chain;\n\t    lodash.chunk = chunk;\n\t    lodash.compact = compact;\n\t    lodash.constant = constant;\n\t    lodash.countBy = countBy;\n\t    lodash.create = create;\n\t    lodash.curry = curry;\n\t    lodash.curryRight = curryRight;\n\t    lodash.debounce = debounce;\n\t    lodash.defaults = defaults;\n\t    lodash.defaultsDeep = defaultsDeep;\n\t    lodash.defer = defer;\n\t    lodash.delay = delay;\n\t    lodash.difference = difference;\n\t    lodash.drop = drop;\n\t    lodash.dropRight = dropRight;\n\t    lodash.dropRightWhile = dropRightWhile;\n\t    lodash.dropWhile = dropWhile;\n\t    lodash.fill = fill;\n\t    lodash.filter = filter;\n\t    lodash.flatten = flatten;\n\t    lodash.flattenDeep = flattenDeep;\n\t    lodash.flow = flow;\n\t    lodash.flowRight = flowRight;\n\t    lodash.forEach = forEach;\n\t    lodash.forEachRight = forEachRight;\n\t    lodash.forIn = forIn;\n\t    lodash.forInRight = forInRight;\n\t    lodash.forOwn = forOwn;\n\t    lodash.forOwnRight = forOwnRight;\n\t    lodash.functions = functions;\n\t    lodash.groupBy = groupBy;\n\t    lodash.indexBy = indexBy;\n\t    lodash.initial = initial;\n\t    lodash.intersection = intersection;\n\t    lodash.invert = invert;\n\t    lodash.invoke = invoke;\n\t    lodash.keys = keys;\n\t    lodash.keysIn = keysIn;\n\t    lodash.map = map;\n\t    lodash.mapKeys = mapKeys;\n\t    lodash.mapValues = mapValues;\n\t    lodash.matches = matches;\n\t    lodash.matchesProperty = matchesProperty;\n\t    lodash.memoize = memoize;\n\t    lodash.merge = merge;\n\t    lodash.method = method;\n\t    lodash.methodOf = methodOf;\n\t    lodash.mixin = mixin;\n\t    lodash.modArgs = modArgs;\n\t    lodash.negate = negate;\n\t    lodash.omit = omit;\n\t    lodash.once = once;\n\t    lodash.pairs = pairs;\n\t    lodash.partial = partial;\n\t    lodash.partialRight = partialRight;\n\t    lodash.partition = partition;\n\t    lodash.pick = pick;\n\t    lodash.pluck = pluck;\n\t    lodash.property = property;\n\t    lodash.propertyOf = propertyOf;\n\t    lodash.pull = pull;\n\t    lodash.pullAt = pullAt;\n\t    lodash.range = range;\n\t    lodash.rearg = rearg;\n\t    lodash.reject = reject;\n\t    lodash.remove = remove;\n\t    lodash.rest = rest;\n\t    lodash.restParam = restParam;\n\t    lodash.set = set;\n\t    lodash.shuffle = shuffle;\n\t    lodash.slice = slice;\n\t    lodash.sortBy = sortBy;\n\t    lodash.sortByAll = sortByAll;\n\t    lodash.sortByOrder = sortByOrder;\n\t    lodash.spread = spread;\n\t    lodash.take = take;\n\t    lodash.takeRight = takeRight;\n\t    lodash.takeRightWhile = takeRightWhile;\n\t    lodash.takeWhile = takeWhile;\n\t    lodash.tap = tap;\n\t    lodash.throttle = throttle;\n\t    lodash.thru = thru;\n\t    lodash.times = times;\n\t    lodash.toArray = toArray;\n\t    lodash.toPlainObject = toPlainObject;\n\t    lodash.transform = transform;\n\t    lodash.union = union;\n\t    lodash.uniq = uniq;\n\t    lodash.unzip = unzip;\n\t    lodash.unzipWith = unzipWith;\n\t    lodash.values = values;\n\t    lodash.valuesIn = valuesIn;\n\t    lodash.where = where;\n\t    lodash.without = without;\n\t    lodash.wrap = wrap;\n\t    lodash.xor = xor;\n\t    lodash.zip = zip;\n\t    lodash.zipObject = zipObject;\n\t    lodash.zipWith = zipWith;\n\t\n\t    // Add aliases.\n\t    lodash.backflow = flowRight;\n\t    lodash.collect = map;\n\t    lodash.compose = flowRight;\n\t    lodash.each = forEach;\n\t    lodash.eachRight = forEachRight;\n\t    lodash.extend = assign;\n\t    lodash.iteratee = callback;\n\t    lodash.methods = functions;\n\t    lodash.object = zipObject;\n\t    lodash.select = filter;\n\t    lodash.tail = rest;\n\t    lodash.unique = uniq;\n\t\n\t    // Add functions to `lodash.prototype`.\n\t    mixin(lodash, lodash);\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add functions that return unwrapped values when chaining.\n\t    lodash.add = add;\n\t    lodash.attempt = attempt;\n\t    lodash.camelCase = camelCase;\n\t    lodash.capitalize = capitalize;\n\t    lodash.ceil = ceil;\n\t    lodash.clone = clone;\n\t    lodash.cloneDeep = cloneDeep;\n\t    lodash.deburr = deburr;\n\t    lodash.endsWith = endsWith;\n\t    lodash.escape = escape;\n\t    lodash.escapeRegExp = escapeRegExp;\n\t    lodash.every = every;\n\t    lodash.find = find;\n\t    lodash.findIndex = findIndex;\n\t    lodash.findKey = findKey;\n\t    lodash.findLast = findLast;\n\t    lodash.findLastIndex = findLastIndex;\n\t    lodash.findLastKey = findLastKey;\n\t    lodash.findWhere = findWhere;\n\t    lodash.first = first;\n\t    lodash.floor = floor;\n\t    lodash.get = get;\n\t    lodash.gt = gt;\n\t    lodash.gte = gte;\n\t    lodash.has = has;\n\t    lodash.identity = identity;\n\t    lodash.includes = includes;\n\t    lodash.indexOf = indexOf;\n\t    lodash.inRange = inRange;\n\t    lodash.isArguments = isArguments;\n\t    lodash.isArray = isArray;\n\t    lodash.isBoolean = isBoolean;\n\t    lodash.isDate = isDate;\n\t    lodash.isElement = isElement;\n\t    lodash.isEmpty = isEmpty;\n\t    lodash.isEqual = isEqual;\n\t    lodash.isError = isError;\n\t    lodash.isFinite = isFinite;\n\t    lodash.isFunction = isFunction;\n\t    lodash.isMatch = isMatch;\n\t    lodash.isNaN = isNaN;\n\t    lodash.isNative = isNative;\n\t    lodash.isNull = isNull;\n\t    lodash.isNumber = isNumber;\n\t    lodash.isObject = isObject;\n\t    lodash.isPlainObject = isPlainObject;\n\t    lodash.isRegExp = isRegExp;\n\t    lodash.isString = isString;\n\t    lodash.isTypedArray = isTypedArray;\n\t    lodash.isUndefined = isUndefined;\n\t    lodash.kebabCase = kebabCase;\n\t    lodash.last = last;\n\t    lodash.lastIndexOf = lastIndexOf;\n\t    lodash.lt = lt;\n\t    lodash.lte = lte;\n\t    lodash.max = max;\n\t    lodash.min = min;\n\t    lodash.noConflict = noConflict;\n\t    lodash.noop = noop;\n\t    lodash.now = now;\n\t    lodash.pad = pad;\n\t    lodash.padLeft = padLeft;\n\t    lodash.padRight = padRight;\n\t    lodash.parseInt = parseInt;\n\t    lodash.random = random;\n\t    lodash.reduce = reduce;\n\t    lodash.reduceRight = reduceRight;\n\t    lodash.repeat = repeat;\n\t    lodash.result = result;\n\t    lodash.round = round;\n\t    lodash.runInContext = runInContext;\n\t    lodash.size = size;\n\t    lodash.snakeCase = snakeCase;\n\t    lodash.some = some;\n\t    lodash.sortedIndex = sortedIndex;\n\t    lodash.sortedLastIndex = sortedLastIndex;\n\t    lodash.startCase = startCase;\n\t    lodash.startsWith = startsWith;\n\t    lodash.sum = sum;\n\t    lodash.template = template;\n\t    lodash.trim = trim;\n\t    lodash.trimLeft = trimLeft;\n\t    lodash.trimRight = trimRight;\n\t    lodash.trunc = trunc;\n\t    lodash.unescape = unescape;\n\t    lodash.uniqueId = uniqueId;\n\t    lodash.words = words;\n\t\n\t    // Add aliases.\n\t    lodash.all = every;\n\t    lodash.any = some;\n\t    lodash.contains = includes;\n\t    lodash.eq = isEqual;\n\t    lodash.detect = find;\n\t    lodash.foldl = reduce;\n\t    lodash.foldr = reduceRight;\n\t    lodash.head = first;\n\t    lodash.include = includes;\n\t    lodash.inject = reduce;\n\t\n\t    mixin(lodash, (function() {\n\t      var source = {};\n\t      baseForOwn(lodash, function(func, methodName) {\n\t        if (!lodash.prototype[methodName]) {\n\t          source[methodName] = func;\n\t        }\n\t      });\n\t      return source;\n\t    }()), false);\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add functions capable of returning wrapped and unwrapped values when chaining.\n\t    lodash.sample = sample;\n\t\n\t    lodash.prototype.sample = function(n) {\n\t      if (!this.__chain__ && n == null) {\n\t        return sample(this.value());\n\t      }\n\t      return this.thru(function(value) {\n\t        return sample(value, n);\n\t      });\n\t    };\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The semantic version number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type string\n\t     */\n\t    lodash.VERSION = VERSION;\n\t\n\t    // Assign default placeholders.\n\t    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n\t      lodash[methodName].placeholder = lodash;\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n\t    arrayEach(['drop', 'take'], function(methodName, index) {\n\t      LazyWrapper.prototype[methodName] = function(n) {\n\t        var filtered = this.__filtered__;\n\t        if (filtered && !index) {\n\t          return new LazyWrapper(this);\n\t        }\n\t        n = n == null ? 1 : nativeMax(nativeFloor(n) || 0, 0);\n\t\n\t        var result = this.clone();\n\t        if (filtered) {\n\t          result.__takeCount__ = nativeMin(result.__takeCount__, n);\n\t        } else {\n\t          result.__views__.push({ 'size': n, 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });\n\t        }\n\t        return result;\n\t      };\n\t\n\t      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n\t        return this.reverse()[methodName](n).reverse();\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods that accept an `iteratee` value.\n\t    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n\t      var type = index + 1,\n\t          isFilter = type != LAZY_MAP_FLAG;\n\t\n\t      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {\n\t        var result = this.clone();\n\t        result.__iteratees__.push({ 'iteratee': getCallback(iteratee, thisArg, 1), 'type': type });\n\t        result.__filtered__ = result.__filtered__ || isFilter;\n\t        return result;\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.first` and `_.last`.\n\t    arrayEach(['first', 'last'], function(methodName, index) {\n\t      var takeName = 'take' + (index ? 'Right' : '');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this[takeName](1).value()[0];\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n\t    arrayEach(['initial', 'rest'], function(methodName, index) {\n\t      var dropName = 'drop' + (index ? '' : 'Right');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.pluck` and `_.where`.\n\t    arrayEach(['pluck', 'where'], function(methodName, index) {\n\t      var operationName = index ? 'filter' : 'map',\n\t          createCallback = index ? baseMatches : property;\n\t\n\t      LazyWrapper.prototype[methodName] = function(value) {\n\t        return this[operationName](createCallback(value));\n\t      };\n\t    });\n\t\n\t    LazyWrapper.prototype.compact = function() {\n\t      return this.filter(identity);\n\t    };\n\t\n\t    LazyWrapper.prototype.reject = function(predicate, thisArg) {\n\t      predicate = getCallback(predicate, thisArg, 1);\n\t      return this.filter(function(value) {\n\t        return !predicate(value);\n\t      });\n\t    };\n\t\n\t    LazyWrapper.prototype.slice = function(start, end) {\n\t      start = start == null ? 0 : (+start || 0);\n\t\n\t      var result = this;\n\t      if (result.__filtered__ && (start > 0 || end < 0)) {\n\t        return new LazyWrapper(result);\n\t      }\n\t      if (start < 0) {\n\t        result = result.takeRight(-start);\n\t      } else if (start) {\n\t        result = result.drop(start);\n\t      }\n\t      if (end !== undefined) {\n\t        end = (+end || 0);\n\t        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n\t      }\n\t      return result;\n\t    };\n\t\n\t    LazyWrapper.prototype.takeRightWhile = function(predicate, thisArg) {\n\t      return this.reverse().takeWhile(predicate, thisArg).reverse();\n\t    };\n\t\n\t    LazyWrapper.prototype.toArray = function() {\n\t      return this.take(POSITIVE_INFINITY);\n\t    };\n\t\n\t    // Add `LazyWrapper` methods to `lodash.prototype`.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var checkIteratee = /^(?:filter|map|reject)|While$/.test(methodName),\n\t          retUnwrapped = /^(?:first|last)$/.test(methodName),\n\t          lodashFunc = lodash[retUnwrapped ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName];\n\t\n\t      if (!lodashFunc) {\n\t        return;\n\t      }\n\t      lodash.prototype[methodName] = function() {\n\t        var args = retUnwrapped ? [1] : arguments,\n\t            chainAll = this.__chain__,\n\t            value = this.__wrapped__,\n\t            isHybrid = !!this.__actions__.length,\n\t            isLazy = value instanceof LazyWrapper,\n\t            iteratee = args[0],\n\t            useLazy = isLazy || isArray(value);\n\t\n\t        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n\t          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n\t          isLazy = useLazy = false;\n\t        }\n\t        var interceptor = function(value) {\n\t          return (retUnwrapped && chainAll)\n\t            ? lodashFunc(value, 1)[0]\n\t            : lodashFunc.apply(undefined, arrayPush([value], args));\n\t        };\n\t\n\t        var action = { 'func': thru, 'args': [interceptor], 'thisArg': undefined },\n\t            onlyLazy = isLazy && !isHybrid;\n\t\n\t        if (retUnwrapped && !chainAll) {\n\t          if (onlyLazy) {\n\t            value = value.clone();\n\t            value.__actions__.push(action);\n\t            return func.call(value);\n\t          }\n\t          return lodashFunc.call(undefined, this.value())[0];\n\t        }\n\t        if (!retUnwrapped && useLazy) {\n\t          value = onlyLazy ? value : new LazyWrapper(this);\n\t          var result = func.apply(value, args);\n\t          result.__actions__.push(action);\n\t          return new LodashWrapper(result, chainAll);\n\t        }\n\t        return this.thru(interceptor);\n\t      };\n\t    });\n\t\n\t    // Add `Array` and `String` methods to `lodash.prototype`.\n\t    arrayEach(['join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'], function(methodName) {\n\t      var func = (/^(?:replace|split)$/.test(methodName) ? stringProto : arrayProto)[methodName],\n\t          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n\t          retUnwrapped = /^(?:join|pop|replace|shift)$/.test(methodName);\n\t\n\t      lodash.prototype[methodName] = function() {\n\t        var args = arguments;\n\t        if (retUnwrapped && !this.__chain__) {\n\t          return func.apply(this.value(), args);\n\t        }\n\t        return this[chainName](function(value) {\n\t          return func.apply(value, args);\n\t        });\n\t      };\n\t    });\n\t\n\t    // Map minified function names to their real names.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var lodashFunc = lodash[methodName];\n\t      if (lodashFunc) {\n\t        var key = lodashFunc.name,\n\t            names = realNames[key] || (realNames[key] = []);\n\t\n\t        names.push({ 'name': methodName, 'func': lodashFunc });\n\t      }\n\t    });\n\t\n\t    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{ 'name': 'wrapper', 'func': undefined }];\n\t\n\t    // Add functions to the lazy wrapper.\n\t    LazyWrapper.prototype.clone = lazyClone;\n\t    LazyWrapper.prototype.reverse = lazyReverse;\n\t    LazyWrapper.prototype.value = lazyValue;\n\t\n\t    // Add chaining functions to the `lodash` wrapper.\n\t    lodash.prototype.chain = wrapperChain;\n\t    lodash.prototype.commit = wrapperCommit;\n\t    lodash.prototype.concat = wrapperConcat;\n\t    lodash.prototype.plant = wrapperPlant;\n\t    lodash.prototype.reverse = wrapperReverse;\n\t    lodash.prototype.toString = wrapperToString;\n\t    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\t\n\t    // Add function aliases to the `lodash` wrapper.\n\t    lodash.prototype.collect = lodash.prototype.map;\n\t    lodash.prototype.head = lodash.prototype.first;\n\t    lodash.prototype.select = lodash.prototype.filter;\n\t    lodash.prototype.tail = lodash.prototype.rest;\n\t\n\t    return lodash;\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  // Export lodash.\n\t  var _ = runInContext();\n\t\n\t  // Some AMD build optimizers like r.js check for condition patterns like the following:\n\t  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n\t    // Expose lodash to the global object when an AMD loader is present to avoid\n\t    // errors in cases where lodash is loaded by a script tag and not intended\n\t    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n\t    // more details.\n\t    root._ = _;\n\t\n\t    // Define as an anonymous module so, through path mapping, it can be\n\t    // referenced as the \"underscore\" module.\n\t    define(function() {\n\t      return _;\n\t    });\n\t  }\n\t  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n\t  else if (freeExports && freeModule) {\n\t    // Export for Node.js or RingoJS.\n\t    if (moduleExports) {\n\t      (freeModule.exports = _)._ = _;\n\t    }\n\t    // Export for Rhino with CommonJS support.\n\t    else {\n\t      freeExports._ = _;\n\t    }\n\t  }\n\t  else {\n\t    // Export for a browser or Rhino.\n\t    root._ = _;\n\t  }\n\t}.call(this));\n\t\n\t}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\t},{}],54:[function(require,module,exports){\n\t/*\n\tCopyright (c) 2012-2014 Chris Pettitt\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE.\n\t*/\n\t\n\tmodule.exports = {\n\t  graphlib: require(\"./lib/graphlib\"),\n\t\n\t  layout: require(\"./lib/layout\"),\n\t  debug: require(\"./lib/debug\"),\n\t  util: {\n\t    time: require(\"./lib/util\").time,\n\t    notime: require(\"./lib/util\").notime\n\t  },\n\t  version: require(\"./lib/version\")\n\t};\n\t\n\t},{\"./lib/debug\":59,\"./lib/graphlib\":60,\"./lib/layout\":62,\"./lib/util\":82,\"./lib/version\":83}],55:[function(require,module,exports){\n\t\"use strict\";\n\t\n\tvar _ = require(\"./lodash\"),\n\t    greedyFAS = require(\"./greedy-fas\");\n\t\n\tmodule.exports = {\n\t  run: run,\n\t  undo: undo\n\t};\n\t\n\tfunction run(g) {\n\t  var fas = (g.graph().acyclicer === \"greedy\"\n\t                ? greedyFAS(g, weightFn(g))\n\t                : dfsFAS(g));\n\t  _.each(fas, function(e) {\n\t    var label = g.edge(e);\n\t    g.removeEdge(e);\n\t    label.forwardName = e.name;\n\t    label.reversed = true;\n\t    g.setEdge(e.w, e.v, label, _.uniqueId(\"rev\"));\n\t  });\n\t\n\t  function weightFn(g) {\n\t    return function(e) {\n\t      return g.edge(e).weight;\n\t    };\n\t  }\n\t}\n\t\n\tfunction dfsFAS(g) {\n\t  var fas = [],\n\t      stack = {},\n\t      visited = {};\n\t\n\t  function dfs(v) {\n\t    if (_.has(visited, v)) {\n\t      return;\n\t    }\n\t    visited[v] = true;\n\t    stack[v] = true;\n\t    _.each(g.outEdges(v), function(e) {\n\t      if (_.has(stack, e.w)) {\n\t        fas.push(e);\n\t      } else {\n\t        dfs(e.w);\n\t      }\n\t    });\n\t    delete stack[v];\n\t  }\n\t\n\t  _.each(g.nodes(), dfs);\n\t  return fas;\n\t}\n\t\n\tfunction undo(g) {\n\t  _.each(g.edges(), function(e) {\n\t    var label = g.edge(e);\n\t    if (label.reversed) {\n\t      g.removeEdge(e);\n\t\n\t      var forwardName = label.forwardName;\n\t      delete label.reversed;\n\t      delete label.forwardName;\n\t      g.setEdge(e.w, e.v, label, forwardName);\n\t    }\n\t  });\n\t}\n\t\n\t},{\"./greedy-fas\":61,\"./lodash\":63}],56:[function(require,module,exports){\n\tvar _ = require(\"./lodash\"),\n\t    util = require(\"./util\");\n\t\n\tmodule.exports = addBorderSegments;\n\t\n\tfunction addBorderSegments(g) {\n\t  function dfs(v) {\n\t    var children = g.children(v),\n\t        node = g.node(v);\n\t    if (children.length) {\n\t      _.each(children, dfs);\n\t    }\n\t\n\t    if (_.has(node, \"minRank\")) {\n\t      node.borderLeft = [];\n\t      node.borderRight = [];\n\t      for (var rank = node.minRank, maxRank = node.maxRank + 1;\n\t           rank < maxRank;\n\t           ++rank) {\n\t        addBorderNode(g, \"borderLeft\", \"_bl\", v, node, rank);\n\t        addBorderNode(g, \"borderRight\", \"_br\", v, node, rank);\n\t      }\n\t    }\n\t  }\n\t\n\t  _.each(g.children(), dfs);\n\t}\n\t\n\tfunction addBorderNode(g, prop, prefix, sg, sgNode, rank) {\n\t  var label = { width: 0, height: 0, rank: rank, borderType: prop },\n\t      prev = sgNode[prop][rank - 1],\n\t      curr = util.addDummyNode(g, \"border\", label, prefix);\n\t  sgNode[prop][rank] = curr;\n\t  g.setParent(curr, sg);\n\t  if (prev) {\n\t    g.setEdge(prev, curr, { weight: 1 });\n\t  }\n\t}\n\t\n\t},{\"./lodash\":63,\"./util\":82}],57:[function(require,module,exports){\n\t\"use strict\";\n\t\n\tvar _ = require(\"./lodash\");\n\t\n\tmodule.exports = {\n\t  adjust: adjust,\n\t  undo: undo\n\t};\n\t\n\tfunction adjust(g) {\n\t  var rankDir = g.graph().rankdir.toLowerCase();\n\t  if (rankDir === \"lr\" || rankDir === \"rl\") {\n\t    swapWidthHeight(g);\n\t  }\n\t}\n\t\n\tfunction undo(g) {\n\t  var rankDir = g.graph().rankdir.toLowerCase();\n\t  if (rankDir === \"bt\" || rankDir === \"rl\") {\n\t    reverseY(g);\n\t  }\n\t\n\t  if (rankDir === \"lr\" || rankDir === \"rl\") {\n\t    swapXY(g);\n\t    swapWidthHeight(g);\n\t  }\n\t}\n\t\n\tfunction swapWidthHeight(g) {\n\t  _.each(g.nodes(), function(v) { swapWidthHeightOne(g.node(v)); });\n\t  _.each(g.edges(), function(e) { swapWidthHeightOne(g.edge(e)); });\n\t}\n\t\n\tfunction swapWidthHeightOne(attrs) {\n\t  var w = attrs.width;\n\t  attrs.width = attrs.height;\n\t  attrs.height = w;\n\t}\n\t\n\tfunction reverseY(g) {\n\t  _.each(g.nodes(), function(v) { reverseYOne(g.node(v)); });\n\t\n\t  _.each(g.edges(), function(e) {\n\t    var edge = g.edge(e);\n\t    _.each(edge.points, reverseYOne);\n\t    if (_.has(edge, \"y\")) {\n\t      reverseYOne(edge);\n\t    }\n\t  });\n\t}\n\t\n\tfunction reverseYOne(attrs) {\n\t  attrs.y = -attrs.y;\n\t}\n\t\n\tfunction swapXY(g) {\n\t  _.each(g.nodes(), function(v) { swapXYOne(g.node(v)); });\n\t\n\t  _.each(g.edges(), function(e) {\n\t    var edge = g.edge(e);\n\t    _.each(edge.points, swapXYOne);\n\t    if (_.has(edge, \"x\")) {\n\t      swapXYOne(edge);\n\t    }\n\t  });\n\t}\n\t\n\tfunction swapXYOne(attrs) {\n\t  var x = attrs.x;\n\t  attrs.x = attrs.y;\n\t  attrs.y = x;\n\t}\n\t\n\t},{\"./lodash\":63}],58:[function(require,module,exports){\n\t/*\n\t * Simple doubly linked list implementation derived from Cormen, et al.,\n\t * \"Introduction to Algorithms\".\n\t */\n\t\n\tmodule.exports = List;\n\t\n\tfunction List() {\n\t  var sentinel = {};\n\t  sentinel._next = sentinel._prev = sentinel;\n\t  this._sentinel = sentinel;\n\t}\n\t\n\tList.prototype.dequeue = function() {\n\t  var sentinel = this._sentinel,\n\t      entry = sentinel._prev;\n\t  if (entry !== sentinel) {\n\t    unlink(entry);\n\t    return entry;\n\t  }\n\t};\n\t\n\tList.prototype.enqueue = function(entry) {\n\t  var sentinel = this._sentinel;\n\t  if (entry._prev && entry._next) {\n\t    unlink(entry);\n\t  }\n\t  entry._next = sentinel._next;\n\t  sentinel._next._prev = entry;\n\t  sentinel._next = entry;\n\t  entry._prev = sentinel;\n\t};\n\t\n\tList.prototype.toString = function() {\n\t  var strs = [],\n\t      sentinel = this._sentinel,\n\t      curr = sentinel._prev;\n\t  while (curr !== sentinel) {\n\t    strs.push(JSON.stringify(curr, filterOutLinks));\n\t    curr = curr._prev;\n\t  }\n\t  return \"[\" + strs.join(\", \") + \"]\";\n\t};\n\t\n\tfunction unlink(entry) {\n\t  entry._prev._next = entry._next;\n\t  entry._next._prev = entry._prev;\n\t  delete entry._next;\n\t  delete entry._prev;\n\t}\n\t\n\tfunction filterOutLinks(k, v) {\n\t  if (k !== \"_next\" && k !== \"_prev\") {\n\t    return v;\n\t  }\n\t}\n\t\n\t},{}],59:[function(require,module,exports){\n\tvar _ = require(\"./lodash\"),\n\t    util = require(\"./util\"),\n\t    Graph = require(\"./graphlib\").Graph;\n\t\n\tmodule.exports = {\n\t  debugOrdering: debugOrdering\n\t};\n\t\n\t/* istanbul ignore next */\n\tfunction debugOrdering(g) {\n\t  var layerMatrix = util.buildLayerMatrix(g);\n\t\n\t  var h = new Graph({ compound: true, multigraph: true }).setGraph({});\n\t\n\t  _.each(g.nodes(), function(v) {\n\t    h.setNode(v, { label: v });\n\t    h.setParent(v, \"layer\" + g.node(v).rank);\n\t  });\n\t\n\t  _.each(g.edges(), function(e) {\n\t    h.setEdge(e.v, e.w, {}, e.name);\n\t  });\n\t\n\t  _.each(layerMatrix, function(layer, i) {\n\t    var layerV = \"layer\" + i;\n\t    h.setNode(layerV, { rank: \"same\" });\n\t    _.reduce(layer, function(u, v) {\n\t      h.setEdge(u, v, { style: \"invis\" });\n\t      return v;\n\t    });\n\t  });\n\t\n\t  return h;\n\t}\n\t\n\t},{\"./graphlib\":60,\"./lodash\":63,\"./util\":82}],60:[function(require,module,exports){\n\t/* global window */\n\t\n\tvar graphlib;\n\t\n\tif (typeof require === \"function\") {\n\t  try {\n\t    graphlib = require(\"graphlib\");\n\t  } catch (e) {}\n\t}\n\t\n\tif (!graphlib) {\n\t  graphlib = window.graphlib;\n\t}\n\t\n\tmodule.exports = graphlib;\n\t\n\t},{\"graphlib\":84}],61:[function(require,module,exports){\n\tvar _ = require(\"./lodash\"),\n\t    Graph = require(\"./graphlib\").Graph,\n\t    List = require(\"./data/list\");\n\t\n\t/*\n\t * A greedy heuristic for finding a feedback arc set for a graph. A feedback\n\t * arc set is a set of edges that can be removed to make a graph acyclic.\n\t * The algorithm comes from: P. Eades, X. Lin, and W. F. Smyth, \"A fast and\n\t * effective heuristic for the feedback arc set problem.\" This implementation\n\t * adjusts that from the paper to allow for weighted edges.\n\t */\n\tmodule.exports = greedyFAS;\n\t\n\tvar DEFAULT_WEIGHT_FN = _.constant(1);\n\t\n\tfunction greedyFAS(g, weightFn) {\n\t  if (g.nodeCount() <= 1) {\n\t    return [];\n\t  }\n\t  var state = buildState(g, weightFn || DEFAULT_WEIGHT_FN);\n\t  var results = doGreedyFAS(state.graph, state.buckets, state.zeroIdx);\n\t\n\t  // Expand multi-edges\n\t  return _.flatten(_.map(results, function(e) {\n\t    return g.outEdges(e.v, e.w);\n\t  }), true);\n\t}\n\t\n\tfunction doGreedyFAS(g, buckets, zeroIdx) {\n\t  var results = [],\n\t      sources = buckets[buckets.length - 1],\n\t      sinks = buckets[0];\n\t\n\t  var entry;\n\t  while (g.nodeCount()) {\n\t    while ((entry = sinks.dequeue()))   { removeNode(g, buckets, zeroIdx, entry); }\n\t    while ((entry = sources.dequeue())) { removeNode(g, buckets, zeroIdx, entry); }\n\t    if (g.nodeCount()) {\n\t      for (var i = buckets.length - 2; i > 0; --i) {\n\t        entry = buckets[i].dequeue();\n\t        if (entry) {\n\t          results = results.concat(removeNode(g, buckets, zeroIdx, entry, true));\n\t          break;\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return results;\n\t}\n\t\n\tfunction removeNode(g, buckets, zeroIdx, entry, collectPredecessors) {\n\t  var results = collectPredecessors ? [] : undefined;\n\t\n\t  _.each(g.inEdges(entry.v), function(edge) {\n\t    var weight = g.edge(edge),\n\t        uEntry = g.node(edge.v);\n\t\n\t    if (collectPredecessors) {\n\t      results.push({ v: edge.v, w: edge.w });\n\t    }\n\t\n\t    uEntry.out -= weight;\n\t    assignBucket(buckets, zeroIdx, uEntry);\n\t  });\n\t\n\t  _.each(g.outEdges(entry.v), function(edge) {\n\t    var weight = g.edge(edge),\n\t        w = edge.w,\n\t        wEntry = g.node(w);\n\t    wEntry[\"in\"] -= weight;\n\t    assignBucket(buckets, zeroIdx, wEntry);\n\t  });\n\t\n\t  g.removeNode(entry.v);\n\t\n\t  return results;\n\t}\n\t\n\tfunction buildState(g, weightFn) {\n\t  var fasGraph = new Graph(),\n\t      maxIn = 0,\n\t      maxOut = 0;\n\t\n\t  _.each(g.nodes(), function(v) {\n\t    fasGraph.setNode(v, { v: v, \"in\": 0, out: 0 });\n\t  });\n\t\n\t  // Aggregate weights on nodes, but also sum the weights across multi-edges\n\t  // into a single edge for the fasGraph.\n\t  _.each(g.edges(), function(e) {\n\t    var prevWeight = fasGraph.edge(e.v, e.w) || 0,\n\t        weight = weightFn(e),\n\t        edgeWeight = prevWeight + weight;\n\t    fasGraph.setEdge(e.v, e.w, edgeWeight);\n\t    maxOut = Math.max(maxOut, fasGraph.node(e.v).out += weight);\n\t    maxIn  = Math.max(maxIn,  fasGraph.node(e.w)[\"in\"]  += weight);\n\t  });\n\t\n\t  var buckets = _.range(maxOut + maxIn + 3).map(function() { return new List(); });\n\t  var zeroIdx = maxIn + 1;\n\t\n\t  _.each(fasGraph.nodes(), function(v) {\n\t    assignBucket(buckets, zeroIdx, fasGraph.node(v));\n\t  });\n\t\n\t  return { graph: fasGraph, buckets: buckets, zeroIdx: zeroIdx };\n\t}\n\t\n\tfunction assignBucket(buckets, zeroIdx, entry) {\n\t  if (!entry.out) {\n\t    buckets[0].enqueue(entry);\n\t  } else if (!entry[\"in\"]) {\n\t    buckets[buckets.length - 1].enqueue(entry);\n\t  } else {\n\t    buckets[entry.out - entry[\"in\"] + zeroIdx].enqueue(entry);\n\t  }\n\t}\n\t\n\t},{\"./data/list\":58,\"./graphlib\":60,\"./lodash\":63}],62:[function(require,module,exports){\n\t\"use strict\";\n\t\n\tvar _ = require(\"./lodash\"),\n\t    acyclic = require(\"./acyclic\"),\n\t    normalize = require(\"./normalize\"),\n\t    rank = require(\"./rank\"),\n\t    normalizeRanks = require(\"./util\").normalizeRanks,\n\t    parentDummyChains = require(\"./parent-dummy-chains\"),\n\t    removeEmptyRanks = require(\"./util\").removeEmptyRanks,\n\t    nestingGraph = require(\"./nesting-graph\"),\n\t    addBorderSegments = require(\"./add-border-segments\"),\n\t    coordinateSystem = require(\"./coordinate-system\"),\n\t    order = require(\"./order\"),\n\t    position = require(\"./position\"),\n\t    util = require(\"./util\"),\n\t    Graph = require(\"./graphlib\").Graph;\n\t\n\tmodule.exports = layout;\n\t\n\tfunction layout(g, opts) {\n\t  var time = opts && opts.debugTiming ? util.time : util.notime;\n\t  time(\"layout\", function() {\n\t    var layoutGraph = time(\"  buildLayoutGraph\",\n\t                               function() { return buildLayoutGraph(g); });\n\t    time(\"  runLayout\",        function() { runLayout(layoutGraph, time); });\n\t    time(\"  updateInputGraph\", function() { updateInputGraph(g, layoutGraph); });\n\t  });\n\t}\n\t\n\tfunction runLayout(g, time) {\n\t  time(\"    makeSpaceForEdgeLabels\", function() { makeSpaceForEdgeLabels(g); });\n\t  time(\"    removeSelfEdges\",        function() { removeSelfEdges(g); });\n\t  time(\"    acyclic\",                function() { acyclic.run(g); });\n\t  time(\"    nestingGraph.run\",       function() { nestingGraph.run(g); });\n\t  time(\"    rank\",                   function() { rank(util.asNonCompoundGraph(g)); });\n\t  time(\"    injectEdgeLabelProxies\", function() { injectEdgeLabelProxies(g); });\n\t  time(\"    removeEmptyRanks\",       function() { removeEmptyRanks(g); });\n\t  time(\"    nestingGraph.cleanup\",   function() { nestingGraph.cleanup(g); });\n\t  time(\"    normalizeRanks\",         function() { normalizeRanks(g); });\n\t  time(\"    assignRankMinMax\",       function() { assignRankMinMax(g); });\n\t  time(\"    removeEdgeLabelProxies\", function() { removeEdgeLabelProxies(g); });\n\t  time(\"    normalize.run\",          function() { normalize.run(g); });\n\t  time(\"    parentDummyChains\",      function() { parentDummyChains(g); });\n\t  time(\"    addBorderSegments\",      function() { addBorderSegments(g); });\n\t  time(\"    order\",                  function() { order(g); });\n\t  time(\"    insertSelfEdges\",        function() { insertSelfEdges(g); });\n\t  time(\"    adjustCoordinateSystem\", function() { coordinateSystem.adjust(g); });\n\t  time(\"    position\",               function() { position(g); });\n\t  time(\"    positionSelfEdges\",      function() { positionSelfEdges(g); });\n\t  time(\"    removeBorderNodes\",      function() { removeBorderNodes(g); });\n\t  time(\"    normalize.undo\",         function() { normalize.undo(g); });\n\t  time(\"    fixupEdgeLabelCoords\",   function() { fixupEdgeLabelCoords(g); });\n\t  time(\"    undoCoordinateSystem\",   function() { coordinateSystem.undo(g); });\n\t  time(\"    translateGraph\",         function() { translateGraph(g); });\n\t  time(\"    assignNodeIntersects\",   function() { assignNodeIntersects(g); });\n\t  time(\"    reversePoints\",          function() { reversePointsForReversedEdges(g); });\n\t  time(\"    acyclic.undo\",           function() { acyclic.undo(g); });\n\t}\n\t\n\t/*\n\t * Copies final layout information from the layout graph back to the input\n\t * graph. This process only copies whitelisted attributes from the layout graph\n\t * to the input graph, so it serves as a good place to determine what\n\t * attributes can influence layout.\n\t */\n\tfunction updateInputGraph(inputGraph, layoutGraph) {\n\t  _.each(inputGraph.nodes(), function(v) {\n\t    var inputLabel = inputGraph.node(v),\n\t        layoutLabel = layoutGraph.node(v);\n\t\n\t    if (inputLabel) {\n\t      inputLabel.x = layoutLabel.x;\n\t      inputLabel.y = layoutLabel.y;\n\t\n\t      if (layoutGraph.children(v).length) {\n\t        inputLabel.width = layoutLabel.width;\n\t        inputLabel.height = layoutLabel.height;\n\t      }\n\t    }\n\t  });\n\t\n\t  _.each(inputGraph.edges(), function(e) {\n\t    var inputLabel = inputGraph.edge(e),\n\t        layoutLabel = layoutGraph.edge(e);\n\t\n\t    inputLabel.points = layoutLabel.points;\n\t    if (_.has(layoutLabel, \"x\")) {\n\t      inputLabel.x = layoutLabel.x;\n\t      inputLabel.y = layoutLabel.y;\n\t    }\n\t  });\n\t\n\t  inputGraph.graph().width = layoutGraph.graph().width;\n\t  inputGraph.graph().height = layoutGraph.graph().height;\n\t}\n\t\n\tvar graphNumAttrs = [\"nodesep\", \"edgesep\", \"ranksep\", \"marginx\", \"marginy\"],\n\t    graphDefaults = { ranksep: 50, edgesep: 20, nodesep: 50, rankdir: \"tb\" },\n\t    graphAttrs = [\"acyclicer\", \"ranker\", \"rankdir\", \"align\"],\n\t    nodeNumAttrs = [\"width\", \"height\"],\n\t    nodeDefaults = { width: 0, height: 0 },\n\t    edgeNumAttrs = [\"minlen\", \"weight\", \"width\", \"height\", \"labeloffset\"],\n\t    edgeDefaults = {\n\t      minlen: 1, weight: 1, width: 0, height: 0,\n\t      labeloffset: 10, labelpos: \"r\"\n\t    },\n\t    edgeAttrs = [\"labelpos\"];\n\t\n\t/*\n\t * Constructs a new graph from the input graph, which can be used for layout.\n\t * This process copies only whitelisted attributes from the input graph to the\n\t * layout graph. Thus this function serves as a good place to determine what\n\t * attributes can influence layout.\n\t */\n\tfunction buildLayoutGraph(inputGraph) {\n\t  var g = new Graph({ multigraph: true, compound: true }),\n\t      graph = canonicalize(inputGraph.graph());\n\t\n\t  g.setGraph(_.merge({},\n\t    graphDefaults,\n\t    selectNumberAttrs(graph, graphNumAttrs),\n\t    _.pick(graph, graphAttrs)));\n\t\n\t  _.each(inputGraph.nodes(), function(v) {\n\t    var node = canonicalize(inputGraph.node(v));\n\t    g.setNode(v, _.defaults(selectNumberAttrs(node, nodeNumAttrs), nodeDefaults));\n\t    g.setParent(v, inputGraph.parent(v));\n\t  });\n\t\n\t  _.each(inputGraph.edges(), function(e) {\n\t    var edge = canonicalize(inputGraph.edge(e));\n\t    g.setEdge(e, _.merge({},\n\t      edgeDefaults,\n\t      selectNumberAttrs(edge, edgeNumAttrs),\n\t      _.pick(edge, edgeAttrs)));\n\t  });\n\t\n\t  return g;\n\t}\n\t\n\t/*\n\t * This idea comes from the Gansner paper: to account for edge labels in our\n\t * layout we split each rank in half by doubling minlen and halving ranksep.\n\t * Then we can place labels at these mid-points between nodes.\n\t *\n\t * We also add some minimal padding to the width to push the label for the edge\n\t * away from the edge itself a bit.\n\t */\n\tfunction makeSpaceForEdgeLabels(g) {\n\t  var graph = g.graph();\n\t  graph.ranksep /= 2;\n\t  _.each(g.edges(), function(e) {\n\t    var edge = g.edge(e);\n\t    edge.minlen *= 2;\n\t    if (edge.labelpos.toLowerCase() !== \"c\") {\n\t      if (graph.rankdir === \"TB\" || graph.rankdir === \"BT\") {\n\t        edge.width += edge.labeloffset;\n\t      } else {\n\t        edge.height += edge.labeloffset;\n\t      }\n\t    }\n\t  });\n\t}\n\t\n\t/*\n\t * Creates temporary dummy nodes that capture the rank in which each edge's\n\t * label is going to, if it has one of non-zero width and height. We do this\n\t * so that we can safely remove empty ranks while preserving balance for the\n\t * label's position.\n\t */\n\tfunction injectEdgeLabelProxies(g) {\n\t  _.each(g.edges(), function(e) {\n\t    var edge = g.edge(e);\n\t    if (edge.width && edge.height) {\n\t      var v = g.node(e.v),\n\t          w = g.node(e.w),\n\t          label = { rank: (w.rank - v.rank) / 2 + v.rank, e: e };\n\t      util.addDummyNode(g, \"edge-proxy\", label, \"_ep\");\n\t    }\n\t  });\n\t}\n\t\n\tfunction assignRankMinMax(g) {\n\t  var maxRank = 0;\n\t  _.each(g.nodes(), function(v) {\n\t    var node = g.node(v);\n\t    if (node.borderTop) {\n\t      node.minRank = g.node(node.borderTop).rank;\n\t      node.maxRank = g.node(node.borderBottom).rank;\n\t      maxRank = _.max(maxRank, node.maxRank);\n\t    }\n\t  });\n\t  g.graph().maxRank = maxRank;\n\t}\n\t\n\tfunction removeEdgeLabelProxies(g) {\n\t  _.each(g.nodes(), function(v) {\n\t    var node = g.node(v);\n\t    if (node.dummy === \"edge-proxy\") {\n\t      g.edge(node.e).labelRank = node.rank;\n\t      g.removeNode(v);\n\t    }\n\t  });\n\t}\n\t\n\tfunction translateGraph(g) {\n\t  var minX = Number.POSITIVE_INFINITY,\n\t      maxX = 0,\n\t      minY = Number.POSITIVE_INFINITY,\n\t      maxY = 0,\n\t      graphLabel = g.graph(),\n\t      marginX = graphLabel.marginx || 0,\n\t      marginY = graphLabel.marginy || 0;\n\t\n\t  function getExtremes(attrs) {\n\t    var x = attrs.x,\n\t        y = attrs.y,\n\t        w = attrs.width,\n\t        h = attrs.height;\n\t    minX = Math.min(minX, x - w / 2);\n\t    maxX = Math.max(maxX, x + w / 2);\n\t    minY = Math.min(minY, y - h / 2);\n\t    maxY = Math.max(maxY, y + h / 2);\n\t  }\n\t\n\t  _.each(g.nodes(), function(v) { getExtremes(g.node(v)); });\n\t  _.each(g.edges(), function(e) {\n\t    var edge = g.edge(e);\n\t    if (_.has(edge, \"x\")) {\n\t      getExtremes(edge);\n\t    }\n\t  });\n\t\n\t  minX -= marginX;\n\t  minY -= marginY;\n\t\n\t  _.each(g.nodes(), function(v) {\n\t    var node = g.node(v);\n\t    node.x -= minX;\n\t    node.y -= minY;\n\t  });\n\t\n\t  _.each(g.edges(), function(e) {\n\t    var edge = g.edge(e);\n\t    _.each(edge.points, function(p) {\n\t      p.x -= minX;\n\t      p.y -= minY;\n\t    });\n\t    if (_.has(edge, \"x\")) { edge.x -= minX; }\n\t    if (_.has(edge, \"y\")) { edge.y -= minY; }\n\t  });\n\t\n\t  graphLabel.width = maxX - minX + marginX;\n\t  graphLabel.height = maxY - minY + marginY;\n\t}\n\t\n\tfunction assignNodeIntersects(g) {\n\t  _.each(g.edges(), function(e) {\n\t    var edge = g.edge(e),\n\t        nodeV = g.node(e.v),\n\t        nodeW = g.node(e.w),\n\t        p1, p2;\n\t    if (!edge.points) {\n\t      edge.points = [];\n\t      p1 = nodeW;\n\t      p2 = nodeV;\n\t    } else {\n\t      p1 = edge.points[0];\n\t      p2 = edge.points[edge.points.length - 1];\n\t    }\n\t    edge.points.unshift(util.intersectRect(nodeV, p1));\n\t    edge.points.push(util.intersectRect(nodeW, p2));\n\t  });\n\t}\n\t\n\tfunction fixupEdgeLabelCoords(g) {\n\t  _.each(g.edges(), function(e) {\n\t    var edge = g.edge(e);\n\t    if (_.has(edge, \"x\")) {\n\t      if (edge.labelpos === \"l\" || edge.labelpos === \"r\") {\n\t        edge.width -= edge.labeloffset;\n\t      }\n\t      switch (edge.labelpos) {\n\t        case \"l\": edge.x -= edge.width / 2 + edge.labeloffset; break;\n\t        case \"r\": edge.x += edge.width / 2 + edge.labeloffset; break;\n\t      }\n\t    }\n\t  });\n\t}\n\t\n\tfunction reversePointsForReversedEdges(g) {\n\t  _.each(g.edges(), function(e) {\n\t    var edge = g.edge(e);\n\t    if (edge.reversed) {\n\t      edge.points.reverse();\n\t    }\n\t  });\n\t}\n\t\n\tfunction removeBorderNodes(g) {\n\t  _.each(g.nodes(), function(v) {\n\t    if (g.children(v).length) {\n\t      var node = g.node(v),\n\t          t = g.node(node.borderTop),\n\t          b = g.node(node.borderBottom),\n\t          l = g.node(_.last(node.borderLeft)),\n\t          r = g.node(_.last(node.borderRight));\n\t\n\t      node.width = Math.abs(r.x - l.x);\n\t      node.height = Math.abs(b.y - t.y);\n\t      node.x = l.x + node.width / 2;\n\t      node.y = t.y + node.height / 2;\n\t    }\n\t  });\n\t\n\t  _.each(g.nodes(), function(v) {\n\t    if (g.node(v).dummy === \"border\") {\n\t      g.removeNode(v);\n\t    }\n\t  });\n\t}\n\t\n\tfunction removeSelfEdges(g) {\n\t  _.each(g.edges(), function(e) {\n\t    if (e.v === e.w) {\n\t      var node = g.node(e.v);\n\t      if (!node.selfEdges) {\n\t        node.selfEdges = [];\n\t      }\n\t      node.selfEdges.push({ e: e, label: g.edge(e) });\n\t      g.removeEdge(e);\n\t    }\n\t  });\n\t}\n\t\n\tfunction insertSelfEdges(g) {\n\t  var layers = util.buildLayerMatrix(g);\n\t  _.each(layers, function(layer) {\n\t    var orderShift = 0;\n\t    _.each(layer, function(v, i) {\n\t      var node = g.node(v);\n\t      node.order = i + orderShift;\n\t      _.each(node.selfEdges, function(selfEdge) {\n\t        util.addDummyNode(g, \"selfedge\", {\n\t          width: selfEdge.label.width,\n\t          height: selfEdge.label.height,\n\t          rank: node.rank,\n\t          order: i + (++orderShift),\n\t          e: selfEdge.e,\n\t          label: selfEdge.label\n\t        }, \"_se\");\n\t      });\n\t      delete node.selfEdges;\n\t    });\n\t  });\n\t}\n\t\n\tfunction positionSelfEdges(g) {\n\t  _.each(g.nodes(), function(v) {\n\t    var node = g.node(v);\n\t    if (node.dummy === \"selfedge\") {\n\t      var selfNode = g.node(node.e.v),\n\t          x = selfNode.x + selfNode.width / 2,\n\t          y = selfNode.y,\n\t          dx = node.x - x,\n\t          dy = selfNode.height / 2;\n\t      g.setEdge(node.e, node.label);\n\t      g.removeNode(v);\n\t      node.label.points = [\n\t        { x: x + 2 * dx / 3, y: y - dy },\n\t        { x: x + 5 * dx / 6, y: y - dy },\n\t        { x: x +     dx    , y: y },\n\t        { x: x + 5 * dx / 6, y: y + dy },\n\t        { x: x + 2 * dx / 3, y: y + dy },\n\t      ];\n\t      node.label.x = node.x;\n\t      node.label.y = node.y;\n\t    }\n\t  });\n\t}\n\t\n\tfunction selectNumberAttrs(obj, attrs) {\n\t  return _.mapValues(_.pick(obj, attrs), Number);\n\t}\n\t\n\tfunction canonicalize(attrs) {\n\t  var newAttrs = {};\n\t  _.each(attrs, function(v, k) {\n\t    newAttrs[k.toLowerCase()] = v;\n\t  });\n\t  return newAttrs;\n\t}\n\t\n\t},{\"./acyclic\":55,\"./add-border-segments\":56,\"./coordinate-system\":57,\"./graphlib\":60,\"./lodash\":63,\"./nesting-graph\":64,\"./normalize\":65,\"./order\":70,\"./parent-dummy-chains\":75,\"./position\":77,\"./rank\":79,\"./util\":82}],63:[function(require,module,exports){\n\tmodule.exports=require(51)\n\t},{\"/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/lodash.js\":51,\"lodash\":104}],64:[function(require,module,exports){\n\tvar _ = require(\"./lodash\"),\n\t    util = require(\"./util\");\n\t\n\tmodule.exports = {\n\t  run: run,\n\t  cleanup: cleanup\n\t};\n\t\n\t/*\n\t * A nesting graph creates dummy nodes for the tops and bottoms of subgraphs,\n\t * adds appropriate edges to ensure that all cluster nodes are placed between\n\t * these boundries, and ensures that the graph is connected.\n\t *\n\t * In addition we ensure, through the use of the minlen property, that nodes\n\t * and subgraph border nodes to not end up on the same rank.\n\t *\n\t * Preconditions:\n\t *\n\t *    1. Input graph is a DAG\n\t *    2. Nodes in the input graph has a minlen attribute\n\t *\n\t * Postconditions:\n\t *\n\t *    1. Input graph is connected.\n\t *    2. Dummy nodes are added for the tops and bottoms of subgraphs.\n\t *    3. The minlen attribute for nodes is adjusted to ensure nodes do not\n\t *       get placed on the same rank as subgraph border nodes.\n\t *\n\t * The nesting graph idea comes from Sander, \"Layout of Compound Directed\n\t * Graphs.\"\n\t */\n\tfunction run(g) {\n\t  var root = util.addDummyNode(g, \"root\", {}, \"_root\"),\n\t      depths = treeDepths(g),\n\t      height = _.max(depths) - 1,\n\t      nodeSep = 2 * height + 1;\n\t\n\t  g.graph().nestingRoot = root;\n\t\n\t  // Multiply minlen by nodeSep to align nodes on non-border ranks.\n\t  _.each(g.edges(), function(e) { g.edge(e).minlen *= nodeSep; });\n\t\n\t  // Calculate a weight that is sufficient to keep subgraphs vertically compact\n\t  var weight = sumWeights(g) + 1;\n\t\n\t  // Create border nodes and link them up\n\t  _.each(g.children(), function(child) {\n\t    dfs(g, root, nodeSep, weight, height, depths, child);\n\t  });\n\t\n\t  // Save the multiplier for node layers for later removal of empty border\n\t  // layers.\n\t  g.graph().nodeRankFactor = nodeSep;\n\t}\n\t\n\tfunction dfs(g, root, nodeSep, weight, height, depths, v) {\n\t  var children = g.children(v);\n\t  if (!children.length) {\n\t    if (v !== root) {\n\t      g.setEdge(root, v, { weight: 0, minlen: nodeSep });\n\t    }\n\t    return;\n\t  }\n\t\n\t  var top = util.addBorderNode(g, \"_bt\"),\n\t      bottom = util.addBorderNode(g, \"_bb\"),\n\t      label = g.node(v);\n\t\n\t  g.setParent(top, v);\n\t  label.borderTop = top;\n\t  g.setParent(bottom, v);\n\t  label.borderBottom = bottom;\n\t\n\t  _.each(children, function(child) {\n\t    dfs(g, root, nodeSep, weight, height, depths, child);\n\t\n\t    var childNode = g.node(child),\n\t        childTop = childNode.borderTop ? childNode.borderTop : child,\n\t        childBottom = childNode.borderBottom ? childNode.borderBottom : child,\n\t        thisWeight = childNode.borderTop ? weight : 2 * weight,\n\t        minlen = childTop !== childBottom ? 1 : height - depths[v] + 1;\n\t\n\t    g.setEdge(top, childTop, {\n\t      weight: thisWeight,\n\t      minlen: minlen,\n\t      nestingEdge: true\n\t    });\n\t\n\t    g.setEdge(childBottom, bottom, {\n\t      weight: thisWeight,\n\t      minlen: minlen,\n\t      nestingEdge: true\n\t    });\n\t  });\n\t\n\t  if (!g.parent(v)) {\n\t    g.setEdge(root, top, { weight: 0, minlen: height + depths[v] });\n\t  }\n\t}\n\t\n\tfunction treeDepths(g) {\n\t  var depths = {};\n\t  function dfs(v, depth) {\n\t    var children = g.children(v);\n\t    if (children && children.length) {\n\t      _.each(children, function(child) {\n\t        dfs(child, depth + 1);\n\t      });\n\t    }\n\t    depths[v] = depth;\n\t  }\n\t  _.each(g.children(), function(v) { dfs(v, 1); });\n\t  return depths;\n\t}\n\t\n\tfunction sumWeights(g) {\n\t  return _.reduce(g.edges(), function(acc, e) {\n\t    return acc + g.edge(e).weight;\n\t  }, 0);\n\t}\n\t\n\tfunction cleanup(g) {\n\t  var graphLabel = g.graph();\n\t  g.removeNode(graphLabel.nestingRoot);\n\t  delete graphLabel.nestingRoot;\n\t  _.each(g.edges(), function(e) {\n\t    var edge = g.edge(e);\n\t    if (edge.nestingEdge) {\n\t      g.removeEdge(e);\n\t    }\n\t  });\n\t}\n\t\n\t},{\"./lodash\":63,\"./util\":82}],65:[function(require,module,exports){\n\t\"use strict\";\n\t\n\tvar _ = require(\"./lodash\"),\n\t    util = require(\"./util\");\n\t\n\tmodule.exports = {\n\t  run: run,\n\t  undo: undo\n\t};\n\t\n\t/*\n\t * Breaks any long edges in the graph into short segments that span 1 layer\n\t * each. This operation is undoable with the denormalize function.\n\t *\n\t * Pre-conditions:\n\t *\n\t *    1. The input graph is a DAG.\n\t *    2. Each node in the graph has a \"rank\" property.\n\t *\n\t * Post-condition:\n\t *\n\t *    1. All edges in the graph have a length of 1.\n\t *    2. Dummy nodes are added where edges have been split into segments.\n\t *    3. The graph is augmented with a \"dummyChains\" attribute which contains\n\t *       the first dummy in each chain of dummy nodes produced.\n\t */\n\tfunction run(g) {\n\t  g.graph().dummyChains = [];\n\t  _.each(g.edges(), function(edge) { normalizeEdge(g, edge); });\n\t}\n\t\n\tfunction normalizeEdge(g, e) {\n\t  var v = e.v,\n\t      vRank = g.node(v).rank,\n\t      w = e.w,\n\t      wRank = g.node(w).rank,\n\t      name = e.name,\n\t      edgeLabel = g.edge(e),\n\t      labelRank = edgeLabel.labelRank;\n\t\n\t  if (wRank === vRank + 1) return;\n\t\n\t  g.removeEdge(e);\n\t\n\t  var dummy, attrs, i;\n\t  for (i = 0, ++vRank; vRank < wRank; ++i, ++vRank) {\n\t    edgeLabel.points = [];\n\t    attrs = {\n\t      width: 0, height: 0,\n\t      edgeLabel: edgeLabel, edgeObj: e,\n\t      rank: vRank\n\t    };\n\t    dummy = util.addDummyNode(g, \"edge\", attrs, \"_d\");\n\t    if (vRank === labelRank) {\n\t      attrs.width = edgeLabel.width;\n\t      attrs.height = edgeLabel.height;\n\t      attrs.dummy = \"edge-label\";\n\t      attrs.labelpos = edgeLabel.labelpos;\n\t    }\n\t    g.setEdge(v, dummy, { weight: edgeLabel.weight }, name);\n\t    if (i === 0) {\n\t      g.graph().dummyChains.push(dummy);\n\t    }\n\t    v = dummy;\n\t  }\n\t\n\t  g.setEdge(v, w, { weight: edgeLabel.weight }, name);\n\t}\n\t\n\tfunction undo(g) {\n\t  _.each(g.graph().dummyChains, function(v) {\n\t    var node = g.node(v),\n\t        origLabel = node.edgeLabel,\n\t        w;\n\t    g.setEdge(node.edgeObj, origLabel);\n\t    while (node.dummy) {\n\t      w = g.successors(v)[0];\n\t      g.removeNode(v);\n\t      origLabel.points.push({ x: node.x, y: node.y });\n\t      if (node.dummy === \"edge-label\") {\n\t        origLabel.x = node.x;\n\t        origLabel.y = node.y;\n\t        origLabel.width = node.width;\n\t        origLabel.height = node.height;\n\t      }\n\t      v = w;\n\t      node = g.node(v);\n\t    }\n\t  });\n\t}\n\t\n\t},{\"./lodash\":63,\"./util\":82}],66:[function(require,module,exports){\n\tvar _ = require(\"../lodash\");\n\t\n\tmodule.exports = addSubgraphConstraints;\n\t\n\tfunction addSubgraphConstraints(g, cg, vs) {\n\t  var prev = {},\n\t      rootPrev;\n\t\n\t  _.each(vs, function(v) {\n\t    var child = g.parent(v),\n\t        parent,\n\t        prevChild;\n\t    while (child) {\n\t      parent = g.parent(child);\n\t      if (parent) {\n\t        prevChild = prev[parent];\n\t        prev[parent] = child;\n\t      } else {\n\t        prevChild = rootPrev;\n\t        rootPrev = child;\n\t      }\n\t      if (prevChild && prevChild !== child) {\n\t        cg.setEdge(prevChild, child);\n\t        return;\n\t      }\n\t      child = parent;\n\t    }\n\t  });\n\t\n\t  /*\n\t  function dfs(v) {\n\t    var children = v ? g.children(v) : g.children();\n\t    if (children.length) {\n\t      var min = Number.POSITIVE_INFINITY,\n\t          subgraphs = [];\n\t      _.each(children, function(child) {\n\t        var childMin = dfs(child);\n\t        if (g.children(child).length) {\n\t          subgraphs.push({ v: child, order: childMin });\n\t        }\n\t        min = Math.min(min, childMin);\n\t      });\n\t      _.reduce(_.sortBy(subgraphs, \"order\"), function(prev, curr) {\n\t        cg.setEdge(prev.v, curr.v);\n\t        return curr;\n\t      });\n\t      return min;\n\t    }\n\t    return g.node(v).order;\n\t  }\n\t  dfs(undefined);\n\t  */\n\t}\n\t\n\t},{\"../lodash\":63}],67:[function(require,module,exports){\n\tvar _ = require(\"../lodash\");\n\t\n\tmodule.exports = barycenter;\n\t\n\tfunction barycenter(g, movable) {\n\t  return _.map(movable, function(v) {\n\t    var inV = g.inEdges(v);\n\t    if (!inV.length) {\n\t      return { v: v };\n\t    } else {\n\t      var result = _.reduce(inV, function(acc, e) {\n\t        var edge = g.edge(e),\n\t            nodeU = g.node(e.v);\n\t        return {\n\t          sum: acc.sum + (edge.weight * nodeU.order),\n\t          weight: acc.weight + edge.weight\n\t        };\n\t      }, { sum: 0, weight: 0 });\n\t\n\t      return {\n\t        v: v,\n\t        barycenter: result.sum / result.weight,\n\t        weight: result.weight\n\t      };\n\t    }\n\t  });\n\t}\n\t\n\t\n\t},{\"../lodash\":63}],68:[function(require,module,exports){\n\tvar _ = require(\"../lodash\"),\n\t    Graph = require(\"../graphlib\").Graph;\n\t\n\tmodule.exports = buildLayerGraph;\n\t\n\t/*\n\t * Constructs a graph that can be used to sort a layer of nodes. The graph will\n\t * contain all base and subgraph nodes from the request layer in their original\n\t * hierarchy and any edges that are incident on these nodes and are of the type\n\t * requested by the \"relationship\" parameter.\n\t *\n\t * Nodes from the requested rank that do not have parents are assigned a root\n\t * node in the output graph, which is set in the root graph attribute. This\n\t * makes it easy to walk the hierarchy of movable nodes during ordering.\n\t *\n\t * Pre-conditions:\n\t *\n\t *    1. Input graph is a DAG\n\t *    2. Base nodes in the input graph have a rank attribute\n\t *    3. Subgraph nodes in the input graph has minRank and maxRank attributes\n\t *    4. Edges have an assigned weight\n\t *\n\t * Post-conditions:\n\t *\n\t *    1. Output graph has all nodes in the movable rank with preserved\n\t *       hierarchy.\n\t *    2. Root nodes in the movable layer are made children of the node\n\t *       indicated by the root attribute of the graph.\n\t *    3. Non-movable nodes incident on movable nodes, selected by the\n\t *       relationship parameter, are included in the graph (without hierarchy).\n\t *    4. Edges incident on movable nodes, selected by the relationship\n\t *       parameter, are added to the output graph.\n\t *    5. The weights for copied edges are aggregated as need, since the output\n\t *       graph is not a multi-graph.\n\t */\n\tfunction buildLayerGraph(g, rank, relationship) {\n\t  var root = createRootNode(g),\n\t      result = new Graph({ compound: true }).setGraph({ root: root })\n\t                  .setDefaultNodeLabel(function(v) { return g.node(v); });\n\t\n\t  _.each(g.nodes(), function(v) {\n\t    var node = g.node(v),\n\t        parent = g.parent(v);\n\t\n\t    if (node.rank === rank || node.minRank <= rank && rank <= node.maxRank) {\n\t      result.setNode(v);\n\t      result.setParent(v, parent || root);\n\t\n\t      // This assumes we have only short edges!\n\t      _.each(g[relationship](v), function(e) {\n\t        var u = e.v === v ? e.w : e.v,\n\t            edge = result.edge(u, v),\n\t            weight = !_.isUndefined(edge) ? edge.weight : 0;\n\t        result.setEdge(u, v, { weight: g.edge(e).weight + weight });\n\t      });\n\t\n\t      if (_.has(node, \"minRank\")) {\n\t        result.setNode(v, {\n\t          borderLeft: node.borderLeft[rank],\n\t          borderRight: node.borderRight[rank]\n\t        });\n\t      }\n\t    }\n\t  });\n\t\n\t  return result;\n\t}\n\t\n\tfunction createRootNode(g) {\n\t  var v;\n\t  while (g.hasNode((v = _.uniqueId(\"_root\"))));\n\t  return v;\n\t}\n\t\n\t},{\"../graphlib\":60,\"../lodash\":63}],69:[function(require,module,exports){\n\t\"use strict\";\n\t\n\tvar _ = require(\"../lodash\");\n\t\n\tmodule.exports = crossCount;\n\t\n\t/*\n\t * A function that takes a layering (an array of layers, each with an array of\n\t * ordererd nodes) and a graph and returns a weighted crossing count.\n\t *\n\t * Pre-conditions:\n\t *\n\t *    1. Input graph must be simple (not a multigraph), directed, and include\n\t *       only simple edges.\n\t *    2. Edges in the input graph must have assigned weights.\n\t *\n\t * Post-conditions:\n\t *\n\t *    1. The graph and layering matrix are left unchanged.\n\t *\n\t * This algorithm is derived from Barth, et al., \"Bilayer Cross Counting.\"\n\t */\n\tfunction crossCount(g, layering) {\n\t  var cc = 0;\n\t  for (var i = 1; i < layering.length; ++i) {\n\t    cc += twoLayerCrossCount(g, layering[i-1], layering[i]);\n\t  }\n\t  return cc;\n\t}\n\t\n\tfunction twoLayerCrossCount(g, northLayer, southLayer) {\n\t  // Sort all of the edges between the north and south layers by their position\n\t  // in the north layer and then the south. Map these edges to the position of\n\t  // their head in the south layer.\n\t  var southPos = _.zipObject(southLayer,\n\t                             _.map(southLayer, function (v, i) { return i; }));\n\t  var southEntries = _.flatten(_.map(northLayer, function(v) {\n\t    return _.chain(g.outEdges(v))\n\t            .map(function(e) {\n\t              return { pos: southPos[e.w], weight: g.edge(e).weight };\n\t            })\n\t            .sortBy(\"pos\")\n\t            .value();\n\t  }), true);\n\t\n\t  // Build the accumulator tree\n\t  var firstIndex = 1;\n\t  while (firstIndex < southLayer.length) firstIndex <<= 1;\n\t  var treeSize = 2 * firstIndex - 1;\n\t  firstIndex -= 1;\n\t  var tree = _.map(new Array(treeSize), function() { return 0; });\n\t\n\t  // Calculate the weighted crossings\n\t  var cc = 0;\n\t  _.each(southEntries.forEach(function(entry) {\n\t    var index = entry.pos + firstIndex;\n\t    tree[index] += entry.weight;\n\t    var weightSum = 0;\n\t    while (index > 0) {\n\t      if (index % 2) {\n\t        weightSum += tree[index + 1];\n\t      }\n\t      index = (index - 1) >> 1;\n\t      tree[index] += entry.weight;\n\t    }\n\t    cc += entry.weight * weightSum;\n\t  }));\n\t\n\t  return cc;\n\t}\n\t\n\t},{\"../lodash\":63}],70:[function(require,module,exports){\n\t\"use strict\";\n\t\n\tvar _ = require(\"../lodash\"),\n\t    initOrder = require(\"./init-order\"),\n\t    crossCount = require(\"./cross-count\"),\n\t    sortSubgraph = require(\"./sort-subgraph\"),\n\t    buildLayerGraph = require(\"./build-layer-graph\"),\n\t    addSubgraphConstraints = require(\"./add-subgraph-constraints\"),\n\t    Graph = require(\"../graphlib\").Graph,\n\t    util = require(\"../util\");\n\t\n\tmodule.exports = order;\n\t\n\t/*\n\t * Applies heuristics to minimize edge crossings in the graph and sets the best\n\t * order solution as an order attribute on each node.\n\t *\n\t * Pre-conditions:\n\t *\n\t *    1. Graph must be DAG\n\t *    2. Graph nodes must be objects with a \"rank\" attribute\n\t *    3. Graph edges must have the \"weight\" attribute\n\t *\n\t * Post-conditions:\n\t *\n\t *    1. Graph nodes will have an \"order\" attribute based on the results of the\n\t *       algorithm.\n\t */\n\tfunction order(g) {\n\t  var maxRank = util.maxRank(g),\n\t      downLayerGraphs = buildLayerGraphs(g, _.range(1, maxRank + 1), \"inEdges\"),\n\t      upLayerGraphs = buildLayerGraphs(g, _.range(maxRank - 1, -1, -1), \"outEdges\");\n\t\n\t  var layering = initOrder(g);\n\t  assignOrder(g, layering);\n\t\n\t  var bestCC = Number.POSITIVE_INFINITY,\n\t      best;\n\t\n\t  for (var i = 0, lastBest = 0; lastBest < 4; ++i, ++lastBest) {\n\t    sweepLayerGraphs(i % 2 ? downLayerGraphs : upLayerGraphs, i % 4 >= 2);\n\t\n\t    layering = util.buildLayerMatrix(g);\n\t    var cc = crossCount(g, layering);\n\t    if (cc < bestCC) {\n\t      lastBest = 0;\n\t      best = _.cloneDeep(layering);\n\t      bestCC = cc;\n\t    }\n\t  }\n\t\n\t  assignOrder(g, best);\n\t}\n\t\n\tfunction buildLayerGraphs(g, ranks, relationship) {\n\t  return _.map(ranks, function(rank) {\n\t    return buildLayerGraph(g, rank, relationship);\n\t  });\n\t}\n\t\n\tfunction sweepLayerGraphs(layerGraphs, biasRight) {\n\t  var cg = new Graph();\n\t  _.each(layerGraphs, function(lg) {\n\t    var root = lg.graph().root;\n\t    var sorted = sortSubgraph(lg, root, cg, biasRight);\n\t    _.each(sorted.vs, function(v, i) {\n\t      lg.node(v).order = i;\n\t    });\n\t    addSubgraphConstraints(lg, cg, sorted.vs);\n\t  });\n\t}\n\t\n\tfunction assignOrder(g, layering) {\n\t  _.each(layering, function(layer) {\n\t    _.each(layer, function(v, i) {\n\t      g.node(v).order = i;\n\t    });\n\t  });\n\t}\n\t\n\t},{\"../graphlib\":60,\"../lodash\":63,\"../util\":82,\"./add-subgraph-constraints\":66,\"./build-layer-graph\":68,\"./cross-count\":69,\"./init-order\":71,\"./sort-subgraph\":73}],71:[function(require,module,exports){\n\t\"use strict\";\n\t\n\tvar _ = require(\"../lodash\");\n\t\n\tmodule.exports = initOrder;\n\t\n\t/*\n\t * Assigns an initial order value for each node by performing a DFS search\n\t * starting from nodes in the first rank. Nodes are assigned an order in their\n\t * rank as they are first visited.\n\t *\n\t * This approach comes from Gansner, et al., \"A Technique for Drawing Directed\n\t * Graphs.\"\n\t *\n\t * Returns a layering matrix with an array per layer and each layer sorted by\n\t * the order of its nodes.\n\t */\n\tfunction initOrder(g) {\n\t  var visited = {},\n\t      simpleNodes = _.filter(g.nodes(), function(v) {\n\t        return !g.children(v).length;\n\t      }),\n\t      maxRank = _.max(_.map(simpleNodes, function(v) { return g.node(v).rank; })),\n\t      layers = _.map(_.range(maxRank + 1), function() { return []; });\n\t\n\t  function dfs(v) {\n\t    if (_.has(visited, v)) return;\n\t    visited[v] = true;\n\t    var node = g.node(v);\n\t    layers[node.rank].push(v);\n\t    _.each(g.successors(v), dfs);\n\t  }\n\t\n\t  var orderedVs = _.sortBy(simpleNodes, function(v) { return g.node(v).rank; });\n\t  _.each(orderedVs, dfs);\n\t\n\t  return layers;\n\t}\n\t\n\t},{\"../lodash\":63}],72:[function(require,module,exports){\n\t\"use strict\";\n\t\n\tvar _ = require(\"../lodash\");\n\t\n\tmodule.exports = resolveConflicts;\n\t\n\t/*\n\t * Given a list of entries of the form {v, barycenter, weight} and a\n\t * constraint graph this function will resolve any conflicts between the\n\t * constraint graph and the barycenters for the entries. If the barycenters for\n\t * an entry would violate a constraint in the constraint graph then we coalesce\n\t * the nodes in the conflict into a new node that respects the contraint and\n\t * aggregates barycenter and weight information.\n\t *\n\t * This implementation is based on the description in Forster, \"A Fast and\n\t * Simple Hueristic for Constrained Two-Level Crossing Reduction,\" thought it\n\t * differs in some specific details.\n\t *\n\t * Pre-conditions:\n\t *\n\t *    1. Each entry has the form {v, barycenter, weight}, or if the node has\n\t *       no barycenter, then {v}.\n\t *\n\t * Returns:\n\t *\n\t *    A new list of entries of the form {vs, i, barycenter, weight}. The list\n\t *    `vs` may either be a singleton or it may be an aggregation of nodes\n\t *    ordered such that they do not violate constraints from the constraint\n\t *    graph. The property `i` is the lowest original index of any of the\n\t *    elements in `vs`.\n\t */\n\tfunction resolveConflicts(entries, cg) {\n\t  var mappedEntries = {};\n\t  _.each(entries, function(entry, i) {\n\t    var tmp = mappedEntries[entry.v] = {\n\t      indegree: 0,\n\t      \"in\": [],\n\t      out: [],\n\t      vs: [entry.v],\n\t      i: i\n\t    };\n\t    if (!_.isUndefined(entry.barycenter)) {\n\t      tmp.barycenter = entry.barycenter;\n\t      tmp.weight = entry.weight;\n\t    }\n\t  });\n\t\n\t  _.each(cg.edges(), function(e) {\n\t    var entryV = mappedEntries[e.v],\n\t        entryW = mappedEntries[e.w];\n\t    if (!_.isUndefined(entryV) && !_.isUndefined(entryW)) {\n\t      entryW.indegree++;\n\t      entryV.out.push(mappedEntries[e.w]);\n\t    }\n\t  });\n\t\n\t  var sourceSet = _.filter(mappedEntries, function(entry) {\n\t    return !entry.indegree;\n\t  });\n\t\n\t  return doResolveConflicts(sourceSet);\n\t}\n\t\n\tfunction doResolveConflicts(sourceSet) {\n\t  var entries = [];\n\t\n\t  function handleIn(vEntry) {\n\t    return function(uEntry) {\n\t      if (uEntry.merged) {\n\t        return;\n\t      }\n\t      if (_.isUndefined(uEntry.barycenter) ||\n\t          _.isUndefined(vEntry.barycenter) ||\n\t          uEntry.barycenter >= vEntry.barycenter) {\n\t        mergeEntries(vEntry, uEntry);\n\t      }\n\t    };\n\t  }\n\t\n\t  function handleOut(vEntry) {\n\t    return function(wEntry) {\n\t      wEntry[\"in\"].push(vEntry);\n\t      if (--wEntry.indegree === 0) {\n\t        sourceSet.push(wEntry);\n\t      }\n\t    };\n\t  }\n\t\n\t  while (sourceSet.length) {\n\t    var entry = sourceSet.pop();\n\t    entries.push(entry);\n\t    _.each(entry[\"in\"].reverse(), handleIn(entry));\n\t    _.each(entry.out, handleOut(entry));\n\t  }\n\t\n\t  return _.chain(entries)\n\t          .filter(function(entry) { return !entry.merged; })\n\t          .map(function(entry) {\n\t            return _.pick(entry, [\"vs\", \"i\", \"barycenter\", \"weight\"]);\n\t          })\n\t          .value();\n\t}\n\t\n\tfunction mergeEntries(target, source) {\n\t  var sum = 0,\n\t      weight = 0;\n\t\n\t  if (target.weight) {\n\t    sum += target.barycenter * target.weight;\n\t    weight += target.weight;\n\t  }\n\t\n\t  if (source.weight) {\n\t    sum += source.barycenter * source.weight;\n\t    weight += source.weight;\n\t  }\n\t\n\t  target.vs = source.vs.concat(target.vs);\n\t  target.barycenter = sum / weight;\n\t  target.weight = weight;\n\t  target.i = Math.min(source.i, target.i);\n\t  source.merged = true;\n\t}\n\t\n\t},{\"../lodash\":63}],73:[function(require,module,exports){\n\tvar _ = require(\"../lodash\"),\n\t    barycenter = require(\"./barycenter\"),\n\t    resolveConflicts = require(\"./resolve-conflicts\"),\n\t    sort = require(\"./sort\");\n\t\n\tmodule.exports = sortSubgraph;\n\t\n\tfunction sortSubgraph(g, v, cg, biasRight) {\n\t  var movable = g.children(v),\n\t      node = g.node(v),\n\t      bl = node ? node.borderLeft : undefined,\n\t      br = node ? node.borderRight: undefined,\n\t      subgraphs = {};\n\t\n\t  if (bl) {\n\t    movable = _.filter(movable, function(w) {\n\t      return w !== bl && w !== br;\n\t    });\n\t  }\n\t\n\t  var barycenters = barycenter(g, movable);\n\t  _.each(barycenters, function(entry) {\n\t    if (g.children(entry.v).length) {\n\t      var subgraphResult = sortSubgraph(g, entry.v, cg, biasRight);\n\t      subgraphs[entry.v] = subgraphResult;\n\t      if (_.has(subgraphResult, \"barycenter\")) {\n\t        mergeBarycenters(entry, subgraphResult);\n\t      }\n\t    }\n\t  });\n\t\n\t  var entries = resolveConflicts(barycenters, cg);\n\t  expandSubgraphs(entries, subgraphs);\n\t\n\t  var result = sort(entries, biasRight);\n\t\n\t  if (bl) {\n\t    result.vs = _.flatten([bl, result.vs, br], true);\n\t    if (g.predecessors(bl).length) {\n\t      var blPred = g.node(g.predecessors(bl)[0]),\n\t          brPred = g.node(g.predecessors(br)[0]);\n\t      if (!_.has(result, \"barycenter\")) {\n\t        result.barycenter = 0;\n\t        result.weight = 0;\n\t      }\n\t      result.barycenter = (result.barycenter * result.weight +\n\t                           blPred.order + brPred.order) / (result.weight + 2);\n\t      result.weight += 2;\n\t    }\n\t  }\n\t\n\t  return result;\n\t}\n\t\n\tfunction expandSubgraphs(entries, subgraphs) {\n\t  _.each(entries, function(entry) {\n\t    entry.vs = _.flatten(entry.vs.map(function(v) {\n\t      if (subgraphs[v]) {\n\t        return subgraphs[v].vs;\n\t      }\n\t      return v;\n\t    }), true);\n\t  });\n\t}\n\t\n\tfunction mergeBarycenters(target, other) {\n\t  if (!_.isUndefined(target.barycenter)) {\n\t    target.barycenter = (target.barycenter * target.weight +\n\t                         other.barycenter * other.weight) /\n\t                        (target.weight + other.weight);\n\t    target.weight += other.weight;\n\t  } else {\n\t    target.barycenter = other.barycenter;\n\t    target.weight = other.weight;\n\t  }\n\t}\n\t\n\t},{\"../lodash\":63,\"./barycenter\":67,\"./resolve-conflicts\":72,\"./sort\":74}],74:[function(require,module,exports){\n\tvar _ = require(\"../lodash\"),\n\t    util = require(\"../util\");\n\t\n\tmodule.exports = sort;\n\t\n\tfunction sort(entries, biasRight) {\n\t  var parts = util.partition(entries, function(entry) {\n\t    return _.has(entry, \"barycenter\");\n\t  });\n\t  var sortable = parts.lhs,\n\t      unsortable = _.sortBy(parts.rhs, function(entry) { return -entry.i; }),\n\t      vs = [],\n\t      sum = 0,\n\t      weight = 0,\n\t      vsIndex = 0;\n\t\n\t  sortable.sort(compareWithBias(!!biasRight));\n\t\n\t  vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n\t\n\t  _.each(sortable, function (entry) {\n\t    vsIndex += entry.vs.length;\n\t    vs.push(entry.vs);\n\t    sum += entry.barycenter * entry.weight;\n\t    weight += entry.weight;\n\t    vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n\t  });\n\t\n\t  var result = { vs: _.flatten(vs, true) };\n\t  if (weight) {\n\t    result.barycenter = sum / weight;\n\t    result.weight = weight;\n\t  }\n\t  return result;\n\t}\n\t\n\tfunction consumeUnsortable(vs, unsortable, index) {\n\t  var last;\n\t  while (unsortable.length && (last = _.last(unsortable)).i <= index) {\n\t    unsortable.pop();\n\t    vs.push(last.vs);\n\t    index++;\n\t  }\n\t  return index;\n\t}\n\t\n\tfunction compareWithBias(bias) {\n\t  return function(entryV, entryW) {\n\t    if (entryV.barycenter < entryW.barycenter) {\n\t      return -1;\n\t    } else if (entryV.barycenter > entryW.barycenter) {\n\t      return 1;\n\t    }\n\t\n\t    return !bias ? entryV.i - entryW.i : entryW.i - entryV.i;\n\t  };\n\t}\n\t\n\t},{\"../lodash\":63,\"../util\":82}],75:[function(require,module,exports){\n\tvar _ = require(\"./lodash\");\n\t\n\tmodule.exports = parentDummyChains;\n\t\n\tfunction parentDummyChains(g) {\n\t  var postorderNums = postorder(g);\n\t\n\t  _.each(g.graph().dummyChains, function(v) {\n\t    var node = g.node(v),\n\t        edgeObj = node.edgeObj,\n\t        pathData = findPath(g, postorderNums, edgeObj.v, edgeObj.w),\n\t        path = pathData.path,\n\t        lca = pathData.lca,\n\t        pathIdx = 0,\n\t        pathV = path[pathIdx],\n\t        ascending = true;\n\t\n\t    while (v !== edgeObj.w) {\n\t      node = g.node(v);\n\t\n\t      if (ascending) {\n\t        while ((pathV = path[pathIdx]) !== lca &&\n\t               g.node(pathV).maxRank < node.rank) {\n\t          pathIdx++;\n\t        }\n\t\n\t        if (pathV === lca) {\n\t          ascending = false;\n\t        }\n\t      }\n\t\n\t      if (!ascending) {\n\t        while (pathIdx < path.length - 1 &&\n\t               g.node(pathV = path[pathIdx + 1]).minRank <= node.rank) {\n\t          pathIdx++;\n\t        }\n\t        pathV = path[pathIdx];\n\t      }\n\t\n\t      g.setParent(v, pathV);\n\t      v = g.successors(v)[0];\n\t    }\n\t  });\n\t}\n\t\n\t// Find a path from v to w through the lowest common ancestor (LCA). Return the\n\t// full path and the LCA.\n\tfunction findPath(g, postorderNums, v, w) {\n\t  var vPath = [],\n\t      wPath = [],\n\t      low = Math.min(postorderNums[v].low, postorderNums[w].low),\n\t      lim = Math.max(postorderNums[v].lim, postorderNums[w].lim),\n\t      parent,\n\t      lca;\n\t\n\t  // Traverse up from v to find the LCA\n\t  parent = v;\n\t  do {\n\t    parent = g.parent(parent);\n\t    vPath.push(parent);\n\t  } while (parent &&\n\t           (postorderNums[parent].low > low || lim > postorderNums[parent].lim));\n\t  lca = parent;\n\t\n\t  // Traverse from w to LCA\n\t  parent = w;\n\t  while ((parent = g.parent(parent)) !== lca) {\n\t    wPath.push(parent);\n\t  }\n\t\n\t  return { path: vPath.concat(wPath.reverse()), lca: lca };\n\t}\n\t\n\tfunction postorder(g) {\n\t  var result = {},\n\t      lim = 0;\n\t\n\t  function dfs(v) {\n\t    var low = lim;\n\t    _.each(g.children(v), dfs);\n\t    result[v] = { low: low, lim: lim++ };\n\t  }\n\t  _.each(g.children(), dfs);\n\t\n\t  return result;\n\t}\n\t\n\t},{\"./lodash\":63}],76:[function(require,module,exports){\n\t\"use strict\";\n\t\n\tvar _ = require(\"../lodash\"),\n\t    Graph = require(\"../graphlib\").Graph,\n\t    util = require(\"../util\");\n\t\n\t/*\n\t * This module provides coordinate assignment based on Brandes and Köpf, \"Fast\n\t * and Simple Horizontal Coordinate Assignment.\"\n\t */\n\t\n\tmodule.exports = {\n\t  positionX: positionX,\n\t  findType1Conflicts: findType1Conflicts,\n\t  findType2Conflicts: findType2Conflicts,\n\t  addConflict: addConflict,\n\t  hasConflict: hasConflict,\n\t  verticalAlignment: verticalAlignment,\n\t  horizontalCompaction: horizontalCompaction,\n\t  alignCoordinates: alignCoordinates,\n\t  findSmallestWidthAlignment: findSmallestWidthAlignment,\n\t  balance: balance\n\t};\n\t\n\t/*\n\t * Marks all edges in the graph with a type-1 conflict with the \"type1Conflict\"\n\t * property. A type-1 conflict is one where a non-inner segment crosses an\n\t * inner segment. An inner segment is an edge with both incident nodes marked\n\t * with the \"dummy\" property.\n\t *\n\t * This algorithm scans layer by layer, starting with the second, for type-1\n\t * conflicts between the current layer and the previous layer. For each layer\n\t * it scans the nodes from left to right until it reaches one that is incident\n\t * on an inner segment. It then scans predecessors to determine if they have\n\t * edges that cross that inner segment. At the end a final scan is done for all\n\t * nodes on the current rank to see if they cross the last visited inner\n\t * segment.\n\t *\n\t * This algorithm (safely) assumes that a dummy node will only be incident on a\n\t * single node in the layers being scanned.\n\t */\n\tfunction findType1Conflicts(g, layering) {\n\t  var conflicts = {};\n\t\n\t  function visitLayer(prevLayer, layer) {\n\t    var\n\t      // last visited node in the previous layer that is incident on an inner\n\t      // segment.\n\t      k0 = 0,\n\t      // Tracks the last node in this layer scanned for crossings with a type-1\n\t      // segment.\n\t      scanPos = 0,\n\t      prevLayerLength = prevLayer.length,\n\t      lastNode = _.last(layer);\n\t\n\t    _.each(layer, function(v, i) {\n\t      var w = findOtherInnerSegmentNode(g, v),\n\t          k1 = w ? g.node(w).order : prevLayerLength;\n\t\n\t      if (w || v === lastNode) {\n\t        _.each(layer.slice(scanPos, i +1), function(scanNode) {\n\t          _.each(g.predecessors(scanNode), function(u) {\n\t            var uLabel = g.node(u),\n\t                uPos = uLabel.order;\n\t            if ((uPos < k0 || k1 < uPos) &&\n\t                !(uLabel.dummy && g.node(scanNode).dummy)) {\n\t              addConflict(conflicts, u, scanNode);\n\t            }\n\t          });\n\t        });\n\t        scanPos = i + 1;\n\t        k0 = k1;\n\t      }\n\t    });\n\t\n\t    return layer;\n\t  }\n\t\n\t  _.reduce(layering, visitLayer);\n\t  return conflicts;\n\t}\n\t\n\tfunction findType2Conflicts(g, layering) {\n\t  var conflicts = {};\n\t\n\t  function scan(south, southPos, southEnd, prevNorthBorder, nextNorthBorder) {\n\t    var v;\n\t    _.each(_.range(southPos, southEnd), function(i) {\n\t      v = south[i];\n\t      if (g.node(v).dummy) {\n\t        _.each(g.predecessors(v), function(u) {\n\t          var uNode = g.node(u);\n\t          if (uNode.dummy &&\n\t              (uNode.order < prevNorthBorder || uNode.order > nextNorthBorder)) {\n\t            addConflict(conflicts, u, v);\n\t          }\n\t        });\n\t      }\n\t    });\n\t  }\n\t\n\t\n\t  function visitLayer(north, south) {\n\t    var prevNorthPos = -1,\n\t        nextNorthPos,\n\t        southPos = 0;\n\t\n\t    _.each(south, function(v, southLookahead) {\n\t      if (g.node(v).dummy === \"border\") {\n\t        var predecessors = g.predecessors(v);\n\t        if (predecessors.length) {\n\t          nextNorthPos = g.node(predecessors[0]).order;\n\t          scan(south, southPos, southLookahead, prevNorthPos, nextNorthPos);\n\t          southPos = southLookahead;\n\t          prevNorthPos = nextNorthPos;\n\t        }\n\t      }\n\t      scan(south, southPos, south.length, nextNorthPos, north.length);\n\t    });\n\t\n\t    return south;\n\t  }\n\t\n\t  _.reduce(layering, visitLayer);\n\t  return conflicts;\n\t}\n\t\n\tfunction findOtherInnerSegmentNode(g, v) {\n\t  if (g.node(v).dummy) {\n\t    return _.find(g.predecessors(v), function(u) {\n\t      return g.node(u).dummy;\n\t    });\n\t  }\n\t}\n\t\n\tfunction addConflict(conflicts, v, w) {\n\t  if (v > w) {\n\t    var tmp = v;\n\t    v = w;\n\t    w = tmp;\n\t  }\n\t\n\t  var conflictsV = conflicts[v];\n\t  if (!conflictsV) {\n\t    conflicts[v] = conflictsV = {};\n\t  }\n\t  conflictsV[w] = true;\n\t}\n\t\n\tfunction hasConflict(conflicts, v, w) {\n\t  if (v > w) {\n\t    var tmp = v;\n\t    v = w;\n\t    w = tmp;\n\t  }\n\t  return _.has(conflicts[v], w);\n\t}\n\t\n\t/*\n\t * Try to align nodes into vertical \"blocks\" where possible. This algorithm\n\t * attempts to align a node with one of its median neighbors. If the edge\n\t * connecting a neighbor is a type-1 conflict then we ignore that possibility.\n\t * If a previous node has already formed a block with a node after the node\n\t * we're trying to form a block with, we also ignore that possibility - our\n\t * blocks would be split in that scenario.\n\t */\n\tfunction verticalAlignment(g, layering, conflicts, neighborFn) {\n\t  var root = {},\n\t      align = {},\n\t      pos = {};\n\t\n\t  // We cache the position here based on the layering because the graph and\n\t  // layering may be out of sync. The layering matrix is manipulated to\n\t  // generate different extreme alignments.\n\t  _.each(layering, function(layer) {\n\t    _.each(layer, function(v, order) {\n\t      root[v] = v;\n\t      align[v] = v;\n\t      pos[v] = order;\n\t    });\n\t  });\n\t\n\t  _.each(layering, function(layer) {\n\t    var prevIdx = -1;\n\t    _.each(layer, function(v) {\n\t      var ws = neighborFn(v);\n\t      if (ws.length) {\n\t        ws = _.sortBy(ws, function(w) { return pos[w]; });\n\t        var mp = (ws.length - 1) / 2;\n\t        for (var i = Math.floor(mp), il = Math.ceil(mp); i <= il; ++i) {\n\t          var w = ws[i];\n\t          if (align[v] === v &&\n\t              prevIdx < pos[w] &&\n\t              !hasConflict(conflicts, v, w)) {\n\t            align[w] = v;\n\t            align[v] = root[v] = root[w];\n\t            prevIdx = pos[w];\n\t          }\n\t        }\n\t      }\n\t    });\n\t  });\n\t\n\t  return { root: root, align: align };\n\t}\n\t\n\tfunction horizontalCompaction(g, layering, root, align, reverseSep) {\n\t  // This portion of the algorithm differs from BK due to a number of problems.\n\t  // Instead of their algorithm we construct a new block graph and do two\n\t  // sweeps. The first sweep places blocks with the smallest possible\n\t  // coordinates. The second sweep removes unused space by moving blocks to the\n\t  // greatest coordinates without violating separation.\n\t  var xs = {},\n\t      blockG = buildBlockGraph(g, layering, root, reverseSep);\n\t\n\t  // First pass, assign smallest coordinates via DFS\n\t  var visited = {};\n\t  function pass1(v) {\n\t    if (!_.has(visited, v)) {\n\t      visited[v] = true;\n\t      xs[v] = _.reduce(blockG.inEdges(v), function(max, e) {\n\t        pass1(e.v);\n\t        return Math.max(max, xs[e.v] + blockG.edge(e));\n\t      }, 0);\n\t    }\n\t  }\n\t  _.each(blockG.nodes(), pass1);\n\t\n\t  var borderType = reverseSep ? \"borderLeft\" : \"borderRight\";\n\t  function pass2(v) {\n\t    if (visited[v] !== 2) {\n\t      visited[v]++;\n\t      var node = g.node(v);\n\t      var min = _.reduce(blockG.outEdges(v), function(min, e) {\n\t        pass2(e.w);\n\t        return Math.min(min, xs[e.w] - blockG.edge(e));\n\t      }, Number.POSITIVE_INFINITY);\n\t      if (min !== Number.POSITIVE_INFINITY && node.borderType !== borderType) {\n\t        xs[v] = Math.max(xs[v], min);\n\t      }\n\t    }\n\t  }\n\t  _.each(blockG.nodes(), pass2);\n\t\n\t  // Assign x coordinates to all nodes\n\t  _.each(align, function(v) {\n\t    xs[v] = xs[root[v]];\n\t  });\n\t\n\t  return xs;\n\t}\n\t\n\t\n\tfunction buildBlockGraph(g, layering, root, reverseSep) {\n\t  var blockGraph = new Graph(),\n\t      graphLabel = g.graph(),\n\t      sepFn = sep(graphLabel.nodesep, graphLabel.edgesep, reverseSep);\n\t\n\t  _.each(layering, function(layer) {\n\t    var u;\n\t    _.each(layer, function(v) {\n\t      var vRoot = root[v];\n\t      blockGraph.setNode(vRoot);\n\t      if (u) {\n\t        var uRoot = root[u],\n\t            prevMax = blockGraph.edge(uRoot, vRoot);\n\t        blockGraph.setEdge(uRoot, vRoot, Math.max(sepFn(g, v, u), prevMax || 0));\n\t      }\n\t      u = v;\n\t    });\n\t  });\n\t\n\t  return blockGraph;\n\t}\n\t\n\t/*\n\t * Returns the alignment that has the smallest width of the given alignments.\n\t */\n\tfunction findSmallestWidthAlignment(g, xss) {\n\t  return _.min(xss, function(xs) {\n\t    var min = _.min(xs, function(x, v) { return x - width(g, v) / 2; }),\n\t        max = _.max(xs, function(x, v) { return x + width(g, v) / 2; });\n\t    return max - min;\n\t  });\n\t}\n\t\n\t/*\n\t * Align the coordinates of each of the layout alignments such that\n\t * left-biased alignments have their minimum coordinate at the same point as\n\t * the minimum coordinate of the smallest width alignment and right-biased\n\t * alignments have their maximum coordinate at the same point as the maximum\n\t * coordinate of the smallest width alignment.\n\t */\n\tfunction alignCoordinates(xss, alignTo) {\n\t  var alignToMin = _.min(alignTo),\n\t      alignToMax = _.max(alignTo);\n\t\n\t  _.each([\"u\", \"d\"], function(vert) {\n\t    _.each([\"l\", \"r\"], function(horiz) {\n\t      var alignment = vert + horiz,\n\t          xs = xss[alignment],\n\t          delta;\n\t      if (xs === alignTo) return;\n\t\n\t      delta = horiz === \"l\" ? alignToMin - _.min(xs) : alignToMax - _.max(xs);\n\t\n\t      if (delta) {\n\t        xss[alignment] = _.mapValues(xs, function(x) { return x + delta; });\n\t      }\n\t    });\n\t  });\n\t}\n\t\n\tfunction balance(xss, align) {\n\t  return _.mapValues(xss.ul, function(ignore, v) {\n\t    if (align) {\n\t      return xss[align.toLowerCase()][v];\n\t    } else {\n\t      var xs = _.sortBy(_.pluck(xss, v));\n\t      return (xs[1] + xs[2]) / 2;\n\t    }\n\t  });\n\t}\n\t\n\tfunction positionX(g) {\n\t  var layering = util.buildLayerMatrix(g),\n\t      conflicts = _.merge(findType1Conflicts(g, layering),\n\t                          findType2Conflicts(g, layering));\n\t\n\t  var xss = {},\n\t      adjustedLayering;\n\t  _.each([\"u\", \"d\"], function(vert) {\n\t    adjustedLayering = vert === \"u\" ? layering : _.values(layering).reverse();\n\t    _.each([\"l\", \"r\"], function(horiz) {\n\t      if (horiz === \"r\") {\n\t        adjustedLayering = _.map(adjustedLayering, function(inner) {\n\t          return _.values(inner).reverse();\n\t        });\n\t      }\n\t\n\t      var neighborFn = _.bind(vert === \"u\" ? g.predecessors : g.successors, g);\n\t      var align = verticalAlignment(g, adjustedLayering, conflicts, neighborFn);\n\t      var xs = horizontalCompaction(g, adjustedLayering,\n\t                                    align.root, align.align,\n\t                                    horiz === \"r\");\n\t      if (horiz === \"r\") {\n\t        xs = _.mapValues(xs, function(x) { return -x; });\n\t      }\n\t      xss[vert + horiz] = xs;\n\t    });\n\t  });\n\t\n\t  var smallestWidth = findSmallestWidthAlignment(g, xss);\n\t  alignCoordinates(xss, smallestWidth);\n\t  return balance(xss, g.graph().align);\n\t}\n\t\n\tfunction sep(nodeSep, edgeSep, reverseSep) {\n\t  return function(g, v, w) {\n\t    var vLabel = g.node(v),\n\t        wLabel = g.node(w),\n\t        sum = 0,\n\t        delta;\n\t\n\t    sum += vLabel.width / 2;\n\t    if (_.has(vLabel, \"labelpos\")) {\n\t      switch (vLabel.labelpos.toLowerCase()) {\n\t        case \"l\": delta = -vLabel.width / 2; break;\n\t        case \"r\": delta = vLabel.width / 2; break;\n\t      }\n\t    }\n\t    if (delta) {\n\t      sum += reverseSep ? delta : -delta;\n\t    }\n\t    delta = 0;\n\t\n\t    sum += (vLabel.dummy ? edgeSep : nodeSep) / 2;\n\t    sum += (wLabel.dummy ? edgeSep : nodeSep) / 2;\n\t\n\t    sum += wLabel.width / 2;\n\t    if (_.has(wLabel, \"labelpos\")) {\n\t      switch (wLabel.labelpos.toLowerCase()) {\n\t        case \"l\": delta = wLabel.width / 2; break;\n\t        case \"r\": delta = -wLabel.width / 2; break;\n\t      }\n\t    }\n\t    if (delta) {\n\t      sum += reverseSep ? delta : -delta;\n\t    }\n\t    delta = 0;\n\t\n\t    return sum;\n\t  };\n\t}\n\t\n\tfunction width(g, v) {\n\t  return g.node(v).width;\n\t}\n\t\n\t},{\"../graphlib\":60,\"../lodash\":63,\"../util\":82}],77:[function(require,module,exports){\n\t\"use strict\";\n\t\n\tvar _ = require(\"../lodash\"),\n\t    util = require(\"../util\"),\n\t    positionX = require(\"./bk\").positionX;\n\t\n\tmodule.exports = position;\n\t\n\tfunction position(g) {\n\t  g = util.asNonCompoundGraph(g);\n\t\n\t  positionY(g);\n\t  _.each(positionX(g), function(x, v) {\n\t    g.node(v).x = x;\n\t  });\n\t}\n\t\n\tfunction positionY(g) {\n\t  var layering = util.buildLayerMatrix(g),\n\t      rankSep = g.graph().ranksep,\n\t      prevY = 0;\n\t  _.each(layering, function(layer) {\n\t    var maxHeight = _.max(_.map(layer, function(v) { return g.node(v).height; }));\n\t    _.each(layer, function(v) {\n\t      g.node(v).y = prevY + maxHeight / 2;\n\t    });\n\t    prevY += maxHeight + rankSep;\n\t  });\n\t}\n\t\n\t\n\t},{\"../lodash\":63,\"../util\":82,\"./bk\":76}],78:[function(require,module,exports){\n\t\"use strict\";\n\t\n\tvar _ = require(\"../lodash\"),\n\t    Graph = require(\"../graphlib\").Graph,\n\t    slack = require(\"./util\").slack;\n\t\n\tmodule.exports = feasibleTree;\n\t\n\t/*\n\t * Constructs a spanning tree with tight edges and adjusted the input node's\n\t * ranks to achieve this. A tight edge is one that is has a length that matches\n\t * its \"minlen\" attribute.\n\t *\n\t * The basic structure for this function is derived from Gansner, et al., \"A\n\t * Technique for Drawing Directed Graphs.\"\n\t *\n\t * Pre-conditions:\n\t *\n\t *    1. Graph must be a DAG.\n\t *    2. Graph must be connected.\n\t *    3. Graph must have at least one node.\n\t *    5. Graph nodes must have been previously assigned a \"rank\" property that\n\t *       respects the \"minlen\" property of incident edges.\n\t *    6. Graph edges must have a \"minlen\" property.\n\t *\n\t * Post-conditions:\n\t *\n\t *    - Graph nodes will have their rank adjusted to ensure that all edges are\n\t *      tight.\n\t *\n\t * Returns a tree (undirected graph) that is constructed using only \"tight\"\n\t * edges.\n\t */\n\tfunction feasibleTree(g) {\n\t  var t = new Graph({ directed: false });\n\t\n\t  // Choose arbitrary node from which to start our tree\n\t  var start = g.nodes()[0],\n\t      size = g.nodeCount();\n\t  t.setNode(start, {});\n\t\n\t  var edge, delta;\n\t  while (tightTree(t, g) < size) {\n\t    edge = findMinSlackEdge(t, g);\n\t    delta = t.hasNode(edge.v) ? slack(g, edge) : -slack(g, edge);\n\t    shiftRanks(t, g, delta);\n\t  }\n\t\n\t  return t;\n\t}\n\t\n\t/*\n\t * Finds a maximal tree of tight edges and returns the number of nodes in the\n\t * tree.\n\t */\n\tfunction tightTree(t, g) {\n\t  function dfs(v) {\n\t    _.each(g.nodeEdges(v), function(e) {\n\t      var edgeV = e.v,\n\t          w = (v === edgeV) ? e.w : edgeV;\n\t      if (!t.hasNode(w) && !slack(g, e)) {\n\t        t.setNode(w, {});\n\t        t.setEdge(v, w, {});\n\t        dfs(w);\n\t      }\n\t    });\n\t  }\n\t\n\t  _.each(t.nodes(), dfs);\n\t  return t.nodeCount();\n\t}\n\t\n\t/*\n\t * Finds the edge with the smallest slack that is incident on tree and returns\n\t * it.\n\t */\n\tfunction findMinSlackEdge(t, g) {\n\t  return _.min(g.edges(), function(e) {\n\t    if (t.hasNode(e.v) !== t.hasNode(e.w)) {\n\t      return slack(g, e);\n\t    }\n\t  });\n\t}\n\t\n\tfunction shiftRanks(t, g, delta) {\n\t  _.each(t.nodes(), function(v) {\n\t    g.node(v).rank += delta;\n\t  });\n\t}\n\t\n\t},{\"../graphlib\":60,\"../lodash\":63,\"./util\":81}],79:[function(require,module,exports){\n\t\"use strict\";\n\t\n\tvar rankUtil = require(\"./util\"),\n\t    longestPath = rankUtil.longestPath,\n\t    feasibleTree = require(\"./feasible-tree\"),\n\t    networkSimplex = require(\"./network-simplex\");\n\t\n\tmodule.exports = rank;\n\t\n\t/*\n\t * Assigns a rank to each node in the input graph that respects the \"minlen\"\n\t * constraint specified on edges between nodes.\n\t *\n\t * This basic structure is derived from Gansner, et al., \"A Technique for\n\t * Drawing Directed Graphs.\"\n\t *\n\t * Pre-conditions:\n\t *\n\t *    1. Graph must be a connected DAG\n\t *    2. Graph nodes must be objects\n\t *    3. Graph edges must have \"weight\" and \"minlen\" attributes\n\t *\n\t * Post-conditions:\n\t *\n\t *    1. Graph nodes will have a \"rank\" attribute based on the results of the\n\t *       algorithm. Ranks can start at any index (including negative), we'll\n\t *       fix them up later.\n\t */\n\tfunction rank(g) {\n\t  switch(g.graph().ranker) {\n\t    case \"network-simplex\": networkSimplexRanker(g); break;\n\t    case \"tight-tree\": tightTreeRanker(g); break;\n\t    case \"longest-path\": longestPathRanker(g); break;\n\t    default: networkSimplexRanker(g);\n\t  }\n\t}\n\t\n\t// A fast and simple ranker, but results are far from optimal.\n\tvar longestPathRanker = longestPath;\n\t\n\tfunction tightTreeRanker(g) {\n\t  longestPath(g);\n\t  feasibleTree(g);\n\t}\n\t\n\tfunction networkSimplexRanker(g) {\n\t  networkSimplex(g);\n\t}\n\t\n\t},{\"./feasible-tree\":78,\"./network-simplex\":80,\"./util\":81}],80:[function(require,module,exports){\n\t\"use strict\";\n\t\n\tvar _ = require(\"../lodash\"),\n\t    feasibleTree = require(\"./feasible-tree\"),\n\t    slack = require(\"./util\").slack,\n\t    initRank = require(\"./util\").longestPath,\n\t    preorder = require(\"../graphlib\").alg.preorder,\n\t    postorder = require(\"../graphlib\").alg.postorder,\n\t    simplify = require(\"../util\").simplify;\n\t\n\tmodule.exports = networkSimplex;\n\t\n\t// Expose some internals for testing purposes\n\tnetworkSimplex.initLowLimValues = initLowLimValues;\n\tnetworkSimplex.initCutValues = initCutValues;\n\tnetworkSimplex.calcCutValue = calcCutValue;\n\tnetworkSimplex.leaveEdge = leaveEdge;\n\tnetworkSimplex.enterEdge = enterEdge;\n\tnetworkSimplex.exchangeEdges = exchangeEdges;\n\t\n\t/*\n\t * The network simplex algorithm assigns ranks to each node in the input graph\n\t * and iteratively improves the ranking to reduce the length of edges.\n\t *\n\t * Preconditions:\n\t *\n\t *    1. The input graph must be a DAG.\n\t *    2. All nodes in the graph must have an object value.\n\t *    3. All edges in the graph must have \"minlen\" and \"weight\" attributes.\n\t *\n\t * Postconditions:\n\t *\n\t *    1. All nodes in the graph will have an assigned \"rank\" attribute that has\n\t *       been optimized by the network simplex algorithm. Ranks start at 0.\n\t *\n\t *\n\t * A rough sketch of the algorithm is as follows:\n\t *\n\t *    1. Assign initial ranks to each node. We use the longest path algorithm,\n\t *       which assigns ranks to the lowest position possible. In general this\n\t *       leads to very wide bottom ranks and unnecessarily long edges.\n\t *    2. Construct a feasible tight tree. A tight tree is one such that all\n\t *       edges in the tree have no slack (difference between length of edge\n\t *       and minlen for the edge). This by itself greatly improves the assigned\n\t *       rankings by shorting edges.\n\t *    3. Iteratively find edges that have negative cut values. Generally a\n\t *       negative cut value indicates that the edge could be removed and a new\n\t *       tree edge could be added to produce a more compact graph.\n\t *\n\t * Much of the algorithms here are derived from Gansner, et al., \"A Technique\n\t * for Drawing Directed Graphs.\" The structure of the file roughly follows the\n\t * structure of the overall algorithm.\n\t */\n\tfunction networkSimplex(g) {\n\t  g = simplify(g);\n\t  initRank(g);\n\t  var t = feasibleTree(g);\n\t  initLowLimValues(t);\n\t  initCutValues(t, g);\n\t\n\t  var e, f;\n\t  while ((e = leaveEdge(t))) {\n\t    f = enterEdge(t, g, e);\n\t    exchangeEdges(t, g, e, f);\n\t  }\n\t}\n\t\n\t/*\n\t * Initializes cut values for all edges in the tree.\n\t */\n\tfunction initCutValues(t, g) {\n\t  var vs = postorder(t, t.nodes());\n\t  vs = vs.slice(0, vs.length - 1);\n\t  _.each(vs, function(v) {\n\t    assignCutValue(t, g, v);\n\t  });\n\t}\n\t\n\tfunction assignCutValue(t, g, child) {\n\t  var childLab = t.node(child),\n\t      parent = childLab.parent;\n\t  t.edge(child, parent).cutvalue = calcCutValue(t, g, child);\n\t}\n\t\n\t/*\n\t * Given the tight tree, its graph, and a child in the graph calculate and\n\t * return the cut value for the edge between the child and its parent.\n\t */\n\tfunction calcCutValue(t, g, child) {\n\t  var childLab = t.node(child),\n\t      parent = childLab.parent,\n\t      // True if the child is on the tail end of the edge in the directed graph\n\t      childIsTail = true,\n\t      // The graph's view of the tree edge we're inspecting\n\t      graphEdge = g.edge(child, parent),\n\t      // The accumulated cut value for the edge between this node and its parent\n\t      cutValue = 0;\n\t\n\t  if (!graphEdge) {\n\t    childIsTail = false;\n\t    graphEdge = g.edge(parent, child);\n\t  }\n\t\n\t  cutValue = graphEdge.weight;\n\t\n\t  _.each(g.nodeEdges(child), function(e) {\n\t    var isOutEdge = e.v === child,\n\t        other = isOutEdge ? e.w : e.v;\n\t\n\t    if (other !== parent) {\n\t      var pointsToHead = isOutEdge === childIsTail,\n\t          otherWeight = g.edge(e).weight;\n\t\n\t      cutValue += pointsToHead ? otherWeight : -otherWeight;\n\t      if (isTreeEdge(t, child, other)) {\n\t        var otherCutValue = t.edge(child, other).cutvalue;\n\t        cutValue += pointsToHead ? -otherCutValue : otherCutValue;\n\t      }\n\t    }\n\t  });\n\t\n\t  return cutValue;\n\t}\n\t\n\tfunction initLowLimValues(tree, root) {\n\t  if (arguments.length < 2) {\n\t    root = tree.nodes()[0];\n\t  }\n\t  dfsAssignLowLim(tree, {}, 1, root);\n\t}\n\t\n\tfunction dfsAssignLowLim(tree, visited, nextLim, v, parent) {\n\t  var low = nextLim,\n\t      label = tree.node(v);\n\t\n\t  visited[v] = true;\n\t  _.each(tree.neighbors(v), function(w) {\n\t    if (!_.has(visited, w)) {\n\t      nextLim = dfsAssignLowLim(tree, visited, nextLim, w, v);\n\t    }\n\t  });\n\t\n\t  label.low = low;\n\t  label.lim = nextLim++;\n\t  if (parent) {\n\t    label.parent = parent;\n\t  } else {\n\t    // TODO should be able to remove this when we incrementally update low lim\n\t    delete label.parent;\n\t  }\n\t\n\t  return nextLim;\n\t}\n\t\n\tfunction leaveEdge(tree) {\n\t  return _.find(tree.edges(), function(e) {\n\t    return tree.edge(e).cutvalue < 0;\n\t  });\n\t}\n\t\n\tfunction enterEdge(t, g, edge) {\n\t  var v = edge.v,\n\t      w = edge.w;\n\t\n\t  // For the rest of this function we assume that v is the tail and w is the\n\t  // head, so if we don't have this edge in the graph we should flip it to\n\t  // match the correct orientation.\n\t  if (!g.hasEdge(v, w)) {\n\t    v = edge.w;\n\t    w = edge.v;\n\t  }\n\t\n\t  var vLabel = t.node(v),\n\t      wLabel = t.node(w),\n\t      tailLabel = vLabel,\n\t      flip = false;\n\t\n\t  // If the root is in the tail of the edge then we need to flip the logic that\n\t  // checks for the head and tail nodes in the candidates function below.\n\t  if (vLabel.lim > wLabel.lim) {\n\t    tailLabel = wLabel;\n\t    flip = true;\n\t  }\n\t\n\t  var candidates = _.filter(g.edges(), function(edge) {\n\t    return flip === isDescendant(t, t.node(edge.v), tailLabel) &&\n\t           flip !== isDescendant(t, t.node(edge.w), tailLabel);\n\t  });\n\t\n\t  return _.min(candidates, function(edge) { return slack(g, edge); });\n\t}\n\t\n\tfunction exchangeEdges(t, g, e, f) {\n\t  var v = e.v,\n\t      w = e.w;\n\t  t.removeEdge(v, w);\n\t  t.setEdge(f.v, f.w, {});\n\t  initLowLimValues(t);\n\t  initCutValues(t, g);\n\t  updateRanks(t, g);\n\t}\n\t\n\tfunction updateRanks(t, g) {\n\t  var root = _.find(t.nodes(), function(v) { return !g.node(v).parent; }),\n\t      vs = preorder(t, root);\n\t  vs = vs.slice(1);\n\t  _.each(vs, function(v) {\n\t    var parent = t.node(v).parent,\n\t        edge = g.edge(v, parent),\n\t        flipped = false;\n\t\n\t    if (!edge) {\n\t      edge = g.edge(parent, v);\n\t      flipped = true;\n\t    }\n\t\n\t    g.node(v).rank = g.node(parent).rank + (flipped ? edge.minlen : -edge.minlen);\n\t  });\n\t}\n\t\n\t/*\n\t * Returns true if the edge is in the tree.\n\t */\n\tfunction isTreeEdge(tree, u, v) {\n\t  return tree.hasEdge(u, v);\n\t}\n\t\n\t/*\n\t * Returns true if the specified node is descendant of the root node per the\n\t * assigned low and lim attributes in the tree.\n\t */\n\tfunction isDescendant(tree, vLabel, rootLabel) {\n\t  return rootLabel.low <= vLabel.lim && vLabel.lim <= rootLabel.lim;\n\t}\n\t\n\t},{\"../graphlib\":60,\"../lodash\":63,\"../util\":82,\"./feasible-tree\":78,\"./util\":81}],81:[function(require,module,exports){\n\t\"use strict\";\n\t\n\tvar _ = require(\"../lodash\");\n\t\n\tmodule.exports = {\n\t  longestPath: longestPath,\n\t  slack: slack\n\t};\n\t\n\t/*\n\t * Initializes ranks for the input graph using the longest path algorithm. This\n\t * algorithm scales well and is fast in practice, it yields rather poor\n\t * solutions. Nodes are pushed to the lowest layer possible, leaving the bottom\n\t * ranks wide and leaving edges longer than necessary. However, due to its\n\t * speed, this algorithm is good for getting an initial ranking that can be fed\n\t * into other algorithms.\n\t *\n\t * This algorithm does not normalize layers because it will be used by other\n\t * algorithms in most cases. If using this algorithm directly, be sure to\n\t * run normalize at the end.\n\t *\n\t * Pre-conditions:\n\t *\n\t *    1. Input graph is a DAG.\n\t *    2. Input graph node labels can be assigned properties.\n\t *\n\t * Post-conditions:\n\t *\n\t *    1. Each node will be assign an (unnormalized) \"rank\" property.\n\t */\n\tfunction longestPath(g) {\n\t  var visited = {};\n\t\n\t  function dfs(v) {\n\t    var label = g.node(v);\n\t    if (_.has(visited, v)) {\n\t      return label.rank;\n\t    }\n\t    visited[v] = true;\n\t\n\t    var rank = _.min(_.map(g.outEdges(v), function(e) {\n\t      return dfs(e.w) - g.edge(e).minlen;\n\t    }));\n\t\n\t    if (rank === Number.POSITIVE_INFINITY) {\n\t      rank = 0;\n\t    }\n\t\n\t    return (label.rank = rank);\n\t  }\n\t\n\t  _.each(g.sources(), dfs);\n\t}\n\t\n\t/*\n\t * Returns the amount of slack for the given edge. The slack is defined as the\n\t * difference between the length of the edge and its minimum length.\n\t */\n\tfunction slack(g, e) {\n\t  return g.node(e.w).rank - g.node(e.v).rank - g.edge(e).minlen;\n\t}\n\t\n\t},{\"../lodash\":63}],82:[function(require,module,exports){\n\t\"use strict\";\n\t\n\tvar _ = require(\"./lodash\"),\n\t    Graph = require(\"./graphlib\").Graph;\n\t\n\tmodule.exports = {\n\t  addDummyNode: addDummyNode,\n\t  simplify: simplify,\n\t  asNonCompoundGraph: asNonCompoundGraph,\n\t  successorWeights: successorWeights,\n\t  predecessorWeights: predecessorWeights,\n\t  intersectRect: intersectRect,\n\t  buildLayerMatrix: buildLayerMatrix,\n\t  normalizeRanks: normalizeRanks,\n\t  removeEmptyRanks: removeEmptyRanks,\n\t  addBorderNode: addBorderNode,\n\t  maxRank: maxRank,\n\t  partition: partition,\n\t  time: time,\n\t  notime: notime\n\t};\n\t\n\t/*\n\t * Adds a dummy node to the graph and return v.\n\t */\n\tfunction addDummyNode(g, type, attrs, name) {\n\t  var v;\n\t  do {\n\t    v = _.uniqueId(name);\n\t  } while (g.hasNode(v));\n\t\n\t  attrs.dummy = type;\n\t  g.setNode(v, attrs);\n\t  return v;\n\t}\n\t\n\t/*\n\t * Returns a new graph with only simple edges. Handles aggregation of data\n\t * associated with multi-edges.\n\t */\n\tfunction simplify(g) {\n\t  var simplified = new Graph().setGraph(g.graph());\n\t  _.each(g.nodes(), function(v) { simplified.setNode(v, g.node(v)); });\n\t  _.each(g.edges(), function(e) {\n\t    var simpleLabel = simplified.edge(e.v, e.w) || { weight: 0, minlen: 1 },\n\t        label = g.edge(e);\n\t    simplified.setEdge(e.v, e.w, {\n\t      weight: simpleLabel.weight + label.weight,\n\t      minlen: Math.max(simpleLabel.minlen, label.minlen)\n\t    });\n\t  });\n\t  return simplified;\n\t}\n\t\n\tfunction asNonCompoundGraph(g) {\n\t  var simplified = new Graph({ multigraph: g.isMultigraph() }).setGraph(g.graph());\n\t  _.each(g.nodes(), function(v) {\n\t    if (!g.children(v).length) {\n\t      simplified.setNode(v, g.node(v));\n\t    }\n\t  });\n\t  _.each(g.edges(), function(e) {\n\t    simplified.setEdge(e, g.edge(e));\n\t  });\n\t  return simplified;\n\t}\n\t\n\tfunction successorWeights(g) {\n\t  var weightMap = _.map(g.nodes(), function(v) {\n\t    var sucs = {};\n\t    _.each(g.outEdges(v), function(e) {\n\t      sucs[e.w] = (sucs[e.w] || 0) + g.edge(e).weight;\n\t    });\n\t    return sucs;\n\t  });\n\t  return _.zipObject(g.nodes(), weightMap);\n\t}\n\t\n\tfunction predecessorWeights(g) {\n\t  var weightMap = _.map(g.nodes(), function(v) {\n\t    var preds = {};\n\t    _.each(g.inEdges(v), function(e) {\n\t      preds[e.v] = (preds[e.v] || 0) + g.edge(e).weight;\n\t    });\n\t    return preds;\n\t  });\n\t  return _.zipObject(g.nodes(), weightMap);\n\t}\n\t\n\t/*\n\t * Finds where a line starting at point ({x, y}) would intersect a rectangle\n\t * ({x, y, width, height}) if it were pointing at the rectangle's center.\n\t */\n\tfunction intersectRect(rect, point) {\n\t  var x = rect.x;\n\t  var y = rect.y;\n\t\n\t  // Rectangle intersection algorithm from:\n\t  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n\t  var dx = point.x - x;\n\t  var dy = point.y - y;\n\t  var w = rect.width / 2;\n\t  var h = rect.height / 2;\n\t\n\t  if (!dx && !dy) {\n\t    throw new Error(\"Not possible to find intersection inside of the rectangle\");\n\t  }\n\t\n\t  var sx, sy;\n\t  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n\t    // Intersection is top or bottom of rect.\n\t    if (dy < 0) {\n\t      h = -h;\n\t    }\n\t    sx = h * dx / dy;\n\t    sy = h;\n\t  } else {\n\t    // Intersection is left or right of rect.\n\t    if (dx < 0) {\n\t      w = -w;\n\t    }\n\t    sx = w;\n\t    sy = w * dy / dx;\n\t  }\n\t\n\t  return { x: x + sx, y: y + sy };\n\t}\n\t\n\t/*\n\t * Given a DAG with each node assigned \"rank\" and \"order\" properties, this\n\t * function will produce a matrix with the ids of each node.\n\t */\n\tfunction buildLayerMatrix(g) {\n\t  var layering = _.map(_.range(maxRank(g) + 1), function() { return []; });\n\t  _.each(g.nodes(), function(v) {\n\t    var node = g.node(v),\n\t        rank = node.rank;\n\t    if (!_.isUndefined(rank)) {\n\t      layering[rank][node.order] = v;\n\t    }\n\t  });\n\t  return layering;\n\t}\n\t\n\t/*\n\t * Adjusts the ranks for all nodes in the graph such that all nodes v have\n\t * rank(v) >= 0 and at least one node w has rank(w) = 0.\n\t */\n\tfunction normalizeRanks(g) {\n\t  var min = _.min(_.map(g.nodes(), function(v) { return g.node(v).rank; }));\n\t  _.each(g.nodes(), function(v) {\n\t    var node = g.node(v);\n\t    if (_.has(node, \"rank\")) {\n\t      node.rank -= min;\n\t    }\n\t  });\n\t}\n\t\n\tfunction removeEmptyRanks(g) {\n\t  // Ranks may not start at 0, so we need to offset them\n\t  var offset = _.min(_.map(g.nodes(), function(v) { return g.node(v).rank; }));\n\t\n\t  var layers = [];\n\t  _.each(g.nodes(), function(v) {\n\t    var rank = g.node(v).rank - offset;\n\t    if (!layers[rank]) {\n\t      layers[rank] = [];\n\t    }\n\t    layers[rank].push(v);\n\t  });\n\t\n\t  var delta = 0,\n\t      nodeRankFactor = g.graph().nodeRankFactor;\n\t  _.each(layers, function(vs, i) {\n\t    if (_.isUndefined(vs) && i % nodeRankFactor !== 0) {\n\t      --delta;\n\t    } else if (delta) {\n\t      _.each(vs, function(v) { g.node(v).rank += delta; });\n\t    }\n\t  });\n\t}\n\t\n\tfunction addBorderNode(g, prefix, rank, order) {\n\t  var node = {\n\t    width: 0,\n\t    height: 0\n\t  };\n\t  if (arguments.length >= 4) {\n\t    node.rank = rank;\n\t    node.order = order;\n\t  }\n\t  return addDummyNode(g, \"border\", node, prefix);\n\t}\n\t\n\tfunction maxRank(g) {\n\t  return _.max(_.map(g.nodes(), function(v) {\n\t    var rank = g.node(v).rank;\n\t    if (!_.isUndefined(rank)) {\n\t      return rank;\n\t    }\n\t  }));\n\t}\n\t\n\t/*\n\t * Partition a collection into two groups: `lhs` and `rhs`. If the supplied\n\t * function returns true for an entry it goes into `lhs`. Otherwise it goes\n\t * into `rhs.\n\t */\n\tfunction partition(collection, fn) {\n\t  var result = { lhs: [], rhs: [] };\n\t  _.each(collection, function(value) {\n\t    if (fn(value)) {\n\t      result.lhs.push(value);\n\t    } else {\n\t      result.rhs.push(value);\n\t    }\n\t  });\n\t  return result;\n\t}\n\t\n\t/*\n\t * Returns a new function that wraps `fn` with a timer. The wrapper logs the\n\t * time it takes to execute the function.\n\t */\n\tfunction time(name, fn) {\n\t  var start = _.now();\n\t  try {\n\t    return fn();\n\t  } finally {\n\t    console.log(name + \" time: \" + (_.now() - start) + \"ms\");\n\t  }\n\t}\n\t\n\tfunction notime(name, fn) {\n\t  return fn();\n\t}\n\t\n\t},{\"./graphlib\":60,\"./lodash\":63}],83:[function(require,module,exports){\n\tmodule.exports = \"0.7.4\";\n\t\n\t},{}],84:[function(require,module,exports){\n\tmodule.exports=require(33)\n\t},{\"./lib\":100,\"./lib/alg\":91,\"./lib/json\":101,\"/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/index.js\":33}],85:[function(require,module,exports){\n\tmodule.exports=require(34)\n\t},{\"../lodash\":102,\"/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/alg/components.js\":34}],86:[function(require,module,exports){\n\tmodule.exports=require(35)\n\t},{\"../lodash\":102,\"/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/alg/dfs.js\":35}],87:[function(require,module,exports){\n\tmodule.exports=require(36)\n\t},{\"../lodash\":102,\"./dijkstra\":88,\"/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/alg/dijkstra-all.js\":36}],88:[function(require,module,exports){\n\tmodule.exports=require(37)\n\t},{\"../data/priority-queue\":98,\"../lodash\":102,\"/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/alg/dijkstra.js\":37}],89:[function(require,module,exports){\n\tmodule.exports=require(38)\n\t},{\"../lodash\":102,\"./tarjan\":96,\"/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/alg/find-cycles.js\":38}],90:[function(require,module,exports){\n\tmodule.exports=require(39)\n\t},{\"../lodash\":102,\"/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/alg/floyd-warshall.js\":39}],91:[function(require,module,exports){\n\tmodule.exports=require(40)\n\t},{\"./components\":85,\"./dijkstra\":88,\"./dijkstra-all\":87,\"./find-cycles\":89,\"./floyd-warshall\":90,\"./is-acyclic\":92,\"./postorder\":93,\"./preorder\":94,\"./prim\":95,\"./tarjan\":96,\"./topsort\":97,\"/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/alg/index.js\":40}],92:[function(require,module,exports){\n\tmodule.exports=require(41)\n\t},{\"./topsort\":97,\"/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/alg/is-acyclic.js\":41}],93:[function(require,module,exports){\n\tmodule.exports=require(42)\n\t},{\"./dfs\":86,\"/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/alg/postorder.js\":42}],94:[function(require,module,exports){\n\tmodule.exports=require(43)\n\t},{\"./dfs\":86,\"/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/alg/preorder.js\":43}],95:[function(require,module,exports){\n\tmodule.exports=require(44)\n\t},{\"../data/priority-queue\":98,\"../graph\":99,\"../lodash\":102,\"/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/alg/prim.js\":44}],96:[function(require,module,exports){\n\tmodule.exports=require(45)\n\t},{\"../lodash\":102,\"/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/alg/tarjan.js\":45}],97:[function(require,module,exports){\n\tmodule.exports=require(46)\n\t},{\"../lodash\":102,\"/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/alg/topsort.js\":46}],98:[function(require,module,exports){\n\tmodule.exports=require(47)\n\t},{\"../lodash\":102,\"/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/data/priority-queue.js\":47}],99:[function(require,module,exports){\n\tmodule.exports=require(48)\n\t},{\"./lodash\":102,\"/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/graph.js\":48}],100:[function(require,module,exports){\n\tmodule.exports=require(49)\n\t},{\"./graph\":99,\"./version\":103,\"/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/index.js\":49}],101:[function(require,module,exports){\n\tmodule.exports=require(50)\n\t},{\"./graph\":99,\"./lodash\":102,\"/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/json.js\":50}],102:[function(require,module,exports){\n\tmodule.exports=require(51)\n\t},{\"/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/lodash.js\":51,\"lodash\":104}],103:[function(require,module,exports){\n\tmodule.exports=require(52)\n\t},{\"/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/version.js\":52}],104:[function(require,module,exports){\n\tmodule.exports=require(53)\n\t},{\"/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/lodash/index.js\":53}],105:[function(require,module,exports){\n\t//! moment.js\n\t//! version : 2.11.1\n\t//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n\t//! license : MIT\n\t//! momentjs.com\n\t\n\t;(function (global, factory) {\n\t    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\t    typeof define === 'function' && define.amd ? define(factory) :\n\t    global.moment = factory()\n\t}(this, function () { 'use strict';\n\t\n\t    var hookCallback;\n\t\n\t    function utils_hooks__hooks () {\n\t        return hookCallback.apply(null, arguments);\n\t    }\n\t\n\t    // This is done to register the method called with moment()\n\t    // without creating circular dependencies.\n\t    function setHookCallback (callback) {\n\t        hookCallback = callback;\n\t    }\n\t\n\t    function isArray(input) {\n\t        return Object.prototype.toString.call(input) === '[object Array]';\n\t    }\n\t\n\t    function isDate(input) {\n\t        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n\t    }\n\t\n\t    function map(arr, fn) {\n\t        var res = [], i;\n\t        for (i = 0; i < arr.length; ++i) {\n\t            res.push(fn(arr[i], i));\n\t        }\n\t        return res;\n\t    }\n\t\n\t    function hasOwnProp(a, b) {\n\t        return Object.prototype.hasOwnProperty.call(a, b);\n\t    }\n\t\n\t    function extend(a, b) {\n\t        for (var i in b) {\n\t            if (hasOwnProp(b, i)) {\n\t                a[i] = b[i];\n\t            }\n\t        }\n\t\n\t        if (hasOwnProp(b, 'toString')) {\n\t            a.toString = b.toString;\n\t        }\n\t\n\t        if (hasOwnProp(b, 'valueOf')) {\n\t            a.valueOf = b.valueOf;\n\t        }\n\t\n\t        return a;\n\t    }\n\t\n\t    function create_utc__createUTC (input, format, locale, strict) {\n\t        return createLocalOrUTC(input, format, locale, strict, true).utc();\n\t    }\n\t\n\t    function defaultParsingFlags() {\n\t        // We need to deep clone this object.\n\t        return {\n\t            empty           : false,\n\t            unusedTokens    : [],\n\t            unusedInput     : [],\n\t            overflow        : -2,\n\t            charsLeftOver   : 0,\n\t            nullInput       : false,\n\t            invalidMonth    : null,\n\t            invalidFormat   : false,\n\t            userInvalidated : false,\n\t            iso             : false\n\t        };\n\t    }\n\t\n\t    function getParsingFlags(m) {\n\t        if (m._pf == null) {\n\t            m._pf = defaultParsingFlags();\n\t        }\n\t        return m._pf;\n\t    }\n\t\n\t    function valid__isValid(m) {\n\t        if (m._isValid == null) {\n\t            var flags = getParsingFlags(m);\n\t            m._isValid = !isNaN(m._d.getTime()) &&\n\t                flags.overflow < 0 &&\n\t                !flags.empty &&\n\t                !flags.invalidMonth &&\n\t                !flags.invalidWeekday &&\n\t                !flags.nullInput &&\n\t                !flags.invalidFormat &&\n\t                !flags.userInvalidated;\n\t\n\t            if (m._strict) {\n\t                m._isValid = m._isValid &&\n\t                    flags.charsLeftOver === 0 &&\n\t                    flags.unusedTokens.length === 0 &&\n\t                    flags.bigHour === undefined;\n\t            }\n\t        }\n\t        return m._isValid;\n\t    }\n\t\n\t    function valid__createInvalid (flags) {\n\t        var m = create_utc__createUTC(NaN);\n\t        if (flags != null) {\n\t            extend(getParsingFlags(m), flags);\n\t        }\n\t        else {\n\t            getParsingFlags(m).userInvalidated = true;\n\t        }\n\t\n\t        return m;\n\t    }\n\t\n\t    function isUndefined(input) {\n\t        return input === void 0;\n\t    }\n\t\n\t    // Plugins that add properties should also add the key here (null value),\n\t    // so we can properly clone ourselves.\n\t    var momentProperties = utils_hooks__hooks.momentProperties = [];\n\t\n\t    function copyConfig(to, from) {\n\t        var i, prop, val;\n\t\n\t        if (!isUndefined(from._isAMomentObject)) {\n\t            to._isAMomentObject = from._isAMomentObject;\n\t        }\n\t        if (!isUndefined(from._i)) {\n\t            to._i = from._i;\n\t        }\n\t        if (!isUndefined(from._f)) {\n\t            to._f = from._f;\n\t        }\n\t        if (!isUndefined(from._l)) {\n\t            to._l = from._l;\n\t        }\n\t        if (!isUndefined(from._strict)) {\n\t            to._strict = from._strict;\n\t        }\n\t        if (!isUndefined(from._tzm)) {\n\t            to._tzm = from._tzm;\n\t        }\n\t        if (!isUndefined(from._isUTC)) {\n\t            to._isUTC = from._isUTC;\n\t        }\n\t        if (!isUndefined(from._offset)) {\n\t            to._offset = from._offset;\n\t        }\n\t        if (!isUndefined(from._pf)) {\n\t            to._pf = getParsingFlags(from);\n\t        }\n\t        if (!isUndefined(from._locale)) {\n\t            to._locale = from._locale;\n\t        }\n\t\n\t        if (momentProperties.length > 0) {\n\t            for (i in momentProperties) {\n\t                prop = momentProperties[i];\n\t                val = from[prop];\n\t                if (!isUndefined(val)) {\n\t                    to[prop] = val;\n\t                }\n\t            }\n\t        }\n\t\n\t        return to;\n\t    }\n\t\n\t    var updateInProgress = false;\n\t\n\t    // Moment prototype object\n\t    function Moment(config) {\n\t        copyConfig(this, config);\n\t        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\t        // Prevent infinite loop in case updateOffset creates new moment\n\t        // objects.\n\t        if (updateInProgress === false) {\n\t            updateInProgress = true;\n\t            utils_hooks__hooks.updateOffset(this);\n\t            updateInProgress = false;\n\t        }\n\t    }\n\t\n\t    function isMoment (obj) {\n\t        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n\t    }\n\t\n\t    function absFloor (number) {\n\t        if (number < 0) {\n\t            return Math.ceil(number);\n\t        } else {\n\t            return Math.floor(number);\n\t        }\n\t    }\n\t\n\t    function toInt(argumentForCoercion) {\n\t        var coercedNumber = +argumentForCoercion,\n\t            value = 0;\n\t\n\t        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n\t            value = absFloor(coercedNumber);\n\t        }\n\t\n\t        return value;\n\t    }\n\t\n\t    // compare two arrays, return the number of differences\n\t    function compareArrays(array1, array2, dontConvert) {\n\t        var len = Math.min(array1.length, array2.length),\n\t            lengthDiff = Math.abs(array1.length - array2.length),\n\t            diffs = 0,\n\t            i;\n\t        for (i = 0; i < len; i++) {\n\t            if ((dontConvert && array1[i] !== array2[i]) ||\n\t                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n\t                diffs++;\n\t            }\n\t        }\n\t        return diffs + lengthDiff;\n\t    }\n\t\n\t    function Locale() {\n\t    }\n\t\n\t    // internal storage for locale config files\n\t    var locales = {};\n\t    var globalLocale;\n\t\n\t    function normalizeLocale(key) {\n\t        return key ? key.toLowerCase().replace('_', '-') : key;\n\t    }\n\t\n\t    // pick the locale from the array\n\t    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n\t    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\t    function chooseLocale(names) {\n\t        var i = 0, j, next, locale, split;\n\t\n\t        while (i < names.length) {\n\t            split = normalizeLocale(names[i]).split('-');\n\t            j = split.length;\n\t            next = normalizeLocale(names[i + 1]);\n\t            next = next ? next.split('-') : null;\n\t            while (j > 0) {\n\t                locale = loadLocale(split.slice(0, j).join('-'));\n\t                if (locale) {\n\t                    return locale;\n\t                }\n\t                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n\t                    //the next array item is better than a shallower substring of this one\n\t                    break;\n\t                }\n\t                j--;\n\t            }\n\t            i++;\n\t        }\n\t        return null;\n\t    }\n\t\n\t    function loadLocale(name) {\n\t        var oldLocale = null;\n\t        // TODO: Find a better way to register and load all the locales in Node\n\t        if (!locales[name] && (typeof module !== 'undefined') &&\n\t                module && module.exports) {\n\t            try {\n\t                oldLocale = globalLocale._abbr;\n\t                require('./locale/' + name);\n\t                // because defineLocale currently also sets the global locale, we\n\t                // want to undo that for lazy loaded locales\n\t                locale_locales__getSetGlobalLocale(oldLocale);\n\t            } catch (e) { }\n\t        }\n\t        return locales[name];\n\t    }\n\t\n\t    // This function will load locale and then set the global locale.  If\n\t    // no arguments are passed in, it will simply return the current global\n\t    // locale key.\n\t    function locale_locales__getSetGlobalLocale (key, values) {\n\t        var data;\n\t        if (key) {\n\t            if (isUndefined(values)) {\n\t                data = locale_locales__getLocale(key);\n\t            }\n\t            else {\n\t                data = defineLocale(key, values);\n\t            }\n\t\n\t            if (data) {\n\t                // moment.duration._locale = moment._locale = data;\n\t                globalLocale = data;\n\t            }\n\t        }\n\t\n\t        return globalLocale._abbr;\n\t    }\n\t\n\t    function defineLocale (name, values) {\n\t        if (values !== null) {\n\t            values.abbr = name;\n\t            locales[name] = locales[name] || new Locale();\n\t            locales[name].set(values);\n\t\n\t            // backwards compat for now: also set the locale\n\t            locale_locales__getSetGlobalLocale(name);\n\t\n\t            return locales[name];\n\t        } else {\n\t            // useful for testing\n\t            delete locales[name];\n\t            return null;\n\t        }\n\t    }\n\t\n\t    // returns locale data\n\t    function locale_locales__getLocale (key) {\n\t        var locale;\n\t\n\t        if (key && key._locale && key._locale._abbr) {\n\t            key = key._locale._abbr;\n\t        }\n\t\n\t        if (!key) {\n\t            return globalLocale;\n\t        }\n\t\n\t        if (!isArray(key)) {\n\t            //short-circuit everything else\n\t            locale = loadLocale(key);\n\t            if (locale) {\n\t                return locale;\n\t            }\n\t            key = [key];\n\t        }\n\t\n\t        return chooseLocale(key);\n\t    }\n\t\n\t    var aliases = {};\n\t\n\t    function addUnitAlias (unit, shorthand) {\n\t        var lowerCase = unit.toLowerCase();\n\t        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n\t    }\n\t\n\t    function normalizeUnits(units) {\n\t        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n\t    }\n\t\n\t    function normalizeObjectUnits(inputObject) {\n\t        var normalizedInput = {},\n\t            normalizedProp,\n\t            prop;\n\t\n\t        for (prop in inputObject) {\n\t            if (hasOwnProp(inputObject, prop)) {\n\t                normalizedProp = normalizeUnits(prop);\n\t                if (normalizedProp) {\n\t                    normalizedInput[normalizedProp] = inputObject[prop];\n\t                }\n\t            }\n\t        }\n\t\n\t        return normalizedInput;\n\t    }\n\t\n\t    function isFunction(input) {\n\t        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n\t    }\n\t\n\t    function makeGetSet (unit, keepTime) {\n\t        return function (value) {\n\t            if (value != null) {\n\t                get_set__set(this, unit, value);\n\t                utils_hooks__hooks.updateOffset(this, keepTime);\n\t                return this;\n\t            } else {\n\t                return get_set__get(this, unit);\n\t            }\n\t        };\n\t    }\n\t\n\t    function get_set__get (mom, unit) {\n\t        return mom.isValid() ?\n\t            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n\t    }\n\t\n\t    function get_set__set (mom, unit, value) {\n\t        if (mom.isValid()) {\n\t            mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n\t        }\n\t    }\n\t\n\t    // MOMENTS\n\t\n\t    function getSet (units, value) {\n\t        var unit;\n\t        if (typeof units === 'object') {\n\t            for (unit in units) {\n\t                this.set(unit, units[unit]);\n\t            }\n\t        } else {\n\t            units = normalizeUnits(units);\n\t            if (isFunction(this[units])) {\n\t                return this[units](value);\n\t            }\n\t        }\n\t        return this;\n\t    }\n\t\n\t    function zeroFill(number, targetLength, forceSign) {\n\t        var absNumber = '' + Math.abs(number),\n\t            zerosToFill = targetLength - absNumber.length,\n\t            sign = number >= 0;\n\t        return (sign ? (forceSign ? '+' : '') : '-') +\n\t            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n\t    }\n\t\n\t    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\t\n\t    var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\t\n\t    var formatFunctions = {};\n\t\n\t    var formatTokenFunctions = {};\n\t\n\t    // token:    'M'\n\t    // padded:   ['MM', 2]\n\t    // ordinal:  'Mo'\n\t    // callback: function () { this.month() + 1 }\n\t    function addFormatToken (token, padded, ordinal, callback) {\n\t        var func = callback;\n\t        if (typeof callback === 'string') {\n\t            func = function () {\n\t                return this[callback]();\n\t            };\n\t        }\n\t        if (token) {\n\t            formatTokenFunctions[token] = func;\n\t        }\n\t        if (padded) {\n\t            formatTokenFunctions[padded[0]] = function () {\n\t                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n\t            };\n\t        }\n\t        if (ordinal) {\n\t            formatTokenFunctions[ordinal] = function () {\n\t                return this.localeData().ordinal(func.apply(this, arguments), token);\n\t            };\n\t        }\n\t    }\n\t\n\t    function removeFormattingTokens(input) {\n\t        if (input.match(/\\[[\\s\\S]/)) {\n\t            return input.replace(/^\\[|\\]$/g, '');\n\t        }\n\t        return input.replace(/\\\\/g, '');\n\t    }\n\t\n\t    function makeFormatFunction(format) {\n\t        var array = format.match(formattingTokens), i, length;\n\t\n\t        for (i = 0, length = array.length; i < length; i++) {\n\t            if (formatTokenFunctions[array[i]]) {\n\t                array[i] = formatTokenFunctions[array[i]];\n\t            } else {\n\t                array[i] = removeFormattingTokens(array[i]);\n\t            }\n\t        }\n\t\n\t        return function (mom) {\n\t            var output = '';\n\t            for (i = 0; i < length; i++) {\n\t                output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];\n\t            }\n\t            return output;\n\t        };\n\t    }\n\t\n\t    // format date using native date object\n\t    function formatMoment(m, format) {\n\t        if (!m.isValid()) {\n\t            return m.localeData().invalidDate();\n\t        }\n\t\n\t        format = expandFormat(format, m.localeData());\n\t        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\t\n\t        return formatFunctions[format](m);\n\t    }\n\t\n\t    function expandFormat(format, locale) {\n\t        var i = 5;\n\t\n\t        function replaceLongDateFormatTokens(input) {\n\t            return locale.longDateFormat(input) || input;\n\t        }\n\t\n\t        localFormattingTokens.lastIndex = 0;\n\t        while (i >= 0 && localFormattingTokens.test(format)) {\n\t            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n\t            localFormattingTokens.lastIndex = 0;\n\t            i -= 1;\n\t        }\n\t\n\t        return format;\n\t    }\n\t\n\t    var match1         = /\\d/;            //       0 - 9\n\t    var match2         = /\\d\\d/;          //      00 - 99\n\t    var match3         = /\\d{3}/;         //     000 - 999\n\t    var match4         = /\\d{4}/;         //    0000 - 9999\n\t    var match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n\t    var match1to2      = /\\d\\d?/;         //       0 - 99\n\t    var match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\n\t    var match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\t    var match1to3      = /\\d{1,3}/;       //       0 - 999\n\t    var match1to4      = /\\d{1,4}/;       //       0 - 9999\n\t    var match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\t\n\t    var matchUnsigned  = /\\d+/;           //       0 - inf\n\t    var matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\t\n\t    var matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\t    var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\t\n\t    var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\t\n\t    // any word (or two) characters or numbers including two/three word month in arabic.\n\t    // includes scottish gaelic two word and hyphenated months\n\t    var matchWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\n\t\n\t\n\t    var regexes = {};\n\t\n\t    function addRegexToken (token, regex, strictRegex) {\n\t        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n\t            return (isStrict && strictRegex) ? strictRegex : regex;\n\t        };\n\t    }\n\t\n\t    function getParseRegexForToken (token, config) {\n\t        if (!hasOwnProp(regexes, token)) {\n\t            return new RegExp(unescapeFormat(token));\n\t        }\n\t\n\t        return regexes[token](config._strict, config._locale);\n\t    }\n\t\n\t    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\t    function unescapeFormat(s) {\n\t        return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n\t            return p1 || p2 || p3 || p4;\n\t        }));\n\t    }\n\t\n\t    function regexEscape(s) {\n\t        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\t    }\n\t\n\t    var tokens = {};\n\t\n\t    function addParseToken (token, callback) {\n\t        var i, func = callback;\n\t        if (typeof token === 'string') {\n\t            token = [token];\n\t        }\n\t        if (typeof callback === 'number') {\n\t            func = function (input, array) {\n\t                array[callback] = toInt(input);\n\t            };\n\t        }\n\t        for (i = 0; i < token.length; i++) {\n\t            tokens[token[i]] = func;\n\t        }\n\t    }\n\t\n\t    function addWeekParseToken (token, callback) {\n\t        addParseToken(token, function (input, array, config, token) {\n\t            config._w = config._w || {};\n\t            callback(input, config._w, config, token);\n\t        });\n\t    }\n\t\n\t    function addTimeToArrayFromToken(token, input, config) {\n\t        if (input != null && hasOwnProp(tokens, token)) {\n\t            tokens[token](input, config._a, config, token);\n\t        }\n\t    }\n\t\n\t    var YEAR = 0;\n\t    var MONTH = 1;\n\t    var DATE = 2;\n\t    var HOUR = 3;\n\t    var MINUTE = 4;\n\t    var SECOND = 5;\n\t    var MILLISECOND = 6;\n\t    var WEEK = 7;\n\t    var WEEKDAY = 8;\n\t\n\t    function daysInMonth(year, month) {\n\t        return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n\t    }\n\t\n\t    // FORMATTING\n\t\n\t    addFormatToken('M', ['MM', 2], 'Mo', function () {\n\t        return this.month() + 1;\n\t    });\n\t\n\t    addFormatToken('MMM', 0, 0, function (format) {\n\t        return this.localeData().monthsShort(this, format);\n\t    });\n\t\n\t    addFormatToken('MMMM', 0, 0, function (format) {\n\t        return this.localeData().months(this, format);\n\t    });\n\t\n\t    // ALIASES\n\t\n\t    addUnitAlias('month', 'M');\n\t\n\t    // PARSING\n\t\n\t    addRegexToken('M',    match1to2);\n\t    addRegexToken('MM',   match1to2, match2);\n\t    addRegexToken('MMM',  function (isStrict, locale) {\n\t        return locale.monthsShortRegex(isStrict);\n\t    });\n\t    addRegexToken('MMMM', function (isStrict, locale) {\n\t        return locale.monthsRegex(isStrict);\n\t    });\n\t\n\t    addParseToken(['M', 'MM'], function (input, array) {\n\t        array[MONTH] = toInt(input) - 1;\n\t    });\n\t\n\t    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n\t        var month = config._locale.monthsParse(input, token, config._strict);\n\t        // if we didn't find a month name, mark the date as invalid.\n\t        if (month != null) {\n\t            array[MONTH] = month;\n\t        } else {\n\t            getParsingFlags(config).invalidMonth = input;\n\t        }\n\t    });\n\t\n\t    // LOCALES\n\t\n\t    var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?/;\n\t    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\t    function localeMonths (m, format) {\n\t        return isArray(this._months) ? this._months[m.month()] :\n\t            this._months[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n\t    }\n\t\n\t    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\t    function localeMonthsShort (m, format) {\n\t        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n\t            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n\t    }\n\t\n\t    function localeMonthsParse (monthName, format, strict) {\n\t        var i, mom, regex;\n\t\n\t        if (!this._monthsParse) {\n\t            this._monthsParse = [];\n\t            this._longMonthsParse = [];\n\t            this._shortMonthsParse = [];\n\t        }\n\t\n\t        for (i = 0; i < 12; i++) {\n\t            // make the regex if we don't have it already\n\t            mom = create_utc__createUTC([2000, i]);\n\t            if (strict && !this._longMonthsParse[i]) {\n\t                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n\t                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n\t            }\n\t            if (!strict && !this._monthsParse[i]) {\n\t                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n\t                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n\t            }\n\t            // test the regex\n\t            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n\t                return i;\n\t            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n\t                return i;\n\t            } else if (!strict && this._monthsParse[i].test(monthName)) {\n\t                return i;\n\t            }\n\t        }\n\t    }\n\t\n\t    // MOMENTS\n\t\n\t    function setMonth (mom, value) {\n\t        var dayOfMonth;\n\t\n\t        if (!mom.isValid()) {\n\t            // No op\n\t            return mom;\n\t        }\n\t\n\t        // TODO: Move this out of here!\n\t        if (typeof value === 'string') {\n\t            value = mom.localeData().monthsParse(value);\n\t            // TODO: Another silent failure?\n\t            if (typeof value !== 'number') {\n\t                return mom;\n\t            }\n\t        }\n\t\n\t        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\t        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\t        return mom;\n\t    }\n\t\n\t    function getSetMonth (value) {\n\t        if (value != null) {\n\t            setMonth(this, value);\n\t            utils_hooks__hooks.updateOffset(this, true);\n\t            return this;\n\t        } else {\n\t            return get_set__get(this, 'Month');\n\t        }\n\t    }\n\t\n\t    function getDaysInMonth () {\n\t        return daysInMonth(this.year(), this.month());\n\t    }\n\t\n\t    var defaultMonthsShortRegex = matchWord;\n\t    function monthsShortRegex (isStrict) {\n\t        if (this._monthsParseExact) {\n\t            if (!hasOwnProp(this, '_monthsRegex')) {\n\t                computeMonthsParse.call(this);\n\t            }\n\t            if (isStrict) {\n\t                return this._monthsShortStrictRegex;\n\t            } else {\n\t                return this._monthsShortRegex;\n\t            }\n\t        } else {\n\t            return this._monthsShortStrictRegex && isStrict ?\n\t                this._monthsShortStrictRegex : this._monthsShortRegex;\n\t        }\n\t    }\n\t\n\t    var defaultMonthsRegex = matchWord;\n\t    function monthsRegex (isStrict) {\n\t        if (this._monthsParseExact) {\n\t            if (!hasOwnProp(this, '_monthsRegex')) {\n\t                computeMonthsParse.call(this);\n\t            }\n\t            if (isStrict) {\n\t                return this._monthsStrictRegex;\n\t            } else {\n\t                return this._monthsRegex;\n\t            }\n\t        } else {\n\t            return this._monthsStrictRegex && isStrict ?\n\t                this._monthsStrictRegex : this._monthsRegex;\n\t        }\n\t    }\n\t\n\t    function computeMonthsParse () {\n\t        function cmpLenRev(a, b) {\n\t            return b.length - a.length;\n\t        }\n\t\n\t        var shortPieces = [], longPieces = [], mixedPieces = [],\n\t            i, mom;\n\t        for (i = 0; i < 12; i++) {\n\t            // make the regex if we don't have it already\n\t            mom = create_utc__createUTC([2000, i]);\n\t            shortPieces.push(this.monthsShort(mom, ''));\n\t            longPieces.push(this.months(mom, ''));\n\t            mixedPieces.push(this.months(mom, ''));\n\t            mixedPieces.push(this.monthsShort(mom, ''));\n\t        }\n\t        // Sorting makes sure if one month (or abbr) is a prefix of another it\n\t        // will match the longer piece.\n\t        shortPieces.sort(cmpLenRev);\n\t        longPieces.sort(cmpLenRev);\n\t        mixedPieces.sort(cmpLenRev);\n\t        for (i = 0; i < 12; i++) {\n\t            shortPieces[i] = regexEscape(shortPieces[i]);\n\t            longPieces[i] = regexEscape(longPieces[i]);\n\t            mixedPieces[i] = regexEscape(mixedPieces[i]);\n\t        }\n\t\n\t        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n\t        this._monthsShortRegex = this._monthsRegex;\n\t        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')$', 'i');\n\t        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')$', 'i');\n\t    }\n\t\n\t    function checkOverflow (m) {\n\t        var overflow;\n\t        var a = m._a;\n\t\n\t        if (a && getParsingFlags(m).overflow === -2) {\n\t            overflow =\n\t                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n\t                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n\t                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n\t                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n\t                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n\t                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n\t                -1;\n\t\n\t            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n\t                overflow = DATE;\n\t            }\n\t            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n\t                overflow = WEEK;\n\t            }\n\t            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n\t                overflow = WEEKDAY;\n\t            }\n\t\n\t            getParsingFlags(m).overflow = overflow;\n\t        }\n\t\n\t        return m;\n\t    }\n\t\n\t    function warn(msg) {\n\t        if (utils_hooks__hooks.suppressDeprecationWarnings === false &&\n\t                (typeof console !==  'undefined') && console.warn) {\n\t            console.warn('Deprecation warning: ' + msg);\n\t        }\n\t    }\n\t\n\t    function deprecate(msg, fn) {\n\t        var firstTime = true;\n\t\n\t        return extend(function () {\n\t            if (firstTime) {\n\t                warn(msg + '\\nArguments: ' + Array.prototype.slice.call(arguments).join(', ') + '\\n' + (new Error()).stack);\n\t                firstTime = false;\n\t            }\n\t            return fn.apply(this, arguments);\n\t        }, fn);\n\t    }\n\t\n\t    var deprecations = {};\n\t\n\t    function deprecateSimple(name, msg) {\n\t        if (!deprecations[name]) {\n\t            warn(msg);\n\t            deprecations[name] = true;\n\t        }\n\t    }\n\t\n\t    utils_hooks__hooks.suppressDeprecationWarnings = false;\n\t\n\t    // iso 8601 regex\n\t    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\t    var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?/;\n\t    var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?/;\n\t\n\t    var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\t\n\t    var isoDates = [\n\t        ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n\t        ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n\t        ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n\t        ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n\t        ['YYYY-DDD', /\\d{4}-\\d{3}/],\n\t        ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n\t        ['YYYYYYMMDD', /[+-]\\d{10}/],\n\t        ['YYYYMMDD', /\\d{8}/],\n\t        // YYYYMM is NOT allowed by the standard\n\t        ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n\t        ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n\t        ['YYYYDDD', /\\d{7}/]\n\t    ];\n\t\n\t    // iso time formats and regexes\n\t    var isoTimes = [\n\t        ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n\t        ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n\t        ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n\t        ['HH:mm', /\\d\\d:\\d\\d/],\n\t        ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n\t        ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n\t        ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n\t        ['HHmm', /\\d\\d\\d\\d/],\n\t        ['HH', /\\d\\d/]\n\t    ];\n\t\n\t    var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\t\n\t    // date from iso format\n\t    function configFromISO(config) {\n\t        var i, l,\n\t            string = config._i,\n\t            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n\t            allowTime, dateFormat, timeFormat, tzFormat;\n\t\n\t        if (match) {\n\t            getParsingFlags(config).iso = true;\n\t\n\t            for (i = 0, l = isoDates.length; i < l; i++) {\n\t                if (isoDates[i][1].exec(match[1])) {\n\t                    dateFormat = isoDates[i][0];\n\t                    allowTime = isoDates[i][2] !== false;\n\t                    break;\n\t                }\n\t            }\n\t            if (dateFormat == null) {\n\t                config._isValid = false;\n\t                return;\n\t            }\n\t            if (match[3]) {\n\t                for (i = 0, l = isoTimes.length; i < l; i++) {\n\t                    if (isoTimes[i][1].exec(match[3])) {\n\t                        // match[2] should be 'T' or space\n\t                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n\t                        break;\n\t                    }\n\t                }\n\t                if (timeFormat == null) {\n\t                    config._isValid = false;\n\t                    return;\n\t                }\n\t            }\n\t            if (!allowTime && timeFormat != null) {\n\t                config._isValid = false;\n\t                return;\n\t            }\n\t            if (match[4]) {\n\t                if (tzRegex.exec(match[4])) {\n\t                    tzFormat = 'Z';\n\t                } else {\n\t                    config._isValid = false;\n\t                    return;\n\t                }\n\t            }\n\t            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n\t            configFromStringAndFormat(config);\n\t        } else {\n\t            config._isValid = false;\n\t        }\n\t    }\n\t\n\t    // date from iso format or fallback\n\t    function configFromString(config) {\n\t        var matched = aspNetJsonRegex.exec(config._i);\n\t\n\t        if (matched !== null) {\n\t            config._d = new Date(+matched[1]);\n\t            return;\n\t        }\n\t\n\t        configFromISO(config);\n\t        if (config._isValid === false) {\n\t            delete config._isValid;\n\t            utils_hooks__hooks.createFromInputFallback(config);\n\t        }\n\t    }\n\t\n\t    utils_hooks__hooks.createFromInputFallback = deprecate(\n\t        'moment construction falls back to js Date. This is ' +\n\t        'discouraged and will be removed in upcoming major ' +\n\t        'release. Please refer to ' +\n\t        'https://github.com/moment/moment/issues/1407 for more info.',\n\t        function (config) {\n\t            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n\t        }\n\t    );\n\t\n\t    function createDate (y, m, d, h, M, s, ms) {\n\t        //can't just apply() to create a date:\n\t        //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply\n\t        var date = new Date(y, m, d, h, M, s, ms);\n\t\n\t        //the date constructor remaps years 0-99 to 1900-1999\n\t        if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n\t            date.setFullYear(y);\n\t        }\n\t        return date;\n\t    }\n\t\n\t    function createUTCDate (y) {\n\t        var date = new Date(Date.UTC.apply(null, arguments));\n\t\n\t        //the Date.UTC function remaps years 0-99 to 1900-1999\n\t        if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n\t            date.setUTCFullYear(y);\n\t        }\n\t        return date;\n\t    }\n\t\n\t    // FORMATTING\n\t\n\t    addFormatToken('Y', 0, 0, function () {\n\t        var y = this.year();\n\t        return y <= 9999 ? '' + y : '+' + y;\n\t    });\n\t\n\t    addFormatToken(0, ['YY', 2], 0, function () {\n\t        return this.year() % 100;\n\t    });\n\t\n\t    addFormatToken(0, ['YYYY',   4],       0, 'year');\n\t    addFormatToken(0, ['YYYYY',  5],       0, 'year');\n\t    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\t\n\t    // ALIASES\n\t\n\t    addUnitAlias('year', 'y');\n\t\n\t    // PARSING\n\t\n\t    addRegexToken('Y',      matchSigned);\n\t    addRegexToken('YY',     match1to2, match2);\n\t    addRegexToken('YYYY',   match1to4, match4);\n\t    addRegexToken('YYYYY',  match1to6, match6);\n\t    addRegexToken('YYYYYY', match1to6, match6);\n\t\n\t    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n\t    addParseToken('YYYY', function (input, array) {\n\t        array[YEAR] = input.length === 2 ? utils_hooks__hooks.parseTwoDigitYear(input) : toInt(input);\n\t    });\n\t    addParseToken('YY', function (input, array) {\n\t        array[YEAR] = utils_hooks__hooks.parseTwoDigitYear(input);\n\t    });\n\t    addParseToken('Y', function (input, array) {\n\t        array[YEAR] = parseInt(input, 10);\n\t    });\n\t\n\t    // HELPERS\n\t\n\t    function daysInYear(year) {\n\t        return isLeapYear(year) ? 366 : 365;\n\t    }\n\t\n\t    function isLeapYear(year) {\n\t        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n\t    }\n\t\n\t    // HOOKS\n\t\n\t    utils_hooks__hooks.parseTwoDigitYear = function (input) {\n\t        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n\t    };\n\t\n\t    // MOMENTS\n\t\n\t    var getSetYear = makeGetSet('FullYear', false);\n\t\n\t    function getIsLeapYear () {\n\t        return isLeapYear(this.year());\n\t    }\n\t\n\t    // start-of-first-week - start-of-year\n\t    function firstWeekOffset(year, dow, doy) {\n\t        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n\t            fwd = 7 + dow - doy,\n\t            // first-week day local weekday -- which local weekday is fwd\n\t            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\t\n\t        return -fwdlw + fwd - 1;\n\t    }\n\t\n\t    //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\t    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n\t        var localWeekday = (7 + weekday - dow) % 7,\n\t            weekOffset = firstWeekOffset(year, dow, doy),\n\t            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n\t            resYear, resDayOfYear;\n\t\n\t        if (dayOfYear <= 0) {\n\t            resYear = year - 1;\n\t            resDayOfYear = daysInYear(resYear) + dayOfYear;\n\t        } else if (dayOfYear > daysInYear(year)) {\n\t            resYear = year + 1;\n\t            resDayOfYear = dayOfYear - daysInYear(year);\n\t        } else {\n\t            resYear = year;\n\t            resDayOfYear = dayOfYear;\n\t        }\n\t\n\t        return {\n\t            year: resYear,\n\t            dayOfYear: resDayOfYear\n\t        };\n\t    }\n\t\n\t    function weekOfYear(mom, dow, doy) {\n\t        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n\t            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n\t            resWeek, resYear;\n\t\n\t        if (week < 1) {\n\t            resYear = mom.year() - 1;\n\t            resWeek = week + weeksInYear(resYear, dow, doy);\n\t        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n\t            resWeek = week - weeksInYear(mom.year(), dow, doy);\n\t            resYear = mom.year() + 1;\n\t        } else {\n\t            resYear = mom.year();\n\t            resWeek = week;\n\t        }\n\t\n\t        return {\n\t            week: resWeek,\n\t            year: resYear\n\t        };\n\t    }\n\t\n\t    function weeksInYear(year, dow, doy) {\n\t        var weekOffset = firstWeekOffset(year, dow, doy),\n\t            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n\t        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n\t    }\n\t\n\t    // Pick the first defined of two or three arguments.\n\t    function defaults(a, b, c) {\n\t        if (a != null) {\n\t            return a;\n\t        }\n\t        if (b != null) {\n\t            return b;\n\t        }\n\t        return c;\n\t    }\n\t\n\t    function currentDateArray(config) {\n\t        // hooks is actually the exported moment object\n\t        var nowValue = new Date(utils_hooks__hooks.now());\n\t        if (config._useUTC) {\n\t            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n\t        }\n\t        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n\t    }\n\t\n\t    // convert an array to a date.\n\t    // the array should mirror the parameters below\n\t    // note: all values past the year are optional and will default to the lowest possible value.\n\t    // [year, month, day , hour, minute, second, millisecond]\n\t    function configFromArray (config) {\n\t        var i, date, input = [], currentDate, yearToUse;\n\t\n\t        if (config._d) {\n\t            return;\n\t        }\n\t\n\t        currentDate = currentDateArray(config);\n\t\n\t        //compute day of the year from weeks and weekdays\n\t        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n\t            dayOfYearFromWeekInfo(config);\n\t        }\n\t\n\t        //if the day of the year is set, figure out what it is\n\t        if (config._dayOfYear) {\n\t            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\t\n\t            if (config._dayOfYear > daysInYear(yearToUse)) {\n\t                getParsingFlags(config)._overflowDayOfYear = true;\n\t            }\n\t\n\t            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n\t            config._a[MONTH] = date.getUTCMonth();\n\t            config._a[DATE] = date.getUTCDate();\n\t        }\n\t\n\t        // Default to current date.\n\t        // * if no year, month, day of month are given, default to today\n\t        // * if day of month is given, default month and year\n\t        // * if month is given, default only year\n\t        // * if year is given, don't default anything\n\t        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n\t            config._a[i] = input[i] = currentDate[i];\n\t        }\n\t\n\t        // Zero out whatever was not defaulted, including time\n\t        for (; i < 7; i++) {\n\t            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n\t        }\n\t\n\t        // Check for 24:00:00.000\n\t        if (config._a[HOUR] === 24 &&\n\t                config._a[MINUTE] === 0 &&\n\t                config._a[SECOND] === 0 &&\n\t                config._a[MILLISECOND] === 0) {\n\t            config._nextDay = true;\n\t            config._a[HOUR] = 0;\n\t        }\n\t\n\t        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n\t        // Apply timezone offset from input. The actual utcOffset can be changed\n\t        // with parseZone.\n\t        if (config._tzm != null) {\n\t            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\t        }\n\t\n\t        if (config._nextDay) {\n\t            config._a[HOUR] = 24;\n\t        }\n\t    }\n\t\n\t    function dayOfYearFromWeekInfo(config) {\n\t        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\t\n\t        w = config._w;\n\t        if (w.GG != null || w.W != null || w.E != null) {\n\t            dow = 1;\n\t            doy = 4;\n\t\n\t            // TODO: We need to take the current isoWeekYear, but that depends on\n\t            // how we interpret now (local, utc, fixed offset). So create\n\t            // a now version of current config (take local/utc/offset flags, and\n\t            // create now).\n\t            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(local__createLocal(), 1, 4).year);\n\t            week = defaults(w.W, 1);\n\t            weekday = defaults(w.E, 1);\n\t            if (weekday < 1 || weekday > 7) {\n\t                weekdayOverflow = true;\n\t            }\n\t        } else {\n\t            dow = config._locale._week.dow;\n\t            doy = config._locale._week.doy;\n\t\n\t            weekYear = defaults(w.gg, config._a[YEAR], weekOfYear(local__createLocal(), dow, doy).year);\n\t            week = defaults(w.w, 1);\n\t\n\t            if (w.d != null) {\n\t                // weekday -- low day numbers are considered next week\n\t                weekday = w.d;\n\t                if (weekday < 0 || weekday > 6) {\n\t                    weekdayOverflow = true;\n\t                }\n\t            } else if (w.e != null) {\n\t                // local weekday -- counting starts from begining of week\n\t                weekday = w.e + dow;\n\t                if (w.e < 0 || w.e > 6) {\n\t                    weekdayOverflow = true;\n\t                }\n\t            } else {\n\t                // default to begining of week\n\t                weekday = dow;\n\t            }\n\t        }\n\t        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n\t            getParsingFlags(config)._overflowWeeks = true;\n\t        } else if (weekdayOverflow != null) {\n\t            getParsingFlags(config)._overflowWeekday = true;\n\t        } else {\n\t            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n\t            config._a[YEAR] = temp.year;\n\t            config._dayOfYear = temp.dayOfYear;\n\t        }\n\t    }\n\t\n\t    // constant that refers to the ISO standard\n\t    utils_hooks__hooks.ISO_8601 = function () {};\n\t\n\t    // date from string and format string\n\t    function configFromStringAndFormat(config) {\n\t        // TODO: Move this to another part of the creation flow to prevent circular deps\n\t        if (config._f === utils_hooks__hooks.ISO_8601) {\n\t            configFromISO(config);\n\t            return;\n\t        }\n\t\n\t        config._a = [];\n\t        getParsingFlags(config).empty = true;\n\t\n\t        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\t        var string = '' + config._i,\n\t            i, parsedInput, tokens, token, skipped,\n\t            stringLength = string.length,\n\t            totalParsedInputLength = 0;\n\t\n\t        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\t\n\t        for (i = 0; i < tokens.length; i++) {\n\t            token = tokens[i];\n\t            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n\t            // console.log('token', token, 'parsedInput', parsedInput,\n\t            //         'regex', getParseRegexForToken(token, config));\n\t            if (parsedInput) {\n\t                skipped = string.substr(0, string.indexOf(parsedInput));\n\t                if (skipped.length > 0) {\n\t                    getParsingFlags(config).unusedInput.push(skipped);\n\t                }\n\t                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n\t                totalParsedInputLength += parsedInput.length;\n\t            }\n\t            // don't parse if it's not a known token\n\t            if (formatTokenFunctions[token]) {\n\t                if (parsedInput) {\n\t                    getParsingFlags(config).empty = false;\n\t                }\n\t                else {\n\t                    getParsingFlags(config).unusedTokens.push(token);\n\t                }\n\t                addTimeToArrayFromToken(token, parsedInput, config);\n\t            }\n\t            else if (config._strict && !parsedInput) {\n\t                getParsingFlags(config).unusedTokens.push(token);\n\t            }\n\t        }\n\t\n\t        // add remaining unparsed input length to the string\n\t        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\t        if (string.length > 0) {\n\t            getParsingFlags(config).unusedInput.push(string);\n\t        }\n\t\n\t        // clear _12h flag if hour is <= 12\n\t        if (getParsingFlags(config).bigHour === true &&\n\t                config._a[HOUR] <= 12 &&\n\t                config._a[HOUR] > 0) {\n\t            getParsingFlags(config).bigHour = undefined;\n\t        }\n\t        // handle meridiem\n\t        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\t\n\t        configFromArray(config);\n\t        checkOverflow(config);\n\t    }\n\t\n\t\n\t    function meridiemFixWrap (locale, hour, meridiem) {\n\t        var isPm;\n\t\n\t        if (meridiem == null) {\n\t            // nothing to do\n\t            return hour;\n\t        }\n\t        if (locale.meridiemHour != null) {\n\t            return locale.meridiemHour(hour, meridiem);\n\t        } else if (locale.isPM != null) {\n\t            // Fallback\n\t            isPm = locale.isPM(meridiem);\n\t            if (isPm && hour < 12) {\n\t                hour += 12;\n\t            }\n\t            if (!isPm && hour === 12) {\n\t                hour = 0;\n\t            }\n\t            return hour;\n\t        } else {\n\t            // this is not supposed to happen\n\t            return hour;\n\t        }\n\t    }\n\t\n\t    // date from string and array of format strings\n\t    function configFromStringAndArray(config) {\n\t        var tempConfig,\n\t            bestMoment,\n\t\n\t            scoreToBeat,\n\t            i,\n\t            currentScore;\n\t\n\t        if (config._f.length === 0) {\n\t            getParsingFlags(config).invalidFormat = true;\n\t            config._d = new Date(NaN);\n\t            return;\n\t        }\n\t\n\t        for (i = 0; i < config._f.length; i++) {\n\t            currentScore = 0;\n\t            tempConfig = copyConfig({}, config);\n\t            if (config._useUTC != null) {\n\t                tempConfig._useUTC = config._useUTC;\n\t            }\n\t            tempConfig._f = config._f[i];\n\t            configFromStringAndFormat(tempConfig);\n\t\n\t            if (!valid__isValid(tempConfig)) {\n\t                continue;\n\t            }\n\t\n\t            // if there is any input that was not parsed add a penalty for that format\n\t            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\t\n\t            //or tokens\n\t            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\t\n\t            getParsingFlags(tempConfig).score = currentScore;\n\t\n\t            if (scoreToBeat == null || currentScore < scoreToBeat) {\n\t                scoreToBeat = currentScore;\n\t                bestMoment = tempConfig;\n\t            }\n\t        }\n\t\n\t        extend(config, bestMoment || tempConfig);\n\t    }\n\t\n\t    function configFromObject(config) {\n\t        if (config._d) {\n\t            return;\n\t        }\n\t\n\t        var i = normalizeObjectUnits(config._i);\n\t        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n\t            return obj && parseInt(obj, 10);\n\t        });\n\t\n\t        configFromArray(config);\n\t    }\n\t\n\t    function createFromConfig (config) {\n\t        var res = new Moment(checkOverflow(prepareConfig(config)));\n\t        if (res._nextDay) {\n\t            // Adding is smart enough around DST\n\t            res.add(1, 'd');\n\t            res._nextDay = undefined;\n\t        }\n\t\n\t        return res;\n\t    }\n\t\n\t    function prepareConfig (config) {\n\t        var input = config._i,\n\t            format = config._f;\n\t\n\t        config._locale = config._locale || locale_locales__getLocale(config._l);\n\t\n\t        if (input === null || (format === undefined && input === '')) {\n\t            return valid__createInvalid({nullInput: true});\n\t        }\n\t\n\t        if (typeof input === 'string') {\n\t            config._i = input = config._locale.preparse(input);\n\t        }\n\t\n\t        if (isMoment(input)) {\n\t            return new Moment(checkOverflow(input));\n\t        } else if (isArray(format)) {\n\t            configFromStringAndArray(config);\n\t        } else if (format) {\n\t            configFromStringAndFormat(config);\n\t        } else if (isDate(input)) {\n\t            config._d = input;\n\t        } else {\n\t            configFromInput(config);\n\t        }\n\t\n\t        if (!valid__isValid(config)) {\n\t            config._d = null;\n\t        }\n\t\n\t        return config;\n\t    }\n\t\n\t    function configFromInput(config) {\n\t        var input = config._i;\n\t        if (input === undefined) {\n\t            config._d = new Date(utils_hooks__hooks.now());\n\t        } else if (isDate(input)) {\n\t            config._d = new Date(+input);\n\t        } else if (typeof input === 'string') {\n\t            configFromString(config);\n\t        } else if (isArray(input)) {\n\t            config._a = map(input.slice(0), function (obj) {\n\t                return parseInt(obj, 10);\n\t            });\n\t            configFromArray(config);\n\t        } else if (typeof(input) === 'object') {\n\t            configFromObject(config);\n\t        } else if (typeof(input) === 'number') {\n\t            // from milliseconds\n\t            config._d = new Date(input);\n\t        } else {\n\t            utils_hooks__hooks.createFromInputFallback(config);\n\t        }\n\t    }\n\t\n\t    function createLocalOrUTC (input, format, locale, strict, isUTC) {\n\t        var c = {};\n\t\n\t        if (typeof(locale) === 'boolean') {\n\t            strict = locale;\n\t            locale = undefined;\n\t        }\n\t        // object construction must be done this way.\n\t        // https://github.com/moment/moment/issues/1423\n\t        c._isAMomentObject = true;\n\t        c._useUTC = c._isUTC = isUTC;\n\t        c._l = locale;\n\t        c._i = input;\n\t        c._f = format;\n\t        c._strict = strict;\n\t\n\t        return createFromConfig(c);\n\t    }\n\t\n\t    function local__createLocal (input, format, locale, strict) {\n\t        return createLocalOrUTC(input, format, locale, strict, false);\n\t    }\n\t\n\t    var prototypeMin = deprecate(\n\t         'moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548',\n\t         function () {\n\t             var other = local__createLocal.apply(null, arguments);\n\t             if (this.isValid() && other.isValid()) {\n\t                 return other < this ? this : other;\n\t             } else {\n\t                 return valid__createInvalid();\n\t             }\n\t         }\n\t     );\n\t\n\t    var prototypeMax = deprecate(\n\t        'moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548',\n\t        function () {\n\t            var other = local__createLocal.apply(null, arguments);\n\t            if (this.isValid() && other.isValid()) {\n\t                return other > this ? this : other;\n\t            } else {\n\t                return valid__createInvalid();\n\t            }\n\t        }\n\t    );\n\t\n\t    // Pick a moment m from moments so that m[fn](other) is true for all\n\t    // other. This relies on the function fn to be transitive.\n\t    //\n\t    // moments should either be an array of moment objects or an array, whose\n\t    // first element is an array of moment objects.\n\t    function pickBy(fn, moments) {\n\t        var res, i;\n\t        if (moments.length === 1 && isArray(moments[0])) {\n\t            moments = moments[0];\n\t        }\n\t        if (!moments.length) {\n\t            return local__createLocal();\n\t        }\n\t        res = moments[0];\n\t        for (i = 1; i < moments.length; ++i) {\n\t            if (!moments[i].isValid() || moments[i][fn](res)) {\n\t                res = moments[i];\n\t            }\n\t        }\n\t        return res;\n\t    }\n\t\n\t    // TODO: Use [].sort instead?\n\t    function min () {\n\t        var args = [].slice.call(arguments, 0);\n\t\n\t        return pickBy('isBefore', args);\n\t    }\n\t\n\t    function max () {\n\t        var args = [].slice.call(arguments, 0);\n\t\n\t        return pickBy('isAfter', args);\n\t    }\n\t\n\t    var now = function () {\n\t        return Date.now ? Date.now() : +(new Date());\n\t    };\n\t\n\t    function Duration (duration) {\n\t        var normalizedInput = normalizeObjectUnits(duration),\n\t            years = normalizedInput.year || 0,\n\t            quarters = normalizedInput.quarter || 0,\n\t            months = normalizedInput.month || 0,\n\t            weeks = normalizedInput.week || 0,\n\t            days = normalizedInput.day || 0,\n\t            hours = normalizedInput.hour || 0,\n\t            minutes = normalizedInput.minute || 0,\n\t            seconds = normalizedInput.second || 0,\n\t            milliseconds = normalizedInput.millisecond || 0;\n\t\n\t        // representation for dateAddRemove\n\t        this._milliseconds = +milliseconds +\n\t            seconds * 1e3 + // 1000\n\t            minutes * 6e4 + // 1000 * 60\n\t            hours * 36e5; // 1000 * 60 * 60\n\t        // Because of dateAddRemove treats 24 hours as different from a\n\t        // day when working around DST, we need to store them separately\n\t        this._days = +days +\n\t            weeks * 7;\n\t        // It is impossible translate months into days without knowing\n\t        // which months you are are talking about, so we have to store\n\t        // it separately.\n\t        this._months = +months +\n\t            quarters * 3 +\n\t            years * 12;\n\t\n\t        this._data = {};\n\t\n\t        this._locale = locale_locales__getLocale();\n\t\n\t        this._bubble();\n\t    }\n\t\n\t    function isDuration (obj) {\n\t        return obj instanceof Duration;\n\t    }\n\t\n\t    // FORMATTING\n\t\n\t    function offset (token, separator) {\n\t        addFormatToken(token, 0, 0, function () {\n\t            var offset = this.utcOffset();\n\t            var sign = '+';\n\t            if (offset < 0) {\n\t                offset = -offset;\n\t                sign = '-';\n\t            }\n\t            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n\t        });\n\t    }\n\t\n\t    offset('Z', ':');\n\t    offset('ZZ', '');\n\t\n\t    // PARSING\n\t\n\t    addRegexToken('Z',  matchShortOffset);\n\t    addRegexToken('ZZ', matchShortOffset);\n\t    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n\t        config._useUTC = true;\n\t        config._tzm = offsetFromString(matchShortOffset, input);\n\t    });\n\t\n\t    // HELPERS\n\t\n\t    // timezone chunker\n\t    // '+10:00' > ['10',  '00']\n\t    // '-1530'  > ['-15', '30']\n\t    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\t\n\t    function offsetFromString(matcher, string) {\n\t        var matches = ((string || '').match(matcher) || []);\n\t        var chunk   = matches[matches.length - 1] || [];\n\t        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n\t        var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\t\n\t        return parts[0] === '+' ? minutes : -minutes;\n\t    }\n\t\n\t    // Return a moment from input, that is local/utc/zone equivalent to model.\n\t    function cloneWithOffset(input, model) {\n\t        var res, diff;\n\t        if (model._isUTC) {\n\t            res = model.clone();\n\t            diff = (isMoment(input) || isDate(input) ? +input : +local__createLocal(input)) - (+res);\n\t            // Use low-level api, because this fn is low-level api.\n\t            res._d.setTime(+res._d + diff);\n\t            utils_hooks__hooks.updateOffset(res, false);\n\t            return res;\n\t        } else {\n\t            return local__createLocal(input).local();\n\t        }\n\t    }\n\t\n\t    function getDateOffset (m) {\n\t        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n\t        // https://github.com/moment/moment/pull/1871\n\t        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n\t    }\n\t\n\t    // HOOKS\n\t\n\t    // This function will be called whenever a moment is mutated.\n\t    // It is intended to keep the offset in sync with the timezone.\n\t    utils_hooks__hooks.updateOffset = function () {};\n\t\n\t    // MOMENTS\n\t\n\t    // keepLocalTime = true means only change the timezone, without\n\t    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n\t    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n\t    // +0200, so we adjust the time as needed, to be valid.\n\t    //\n\t    // Keeping the time actually adds/subtracts (one hour)\n\t    // from the actual represented time. That is why we call updateOffset\n\t    // a second time. In case it wants us to change the offset again\n\t    // _changeInProgress == true case, then we have to adjust, because\n\t    // there is no such time in the given timezone.\n\t    function getSetOffset (input, keepLocalTime) {\n\t        var offset = this._offset || 0,\n\t            localAdjust;\n\t        if (!this.isValid()) {\n\t            return input != null ? this : NaN;\n\t        }\n\t        if (input != null) {\n\t            if (typeof input === 'string') {\n\t                input = offsetFromString(matchShortOffset, input);\n\t            } else if (Math.abs(input) < 16) {\n\t                input = input * 60;\n\t            }\n\t            if (!this._isUTC && keepLocalTime) {\n\t                localAdjust = getDateOffset(this);\n\t            }\n\t            this._offset = input;\n\t            this._isUTC = true;\n\t            if (localAdjust != null) {\n\t                this.add(localAdjust, 'm');\n\t            }\n\t            if (offset !== input) {\n\t                if (!keepLocalTime || this._changeInProgress) {\n\t                    add_subtract__addSubtract(this, create__createDuration(input - offset, 'm'), 1, false);\n\t                } else if (!this._changeInProgress) {\n\t                    this._changeInProgress = true;\n\t                    utils_hooks__hooks.updateOffset(this, true);\n\t                    this._changeInProgress = null;\n\t                }\n\t            }\n\t            return this;\n\t        } else {\n\t            return this._isUTC ? offset : getDateOffset(this);\n\t        }\n\t    }\n\t\n\t    function getSetZone (input, keepLocalTime) {\n\t        if (input != null) {\n\t            if (typeof input !== 'string') {\n\t                input = -input;\n\t            }\n\t\n\t            this.utcOffset(input, keepLocalTime);\n\t\n\t            return this;\n\t        } else {\n\t            return -this.utcOffset();\n\t        }\n\t    }\n\t\n\t    function setOffsetToUTC (keepLocalTime) {\n\t        return this.utcOffset(0, keepLocalTime);\n\t    }\n\t\n\t    function setOffsetToLocal (keepLocalTime) {\n\t        if (this._isUTC) {\n\t            this.utcOffset(0, keepLocalTime);\n\t            this._isUTC = false;\n\t\n\t            if (keepLocalTime) {\n\t                this.subtract(getDateOffset(this), 'm');\n\t            }\n\t        }\n\t        return this;\n\t    }\n\t\n\t    function setOffsetToParsedOffset () {\n\t        if (this._tzm) {\n\t            this.utcOffset(this._tzm);\n\t        } else if (typeof this._i === 'string') {\n\t            this.utcOffset(offsetFromString(matchOffset, this._i));\n\t        }\n\t        return this;\n\t    }\n\t\n\t    function hasAlignedHourOffset (input) {\n\t        if (!this.isValid()) {\n\t            return false;\n\t        }\n\t        input = input ? local__createLocal(input).utcOffset() : 0;\n\t\n\t        return (this.utcOffset() - input) % 60 === 0;\n\t    }\n\t\n\t    function isDaylightSavingTime () {\n\t        return (\n\t            this.utcOffset() > this.clone().month(0).utcOffset() ||\n\t            this.utcOffset() > this.clone().month(5).utcOffset()\n\t        );\n\t    }\n\t\n\t    function isDaylightSavingTimeShifted () {\n\t        if (!isUndefined(this._isDSTShifted)) {\n\t            return this._isDSTShifted;\n\t        }\n\t\n\t        var c = {};\n\t\n\t        copyConfig(c, this);\n\t        c = prepareConfig(c);\n\t\n\t        if (c._a) {\n\t            var other = c._isUTC ? create_utc__createUTC(c._a) : local__createLocal(c._a);\n\t            this._isDSTShifted = this.isValid() &&\n\t                compareArrays(c._a, other.toArray()) > 0;\n\t        } else {\n\t            this._isDSTShifted = false;\n\t        }\n\t\n\t        return this._isDSTShifted;\n\t    }\n\t\n\t    function isLocal () {\n\t        return this.isValid() ? !this._isUTC : false;\n\t    }\n\t\n\t    function isUtcOffset () {\n\t        return this.isValid() ? this._isUTC : false;\n\t    }\n\t\n\t    function isUtc () {\n\t        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n\t    }\n\t\n\t    // ASP.NET json date format regex\n\t    var aspNetRegex = /(\\-)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)\\.?(\\d{3})?)?/;\n\t\n\t    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n\t    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n\t    var isoRegex = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/;\n\t\n\t    function create__createDuration (input, key) {\n\t        var duration = input,\n\t            // matching against regexp is expensive, do it on demand\n\t            match = null,\n\t            sign,\n\t            ret,\n\t            diffRes;\n\t\n\t        if (isDuration(input)) {\n\t            duration = {\n\t                ms : input._milliseconds,\n\t                d  : input._days,\n\t                M  : input._months\n\t            };\n\t        } else if (typeof input === 'number') {\n\t            duration = {};\n\t            if (key) {\n\t                duration[key] = input;\n\t            } else {\n\t                duration.milliseconds = input;\n\t            }\n\t        } else if (!!(match = aspNetRegex.exec(input))) {\n\t            sign = (match[1] === '-') ? -1 : 1;\n\t            duration = {\n\t                y  : 0,\n\t                d  : toInt(match[DATE])        * sign,\n\t                h  : toInt(match[HOUR])        * sign,\n\t                m  : toInt(match[MINUTE])      * sign,\n\t                s  : toInt(match[SECOND])      * sign,\n\t                ms : toInt(match[MILLISECOND]) * sign\n\t            };\n\t        } else if (!!(match = isoRegex.exec(input))) {\n\t            sign = (match[1] === '-') ? -1 : 1;\n\t            duration = {\n\t                y : parseIso(match[2], sign),\n\t                M : parseIso(match[3], sign),\n\t                d : parseIso(match[4], sign),\n\t                h : parseIso(match[5], sign),\n\t                m : parseIso(match[6], sign),\n\t                s : parseIso(match[7], sign),\n\t                w : parseIso(match[8], sign)\n\t            };\n\t        } else if (duration == null) {// checks for null or undefined\n\t            duration = {};\n\t        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n\t            diffRes = momentsDifference(local__createLocal(duration.from), local__createLocal(duration.to));\n\t\n\t            duration = {};\n\t            duration.ms = diffRes.milliseconds;\n\t            duration.M = diffRes.months;\n\t        }\n\t\n\t        ret = new Duration(duration);\n\t\n\t        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n\t            ret._locale = input._locale;\n\t        }\n\t\n\t        return ret;\n\t    }\n\t\n\t    create__createDuration.fn = Duration.prototype;\n\t\n\t    function parseIso (inp, sign) {\n\t        // We'd normally use ~~inp for this, but unfortunately it also\n\t        // converts floats to ints.\n\t        // inp may be undefined, so careful calling replace on it.\n\t        var res = inp && parseFloat(inp.replace(',', '.'));\n\t        // apply sign while we're at it\n\t        return (isNaN(res) ? 0 : res) * sign;\n\t    }\n\t\n\t    function positiveMomentsDifference(base, other) {\n\t        var res = {milliseconds: 0, months: 0};\n\t\n\t        res.months = other.month() - base.month() +\n\t            (other.year() - base.year()) * 12;\n\t        if (base.clone().add(res.months, 'M').isAfter(other)) {\n\t            --res.months;\n\t        }\n\t\n\t        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\t\n\t        return res;\n\t    }\n\t\n\t    function momentsDifference(base, other) {\n\t        var res;\n\t        if (!(base.isValid() && other.isValid())) {\n\t            return {milliseconds: 0, months: 0};\n\t        }\n\t\n\t        other = cloneWithOffset(other, base);\n\t        if (base.isBefore(other)) {\n\t            res = positiveMomentsDifference(base, other);\n\t        } else {\n\t            res = positiveMomentsDifference(other, base);\n\t            res.milliseconds = -res.milliseconds;\n\t            res.months = -res.months;\n\t        }\n\t\n\t        return res;\n\t    }\n\t\n\t    // TODO: remove 'name' arg after deprecation is removed\n\t    function createAdder(direction, name) {\n\t        return function (val, period) {\n\t            var dur, tmp;\n\t            //invert the arguments, but complain about it\n\t            if (period !== null && !isNaN(+period)) {\n\t                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period).');\n\t                tmp = val; val = period; period = tmp;\n\t            }\n\t\n\t            val = typeof val === 'string' ? +val : val;\n\t            dur = create__createDuration(val, period);\n\t            add_subtract__addSubtract(this, dur, direction);\n\t            return this;\n\t        };\n\t    }\n\t\n\t    function add_subtract__addSubtract (mom, duration, isAdding, updateOffset) {\n\t        var milliseconds = duration._milliseconds,\n\t            days = duration._days,\n\t            months = duration._months;\n\t\n\t        if (!mom.isValid()) {\n\t            // No op\n\t            return;\n\t        }\n\t\n\t        updateOffset = updateOffset == null ? true : updateOffset;\n\t\n\t        if (milliseconds) {\n\t            mom._d.setTime(+mom._d + milliseconds * isAdding);\n\t        }\n\t        if (days) {\n\t            get_set__set(mom, 'Date', get_set__get(mom, 'Date') + days * isAdding);\n\t        }\n\t        if (months) {\n\t            setMonth(mom, get_set__get(mom, 'Month') + months * isAdding);\n\t        }\n\t        if (updateOffset) {\n\t            utils_hooks__hooks.updateOffset(mom, days || months);\n\t        }\n\t    }\n\t\n\t    var add_subtract__add      = createAdder(1, 'add');\n\t    var add_subtract__subtract = createAdder(-1, 'subtract');\n\t\n\t    function moment_calendar__calendar (time, formats) {\n\t        // We want to compare the start of today, vs this.\n\t        // Getting start-of-today depends on whether we're local/utc/offset or not.\n\t        var now = time || local__createLocal(),\n\t            sod = cloneWithOffset(now, this).startOf('day'),\n\t            diff = this.diff(sod, 'days', true),\n\t            format = diff < -6 ? 'sameElse' :\n\t                diff < -1 ? 'lastWeek' :\n\t                diff < 0 ? 'lastDay' :\n\t                diff < 1 ? 'sameDay' :\n\t                diff < 2 ? 'nextDay' :\n\t                diff < 7 ? 'nextWeek' : 'sameElse';\n\t\n\t        var output = formats && (isFunction(formats[format]) ? formats[format]() : formats[format]);\n\t\n\t        return this.format(output || this.localeData().calendar(format, this, local__createLocal(now)));\n\t    }\n\t\n\t    function clone () {\n\t        return new Moment(this);\n\t    }\n\t\n\t    function isAfter (input, units) {\n\t        var localInput = isMoment(input) ? input : local__createLocal(input);\n\t        if (!(this.isValid() && localInput.isValid())) {\n\t            return false;\n\t        }\n\t        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n\t        if (units === 'millisecond') {\n\t            return +this > +localInput;\n\t        } else {\n\t            return +localInput < +this.clone().startOf(units);\n\t        }\n\t    }\n\t\n\t    function isBefore (input, units) {\n\t        var localInput = isMoment(input) ? input : local__createLocal(input);\n\t        if (!(this.isValid() && localInput.isValid())) {\n\t            return false;\n\t        }\n\t        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n\t        if (units === 'millisecond') {\n\t            return +this < +localInput;\n\t        } else {\n\t            return +this.clone().endOf(units) < +localInput;\n\t        }\n\t    }\n\t\n\t    function isBetween (from, to, units) {\n\t        return this.isAfter(from, units) && this.isBefore(to, units);\n\t    }\n\t\n\t    function isSame (input, units) {\n\t        var localInput = isMoment(input) ? input : local__createLocal(input),\n\t            inputMs;\n\t        if (!(this.isValid() && localInput.isValid())) {\n\t            return false;\n\t        }\n\t        units = normalizeUnits(units || 'millisecond');\n\t        if (units === 'millisecond') {\n\t            return +this === +localInput;\n\t        } else {\n\t            inputMs = +localInput;\n\t            return +(this.clone().startOf(units)) <= inputMs && inputMs <= +(this.clone().endOf(units));\n\t        }\n\t    }\n\t\n\t    function isSameOrAfter (input, units) {\n\t        return this.isSame(input, units) || this.isAfter(input,units);\n\t    }\n\t\n\t    function isSameOrBefore (input, units) {\n\t        return this.isSame(input, units) || this.isBefore(input,units);\n\t    }\n\t\n\t    function diff (input, units, asFloat) {\n\t        var that,\n\t            zoneDelta,\n\t            delta, output;\n\t\n\t        if (!this.isValid()) {\n\t            return NaN;\n\t        }\n\t\n\t        that = cloneWithOffset(input, this);\n\t\n\t        if (!that.isValid()) {\n\t            return NaN;\n\t        }\n\t\n\t        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\t\n\t        units = normalizeUnits(units);\n\t\n\t        if (units === 'year' || units === 'month' || units === 'quarter') {\n\t            output = monthDiff(this, that);\n\t            if (units === 'quarter') {\n\t                output = output / 3;\n\t            } else if (units === 'year') {\n\t                output = output / 12;\n\t            }\n\t        } else {\n\t            delta = this - that;\n\t            output = units === 'second' ? delta / 1e3 : // 1000\n\t                units === 'minute' ? delta / 6e4 : // 1000 * 60\n\t                units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60\n\t                units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n\t                units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n\t                delta;\n\t        }\n\t        return asFloat ? output : absFloor(output);\n\t    }\n\t\n\t    function monthDiff (a, b) {\n\t        // difference in months\n\t        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n\t            // b is in (anchor - 1 month, anchor + 1 month)\n\t            anchor = a.clone().add(wholeMonthDiff, 'months'),\n\t            anchor2, adjust;\n\t\n\t        if (b - anchor < 0) {\n\t            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n\t            // linear across the month\n\t            adjust = (b - anchor) / (anchor - anchor2);\n\t        } else {\n\t            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n\t            // linear across the month\n\t            adjust = (b - anchor) / (anchor2 - anchor);\n\t        }\n\t\n\t        return -(wholeMonthDiff + adjust);\n\t    }\n\t\n\t    utils_hooks__hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n\t\n\t    function toString () {\n\t        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n\t    }\n\t\n\t    function moment_format__toISOString () {\n\t        var m = this.clone().utc();\n\t        if (0 < m.year() && m.year() <= 9999) {\n\t            if (isFunction(Date.prototype.toISOString)) {\n\t                // native implementation is ~50x faster, use it when we can\n\t                return this.toDate().toISOString();\n\t            } else {\n\t                return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n\t            }\n\t        } else {\n\t            return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n\t        }\n\t    }\n\t\n\t    function format (inputString) {\n\t        var output = formatMoment(this, inputString || utils_hooks__hooks.defaultFormat);\n\t        return this.localeData().postformat(output);\n\t    }\n\t\n\t    function from (time, withoutSuffix) {\n\t        if (this.isValid() &&\n\t                ((isMoment(time) && time.isValid()) ||\n\t                 local__createLocal(time).isValid())) {\n\t            return create__createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n\t        } else {\n\t            return this.localeData().invalidDate();\n\t        }\n\t    }\n\t\n\t    function fromNow (withoutSuffix) {\n\t        return this.from(local__createLocal(), withoutSuffix);\n\t    }\n\t\n\t    function to (time, withoutSuffix) {\n\t        if (this.isValid() &&\n\t                ((isMoment(time) && time.isValid()) ||\n\t                 local__createLocal(time).isValid())) {\n\t            return create__createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n\t        } else {\n\t            return this.localeData().invalidDate();\n\t        }\n\t    }\n\t\n\t    function toNow (withoutSuffix) {\n\t        return this.to(local__createLocal(), withoutSuffix);\n\t    }\n\t\n\t    // If passed a locale key, it will set the locale for this\n\t    // instance.  Otherwise, it will return the locale configuration\n\t    // variables for this instance.\n\t    function locale (key) {\n\t        var newLocaleData;\n\t\n\t        if (key === undefined) {\n\t            return this._locale._abbr;\n\t        } else {\n\t            newLocaleData = locale_locales__getLocale(key);\n\t            if (newLocaleData != null) {\n\t                this._locale = newLocaleData;\n\t            }\n\t            return this;\n\t        }\n\t    }\n\t\n\t    var lang = deprecate(\n\t        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n\t        function (key) {\n\t            if (key === undefined) {\n\t                return this.localeData();\n\t            } else {\n\t                return this.locale(key);\n\t            }\n\t        }\n\t    );\n\t\n\t    function localeData () {\n\t        return this._locale;\n\t    }\n\t\n\t    function startOf (units) {\n\t        units = normalizeUnits(units);\n\t        // the following switch intentionally omits break keywords\n\t        // to utilize falling through the cases.\n\t        switch (units) {\n\t        case 'year':\n\t            this.month(0);\n\t            /* falls through */\n\t        case 'quarter':\n\t        case 'month':\n\t            this.date(1);\n\t            /* falls through */\n\t        case 'week':\n\t        case 'isoWeek':\n\t        case 'day':\n\t            this.hours(0);\n\t            /* falls through */\n\t        case 'hour':\n\t            this.minutes(0);\n\t            /* falls through */\n\t        case 'minute':\n\t            this.seconds(0);\n\t            /* falls through */\n\t        case 'second':\n\t            this.milliseconds(0);\n\t        }\n\t\n\t        // weeks are a special case\n\t        if (units === 'week') {\n\t            this.weekday(0);\n\t        }\n\t        if (units === 'isoWeek') {\n\t            this.isoWeekday(1);\n\t        }\n\t\n\t        // quarters are also special\n\t        if (units === 'quarter') {\n\t            this.month(Math.floor(this.month() / 3) * 3);\n\t        }\n\t\n\t        return this;\n\t    }\n\t\n\t    function endOf (units) {\n\t        units = normalizeUnits(units);\n\t        if (units === undefined || units === 'millisecond') {\n\t            return this;\n\t        }\n\t        return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n\t    }\n\t\n\t    function to_type__valueOf () {\n\t        return +this._d - ((this._offset || 0) * 60000);\n\t    }\n\t\n\t    function unix () {\n\t        return Math.floor(+this / 1000);\n\t    }\n\t\n\t    function toDate () {\n\t        return this._offset ? new Date(+this) : this._d;\n\t    }\n\t\n\t    function toArray () {\n\t        var m = this;\n\t        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n\t    }\n\t\n\t    function toObject () {\n\t        var m = this;\n\t        return {\n\t            years: m.year(),\n\t            months: m.month(),\n\t            date: m.date(),\n\t            hours: m.hours(),\n\t            minutes: m.minutes(),\n\t            seconds: m.seconds(),\n\t            milliseconds: m.milliseconds()\n\t        };\n\t    }\n\t\n\t    function toJSON () {\n\t        // JSON.stringify(new Date(NaN)) === 'null'\n\t        return this.isValid() ? this.toISOString() : 'null';\n\t    }\n\t\n\t    function moment_valid__isValid () {\n\t        return valid__isValid(this);\n\t    }\n\t\n\t    function parsingFlags () {\n\t        return extend({}, getParsingFlags(this));\n\t    }\n\t\n\t    function invalidAt () {\n\t        return getParsingFlags(this).overflow;\n\t    }\n\t\n\t    function creationData() {\n\t        return {\n\t            input: this._i,\n\t            format: this._f,\n\t            locale: this._locale,\n\t            isUTC: this._isUTC,\n\t            strict: this._strict\n\t        };\n\t    }\n\t\n\t    // FORMATTING\n\t\n\t    addFormatToken(0, ['gg', 2], 0, function () {\n\t        return this.weekYear() % 100;\n\t    });\n\t\n\t    addFormatToken(0, ['GG', 2], 0, function () {\n\t        return this.isoWeekYear() % 100;\n\t    });\n\t\n\t    function addWeekYearFormatToken (token, getter) {\n\t        addFormatToken(0, [token, token.length], 0, getter);\n\t    }\n\t\n\t    addWeekYearFormatToken('gggg',     'weekYear');\n\t    addWeekYearFormatToken('ggggg',    'weekYear');\n\t    addWeekYearFormatToken('GGGG',  'isoWeekYear');\n\t    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\t\n\t    // ALIASES\n\t\n\t    addUnitAlias('weekYear', 'gg');\n\t    addUnitAlias('isoWeekYear', 'GG');\n\t\n\t    // PARSING\n\t\n\t    addRegexToken('G',      matchSigned);\n\t    addRegexToken('g',      matchSigned);\n\t    addRegexToken('GG',     match1to2, match2);\n\t    addRegexToken('gg',     match1to2, match2);\n\t    addRegexToken('GGGG',   match1to4, match4);\n\t    addRegexToken('gggg',   match1to4, match4);\n\t    addRegexToken('GGGGG',  match1to6, match6);\n\t    addRegexToken('ggggg',  match1to6, match6);\n\t\n\t    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n\t        week[token.substr(0, 2)] = toInt(input);\n\t    });\n\t\n\t    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n\t        week[token] = utils_hooks__hooks.parseTwoDigitYear(input);\n\t    });\n\t\n\t    // MOMENTS\n\t\n\t    function getSetWeekYear (input) {\n\t        return getSetWeekYearHelper.call(this,\n\t                input,\n\t                this.week(),\n\t                this.weekday(),\n\t                this.localeData()._week.dow,\n\t                this.localeData()._week.doy);\n\t    }\n\t\n\t    function getSetISOWeekYear (input) {\n\t        return getSetWeekYearHelper.call(this,\n\t                input, this.isoWeek(), this.isoWeekday(), 1, 4);\n\t    }\n\t\n\t    function getISOWeeksInYear () {\n\t        return weeksInYear(this.year(), 1, 4);\n\t    }\n\t\n\t    function getWeeksInYear () {\n\t        var weekInfo = this.localeData()._week;\n\t        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n\t    }\n\t\n\t    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n\t        var weeksTarget;\n\t        if (input == null) {\n\t            return weekOfYear(this, dow, doy).year;\n\t        } else {\n\t            weeksTarget = weeksInYear(input, dow, doy);\n\t            if (week > weeksTarget) {\n\t                week = weeksTarget;\n\t            }\n\t            return setWeekAll.call(this, input, week, weekday, dow, doy);\n\t        }\n\t    }\n\t\n\t    function setWeekAll(weekYear, week, weekday, dow, doy) {\n\t        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n\t            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\t\n\t        // console.log(\"got\", weekYear, week, weekday, \"set\", date.toISOString());\n\t        this.year(date.getUTCFullYear());\n\t        this.month(date.getUTCMonth());\n\t        this.date(date.getUTCDate());\n\t        return this;\n\t    }\n\t\n\t    // FORMATTING\n\t\n\t    addFormatToken('Q', 0, 'Qo', 'quarter');\n\t\n\t    // ALIASES\n\t\n\t    addUnitAlias('quarter', 'Q');\n\t\n\t    // PARSING\n\t\n\t    addRegexToken('Q', match1);\n\t    addParseToken('Q', function (input, array) {\n\t        array[MONTH] = (toInt(input) - 1) * 3;\n\t    });\n\t\n\t    // MOMENTS\n\t\n\t    function getSetQuarter (input) {\n\t        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n\t    }\n\t\n\t    // FORMATTING\n\t\n\t    addFormatToken('w', ['ww', 2], 'wo', 'week');\n\t    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\t\n\t    // ALIASES\n\t\n\t    addUnitAlias('week', 'w');\n\t    addUnitAlias('isoWeek', 'W');\n\t\n\t    // PARSING\n\t\n\t    addRegexToken('w',  match1to2);\n\t    addRegexToken('ww', match1to2, match2);\n\t    addRegexToken('W',  match1to2);\n\t    addRegexToken('WW', match1to2, match2);\n\t\n\t    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n\t        week[token.substr(0, 1)] = toInt(input);\n\t    });\n\t\n\t    // HELPERS\n\t\n\t    // LOCALES\n\t\n\t    function localeWeek (mom) {\n\t        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n\t    }\n\t\n\t    var defaultLocaleWeek = {\n\t        dow : 0, // Sunday is the first day of the week.\n\t        doy : 6  // The week that contains Jan 1st is the first week of the year.\n\t    };\n\t\n\t    function localeFirstDayOfWeek () {\n\t        return this._week.dow;\n\t    }\n\t\n\t    function localeFirstDayOfYear () {\n\t        return this._week.doy;\n\t    }\n\t\n\t    // MOMENTS\n\t\n\t    function getSetWeek (input) {\n\t        var week = this.localeData().week(this);\n\t        return input == null ? week : this.add((input - week) * 7, 'd');\n\t    }\n\t\n\t    function getSetISOWeek (input) {\n\t        var week = weekOfYear(this, 1, 4).week;\n\t        return input == null ? week : this.add((input - week) * 7, 'd');\n\t    }\n\t\n\t    // FORMATTING\n\t\n\t    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\t\n\t    // ALIASES\n\t\n\t    addUnitAlias('date', 'D');\n\t\n\t    // PARSING\n\t\n\t    addRegexToken('D',  match1to2);\n\t    addRegexToken('DD', match1to2, match2);\n\t    addRegexToken('Do', function (isStrict, locale) {\n\t        return isStrict ? locale._ordinalParse : locale._ordinalParseLenient;\n\t    });\n\t\n\t    addParseToken(['D', 'DD'], DATE);\n\t    addParseToken('Do', function (input, array) {\n\t        array[DATE] = toInt(input.match(match1to2)[0], 10);\n\t    });\n\t\n\t    // MOMENTS\n\t\n\t    var getSetDayOfMonth = makeGetSet('Date', true);\n\t\n\t    // FORMATTING\n\t\n\t    addFormatToken('d', 0, 'do', 'day');\n\t\n\t    addFormatToken('dd', 0, 0, function (format) {\n\t        return this.localeData().weekdaysMin(this, format);\n\t    });\n\t\n\t    addFormatToken('ddd', 0, 0, function (format) {\n\t        return this.localeData().weekdaysShort(this, format);\n\t    });\n\t\n\t    addFormatToken('dddd', 0, 0, function (format) {\n\t        return this.localeData().weekdays(this, format);\n\t    });\n\t\n\t    addFormatToken('e', 0, 0, 'weekday');\n\t    addFormatToken('E', 0, 0, 'isoWeekday');\n\t\n\t    // ALIASES\n\t\n\t    addUnitAlias('day', 'd');\n\t    addUnitAlias('weekday', 'e');\n\t    addUnitAlias('isoWeekday', 'E');\n\t\n\t    // PARSING\n\t\n\t    addRegexToken('d',    match1to2);\n\t    addRegexToken('e',    match1to2);\n\t    addRegexToken('E',    match1to2);\n\t    addRegexToken('dd',   matchWord);\n\t    addRegexToken('ddd',  matchWord);\n\t    addRegexToken('dddd', matchWord);\n\t\n\t    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n\t        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n\t        // if we didn't get a weekday name, mark the date as invalid\n\t        if (weekday != null) {\n\t            week.d = weekday;\n\t        } else {\n\t            getParsingFlags(config).invalidWeekday = input;\n\t        }\n\t    });\n\t\n\t    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n\t        week[token] = toInt(input);\n\t    });\n\t\n\t    // HELPERS\n\t\n\t    function parseWeekday(input, locale) {\n\t        if (typeof input !== 'string') {\n\t            return input;\n\t        }\n\t\n\t        if (!isNaN(input)) {\n\t            return parseInt(input, 10);\n\t        }\n\t\n\t        input = locale.weekdaysParse(input);\n\t        if (typeof input === 'number') {\n\t            return input;\n\t        }\n\t\n\t        return null;\n\t    }\n\t\n\t    // LOCALES\n\t\n\t    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\t    function localeWeekdays (m, format) {\n\t        return isArray(this._weekdays) ? this._weekdays[m.day()] :\n\t            this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n\t    }\n\t\n\t    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\t    function localeWeekdaysShort (m) {\n\t        return this._weekdaysShort[m.day()];\n\t    }\n\t\n\t    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\t    function localeWeekdaysMin (m) {\n\t        return this._weekdaysMin[m.day()];\n\t    }\n\t\n\t    function localeWeekdaysParse (weekdayName, format, strict) {\n\t        var i, mom, regex;\n\t\n\t        if (!this._weekdaysParse) {\n\t            this._weekdaysParse = [];\n\t            this._minWeekdaysParse = [];\n\t            this._shortWeekdaysParse = [];\n\t            this._fullWeekdaysParse = [];\n\t        }\n\t\n\t        for (i = 0; i < 7; i++) {\n\t            // make the regex if we don't have it already\n\t\n\t            mom = local__createLocal([2000, 1]).day(i);\n\t            if (strict && !this._fullWeekdaysParse[i]) {\n\t                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');\n\t                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');\n\t                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');\n\t            }\n\t            if (!this._weekdaysParse[i]) {\n\t                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n\t                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n\t            }\n\t            // test the regex\n\t            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n\t                return i;\n\t            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n\t                return i;\n\t            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n\t                return i;\n\t            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n\t                return i;\n\t            }\n\t        }\n\t    }\n\t\n\t    // MOMENTS\n\t\n\t    function getSetDayOfWeek (input) {\n\t        if (!this.isValid()) {\n\t            return input != null ? this : NaN;\n\t        }\n\t        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\t        if (input != null) {\n\t            input = parseWeekday(input, this.localeData());\n\t            return this.add(input - day, 'd');\n\t        } else {\n\t            return day;\n\t        }\n\t    }\n\t\n\t    function getSetLocaleDayOfWeek (input) {\n\t        if (!this.isValid()) {\n\t            return input != null ? this : NaN;\n\t        }\n\t        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n\t        return input == null ? weekday : this.add(input - weekday, 'd');\n\t    }\n\t\n\t    function getSetISODayOfWeek (input) {\n\t        if (!this.isValid()) {\n\t            return input != null ? this : NaN;\n\t        }\n\t        // behaves the same as moment#day except\n\t        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n\t        // as a setter, sunday should belong to the previous week.\n\t        return input == null ? this.day() || 7 : this.day(this.day() % 7 ? input : input - 7);\n\t    }\n\t\n\t    // FORMATTING\n\t\n\t    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\t\n\t    // ALIASES\n\t\n\t    addUnitAlias('dayOfYear', 'DDD');\n\t\n\t    // PARSING\n\t\n\t    addRegexToken('DDD',  match1to3);\n\t    addRegexToken('DDDD', match3);\n\t    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n\t        config._dayOfYear = toInt(input);\n\t    });\n\t\n\t    // HELPERS\n\t\n\t    // MOMENTS\n\t\n\t    function getSetDayOfYear (input) {\n\t        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n\t        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n\t    }\n\t\n\t    // FORMATTING\n\t\n\t    function hFormat() {\n\t        return this.hours() % 12 || 12;\n\t    }\n\t\n\t    addFormatToken('H', ['HH', 2], 0, 'hour');\n\t    addFormatToken('h', ['hh', 2], 0, hFormat);\n\t\n\t    addFormatToken('hmm', 0, 0, function () {\n\t        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n\t    });\n\t\n\t    addFormatToken('hmmss', 0, 0, function () {\n\t        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n\t            zeroFill(this.seconds(), 2);\n\t    });\n\t\n\t    addFormatToken('Hmm', 0, 0, function () {\n\t        return '' + this.hours() + zeroFill(this.minutes(), 2);\n\t    });\n\t\n\t    addFormatToken('Hmmss', 0, 0, function () {\n\t        return '' + this.hours() + zeroFill(this.minutes(), 2) +\n\t            zeroFill(this.seconds(), 2);\n\t    });\n\t\n\t    function meridiem (token, lowercase) {\n\t        addFormatToken(token, 0, 0, function () {\n\t            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n\t        });\n\t    }\n\t\n\t    meridiem('a', true);\n\t    meridiem('A', false);\n\t\n\t    // ALIASES\n\t\n\t    addUnitAlias('hour', 'h');\n\t\n\t    // PARSING\n\t\n\t    function matchMeridiem (isStrict, locale) {\n\t        return locale._meridiemParse;\n\t    }\n\t\n\t    addRegexToken('a',  matchMeridiem);\n\t    addRegexToken('A',  matchMeridiem);\n\t    addRegexToken('H',  match1to2);\n\t    addRegexToken('h',  match1to2);\n\t    addRegexToken('HH', match1to2, match2);\n\t    addRegexToken('hh', match1to2, match2);\n\t\n\t    addRegexToken('hmm', match3to4);\n\t    addRegexToken('hmmss', match5to6);\n\t    addRegexToken('Hmm', match3to4);\n\t    addRegexToken('Hmmss', match5to6);\n\t\n\t    addParseToken(['H', 'HH'], HOUR);\n\t    addParseToken(['a', 'A'], function (input, array, config) {\n\t        config._isPm = config._locale.isPM(input);\n\t        config._meridiem = input;\n\t    });\n\t    addParseToken(['h', 'hh'], function (input, array, config) {\n\t        array[HOUR] = toInt(input);\n\t        getParsingFlags(config).bigHour = true;\n\t    });\n\t    addParseToken('hmm', function (input, array, config) {\n\t        var pos = input.length - 2;\n\t        array[HOUR] = toInt(input.substr(0, pos));\n\t        array[MINUTE] = toInt(input.substr(pos));\n\t        getParsingFlags(config).bigHour = true;\n\t    });\n\t    addParseToken('hmmss', function (input, array, config) {\n\t        var pos1 = input.length - 4;\n\t        var pos2 = input.length - 2;\n\t        array[HOUR] = toInt(input.substr(0, pos1));\n\t        array[MINUTE] = toInt(input.substr(pos1, 2));\n\t        array[SECOND] = toInt(input.substr(pos2));\n\t        getParsingFlags(config).bigHour = true;\n\t    });\n\t    addParseToken('Hmm', function (input, array, config) {\n\t        var pos = input.length - 2;\n\t        array[HOUR] = toInt(input.substr(0, pos));\n\t        array[MINUTE] = toInt(input.substr(pos));\n\t    });\n\t    addParseToken('Hmmss', function (input, array, config) {\n\t        var pos1 = input.length - 4;\n\t        var pos2 = input.length - 2;\n\t        array[HOUR] = toInt(input.substr(0, pos1));\n\t        array[MINUTE] = toInt(input.substr(pos1, 2));\n\t        array[SECOND] = toInt(input.substr(pos2));\n\t    });\n\t\n\t    // LOCALES\n\t\n\t    function localeIsPM (input) {\n\t        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n\t        // Using charAt should be more compatible.\n\t        return ((input + '').toLowerCase().charAt(0) === 'p');\n\t    }\n\t\n\t    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\t    function localeMeridiem (hours, minutes, isLower) {\n\t        if (hours > 11) {\n\t            return isLower ? 'pm' : 'PM';\n\t        } else {\n\t            return isLower ? 'am' : 'AM';\n\t        }\n\t    }\n\t\n\t\n\t    // MOMENTS\n\t\n\t    // Setting the hour should keep the time, because the user explicitly\n\t    // specified which hour he wants. So trying to maintain the same hour (in\n\t    // a new timezone) makes sense. Adding/subtracting hours does not follow\n\t    // this rule.\n\t    var getSetHour = makeGetSet('Hours', true);\n\t\n\t    // FORMATTING\n\t\n\t    addFormatToken('m', ['mm', 2], 0, 'minute');\n\t\n\t    // ALIASES\n\t\n\t    addUnitAlias('minute', 'm');\n\t\n\t    // PARSING\n\t\n\t    addRegexToken('m',  match1to2);\n\t    addRegexToken('mm', match1to2, match2);\n\t    addParseToken(['m', 'mm'], MINUTE);\n\t\n\t    // MOMENTS\n\t\n\t    var getSetMinute = makeGetSet('Minutes', false);\n\t\n\t    // FORMATTING\n\t\n\t    addFormatToken('s', ['ss', 2], 0, 'second');\n\t\n\t    // ALIASES\n\t\n\t    addUnitAlias('second', 's');\n\t\n\t    // PARSING\n\t\n\t    addRegexToken('s',  match1to2);\n\t    addRegexToken('ss', match1to2, match2);\n\t    addParseToken(['s', 'ss'], SECOND);\n\t\n\t    // MOMENTS\n\t\n\t    var getSetSecond = makeGetSet('Seconds', false);\n\t\n\t    // FORMATTING\n\t\n\t    addFormatToken('S', 0, 0, function () {\n\t        return ~~(this.millisecond() / 100);\n\t    });\n\t\n\t    addFormatToken(0, ['SS', 2], 0, function () {\n\t        return ~~(this.millisecond() / 10);\n\t    });\n\t\n\t    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n\t    addFormatToken(0, ['SSSS', 4], 0, function () {\n\t        return this.millisecond() * 10;\n\t    });\n\t    addFormatToken(0, ['SSSSS', 5], 0, function () {\n\t        return this.millisecond() * 100;\n\t    });\n\t    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n\t        return this.millisecond() * 1000;\n\t    });\n\t    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n\t        return this.millisecond() * 10000;\n\t    });\n\t    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n\t        return this.millisecond() * 100000;\n\t    });\n\t    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n\t        return this.millisecond() * 1000000;\n\t    });\n\t\n\t\n\t    // ALIASES\n\t\n\t    addUnitAlias('millisecond', 'ms');\n\t\n\t    // PARSING\n\t\n\t    addRegexToken('S',    match1to3, match1);\n\t    addRegexToken('SS',   match1to3, match2);\n\t    addRegexToken('SSS',  match1to3, match3);\n\t\n\t    var token;\n\t    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n\t        addRegexToken(token, matchUnsigned);\n\t    }\n\t\n\t    function parseMs(input, array) {\n\t        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n\t    }\n\t\n\t    for (token = 'S'; token.length <= 9; token += 'S') {\n\t        addParseToken(token, parseMs);\n\t    }\n\t    // MOMENTS\n\t\n\t    var getSetMillisecond = makeGetSet('Milliseconds', false);\n\t\n\t    // FORMATTING\n\t\n\t    addFormatToken('z',  0, 0, 'zoneAbbr');\n\t    addFormatToken('zz', 0, 0, 'zoneName');\n\t\n\t    // MOMENTS\n\t\n\t    function getZoneAbbr () {\n\t        return this._isUTC ? 'UTC' : '';\n\t    }\n\t\n\t    function getZoneName () {\n\t        return this._isUTC ? 'Coordinated Universal Time' : '';\n\t    }\n\t\n\t    var momentPrototype__proto = Moment.prototype;\n\t\n\t    momentPrototype__proto.add               = add_subtract__add;\n\t    momentPrototype__proto.calendar          = moment_calendar__calendar;\n\t    momentPrototype__proto.clone             = clone;\n\t    momentPrototype__proto.diff              = diff;\n\t    momentPrototype__proto.endOf             = endOf;\n\t    momentPrototype__proto.format            = format;\n\t    momentPrototype__proto.from              = from;\n\t    momentPrototype__proto.fromNow           = fromNow;\n\t    momentPrototype__proto.to                = to;\n\t    momentPrototype__proto.toNow             = toNow;\n\t    momentPrototype__proto.get               = getSet;\n\t    momentPrototype__proto.invalidAt         = invalidAt;\n\t    momentPrototype__proto.isAfter           = isAfter;\n\t    momentPrototype__proto.isBefore          = isBefore;\n\t    momentPrototype__proto.isBetween         = isBetween;\n\t    momentPrototype__proto.isSame            = isSame;\n\t    momentPrototype__proto.isSameOrAfter     = isSameOrAfter;\n\t    momentPrototype__proto.isSameOrBefore    = isSameOrBefore;\n\t    momentPrototype__proto.isValid           = moment_valid__isValid;\n\t    momentPrototype__proto.lang              = lang;\n\t    momentPrototype__proto.locale            = locale;\n\t    momentPrototype__proto.localeData        = localeData;\n\t    momentPrototype__proto.max               = prototypeMax;\n\t    momentPrototype__proto.min               = prototypeMin;\n\t    momentPrototype__proto.parsingFlags      = parsingFlags;\n\t    momentPrototype__proto.set               = getSet;\n\t    momentPrototype__proto.startOf           = startOf;\n\t    momentPrototype__proto.subtract          = add_subtract__subtract;\n\t    momentPrototype__proto.toArray           = toArray;\n\t    momentPrototype__proto.toObject          = toObject;\n\t    momentPrototype__proto.toDate            = toDate;\n\t    momentPrototype__proto.toISOString       = moment_format__toISOString;\n\t    momentPrototype__proto.toJSON            = toJSON;\n\t    momentPrototype__proto.toString          = toString;\n\t    momentPrototype__proto.unix              = unix;\n\t    momentPrototype__proto.valueOf           = to_type__valueOf;\n\t    momentPrototype__proto.creationData      = creationData;\n\t\n\t    // Year\n\t    momentPrototype__proto.year       = getSetYear;\n\t    momentPrototype__proto.isLeapYear = getIsLeapYear;\n\t\n\t    // Week Year\n\t    momentPrototype__proto.weekYear    = getSetWeekYear;\n\t    momentPrototype__proto.isoWeekYear = getSetISOWeekYear;\n\t\n\t    // Quarter\n\t    momentPrototype__proto.quarter = momentPrototype__proto.quarters = getSetQuarter;\n\t\n\t    // Month\n\t    momentPrototype__proto.month       = getSetMonth;\n\t    momentPrototype__proto.daysInMonth = getDaysInMonth;\n\t\n\t    // Week\n\t    momentPrototype__proto.week           = momentPrototype__proto.weeks        = getSetWeek;\n\t    momentPrototype__proto.isoWeek        = momentPrototype__proto.isoWeeks     = getSetISOWeek;\n\t    momentPrototype__proto.weeksInYear    = getWeeksInYear;\n\t    momentPrototype__proto.isoWeeksInYear = getISOWeeksInYear;\n\t\n\t    // Day\n\t    momentPrototype__proto.date       = getSetDayOfMonth;\n\t    momentPrototype__proto.day        = momentPrototype__proto.days             = getSetDayOfWeek;\n\t    momentPrototype__proto.weekday    = getSetLocaleDayOfWeek;\n\t    momentPrototype__proto.isoWeekday = getSetISODayOfWeek;\n\t    momentPrototype__proto.dayOfYear  = getSetDayOfYear;\n\t\n\t    // Hour\n\t    momentPrototype__proto.hour = momentPrototype__proto.hours = getSetHour;\n\t\n\t    // Minute\n\t    momentPrototype__proto.minute = momentPrototype__proto.minutes = getSetMinute;\n\t\n\t    // Second\n\t    momentPrototype__proto.second = momentPrototype__proto.seconds = getSetSecond;\n\t\n\t    // Millisecond\n\t    momentPrototype__proto.millisecond = momentPrototype__proto.milliseconds = getSetMillisecond;\n\t\n\t    // Offset\n\t    momentPrototype__proto.utcOffset            = getSetOffset;\n\t    momentPrototype__proto.utc                  = setOffsetToUTC;\n\t    momentPrototype__proto.local                = setOffsetToLocal;\n\t    momentPrototype__proto.parseZone            = setOffsetToParsedOffset;\n\t    momentPrototype__proto.hasAlignedHourOffset = hasAlignedHourOffset;\n\t    momentPrototype__proto.isDST                = isDaylightSavingTime;\n\t    momentPrototype__proto.isDSTShifted         = isDaylightSavingTimeShifted;\n\t    momentPrototype__proto.isLocal              = isLocal;\n\t    momentPrototype__proto.isUtcOffset          = isUtcOffset;\n\t    momentPrototype__proto.isUtc                = isUtc;\n\t    momentPrototype__proto.isUTC                = isUtc;\n\t\n\t    // Timezone\n\t    momentPrototype__proto.zoneAbbr = getZoneAbbr;\n\t    momentPrototype__proto.zoneName = getZoneName;\n\t\n\t    // Deprecations\n\t    momentPrototype__proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n\t    momentPrototype__proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n\t    momentPrototype__proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n\t    momentPrototype__proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. https://github.com/moment/moment/issues/1779', getSetZone);\n\t\n\t    var momentPrototype = momentPrototype__proto;\n\t\n\t    function moment__createUnix (input) {\n\t        return local__createLocal(input * 1000);\n\t    }\n\t\n\t    function moment__createInZone () {\n\t        return local__createLocal.apply(null, arguments).parseZone();\n\t    }\n\t\n\t    var defaultCalendar = {\n\t        sameDay : '[Today at] LT',\n\t        nextDay : '[Tomorrow at] LT',\n\t        nextWeek : 'dddd [at] LT',\n\t        lastDay : '[Yesterday at] LT',\n\t        lastWeek : '[Last] dddd [at] LT',\n\t        sameElse : 'L'\n\t    };\n\t\n\t    function locale_calendar__calendar (key, mom, now) {\n\t        var output = this._calendar[key];\n\t        return isFunction(output) ? output.call(mom, now) : output;\n\t    }\n\t\n\t    var defaultLongDateFormat = {\n\t        LTS  : 'h:mm:ss A',\n\t        LT   : 'h:mm A',\n\t        L    : 'MM/DD/YYYY',\n\t        LL   : 'MMMM D, YYYY',\n\t        LLL  : 'MMMM D, YYYY h:mm A',\n\t        LLLL : 'dddd, MMMM D, YYYY h:mm A'\n\t    };\n\t\n\t    function longDateFormat (key) {\n\t        var format = this._longDateFormat[key],\n\t            formatUpper = this._longDateFormat[key.toUpperCase()];\n\t\n\t        if (format || !formatUpper) {\n\t            return format;\n\t        }\n\t\n\t        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n\t            return val.slice(1);\n\t        });\n\t\n\t        return this._longDateFormat[key];\n\t    }\n\t\n\t    var defaultInvalidDate = 'Invalid date';\n\t\n\t    function invalidDate () {\n\t        return this._invalidDate;\n\t    }\n\t\n\t    var defaultOrdinal = '%d';\n\t    var defaultOrdinalParse = /\\d{1,2}/;\n\t\n\t    function ordinal (number) {\n\t        return this._ordinal.replace('%d', number);\n\t    }\n\t\n\t    function preParsePostFormat (string) {\n\t        return string;\n\t    }\n\t\n\t    var defaultRelativeTime = {\n\t        future : 'in %s',\n\t        past   : '%s ago',\n\t        s  : 'a few seconds',\n\t        m  : 'a minute',\n\t        mm : '%d minutes',\n\t        h  : 'an hour',\n\t        hh : '%d hours',\n\t        d  : 'a day',\n\t        dd : '%d days',\n\t        M  : 'a month',\n\t        MM : '%d months',\n\t        y  : 'a year',\n\t        yy : '%d years'\n\t    };\n\t\n\t    function relative__relativeTime (number, withoutSuffix, string, isFuture) {\n\t        var output = this._relativeTime[string];\n\t        return (isFunction(output)) ?\n\t            output(number, withoutSuffix, string, isFuture) :\n\t            output.replace(/%d/i, number);\n\t    }\n\t\n\t    function pastFuture (diff, output) {\n\t        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n\t        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n\t    }\n\t\n\t    function locale_set__set (config) {\n\t        var prop, i;\n\t        for (i in config) {\n\t            prop = config[i];\n\t            if (isFunction(prop)) {\n\t                this[i] = prop;\n\t            } else {\n\t                this['_' + i] = prop;\n\t            }\n\t        }\n\t        // Lenient ordinal parsing accepts just a number in addition to\n\t        // number + (possibly) stuff coming from _ordinalParseLenient.\n\t        this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + (/\\d{1,2}/).source);\n\t    }\n\t\n\t    var prototype__proto = Locale.prototype;\n\t\n\t    prototype__proto._calendar       = defaultCalendar;\n\t    prototype__proto.calendar        = locale_calendar__calendar;\n\t    prototype__proto._longDateFormat = defaultLongDateFormat;\n\t    prototype__proto.longDateFormat  = longDateFormat;\n\t    prototype__proto._invalidDate    = defaultInvalidDate;\n\t    prototype__proto.invalidDate     = invalidDate;\n\t    prototype__proto._ordinal        = defaultOrdinal;\n\t    prototype__proto.ordinal         = ordinal;\n\t    prototype__proto._ordinalParse   = defaultOrdinalParse;\n\t    prototype__proto.preparse        = preParsePostFormat;\n\t    prototype__proto.postformat      = preParsePostFormat;\n\t    prototype__proto._relativeTime   = defaultRelativeTime;\n\t    prototype__proto.relativeTime    = relative__relativeTime;\n\t    prototype__proto.pastFuture      = pastFuture;\n\t    prototype__proto.set             = locale_set__set;\n\t\n\t    // Month\n\t    prototype__proto.months            =        localeMonths;\n\t    prototype__proto._months           = defaultLocaleMonths;\n\t    prototype__proto.monthsShort       =        localeMonthsShort;\n\t    prototype__proto._monthsShort      = defaultLocaleMonthsShort;\n\t    prototype__proto.monthsParse       =        localeMonthsParse;\n\t    prototype__proto._monthsRegex      = defaultMonthsRegex;\n\t    prototype__proto.monthsRegex       = monthsRegex;\n\t    prototype__proto._monthsShortRegex = defaultMonthsShortRegex;\n\t    prototype__proto.monthsShortRegex  = monthsShortRegex;\n\t\n\t    // Week\n\t    prototype__proto.week = localeWeek;\n\t    prototype__proto._week = defaultLocaleWeek;\n\t    prototype__proto.firstDayOfYear = localeFirstDayOfYear;\n\t    prototype__proto.firstDayOfWeek = localeFirstDayOfWeek;\n\t\n\t    // Day of Week\n\t    prototype__proto.weekdays       =        localeWeekdays;\n\t    prototype__proto._weekdays      = defaultLocaleWeekdays;\n\t    prototype__proto.weekdaysMin    =        localeWeekdaysMin;\n\t    prototype__proto._weekdaysMin   = defaultLocaleWeekdaysMin;\n\t    prototype__proto.weekdaysShort  =        localeWeekdaysShort;\n\t    prototype__proto._weekdaysShort = defaultLocaleWeekdaysShort;\n\t    prototype__proto.weekdaysParse  =        localeWeekdaysParse;\n\t\n\t    // Hours\n\t    prototype__proto.isPM = localeIsPM;\n\t    prototype__proto._meridiemParse = defaultLocaleMeridiemParse;\n\t    prototype__proto.meridiem = localeMeridiem;\n\t\n\t    function lists__get (format, index, field, setter) {\n\t        var locale = locale_locales__getLocale();\n\t        var utc = create_utc__createUTC().set(setter, index);\n\t        return locale[field](utc, format);\n\t    }\n\t\n\t    function list (format, index, field, count, setter) {\n\t        if (typeof format === 'number') {\n\t            index = format;\n\t            format = undefined;\n\t        }\n\t\n\t        format = format || '';\n\t\n\t        if (index != null) {\n\t            return lists__get(format, index, field, setter);\n\t        }\n\t\n\t        var i;\n\t        var out = [];\n\t        for (i = 0; i < count; i++) {\n\t            out[i] = lists__get(format, i, field, setter);\n\t        }\n\t        return out;\n\t    }\n\t\n\t    function lists__listMonths (format, index) {\n\t        return list(format, index, 'months', 12, 'month');\n\t    }\n\t\n\t    function lists__listMonthsShort (format, index) {\n\t        return list(format, index, 'monthsShort', 12, 'month');\n\t    }\n\t\n\t    function lists__listWeekdays (format, index) {\n\t        return list(format, index, 'weekdays', 7, 'day');\n\t    }\n\t\n\t    function lists__listWeekdaysShort (format, index) {\n\t        return list(format, index, 'weekdaysShort', 7, 'day');\n\t    }\n\t\n\t    function lists__listWeekdaysMin (format, index) {\n\t        return list(format, index, 'weekdaysMin', 7, 'day');\n\t    }\n\t\n\t    locale_locales__getSetGlobalLocale('en', {\n\t        ordinalParse: /\\d{1,2}(th|st|nd|rd)/,\n\t        ordinal : function (number) {\n\t            var b = number % 10,\n\t                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n\t                (b === 1) ? 'st' :\n\t                (b === 2) ? 'nd' :\n\t                (b === 3) ? 'rd' : 'th';\n\t            return number + output;\n\t        }\n\t    });\n\t\n\t    // Side effect imports\n\t    utils_hooks__hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', locale_locales__getSetGlobalLocale);\n\t    utils_hooks__hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', locale_locales__getLocale);\n\t\n\t    var mathAbs = Math.abs;\n\t\n\t    function duration_abs__abs () {\n\t        var data           = this._data;\n\t\n\t        this._milliseconds = mathAbs(this._milliseconds);\n\t        this._days         = mathAbs(this._days);\n\t        this._months       = mathAbs(this._months);\n\t\n\t        data.milliseconds  = mathAbs(data.milliseconds);\n\t        data.seconds       = mathAbs(data.seconds);\n\t        data.minutes       = mathAbs(data.minutes);\n\t        data.hours         = mathAbs(data.hours);\n\t        data.months        = mathAbs(data.months);\n\t        data.years         = mathAbs(data.years);\n\t\n\t        return this;\n\t    }\n\t\n\t    function duration_add_subtract__addSubtract (duration, input, value, direction) {\n\t        var other = create__createDuration(input, value);\n\t\n\t        duration._milliseconds += direction * other._milliseconds;\n\t        duration._days         += direction * other._days;\n\t        duration._months       += direction * other._months;\n\t\n\t        return duration._bubble();\n\t    }\n\t\n\t    // supports only 2.0-style add(1, 's') or add(duration)\n\t    function duration_add_subtract__add (input, value) {\n\t        return duration_add_subtract__addSubtract(this, input, value, 1);\n\t    }\n\t\n\t    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\t    function duration_add_subtract__subtract (input, value) {\n\t        return duration_add_subtract__addSubtract(this, input, value, -1);\n\t    }\n\t\n\t    function absCeil (number) {\n\t        if (number < 0) {\n\t            return Math.floor(number);\n\t        } else {\n\t            return Math.ceil(number);\n\t        }\n\t    }\n\t\n\t    function bubble () {\n\t        var milliseconds = this._milliseconds;\n\t        var days         = this._days;\n\t        var months       = this._months;\n\t        var data         = this._data;\n\t        var seconds, minutes, hours, years, monthsFromDays;\n\t\n\t        // if we have a mix of positive and negative values, bubble down first\n\t        // check: https://github.com/moment/moment/issues/2166\n\t        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n\t                (milliseconds <= 0 && days <= 0 && months <= 0))) {\n\t            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n\t            days = 0;\n\t            months = 0;\n\t        }\n\t\n\t        // The following code bubbles up values, see the tests for\n\t        // examples of what that means.\n\t        data.milliseconds = milliseconds % 1000;\n\t\n\t        seconds           = absFloor(milliseconds / 1000);\n\t        data.seconds      = seconds % 60;\n\t\n\t        minutes           = absFloor(seconds / 60);\n\t        data.minutes      = minutes % 60;\n\t\n\t        hours             = absFloor(minutes / 60);\n\t        data.hours        = hours % 24;\n\t\n\t        days += absFloor(hours / 24);\n\t\n\t        // convert days to months\n\t        monthsFromDays = absFloor(daysToMonths(days));\n\t        months += monthsFromDays;\n\t        days -= absCeil(monthsToDays(monthsFromDays));\n\t\n\t        // 12 months -> 1 year\n\t        years = absFloor(months / 12);\n\t        months %= 12;\n\t\n\t        data.days   = days;\n\t        data.months = months;\n\t        data.years  = years;\n\t\n\t        return this;\n\t    }\n\t\n\t    function daysToMonths (days) {\n\t        // 400 years have 146097 days (taking into account leap year rules)\n\t        // 400 years have 12 months === 4800\n\t        return days * 4800 / 146097;\n\t    }\n\t\n\t    function monthsToDays (months) {\n\t        // the reverse of daysToMonths\n\t        return months * 146097 / 4800;\n\t    }\n\t\n\t    function as (units) {\n\t        var days;\n\t        var months;\n\t        var milliseconds = this._milliseconds;\n\t\n\t        units = normalizeUnits(units);\n\t\n\t        if (units === 'month' || units === 'year') {\n\t            days   = this._days   + milliseconds / 864e5;\n\t            months = this._months + daysToMonths(days);\n\t            return units === 'month' ? months : months / 12;\n\t        } else {\n\t            // handle milliseconds separately because of floating point math errors (issue #1867)\n\t            days = this._days + Math.round(monthsToDays(this._months));\n\t            switch (units) {\n\t                case 'week'   : return days / 7     + milliseconds / 6048e5;\n\t                case 'day'    : return days         + milliseconds / 864e5;\n\t                case 'hour'   : return days * 24    + milliseconds / 36e5;\n\t                case 'minute' : return days * 1440  + milliseconds / 6e4;\n\t                case 'second' : return days * 86400 + milliseconds / 1000;\n\t                // Math.floor prevents floating point math errors here\n\t                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n\t                default: throw new Error('Unknown unit ' + units);\n\t            }\n\t        }\n\t    }\n\t\n\t    // TODO: Use this.as('ms')?\n\t    function duration_as__valueOf () {\n\t        return (\n\t            this._milliseconds +\n\t            this._days * 864e5 +\n\t            (this._months % 12) * 2592e6 +\n\t            toInt(this._months / 12) * 31536e6\n\t        );\n\t    }\n\t\n\t    function makeAs (alias) {\n\t        return function () {\n\t            return this.as(alias);\n\t        };\n\t    }\n\t\n\t    var asMilliseconds = makeAs('ms');\n\t    var asSeconds      = makeAs('s');\n\t    var asMinutes      = makeAs('m');\n\t    var asHours        = makeAs('h');\n\t    var asDays         = makeAs('d');\n\t    var asWeeks        = makeAs('w');\n\t    var asMonths       = makeAs('M');\n\t    var asYears        = makeAs('y');\n\t\n\t    function duration_get__get (units) {\n\t        units = normalizeUnits(units);\n\t        return this[units + 's']();\n\t    }\n\t\n\t    function makeGetter(name) {\n\t        return function () {\n\t            return this._data[name];\n\t        };\n\t    }\n\t\n\t    var milliseconds = makeGetter('milliseconds');\n\t    var seconds      = makeGetter('seconds');\n\t    var minutes      = makeGetter('minutes');\n\t    var hours        = makeGetter('hours');\n\t    var days         = makeGetter('days');\n\t    var months       = makeGetter('months');\n\t    var years        = makeGetter('years');\n\t\n\t    function weeks () {\n\t        return absFloor(this.days() / 7);\n\t    }\n\t\n\t    var round = Math.round;\n\t    var thresholds = {\n\t        s: 45,  // seconds to minute\n\t        m: 45,  // minutes to hour\n\t        h: 22,  // hours to day\n\t        d: 26,  // days to month\n\t        M: 11   // months to year\n\t    };\n\t\n\t    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\t    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n\t        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n\t    }\n\t\n\t    function duration_humanize__relativeTime (posNegDuration, withoutSuffix, locale) {\n\t        var duration = create__createDuration(posNegDuration).abs();\n\t        var seconds  = round(duration.as('s'));\n\t        var minutes  = round(duration.as('m'));\n\t        var hours    = round(duration.as('h'));\n\t        var days     = round(duration.as('d'));\n\t        var months   = round(duration.as('M'));\n\t        var years    = round(duration.as('y'));\n\t\n\t        var a = seconds < thresholds.s && ['s', seconds]  ||\n\t                minutes <= 1           && ['m']           ||\n\t                minutes < thresholds.m && ['mm', minutes] ||\n\t                hours   <= 1           && ['h']           ||\n\t                hours   < thresholds.h && ['hh', hours]   ||\n\t                days    <= 1           && ['d']           ||\n\t                days    < thresholds.d && ['dd', days]    ||\n\t                months  <= 1           && ['M']           ||\n\t                months  < thresholds.M && ['MM', months]  ||\n\t                years   <= 1           && ['y']           || ['yy', years];\n\t\n\t        a[2] = withoutSuffix;\n\t        a[3] = +posNegDuration > 0;\n\t        a[4] = locale;\n\t        return substituteTimeAgo.apply(null, a);\n\t    }\n\t\n\t    // This function allows you to set a threshold for relative time strings\n\t    function duration_humanize__getSetRelativeTimeThreshold (threshold, limit) {\n\t        if (thresholds[threshold] === undefined) {\n\t            return false;\n\t        }\n\t        if (limit === undefined) {\n\t            return thresholds[threshold];\n\t        }\n\t        thresholds[threshold] = limit;\n\t        return true;\n\t    }\n\t\n\t    function humanize (withSuffix) {\n\t        var locale = this.localeData();\n\t        var output = duration_humanize__relativeTime(this, !withSuffix, locale);\n\t\n\t        if (withSuffix) {\n\t            output = locale.pastFuture(+this, output);\n\t        }\n\t\n\t        return locale.postformat(output);\n\t    }\n\t\n\t    var iso_string__abs = Math.abs;\n\t\n\t    function iso_string__toISOString() {\n\t        // for ISO strings we do not use the normal bubbling rules:\n\t        //  * milliseconds bubble up until they become hours\n\t        //  * days do not bubble at all\n\t        //  * months bubble up until they become years\n\t        // This is because there is no context-free conversion between hours and days\n\t        // (think of clock changes)\n\t        // and also not between days and months (28-31 days per month)\n\t        var seconds = iso_string__abs(this._milliseconds) / 1000;\n\t        var days         = iso_string__abs(this._days);\n\t        var months       = iso_string__abs(this._months);\n\t        var minutes, hours, years;\n\t\n\t        // 3600 seconds -> 60 minutes -> 1 hour\n\t        minutes           = absFloor(seconds / 60);\n\t        hours             = absFloor(minutes / 60);\n\t        seconds %= 60;\n\t        minutes %= 60;\n\t\n\t        // 12 months -> 1 year\n\t        years  = absFloor(months / 12);\n\t        months %= 12;\n\t\n\t\n\t        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\t        var Y = years;\n\t        var M = months;\n\t        var D = days;\n\t        var h = hours;\n\t        var m = minutes;\n\t        var s = seconds;\n\t        var total = this.asSeconds();\n\t\n\t        if (!total) {\n\t            // this is the same as C#'s (Noda) and python (isodate)...\n\t            // but not other JS (goog.date)\n\t            return 'P0D';\n\t        }\n\t\n\t        return (total < 0 ? '-' : '') +\n\t            'P' +\n\t            (Y ? Y + 'Y' : '') +\n\t            (M ? M + 'M' : '') +\n\t            (D ? D + 'D' : '') +\n\t            ((h || m || s) ? 'T' : '') +\n\t            (h ? h + 'H' : '') +\n\t            (m ? m + 'M' : '') +\n\t            (s ? s + 'S' : '');\n\t    }\n\t\n\t    var duration_prototype__proto = Duration.prototype;\n\t\n\t    duration_prototype__proto.abs            = duration_abs__abs;\n\t    duration_prototype__proto.add            = duration_add_subtract__add;\n\t    duration_prototype__proto.subtract       = duration_add_subtract__subtract;\n\t    duration_prototype__proto.as             = as;\n\t    duration_prototype__proto.asMilliseconds = asMilliseconds;\n\t    duration_prototype__proto.asSeconds      = asSeconds;\n\t    duration_prototype__proto.asMinutes      = asMinutes;\n\t    duration_prototype__proto.asHours        = asHours;\n\t    duration_prototype__proto.asDays         = asDays;\n\t    duration_prototype__proto.asWeeks        = asWeeks;\n\t    duration_prototype__proto.asMonths       = asMonths;\n\t    duration_prototype__proto.asYears        = asYears;\n\t    duration_prototype__proto.valueOf        = duration_as__valueOf;\n\t    duration_prototype__proto._bubble        = bubble;\n\t    duration_prototype__proto.get            = duration_get__get;\n\t    duration_prototype__proto.milliseconds   = milliseconds;\n\t    duration_prototype__proto.seconds        = seconds;\n\t    duration_prototype__proto.minutes        = minutes;\n\t    duration_prototype__proto.hours          = hours;\n\t    duration_prototype__proto.days           = days;\n\t    duration_prototype__proto.weeks          = weeks;\n\t    duration_prototype__proto.months         = months;\n\t    duration_prototype__proto.years          = years;\n\t    duration_prototype__proto.humanize       = humanize;\n\t    duration_prototype__proto.toISOString    = iso_string__toISOString;\n\t    duration_prototype__proto.toString       = iso_string__toISOString;\n\t    duration_prototype__proto.toJSON         = iso_string__toISOString;\n\t    duration_prototype__proto.locale         = locale;\n\t    duration_prototype__proto.localeData     = localeData;\n\t\n\t    // Deprecations\n\t    duration_prototype__proto.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', iso_string__toISOString);\n\t    duration_prototype__proto.lang = lang;\n\t\n\t    // Side effect imports\n\t\n\t    // FORMATTING\n\t\n\t    addFormatToken('X', 0, 0, 'unix');\n\t    addFormatToken('x', 0, 0, 'valueOf');\n\t\n\t    // PARSING\n\t\n\t    addRegexToken('x', matchSigned);\n\t    addRegexToken('X', matchTimestamp);\n\t    addParseToken('X', function (input, array, config) {\n\t        config._d = new Date(parseFloat(input, 10) * 1000);\n\t    });\n\t    addParseToken('x', function (input, array, config) {\n\t        config._d = new Date(toInt(input));\n\t    });\n\t\n\t    // Side effect imports\n\t\n\t\n\t    utils_hooks__hooks.version = '2.11.1';\n\t\n\t    setHookCallback(local__createLocal);\n\t\n\t    utils_hooks__hooks.fn                    = momentPrototype;\n\t    utils_hooks__hooks.min                   = min;\n\t    utils_hooks__hooks.max                   = max;\n\t    utils_hooks__hooks.now                   = now;\n\t    utils_hooks__hooks.utc                   = create_utc__createUTC;\n\t    utils_hooks__hooks.unix                  = moment__createUnix;\n\t    utils_hooks__hooks.months                = lists__listMonths;\n\t    utils_hooks__hooks.isDate                = isDate;\n\t    utils_hooks__hooks.locale                = locale_locales__getSetGlobalLocale;\n\t    utils_hooks__hooks.invalid               = valid__createInvalid;\n\t    utils_hooks__hooks.duration              = create__createDuration;\n\t    utils_hooks__hooks.isMoment              = isMoment;\n\t    utils_hooks__hooks.weekdays              = lists__listWeekdays;\n\t    utils_hooks__hooks.parseZone             = moment__createInZone;\n\t    utils_hooks__hooks.localeData            = locale_locales__getLocale;\n\t    utils_hooks__hooks.isDuration            = isDuration;\n\t    utils_hooks__hooks.monthsShort           = lists__listMonthsShort;\n\t    utils_hooks__hooks.weekdaysMin           = lists__listWeekdaysMin;\n\t    utils_hooks__hooks.defineLocale          = defineLocale;\n\t    utils_hooks__hooks.weekdaysShort         = lists__listWeekdaysShort;\n\t    utils_hooks__hooks.normalizeUnits        = normalizeUnits;\n\t    utils_hooks__hooks.relativeTimeThreshold = duration_humanize__getSetRelativeTimeThreshold;\n\t    utils_hooks__hooks.prototype             = momentPrototype;\n\t\n\t    var _moment = utils_hooks__hooks;\n\t\n\t    return _moment;\n\t\n\t}));\n\t},{}],106:[function(require,module,exports){\n\tmodule.exports={\n\t  \"name\": \"mermaid\",\n\t  \"version\": \"0.5.8\",\n\t  \"description\": \"Markdownish syntax for generating flowcharts, sequence diagrams, class diagrams and gantt charts.\",\n\t  \"main\": \"src/mermaid.js\",\n\t  \"keywords\": [\n\t    \"diagram\",\n\t    \"markdown\",\n\t    \"flowchart\",\n\t    \"sequence diagram\",\n\t    \"gantt\"\n\t  ],\n\t  \"bin\": {\n\t    \"mermaid\": \"./bin/mermaid.js\"\n\t  },\n\t  \"scripts\": {\n\t    \"live\": \"live-server ./test/examples\",\n\t    \"lint\": \"node node_modules/eslint/bin/eslint.js src\",\n\t    \"jison\": \"gulp jison_legacy\",\n\t    \"karma\": \"node node_modules/karma/bin/karma start karma.conf.js --single-run\",\n\t    \"watch\": \"source  ./scripts/watch.sh\",\n\t    \"doc\": \"rm -r build;rm -r dist/www;gulp vartree;cp dist/www/all.html ../mermaid-pages/index.html;cp dist/mermaid.js ../mermaid-pages/javascripts/lib;cp dist/mermaid.forest.css ../mermaid-pages/stylesheets\",\n\t    \"tape\": \"node node_modules/tape/bin/tape test/cli_test-*.js\",\n\t    \"jasmine\": \"npm run jison &&node node_modules/jasmine-es6/bin/jasmine.js\",\n\t    \"pretest\": \"npm run jison\",\n\t    \"test\": \"npm run dist && npm run karma && npm run tape\",\n\t    \"dist-slim-mermaid\": \"node node_modules/browserify/bin/cmd.js src/mermaid.js  -t babelify  -s mermaid    -o dist/mermaid.slim.js    -x d3   && cat dist/mermaid.slim.js    | node node_modules/uglifyjs/bin/uglifyjs -mc > dist/mermaid.slim.min.js\",\n\t    \"dist-slim-mermaidAPI\": \"node node_modules/browserify/bin/cmd.js src/mermaidAPI.js -t babelify -s mermaidAPI -o dist/mermaidAPI.slim.js -x d3 && cat dist/mermaidAPI.slim.js | node node_modules/uglifyjs/bin/uglifyjs -mc > dist/mermaidAPI.slim.min.js\",\n\t    \"dist-mermaid\": \"node node_modules/browserify/bin/cmd.js src/mermaid.js  -t babelify  -s mermaid    -o dist/mermaid.js         && cat dist/mermaid.js         | node node_modules/uglifyjs/bin/uglifyjs -mc > dist/mermaid.min.js\",\n\t    \"dist-mermaidAPI\": \"node node_modules/browserify/bin/cmd.js src/mermaidAPI.js -t babelify -s mermaidAPI -o dist/mermaidAPI.js      && cat dist/mermaidAPI.js      | node node_modules/uglifyjs/bin/uglifyjs -mc > dist/mermaidAPI.min.js\",\n\t    \"dist\": \"npm run dist-slim-mermaid && npm run dist-slim-mermaidAPI && npm run dist-mermaid && npm run dist-mermaidAPI\"\n\t  },\n\t  \"repository\": {\n\t    \"type\": \"git\",\n\t    \"url\": \"https://github.com/knsv/mermaid\"\n\t  },\n\t  \"author\": \"Knut Sveidqvist\",\n\t  \"license\": \"MIT\",\n\t  \"dependencies\": {\n\t    \"chalk\": \"^0.5.1\",\n\t    \"d3\": \"3.5.6\",\n\t    \"dagre\": \"^0.7.4\",\n\t    \"dagre-d3\": \"0.4.10\",\n\t    \"he\": \"^0.5.0\",\n\t    \"minimist\": \"^1.1.0\",\n\t    \"mkdirp\": \"^0.5.0\",\n\t    \"moment\": \"^2.9.0\",\n\t    \"semver\": \"^4.1.1\",\n\t    \"which\": \"^1.0.8\"\n\t  },\n\t  \"devDependencies\": {\n\t    \"async\": \"^0.9.0\",\n\t    \"babel-eslint\": \"^4.1.3\",\n\t    \"babelify\": \"^6.4.0\",\n\t    \"browserify\": \"~6.2.0\",\n\t    \"clone\": \"^0.2.0\",\n\t    \"codeclimate-test-reporter\": \"0.0.4\",\n\t    \"dateformat\": \"^1.0.11\",\n\t    \"dox\": \"^0.8.0\",\n\t    \"eslint\": \"^1.6.0\",\n\t    \"eslint-watch\": \"^2.1.2\",\n\t    \"event-stream\": \"^3.2.0\",\n\t    \"foundation\": \"^4.2.1-1\",\n\t    \"front-matter\": \"^0.2.0\",\n\t    \"gulp\": \"~3.9.0\",\n\t    \"gulp-bower\": \"0.0.10\",\n\t    \"gulp-browserify\": \"^0.5.0\",\n\t    \"gulp-bump\": \"^0.1.11\",\n\t    \"gulp-concat\": \"~2.4.1\",\n\t    \"gulp-data\": \"^1.1.1\",\n\t    \"gulp-dox\": \"^0.1.6\",\n\t    \"gulp-ext-replace\": \"^0.2.0\",\n\t    \"gulp-filelog\": \"^0.4.1\",\n\t    \"gulp-front-matter\": \"^1.2.3\",\n\t    \"gulp-hogan\": \"^1.1.0\",\n\t    \"gulp-if\": \"^1.2.5\",\n\t    \"gulp-insert\": \"^0.4.0\",\n\t    \"gulp-istanbul\": \"^0.4.0\",\n\t    \"gulp-jasmine\": \"~2.1.0\",\n\t    \"gulp-jasmine-browser\": \"^0.2.3\",\n\t    \"gulp-jison\": \"~1.2.0\",\n\t    \"gulp-jshint\": \"^1.9.0\",\n\t    \"gulp-less\": \"^3.0.1\",\n\t    \"gulp-livereload\": \"^3.8.0\",\n\t    \"gulp-marked\": \"^1.0.0\",\n\t    \"gulp-mdvars\": \"^2.0.0\",\n\t    \"gulp-qunit\": \"~1.2.1\",\n\t    \"gulp-rename\": \"~1.2.0\",\n\t    \"gulp-shell\": \"^0.2.10\",\n\t    \"gulp-tag-version\": \"^1.2.1\",\n\t    \"gulp-uglify\": \"~1.0.1\",\n\t    \"gulp-util\": \"^3.0.7\",\n\t    \"gulp-vartree\": \"^2.0.1\",\n\t    \"hogan.js\": \"^3.0.2\",\n\t    \"jasmine\": \"2.3.2\",\n\t    \"jasmine-es6\": \"0.0.18\",\n\t    \"jison\": \"zaach/jison\",\n\t    \"jsdom\": \"^7.0.2\",\n\t    \"jshint-stylish\": \"^2.0.1\",\n\t    \"karma\": \"^0.13.15\",\n\t    \"karma-babel-preprocessor\": \"^6.0.1\",\n\t    \"karma-browserify\": \"^4.4.0\",\n\t    \"karma-jasmine\": \"^0.3.6\",\n\t    \"karma-phantomjs-launcher\": \"^0.2.1\",\n\t    \"live-server\": \"^0.9.0\",\n\t    \"map-stream\": \"0.0.6\",\n\t    \"marked\": \"^0.3.2\",\n\t    \"mock-browser\": \"^0.91.34\",\n\t    \"path\": \"^0.4.9\",\n\t    \"phantomjs\": \"^1.9.18\",\n\t    \"proxyquire\": \"^1.7.3\",\n\t    \"proxyquire-universal\": \"^1.0.8\",\n\t    \"proxyquireify\": \"^3.0.0\",\n\t    \"require-dir\": \"^0.3.0\",\n\t    \"rewire\": \"^2.1.3\",\n\t    \"rimraf\": \"^2.2.8\",\n\t    \"tape\": \"^3.0.3\",\n\t    \"testdom\": \"^2.0.0\",\n\t    \"uglifyjs\": \"^2.4.10\",\n\t    \"vinyl-source-stream\": \"^1.1.0\",\n\t    \"watchify\": \"^3.6.1\"\n\t  }\n\t}\n\t\n\t},{}],107:[function(require,module,exports){\n\t/* global window */\n\t//log.debug('Setting up d3');\n\t'use strict';\n\t\n\tvar d3;\n\t\n\tif (require) {\n\t    try {\n\t        d3 = require('d3');\n\t    } catch (e) {\n\t        //log.debug('Exception ... but ok');\n\t        //log.debug(e);\n\t    }\n\t}\n\t\n\t//log.debug(d3);\n\t\n\tif (!d3) {\n\t    //if(typeof window !== 'undefined')\n\t    d3 = window.d3;\n\t}\n\t\n\t//if(typeof window === 'undefined'){\n\t//    window = {};\n\t//    window.d3 = d3;\n\t//}\n\t//log.debug('window');\n\t//log.debug(window);\n\tmodule.exports = d3;\n\t/* jshint ignore:start */\n\t/*\n\t\n\t D3 Text Wrap\n\t By Vijith Assar\n\t http://www.vijithassar.com\n\t http://www.github.com/vijithassar\n\t @vijithassar\n\t\n\t Detailed instructions at http://www.github.com/vijithassar/d3textwrap\n\t\n\t */\n\t\n\t(function () {\n\t\n\t    // set this variable to a string value to always force a particular\n\t    // wrap method for development purposes, for example to check tspan\n\t    // rendering using a foreignobject-enabled browser. set to 'tspan' to\n\t    // use tspans and 'foreignobject' to use foreignobject\n\t    var force_wrap_method = false; // by default no wrap method is forced\n\t    force_wrap_method = 'tspans'; // uncomment this statement to force tspans\n\t    // force_wrap_method = 'foreignobjects'; // uncomment this statement to force foreignobjects\n\t\n\t    // exit immediately if something in this location\n\t    // has already been defined; the plugin will defer to whatever\n\t    // else you're doing in your code\n\t    if (d3.selection.prototype.textwrap) {\n\t        return false;\n\t    }\n\t\n\t    // double check the force_wrap_method flag\n\t    // and reset if someone screwed up the above\n\t    // settings\n\t    if (typeof force_wrap_method == 'undefined') {\n\t        var force_wrap_method = false;\n\t    }\n\t\n\t    // create the plugin method twice, both for regular use\n\t    // and again for use inside the enter() selection\n\t    d3.selection.prototype.textwrap = d3.selection.enter.prototype.textwrap = function (bounds, padding) {\n\t\n\t        // default value of padding is zero if it's undefined\n\t        var padding = parseInt(padding) || 0;\n\t\n\t        // save callee into a variable so we can continue to refer to it\n\t        // as the function scope changes\n\t        var selection = this;\n\t\n\t        // create a variable to store desired return values in\n\t        var return_value;\n\t\n\t        // extract wrap boundaries from any d3-selected rect and return them\n\t        // in a format that matches the simpler object argument option\n\t        var extract_bounds = function extract_bounds(bounds) {\n\t            // discard the nested array wrappers added by d3\n\t            var bounding_rect = bounds[0][0];\n\t            // sanitize the svg element name so we can test against it\n\t            var element_type = bounding_rect.tagName.toString();\n\t            // if it's not a rect, exit\n\t            if (element_type !== 'rect') {\n\t                return false;\n\t                // if it's a rect, proceed to extracting the position attributes\n\t            } else {\n\t                    var bounds_extracted = {};\n\t                    bounds_extracted.x = d3.select(bounding_rect).attr('x') || 0;\n\t                    bounds_extracted.y = d3.select(bounding_rect).attr('y') || 0;\n\t                    bounds_extracted.width = d3.select(bounding_rect).attr('width') || 0;\n\t                    bounds_extracted.height = d3.select(bounding_rect).attr('height') || 0;\n\t                    // also pass along the getter function\n\t                    bounds_extracted.attr = bounds.attr;\n\t                }\n\t            return bounds_extracted;\n\t        };\n\t\n\t        // double check the input argument for the wrapping\n\t        // boundaries to make sure it actually contains all\n\t        // the information we'll need in order to wrap successfully\n\t        var verify_bounds = function verify_bounds(bounds) {\n\t            // quickly add a simple getter method so you can use either\n\t            // bounds.x or bounds.attr('x') as your notation,\n\t            // the latter being a common convention among D3\n\t            // developers\n\t            if (!bounds.attr) {\n\t                bounds.attr = function (property) {\n\t                    if (this[property]) {\n\t                        return this[property];\n\t                    }\n\t                };\n\t            }\n\t            // if it's an associative array, make sure it has all the\n\t            // necessary properties represented directly\n\t            if (typeof bounds == 'object' && typeof bounds.x !== 'undefined' && typeof bounds.y !== 'undefined' && typeof bounds.width !== 'undefined' && typeof bounds.height !== 'undefined'\n\t            // if that's the case, then the bounds are fine\n\t            ) {\n\t                    // return the lightly modified bounds\n\t                    return bounds;\n\t                    // if it's a numerically indexed array, assume it's a\n\t                    // d3-selected rect and try to extract the positions\n\t                } else if (\n\t                // first try to make sure it's an array using Array.isArray\n\t                typeof Array.isArray == 'function' && Array.isArray(bounds) ||\n\t                // but since Array.isArray isn't always supported, fall\n\t                // back to casting to the object to string when it's not\n\t                Object.prototype.toString.call(bounds) === '[object Array]') {\n\t                    // once you're sure it's an array, extract the boundaries\n\t                    // from the rect\n\t                    var extracted_bounds = extract_bounds(bounds);\n\t                    return extracted_bounds;\n\t                } else {\n\t                    // but if the bounds are neither an object nor a numerical\n\t                    // array, then the bounds argument is invalid and you'll\n\t                    // need to fix it\n\t                    return false;\n\t                }\n\t        };\n\t\n\t        var apply_padding = function apply_padding(bounds, padding) {\n\t            var padded_bounds = bounds;\n\t            if (padding !== 0) {\n\t                padded_bounds.x = parseInt(padded_bounds.x) + padding;\n\t                padded_bounds.y = parseInt(padded_bounds.y) + padding;\n\t                padded_bounds.width -= padding * 2;\n\t                padded_bounds.height -= padding * 2;\n\t            }\n\t            return padded_bounds;\n\t        };\n\t\n\t        // verify bounds\n\t        var verified_bounds = verify_bounds(bounds);\n\t\n\t        // modify bounds if a padding value is provided\n\t        if (padding) {\n\t            verified_bounds = apply_padding(verified_bounds, padding);\n\t        }\n\t\n\t        // check that we have the necessary conditions for this function to operate properly\n\t        if (\n\t        // selection it's operating on cannot be not empty\n\t        selection.length == 0 ||\n\t        // d3 must be available\n\t        !d3 ||\n\t        // desired wrapping bounds must be provided as an input argument\n\t        !bounds ||\n\t        // input bounds must validate\n\t        !verified_bounds) {\n\t            // try to return the calling selection if possible\n\t            // so as not to interfere with methods downstream in the\n\t            // chain\n\t            if (selection) {\n\t                return selection;\n\t                // if all else fails, just return false. if you hit this point then you're\n\t                // almost certainly trying to call the textwrap() method on something that\n\t                // doesn't make sense!\n\t            } else {\n\t                    return false;\n\t                }\n\t            // if we've validated everything then we can finally proceed\n\t            // to the meat of this operation\n\t        } else {\n\t\n\t                // reassign the verified bounds as the set we want\n\t                // to work with from here on; this ensures that we're\n\t                // using the same data structure for our bounds regardless\n\t                // of whether the input argument was a simple object or\n\t                // a d3 selection\n\t                bounds = verified_bounds;\n\t\n\t                // wrap using html and foreignObjects if they are supported\n\t                var wrap_with_foreignobjects = function wrap_with_foreignobjects(item) {\n\t                    // establish variables to quickly reference target nodes later\n\t                    var parent = d3.select(item[0].parentNode);\n\t                    var text_node = parent.select('text');\n\t                    var styled_line_height = text_node.style('line-height');\n\t                    // extract our desired content from the single text element\n\t                    var text_to_wrap = text_node.text();\n\t                    // remove the text node and replace with a foreign object\n\t                    text_node.remove();\n\t                    var foreign_object = parent.append('foreignObject');\n\t                    // add foreign object and set dimensions, position, etc\n\t                    foreign_object.attr('requiredFeatures', 'http://www.w3.org/TR/SVG11/feature#Extensibility').attr('x', bounds.x).attr('y', bounds.y).attr('width', bounds.width).attr('height', bounds.height);\n\t                    // insert an HTML div\n\t                    var wrap_div = foreign_object.append('xhtml:div')\n\t                    // this class is currently hardcoded\n\t                    // probably not necessary but easy to\n\t                    // override using .classed() and for now\n\t                    // it's nice to avoid a litany of input\n\t                    // arguments\n\t                    .attr('class', 'wrapped');\n\t                    // set div to same dimensions as foreign object\n\t                    wrap_div.style('height', bounds.height).style('width', bounds.width)\n\t                    // insert text content\n\t                    .html(text_to_wrap);\n\t                    if (styled_line_height) {\n\t                        wrap_div.style('line-height', styled_line_height);\n\t                    }\n\t                    return_value = parent.select('foreignObject');\n\t                };\n\t\n\t                // wrap with tspans if foreignObject is undefined\n\t                var wrap_with_tspans = function wrap_with_tspans(item) {\n\t                    // operate on the first text item in the selection\n\t                    var text_node = item[0];\n\t                    var parent = text_node.parentNode;\n\t                    var text_node_selected = d3.select(text_node);\n\t                    // measure initial size of the text node as rendered\n\t                    var text_node_height = text_node.getBBox().height;\n\t                    var text_node_width = text_node.getBBox().width;\n\t                    // figure out the line height, either from rendered height\n\t                    // of the font or attached styling\n\t                    var line_height;\n\t                    var rendered_line_height = text_node_height;\n\t                    var styled_line_height = text_node_selected.style('line-height');\n\t                    if (styled_line_height && parseInt(styled_line_height)) {\n\t                        line_height = parseInt(styled_line_height.replace('px', ''));\n\t                    } else {\n\t                        line_height = rendered_line_height;\n\t                    }\n\t                    // only fire the rest of this if the text content\n\t                    // overflows the desired dimensions\n\t                    if (text_node_width > bounds.width) {\n\t                        // store whatever is inside the text node\n\t                        // in a variable and then zero out the\n\t                        // initial content; we'll reinsert in a moment\n\t                        // using tspan elements.\n\t                        var text_to_wrap = text_node_selected.text();\n\t                        text_node_selected.text('');\n\t                        if (text_to_wrap) {\n\t                            // keep track of whether we are splitting by spaces\n\t                            // so we know whether to reinsert those spaces later\n\t                            var break_delimiter;\n\t                            // split at spaces to create an array of individual words\n\t                            var text_to_wrap_array;\n\t                            if (text_to_wrap.indexOf(' ') !== -1) {\n\t                                var break_delimiter = ' ';\n\t                                text_to_wrap_array = text_to_wrap.split(' ');\n\t                            } else {\n\t                                // if there are no spaces, figure out the split\n\t                                // points by comparing rendered text width against\n\t                                // bounds and translating that into character position\n\t                                // cuts\n\t                                break_delimiter = '';\n\t                                var string_length = text_to_wrap.length;\n\t                                var number_of_substrings = Math.ceil(text_node_width / bounds.width);\n\t                                var splice_interval = Math.floor(string_length / number_of_substrings);\n\t                                if (!(splice_interval * number_of_substrings >= string_length)) {\n\t                                    number_of_substrings++;\n\t                                }\n\t                                var text_to_wrap_array = [];\n\t                                var substring;\n\t                                var start_position;\n\t                                for (var i = 0; i < number_of_substrings; i++) {\n\t                                    start_position = i * splice_interval;\n\t                                    substring = text_to_wrap.substr(start_position, splice_interval);\n\t                                    text_to_wrap_array.push(substring);\n\t                                }\n\t                            }\n\t\n\t                            // new array where we'll store the words re-assembled into\n\t                            // substrings that have been tested against the desired\n\t                            // maximum wrapping width\n\t                            var substrings = [];\n\t                            // computed text length is arguably incorrectly reported for\n\t                            // all tspans after the first one, in that they will include\n\t                            // the width of previous separate tspans. to compensate we need\n\t                            // to manually track the computed text length of all those\n\t                            // previous tspans and substrings, and then use that to offset\n\t                            // the miscalculation. this then gives us the actual correct\n\t                            // position we want to use in rendering the text in the SVG.\n\t                            var total_offset = 0;\n\t                            // object for storing the results of text length computations later\n\t                            var temp = {};\n\t                            // loop through the words and test the computed text length\n\t                            // of the string against the maximum desired wrapping width\n\t                            for (var i = 0; i < text_to_wrap_array.length; i++) {\n\t                                var word = text_to_wrap_array[i];\n\t                                var previous_string = text_node_selected.text();\n\t                                var previous_width = text_node.getComputedTextLength();\n\t                                // initialize the current word as the first word\n\t                                // or append to the previous string if one exists\n\t                                var new_string;\n\t                                if (previous_string) {\n\t                                    new_string = previous_string + break_delimiter + word;\n\t                                } else {\n\t                                    new_string = word;\n\t                                }\n\t                                // add the newest substring back to the text node and\n\t                                // measure the length\n\t                                text_node_selected.text(new_string);\n\t                                var new_width = text_node.getComputedTextLength();\n\t                                // adjust the length by the offset we've tracked\n\t                                // due to the misreported length discussed above\n\t                                var test_width = new_width - total_offset;\n\t                                // if our latest version of the string is too\n\t                                // big for the bounds, use the previous\n\t                                // version of the string (without the newest word\n\t                                // added) and use the latest word to restart the\n\t                                // process with a new tspan\n\t                                if (new_width > bounds.width) {\n\t                                    if (previous_string && previous_string !== '') {\n\t                                        total_offset = total_offset + previous_width;\n\t                                        temp = { string: previous_string, width: previous_width, offset: total_offset };\n\t                                        substrings.push(temp);\n\t                                        text_node_selected.text('');\n\t                                        text_node_selected.text(word);\n\t                                        // Handle case where there is just one more word to be wrapped\n\t                                        if (i == text_to_wrap_array.length - 1) {\n\t                                            new_string = word;\n\t                                            text_node_selected.text(new_string);\n\t                                            new_width = text_node.getComputedTextLength();\n\t                                        }\n\t                                    }\n\t                                }\n\t                                // if we're up to the last word in the array,\n\t                                // get the computed length as is without\n\t                                // appending anything further to it\n\t                                if (i == text_to_wrap_array.length - 1) {\n\t                                    text_node_selected.text('');\n\t                                    var final_string = new_string;\n\t                                    if (final_string && final_string !== '') {\n\t                                        if (new_width - total_offset > 0) {\n\t                                            new_width = new_width - total_offset;\n\t                                        }\n\t                                        temp = { string: final_string, width: new_width, offset: total_offset };\n\t                                        substrings.push(temp);\n\t                                    }\n\t                                }\n\t                            }\n\t\n\t                            // append each substring as a tspan\n\t                            var current_tspan;\n\t                            var tspan_count;\n\t                            // double check that the text content has been removed\n\t                            // before we start appending tspans\n\t                            text_node_selected.text('');\n\t                            for (var i = 0; i < substrings.length; i++) {\n\t                                var substring = substrings[i].string;\n\t                                if (i > 0) {\n\t                                    var previous_substring = substrings[i - 1];\n\t                                }\n\t                                // only append if we're sure it won't make the tspans\n\t                                // overflow the bounds.\n\t                                if (i * line_height < bounds.height - line_height * 1.5) {\n\t                                    current_tspan = text_node_selected.append('tspan').text(substring);\n\t                                    // vertical shift to all tspans after the first one\n\t                                    current_tspan.attr('dy', function (d) {\n\t                                        if (i > 0) {\n\t                                            return line_height;\n\t                                        }\n\t                                    });\n\t                                    // shift left from default position, which\n\t                                    // is probably based on the full length of the\n\t                                    // text string until we make this adjustment\n\t                                    current_tspan.attr('x', function () {\n\t                                        var x_offset = bounds.x;\n\t                                        if (padding) {\n\t                                            x_offset += padding;\n\t                                        }\n\t                                        return x_offset;\n\t                                    });\n\t                                    //                                    .attr('dx', function() {\n\t                                    //                                        if(i == 0) {\n\t                                    //                                            var render_offset = 0;\n\t                                    //                                        } else if(i > 0) {\n\t                                    //                                            render_offset = substrings[i - 1].width;\n\t                                    //                                            render_offset = render_offset * -1;\n\t                                    //                                        }\n\t                                    //                                        return render_offset;\n\t                                    //                                    });\n\t                                }\n\t                            }\n\t                        }\n\t                    }\n\t                    // position the overall text node, whether wrapped or not\n\t                    text_node_selected.attr('y', function () {\n\t                        var y_offset = bounds.y;\n\t                        // shift by line-height to move the baseline into\n\t                        // the bounds – otherwise the text baseline would be\n\t                        // at the top of the bounds\n\t                        if (line_height) {\n\t                            y_offset += line_height;\n\t                        }\n\t                        // shift by padding, if it's there\n\t                        if (padding) {\n\t                            y_offset += padding;\n\t                        }\n\t                        return y_offset;\n\t                    });\n\t                    // shift to the right by the padding value\n\t                    text_node_selected.attr('x', function () {\n\t                        var x_offset = bounds.x;\n\t                        if (padding) {\n\t                            x_offset += padding;\n\t                        }\n\t                        return x_offset;\n\t                    });\n\t\n\t                    // assign our modified text node with tspans\n\t                    // to the return value\n\t                    return_value = d3.select(parent).selectAll('text');\n\t                };\n\t\n\t                // variable used to hold the functions that let us\n\t                // switch between the wrap methods\n\t                var wrap_method;\n\t\n\t                // if a wrap method if being forced, assign that\n\t                // function\n\t                if (force_wrap_method) {\n\t                    if (force_wrap_method == 'foreignobjects') {\n\t                        wrap_method = wrap_with_foreignobjects;\n\t                    } else if (force_wrap_method == 'tspans') {\n\t                        wrap_method = wrap_with_tspans;\n\t                    }\n\t                }\n\t\n\t                // if no wrap method is being forced, then instead\n\t                // test for browser support of foreignobject and\n\t                // use whichever wrap method makes sense accordingly\n\t                if (!force_wrap_method) {\n\t                    if (typeof SVGForeignObjectElement !== 'undefined') {\n\t                        wrap_method = wrap_with_foreignobjects;\n\t                    } else {\n\t                        wrap_method = wrap_with_tspans;\n\t                    }\n\t                }\n\t\n\t                // run the desired wrap function for each item\n\t                // in the d3 selection that called .textwrap()\n\t                for (var i = 0; i < selection.length; i++) {\n\t                    var item = selection[i];\n\t                    wrap_method(item);\n\t                }\n\t\n\t                // return the modified nodes so we can chain other\n\t                // methods to them.\n\t                return return_value;\n\t            }\n\t    };\n\t})();\n\t/* jshint ignore:end */\n\t\n\t},{\"d3\":4}],108:[function(require,module,exports){\n\t'use strict';\n\t\n\tvar Logger = require('../../logger');\n\tvar log = new Logger.Log();\n\t\n\tvar relations = [];\n\t\n\tvar classes;\n\tvar idCache;\n\tclasses = {};\n\t\n\t// Functions to be run after graph rendering\n\tvar funs = [];\n\t/**\n\t * Function called by parser when a node definition has been found.\n\t * @param id\n\t * @param text\n\t * @param type\n\t * @param style\n\t */\n\texports.addClass = function (id) {\n\t    if (typeof classes[id] === 'undefined') {\n\t        classes[id] = {\n\t            id: id,\n\t            methods: [],\n\t            members: []\n\t        };\n\t    }\n\t};\n\t\n\texports.clear = function () {\n\t    relations = [];\n\t    classes = {};\n\t};\n\t\n\tmodule.exports.getClass = function (id) {\n\t    return classes[id];\n\t};\n\tmodule.exports.getClasses = function () {\n\t    return classes;\n\t};\n\t\n\tmodule.exports.getRelations = function () {\n\t    return relations;\n\t};\n\t\n\texports.addRelation = function (relation) {\n\t    log.warn('Adding relation: ' + JSON.stringify(relation));\n\t    exports.addClass(relation.id1);\n\t    exports.addClass(relation.id2);\n\t\n\t    relations.push(relation);\n\t};\n\t\n\texports.addMembers = function (className, MembersArr) {\n\t    var theClass = classes[className];\n\t    if (typeof MembersArr === 'string') {\n\t        if (MembersArr.substr(-1) === ')') {\n\t            theClass.methods.push(MembersArr);\n\t        } else {\n\t            theClass.members.push(MembersArr);\n\t        }\n\t    }\n\t};\n\t\n\texports.cleanupLabel = function (label) {\n\t\n\t    if (label.substring(0, 1) === ':') {\n\t        return label.substr(2).trim();\n\t    } else {\n\t        return label.trim();\n\t    }\n\t};\n\t\n\texports.lineType = {\n\t    LINE: 0,\n\t    DOTTED_LINE: 1\n\t};\n\t\n\texports.relationType = {\n\t    AGGREGATION: 0,\n\t    EXTENSION: 1,\n\t    COMPOSITION: 2,\n\t    DEPENDENCY: 3\n\t};\n\t\n\t},{\"../../logger\":126}],109:[function(require,module,exports){\n\t/**\n\t * Created by knut on 14-11-23.\n\t */\n\t\n\t'use strict';\n\t\n\tvar cd = require('./parser/classDiagram').parser;\n\tvar cDDb = require('./classDb');\n\tcd.yy = cDDb;\n\tvar d3 = require('../../d3');\n\tvar Logger = require('../../logger');\n\tvar dagre = require('dagre');\n\tvar log = new Logger.Log();\n\t\n\tvar idCache;\n\tidCache = {};\n\t\n\tvar classCnt = 0;\n\tvar conf = {\n\t    dividerMargin: 10,\n\t    padding: 5,\n\t    textHeight: 14\n\t};\n\t\n\t// Todo optimize\n\tvar getGraphId = function getGraphId(label) {\n\t    var keys = Object.keys(idCache);\n\t\n\t    var i;\n\t    for (i = 0; i < keys.length; i++) {\n\t        if (idCache[keys[i]].label === label) {\n\t            return keys[i];\n\t        }\n\t    }\n\t\n\t    return undefined;\n\t};\n\t\n\t/**\n\t * Setup arrow head and define the marker. The result is appended to the svg.\n\t */\n\tvar insertMarkers = function insertMarkers(elem) {\n\t    elem.append('defs').append('marker').attr('id', 'extensionStart').attr('class', 'extension').attr('refX', 0).attr('refY', 7).attr('markerWidth', 190).attr('markerHeight', 240).attr('orient', 'auto').append('path').attr('d', 'M 1,7 L18,13 V 1 Z');\n\t\n\t    elem.append('defs').append('marker').attr('id', 'extensionEnd').attr('refX', 19).attr('refY', 7).attr('markerWidth', 20).attr('markerHeight', 28).attr('orient', 'auto').append('path').attr('d', 'M 1,1 V 13 L18,7 Z'); //this is actual shape for arrowhead\n\t\n\t    elem.append('defs').append('marker').attr('id', 'compositionStart').attr('class', 'extension').attr('refX', 0).attr('refY', 7).attr('markerWidth', 190).attr('markerHeight', 240).attr('orient', 'auto').append('path').attr('d', 'M 18,7 L9,13 L1,7 L9,1 Z');\n\t\n\t    elem.append('defs').append('marker').attr('id', 'compositionEnd').attr('refX', 19).attr('refY', 7).attr('markerWidth', 20).attr('markerHeight', 28).attr('orient', 'auto').append('path').attr('d', 'M 18,7 L9,13 L1,7 L9,1 Z');\n\t\n\t    elem.append('defs').append('marker').attr('id', 'aggregationStart').attr('class', 'extension').attr('refX', 0).attr('refY', 7).attr('markerWidth', 190).attr('markerHeight', 240).attr('orient', 'auto').append('path').attr('d', 'M 18,7 L9,13 L1,7 L9,1 Z');\n\t\n\t    elem.append('defs').append('marker').attr('id', 'aggregationEnd').attr('refX', 19).attr('refY', 7).attr('markerWidth', 20).attr('markerHeight', 28).attr('orient', 'auto').append('path').attr('d', 'M 18,7 L9,13 L1,7 L9,1 Z');\n\t\n\t    elem.append('defs').append('marker').attr('id', 'dependencyStart').attr('class', 'extension').attr('refX', 0).attr('refY', 7).attr('markerWidth', 190).attr('markerHeight', 240).attr('orient', 'auto').append('path').attr('d', 'M 5,7 L9,13 L1,7 L9,1 Z');\n\t\n\t    elem.append('defs').append('marker').attr('id', 'dependencyEnd').attr('refX', 19).attr('refY', 7).attr('markerWidth', 20).attr('markerHeight', 28).attr('orient', 'auto').append('path').attr('d', 'M 18,7 L9,13 L14,7 L9,1 Z');\n\t};\n\t\n\tvar edgeCount = 0;\n\tvar drawEdge = function drawEdge(elem, path, relation) {\n\t    var getRelationType = function getRelationType(type) {\n\t        switch (type) {\n\t            case cDDb.relationType.AGGREGATION:\n\t                return 'aggregation';\n\t            case cDDb.relationType.EXTENSION:\n\t                return 'extension';\n\t            case cDDb.relationType.COMPOSITION:\n\t                return 'composition';\n\t            case cDDb.relationType.DEPENDENCY:\n\t                return 'dependency';\n\t        }\n\t    };\n\t\n\t    //The data for our line\n\t    var lineData = path.points;\n\t\n\t    //This is the accessor function we talked about above\n\t    var lineFunction = d3.svg.line().x(function (d) {\n\t        return d.x;\n\t    }).y(function (d) {\n\t        return d.y;\n\t    })\n\t    //.interpolate('cardinal');\n\t    .interpolate('basis');\n\t\n\t    var svgPath = elem.append('path').attr('d', lineFunction(lineData)).attr('id', 'edge' + edgeCount).attr('class', 'relation');\n\t    var url = '';\n\t    if (conf.arrowMarkerAbsolute) {\n\t        url = window.location.protocol + '//' + window.location.host + window.location.pathname + window.location.search;\n\t        url = url.replace(/\\(/g, '\\\\(');\n\t        url = url.replace(/\\)/g, '\\\\)');\n\t    }\n\t\n\t    //console.log(relation.relation.type1);\n\t    if (relation.relation.type1 !== 'none') {\n\t        svgPath.attr('marker-start', 'url(' + url + '#' + getRelationType(relation.relation.type1) + 'Start' + ')');\n\t    }\n\t    if (relation.relation.type2 !== 'none') {\n\t        svgPath.attr('marker-end', 'url(' + url + '#' + getRelationType(relation.relation.type2) + 'End' + ')');\n\t    }\n\t\n\t    //var bbox = svgPath[0][0].getBBox();\n\t    //var x = Math.floor(bbox.x + bbox.width/2.0);\n\t    //var y = Math.floor(bbox.y + bbox.height/2.0);\n\t    var x, y;\n\t    var l = path.points.length;\n\t    if (l % 2 !== 0) {\n\t        var p1 = path.points[Math.floor(l / 2)];\n\t        var p2 = path.points[Math.ceil(l / 2)];\n\t        x = (p1.x + p2.x) / 2;\n\t        y = (p1.y + p2.y) / 2;\n\t    } else {\n\t        var p = path.points[Math.floor(l / 2)];\n\t        x = p.x;\n\t        y = p.y;\n\t    }\n\t\n\t    if (typeof relation.title !== 'undefined') {\n\t        var g = elem.append('g').attr('class', 'classLabel');\n\t        var label = g.append('text').attr('class', 'label').attr('x', x).attr('y', y).attr('fill', 'red').attr('text-anchor', 'middle').text(relation.title);\n\t\n\t        window.label = label;\n\t        var bounds = label.node().getBBox();\n\t\n\t        g.insert('rect', ':first-child').attr('class', 'box').attr('x', bounds.x - conf.padding / 2).attr('y', bounds.y - conf.padding / 2).attr('width', bounds.width + 2 * conf.padding / 2).attr('height', bounds.height + 2 * conf.padding / 2);\n\t        //.append('textpath')\n\t        //.attr('xlink:href','#edge'+edgeCount)\n\t        //.attr('text-anchor','middle')\n\t        //.attr('startOffset','50%')\n\t    }\n\t\n\t    edgeCount++;\n\t};\n\t\n\tvar drawClass = function drawClass(elem, classDef) {\n\t    log.info('Rendering class ' + classDef);\n\t\n\t    var addTspan = function addTspan(textEl, txt, isFirst) {\n\t        var tSpan = textEl.append('tspan').attr('x', conf.padding).text(txt);\n\t        if (!isFirst) {\n\t            tSpan.attr('dy', conf.textHeight);\n\t        }\n\t    };\n\t\n\t    var id = 'classId' + classCnt;\n\t    var classInfo = {\n\t        id: id,\n\t        label: classDef.id,\n\t        width: 0,\n\t        height: 0\n\t    };\n\t\n\t    var g = elem.append('g').attr('id', id).attr('class', 'classGroup');\n\t    var title = g.append('text').attr('x', conf.padding).attr('y', conf.textHeight + conf.padding).text(classDef.id);\n\t\n\t    var titleHeight = title.node().getBBox().height;\n\t\n\t    var membersLine = g.append('line') // text label for the x axis\n\t    .attr('x1', 0).attr('y1', conf.padding + titleHeight + conf.dividerMargin / 2).attr('y2', conf.padding + titleHeight + conf.dividerMargin / 2);\n\t\n\t    var members = g.append('text') // text label for the x axis\n\t    .attr('x', conf.padding).attr('y', titleHeight + conf.dividerMargin + conf.textHeight).attr('fill', 'white').attr('class', 'classText');\n\t\n\t    var isFirst = true;\n\t\n\t    classDef.members.forEach(function (member) {\n\t        addTspan(members, member, isFirst);\n\t        isFirst = false;\n\t    });\n\t    //for (var member of classDef.members) {\n\t    //    addTspan(members, member, isFirst);\n\t    //    isFirst = false;\n\t    //}\n\t\n\t    var membersBox = members.node().getBBox();\n\t\n\t    var methodsLine = g.append('line') // text label for the x axis\n\t    .attr('x1', 0).attr('y1', conf.padding + titleHeight + 3 * conf.dividerMargin / 2 + membersBox.height).attr('y2', conf.padding + titleHeight + 3 * conf.dividerMargin / 2 + membersBox.height);\n\t\n\t    var methods = g.append('text') // text label for the x axis\n\t    .attr('x', conf.padding).attr('y', titleHeight + 2 * conf.dividerMargin + membersBox.height + conf.textHeight).attr('fill', 'white').attr('class', 'classText');\n\t\n\t    isFirst = true;\n\t\n\t    classDef.methods.forEach(function (method) {\n\t        addTspan(methods, method, isFirst);\n\t        isFirst = false;\n\t    });\n\t    //for (var method of classDef.methods) {\n\t    //    addTspan(methods, method, isFirst);\n\t    //    isFirst = false;\n\t    //}\n\t\n\t    var classBox = g.node().getBBox();\n\t    g.insert('rect', ':first-child').attr('x', 0).attr('y', 0).attr('width', classBox.width + 2 * conf.padding).attr('height', classBox.height + conf.padding + 0.5 * conf.dividerMargin);\n\t\n\t    membersLine.attr('x2', classBox.width + 2 * conf.padding);\n\t    methodsLine.attr('x2', classBox.width + 2 * conf.padding);\n\t\n\t    classInfo.width = classBox.width + 2 * conf.padding;\n\t    classInfo.height = classBox.height + conf.padding + 0.5 * conf.dividerMargin;\n\t\n\t    idCache[id] = classInfo;\n\t    classCnt++;\n\t    return classInfo;\n\t};\n\t\n\tmodule.exports.setConf = function (cnf) {\n\t    var keys = Object.keys(cnf);\n\t\n\t    keys.forEach(function (key) {\n\t        conf[key] = cnf[key];\n\t    });\n\t};\n\t/**\n\t * Draws a flowchart in the tag with id: id based on the graph definition in text.\n\t * @param text\n\t * @param id\n\t */\n\tmodule.exports.draw = function (text, id) {\n\t    cd.yy.clear();\n\t    cd.parse(text);\n\t\n\t    log.info('Rendering diagram ' + text);\n\t\n\t    //// Fetch the default direction, use TD if none was found\n\t    var diagram = d3.select('#' + id);\n\t    insertMarkers(diagram);\n\t    //var svg = diagram.append('svg');\n\t\n\t    // Layout graph, Create a new directed graph\n\t    var g = new dagre.graphlib.Graph({\n\t        multigraph: true\n\t    });\n\t\n\t    // Set an object for the graph label\n\t    g.setGraph({\n\t        isMultiGraph: true\n\t    });\n\t\n\t    // Default to assigning a new object as a label for each new edge.\n\t    g.setDefaultEdgeLabel(function () {\n\t        return {};\n\t    });\n\t\n\t    var classes = cDDb.getClasses();\n\t    var keys = Object.keys(classes);\n\t    var i;\n\t    for (i = 0; i < keys.length; i++) {\n\t        var classDef = classes[keys[i]];\n\t        var node = drawClass(diagram, classDef);\n\t        // Add nodes to the graph. The first argument is the node id. The second is\n\t        // metadata about the node. In this case we're going to add labels to each of\n\t        // our nodes.\n\t        g.setNode(node.id, node);\n\t        log.info('Org height: ' + node.height);\n\t        //g.setNode(\"swilliams\",  { label: \"Saul Williams\", width: 160, height: 100 });\n\t        //g.setNode(\"bpitt\",      { label: \"Brad Pitt\",     width: 108, height: 100 });\n\t        //g.setNode(\"hford\",      { label: \"Harrison Ford\", width: 168, height: 100 });\n\t        //g.setNode(\"lwilson\",    { label: \"Luke Wilson\",   width: 144, height: 100 });\n\t        //g.setNode(\"kbacon\",     { label: \"Kevin Bacon\",   width: 121, height: 100 });\n\t    }\n\t\n\t    var relations = cDDb.getRelations();\n\t    var i = 0;\n\t    relations.forEach(function (relation) {\n\t        i = i + 1;\n\t        log.info('tjoho' + getGraphId(relation.id1) + getGraphId(relation.id2) + JSON.stringify(relation));\n\t        g.setEdge(getGraphId(relation.id1), getGraphId(relation.id2), { relation: relation });\n\t    });\n\t    //for (var relation of relations) {\n\t    //    i = i + 1;\n\t    //    log.info('tjoho' + getGraphId(relation.id1) +  getGraphId(relation.id2) + JSON.stringify(relation));\n\t    //    g.setEdge(getGraphId(relation.id1), getGraphId(relation.id2), {relation: relation});\n\t    //}\n\t    dagre.layout(g);\n\t    g.nodes().forEach(function (v) {\n\t        if (typeof v !== 'undefined') {\n\t            log.debug('Node ' + v + ': ' + JSON.stringify(g.node(v)));\n\t            d3.select('#' + v).attr('transform', 'translate(' + (g.node(v).x - g.node(v).width / 2) + ',' + (g.node(v).y - g.node(v).height / 2) + ' )');\n\t            //d3.select('#' +v +' rect').attr('x',(g.node(v).x-(g.node(v).width/2)))\n\t            //.attr('y',(g.node(v).y-(g.node(v).height/2)));\n\t        }\n\t    });\n\t    g.edges().forEach(function (e) {\n\t        log.debug('Edge ' + e.v + ' -> ' + e.w + ': ' + JSON.stringify(g.edge(e)));\n\t        drawEdge(diagram, g.edge(e), g.edge(e).relation);\n\t    });\n\t\n\t    //\n\t    diagram.attr('height', '100%');\n\t    diagram.attr('width', '100%');\n\t    //\n\t    //\n\t    //\n\t    //\n\t    //if(conf.useMaxWidth) {\n\t    //    diagram.attr('height', '100%');\n\t    //    diagram.attr('width', '100%');\n\t    //    diagram.attr('style', 'max-width:' + (width) + 'px;');\n\t    //}else{\n\t    //    diagram.attr('height',height);\n\t    //    diagram.attr('width', width );\n\t    //}\n\t    //diagram.attr('viewBox', (box.startx-conf.diagramMarginX) + ' -' +conf.diagramMarginY + ' ' + width + ' ' + height);\n\t};\n\t\n\t},{\"../../d3\":107,\"../../logger\":126,\"./classDb\":108,\"./parser/classDiagram\":110,\"dagre\":54}],110:[function(require,module,exports){\n\t(function (process){\n\t/* parser generated by jison 0.4.15 */\n\t/*\n\t  Returns a Parser object of the following structure:\n\t\n\t  Parser: {\n\t    yy: {}\n\t  }\n\t\n\t  Parser.prototype: {\n\t    yy: {},\n\t    trace: function(),\n\t    symbols_: {associative list: name ==> number},\n\t    terminals_: {associative list: number ==> name},\n\t    productions_: [...],\n\t    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n\t    table: [...],\n\t    defaultActions: {...},\n\t    parseError: function(str, hash),\n\t    parse: function(input),\n\t\n\t    lexer: {\n\t        EOF: 1,\n\t        parseError: function(str, hash),\n\t        setInput: function(input),\n\t        input: function(),\n\t        unput: function(str),\n\t        more: function(),\n\t        less: function(n),\n\t        pastInput: function(),\n\t        upcomingInput: function(),\n\t        showPosition: function(),\n\t        test_match: function(regex_match_array, rule_index),\n\t        next: function(),\n\t        lex: function(),\n\t        begin: function(condition),\n\t        popState: function(),\n\t        _currentRules: function(),\n\t        topState: function(),\n\t        pushState: function(condition),\n\t\n\t        options: {\n\t            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n\t            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n\t            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n\t        },\n\t\n\t        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n\t        rules: [...],\n\t        conditions: {associative list: name ==> set},\n\t    }\n\t  }\n\t\n\t\n\t  token location info (@$, _$, etc.): {\n\t    first_line: n,\n\t    last_line: n,\n\t    first_column: n,\n\t    last_column: n,\n\t    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n\t  }\n\t\n\t\n\t  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n\t    text:        (matched text)\n\t    token:       (the produced terminal token, if any)\n\t    line:        (yylineno)\n\t  }\n\t  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n\t    loc:         (yylloc)\n\t    expected:    (string describing the set of expected tokens)\n\t    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n\t  }\n\t*/\n\t\"use strict\";\n\t\n\tvar classDiagram = (function () {\n\t    var o = function o(k, v, _o, l) {\n\t        for (_o = _o || {}, l = k.length; l--; _o[k[l]] = v);return _o;\n\t    },\n\t        $V0 = [1, 11],\n\t        $V1 = [1, 12],\n\t        $V2 = [1, 13],\n\t        $V3 = [1, 15],\n\t        $V4 = [1, 16],\n\t        $V5 = [1, 17],\n\t        $V6 = [6, 8],\n\t        $V7 = [1, 26],\n\t        $V8 = [1, 27],\n\t        $V9 = [1, 28],\n\t        $Va = [1, 29],\n\t        $Vb = [1, 30],\n\t        $Vc = [1, 31],\n\t        $Vd = [6, 8, 13, 17, 23, 26, 27, 28, 29, 30, 31],\n\t        $Ve = [6, 8, 13, 17, 23, 26, 27, 28, 29, 30, 31, 45, 46, 47],\n\t        $Vf = [23, 45, 46, 47],\n\t        $Vg = [23, 30, 31, 45, 46, 47],\n\t        $Vh = [23, 26, 27, 28, 29, 45, 46, 47],\n\t        $Vi = [6, 8, 13],\n\t        $Vj = [1, 46];\n\t    var parser = { trace: function trace() {},\n\t        yy: {},\n\t        symbols_: { \"error\": 2, \"mermaidDoc\": 3, \"graphConfig\": 4, \"CLASS_DIAGRAM\": 5, \"NEWLINE\": 6, \"statements\": 7, \"EOF\": 8, \"statement\": 9, \"className\": 10, \"alphaNumToken\": 11, \"relationStatement\": 12, \"LABEL\": 13, \"classStatement\": 14, \"methodStatement\": 15, \"CLASS\": 16, \"STRUCT_START\": 17, \"members\": 18, \"STRUCT_STOP\": 19, \"MEMBER\": 20, \"SEPARATOR\": 21, \"relation\": 22, \"STR\": 23, \"relationType\": 24, \"lineType\": 25, \"AGGREGATION\": 26, \"EXTENSION\": 27, \"COMPOSITION\": 28, \"DEPENDENCY\": 29, \"LINE\": 30, \"DOTTED_LINE\": 31, \"commentToken\": 32, \"textToken\": 33, \"graphCodeTokens\": 34, \"textNoTagsToken\": 35, \"TAGSTART\": 36, \"TAGEND\": 37, \"==\": 38, \"--\": 39, \"PCT\": 40, \"DEFAULT\": 41, \"SPACE\": 42, \"MINUS\": 43, \"keywords\": 44, \"UNICODE_TEXT\": 45, \"NUM\": 46, \"ALPHA\": 47, \"$accept\": 0, \"$end\": 1 },\n\t        terminals_: { 2: \"error\", 5: \"CLASS_DIAGRAM\", 6: \"NEWLINE\", 8: \"EOF\", 13: \"LABEL\", 16: \"CLASS\", 17: \"STRUCT_START\", 19: \"STRUCT_STOP\", 20: \"MEMBER\", 21: \"SEPARATOR\", 23: \"STR\", 26: \"AGGREGATION\", 27: \"EXTENSION\", 28: \"COMPOSITION\", 29: \"DEPENDENCY\", 30: \"LINE\", 31: \"DOTTED_LINE\", 34: \"graphCodeTokens\", 36: \"TAGSTART\", 37: \"TAGEND\", 38: \"==\", 39: \"--\", 40: \"PCT\", 41: \"DEFAULT\", 42: \"SPACE\", 43: \"MINUS\", 44: \"keywords\", 45: \"UNICODE_TEXT\", 46: \"NUM\", 47: \"ALPHA\" },\n\t        productions_: [0, [3, 1], [4, 4], [7, 1], [7, 3], [10, 2], [10, 1], [9, 1], [9, 2], [9, 1], [9, 1], [14, 2], [14, 5], [18, 1], [18, 2], [15, 1], [15, 2], [15, 1], [15, 1], [12, 3], [12, 4], [12, 4], [12, 5], [22, 3], [22, 2], [22, 2], [22, 1], [24, 1], [24, 1], [24, 1], [24, 1], [25, 1], [25, 1], [32, 1], [32, 1], [33, 1], [33, 1], [33, 1], [33, 1], [33, 1], [33, 1], [33, 1], [35, 1], [35, 1], [35, 1], [35, 1], [11, 1], [11, 1], [11, 1]],\n\t        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, /* action[1] */$$, /* vstack */_$ /* lstack */) {\n\t            /* this == yyval */\n\t\n\t            var $0 = $$.length - 1;\n\t            switch (yystate) {\n\t                case 5:\n\t                    this.$ = $$[$0 - 1] + $$[$0];\n\t                    break;\n\t                case 6:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 7:\n\t                    yy.addRelation($$[$0]);\n\t                    break;\n\t                case 8:\n\t                    $$[$0 - 1].title = yy.cleanupLabel($$[$0]);yy.addRelation($$[$0 - 1]);\n\t                    break;\n\t                case 12:\n\t                    /*console.log($$[$0-3],JSON.stringify($$[$0-1]));*/yy.addMembers($$[$0 - 3], $$[$0 - 1]);\n\t                    break;\n\t                case 13:\n\t                    this.$ = [$$[$0]];\n\t                    break;\n\t                case 14:\n\t                    $$[$0].push($$[$0 - 1]);this.$ = $$[$0];\n\t                    break;\n\t                case 15:\n\t                    /*console.log('Rel found',$$[$0]);*/\n\t                    break;\n\t                case 16:\n\t                    yy.addMembers($$[$0 - 1], yy.cleanupLabel($$[$0]));\n\t                    break;\n\t                case 17:\n\t                    console.warn('Member', $$[$0]);\n\t                    break;\n\t                case 18:\n\t                    /*console.log('sep found',$$[$0]);*/\n\t                    break;\n\t                case 19:\n\t                    this.$ = { 'id1': $$[$0 - 2], 'id2': $$[$0], relation: $$[$0 - 1], relationTitle1: 'none', relationTitle2: 'none' };\n\t                    break;\n\t                case 20:\n\t                    this.$ = { id1: $$[$0 - 3], id2: $$[$0], relation: $$[$0 - 1], relationTitle1: $$[$0 - 2], relationTitle2: 'none' };\n\t                    break;\n\t                case 21:\n\t                    this.$ = { id1: $$[$0 - 3], id2: $$[$0], relation: $$[$0 - 2], relationTitle1: 'none', relationTitle2: $$[$0 - 1] };\n\t                    break;\n\t                case 22:\n\t                    this.$ = { id1: $$[$0 - 4], id2: $$[$0], relation: $$[$0 - 2], relationTitle1: $$[$0 - 3], relationTitle2: $$[$0 - 1] };\n\t                    break;\n\t                case 23:\n\t                    this.$ = { type1: $$[$0 - 2], type2: $$[$0], lineType: $$[$0 - 1] };\n\t                    break;\n\t                case 24:\n\t                    this.$ = { type1: 'none', type2: $$[$0], lineType: $$[$0 - 1] };\n\t                    break;\n\t                case 25:\n\t                    this.$ = { type1: $$[$0 - 1], type2: 'none', lineType: $$[$0] };\n\t                    break;\n\t                case 26:\n\t                    this.$ = { type1: 'none', type2: 'none', lineType: $$[$0] };\n\t                    break;\n\t                case 27:\n\t                    this.$ = yy.relationType.AGGREGATION;\n\t                    break;\n\t                case 28:\n\t                    this.$ = yy.relationType.EXTENSION;\n\t                    break;\n\t                case 29:\n\t                    this.$ = yy.relationType.COMPOSITION;\n\t                    break;\n\t                case 30:\n\t                    this.$ = yy.relationType.DEPENDENCY;\n\t                    break;\n\t                case 31:\n\t                    this.$ = yy.lineType.LINE;\n\t                    break;\n\t                case 32:\n\t                    this.$ = yy.lineType.DOTTED_LINE;\n\t                    break;\n\t            }\n\t        },\n\t        table: [{ 3: 1, 4: 2, 5: [1, 3] }, { 1: [3] }, { 1: [2, 1] }, { 6: [1, 4] }, { 7: 5, 9: 6, 10: 10, 11: 14, 12: 7, 14: 8, 15: 9, 16: $V0, 20: $V1, 21: $V2, 45: $V3, 46: $V4, 47: $V5 }, { 8: [1, 18] }, { 6: [1, 19], 8: [2, 3] }, o($V6, [2, 7], { 13: [1, 20] }), o($V6, [2, 9]), o($V6, [2, 10]), o($V6, [2, 15], { 22: 21, 24: 24, 25: 25, 13: [1, 23], 23: [1, 22], 26: $V7, 27: $V8, 28: $V9, 29: $Va, 30: $Vb, 31: $Vc }), { 10: 32, 11: 14, 45: $V3, 46: $V4, 47: $V5 }, o($V6, [2, 17]), o($V6, [2, 18]), o($Vd, [2, 6], { 11: 14, 10: 33, 45: $V3, 46: $V4, 47: $V5 }), o($Ve, [2, 46]), o($Ve, [2, 47]), o($Ve, [2, 48]), { 1: [2, 2] }, { 7: 34, 9: 6, 10: 10, 11: 14, 12: 7, 14: 8, 15: 9, 16: $V0, 20: $V1, 21: $V2, 45: $V3, 46: $V4, 47: $V5 }, o($V6, [2, 8]), { 10: 35, 11: 14, 23: [1, 36], 45: $V3, 46: $V4, 47: $V5 }, { 22: 37, 24: 24, 25: 25, 26: $V7, 27: $V8, 28: $V9, 29: $Va, 30: $Vb, 31: $Vc }, o($V6, [2, 16]), { 25: 38, 30: $Vb, 31: $Vc }, o($Vf, [2, 26], { 24: 39, 26: $V7, 27: $V8, 28: $V9, 29: $Va }), o($Vg, [2, 27]), o($Vg, [2, 28]), o($Vg, [2, 29]), o($Vg, [2, 30]), o($Vh, [2, 31]), o($Vh, [2, 32]), o($V6, [2, 11], { 17: [1, 40] }), o($Vd, [2, 5]), { 8: [2, 4] }, o($Vi, [2, 19]), { 10: 41, 11: 14, 45: $V3, 46: $V4, 47: $V5 }, { 10: 42, 11: 14, 23: [1, 43], 45: $V3, 46: $V4, 47: $V5 }, o($Vf, [2, 25], { 24: 44, 26: $V7, 27: $V8, 28: $V9, 29: $Va }), o($Vf, [2, 24]), { 18: 45, 20: $Vj }, o($Vi, [2, 21]), o($Vi, [2, 20]), { 10: 47, 11: 14, 45: $V3, 46: $V4, 47: $V5 }, o($Vf, [2, 23]), { 19: [1, 48] }, { 18: 49, 19: [2, 13], 20: $Vj }, o($Vi, [2, 22]), o($V6, [2, 12]), { 19: [2, 14] }],\n\t        defaultActions: { 2: [2, 1], 18: [2, 2], 34: [2, 4], 49: [2, 14] },\n\t        parseError: function parseError(str, hash) {\n\t            if (hash.recoverable) {\n\t                this.trace(str);\n\t            } else {\n\t                var _parseError = function _parseError(msg, hash) {\n\t                    this.message = msg;\n\t                    this.hash = hash;\n\t                };\n\t\n\t                _parseError.prototype = new Error();\n\t\n\t                throw new _parseError(str, hash);\n\t            }\n\t        },\n\t        parse: function parse(input) {\n\t            var self = this,\n\t                stack = [0],\n\t                tstack = [],\n\t                vstack = [null],\n\t                lstack = [],\n\t                table = this.table,\n\t                yytext = '',\n\t                yylineno = 0,\n\t                yyleng = 0,\n\t                recovering = 0,\n\t                TERROR = 2,\n\t                EOF = 1;\n\t            var args = lstack.slice.call(arguments, 1);\n\t            var lexer = Object.create(this.lexer);\n\t            var sharedState = { yy: {} };\n\t            for (var k in this.yy) {\n\t                if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n\t                    sharedState.yy[k] = this.yy[k];\n\t                }\n\t            }\n\t            lexer.setInput(input, sharedState.yy);\n\t            sharedState.yy.lexer = lexer;\n\t            sharedState.yy.parser = this;\n\t            if (typeof lexer.yylloc == 'undefined') {\n\t                lexer.yylloc = {};\n\t            }\n\t            var yyloc = lexer.yylloc;\n\t            lstack.push(yyloc);\n\t            var ranges = lexer.options && lexer.options.ranges;\n\t            if (typeof sharedState.yy.parseError === 'function') {\n\t                this.parseError = sharedState.yy.parseError;\n\t            } else {\n\t                this.parseError = Object.getPrototypeOf(this).parseError;\n\t            }\n\t            function popStack(n) {\n\t                stack.length = stack.length - 2 * n;\n\t                vstack.length = vstack.length - n;\n\t                lstack.length = lstack.length - n;\n\t            }\n\t            _token_stack: var lex = function lex() {\n\t                var token;\n\t                token = lexer.lex() || EOF;\n\t                if (typeof token !== 'number') {\n\t                    token = self.symbols_[token] || token;\n\t                }\n\t                return token;\n\t            };\n\t            var symbol,\n\t                preErrorSymbol,\n\t                state,\n\t                action,\n\t                a,\n\t                r,\n\t                yyval = {},\n\t                p,\n\t                len,\n\t                newState,\n\t                expected;\n\t            while (true) {\n\t                state = stack[stack.length - 1];\n\t                if (this.defaultActions[state]) {\n\t                    action = this.defaultActions[state];\n\t                } else {\n\t                    if (symbol === null || typeof symbol == 'undefined') {\n\t                        symbol = lex();\n\t                    }\n\t                    action = table[state] && table[state][symbol];\n\t                }\n\t                if (typeof action === 'undefined' || !action.length || !action[0]) {\n\t                    var errStr = '';\n\t                    expected = [];\n\t                    for (p in table[state]) {\n\t                        if (this.terminals_[p] && p > TERROR) {\n\t                            expected.push('\\'' + this.terminals_[p] + '\\'');\n\t                        }\n\t                    }\n\t                    if (lexer.showPosition) {\n\t                        errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n\t                    } else {\n\t                        errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n\t                    }\n\t                    this.parseError(errStr, {\n\t                        text: lexer.match,\n\t                        token: this.terminals_[symbol] || symbol,\n\t                        line: lexer.yylineno,\n\t                        loc: yyloc,\n\t                        expected: expected\n\t                    });\n\t                }\n\t                if (action[0] instanceof Array && action.length > 1) {\n\t                    throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n\t                }\n\t                switch (action[0]) {\n\t                    case 1:\n\t                        stack.push(symbol);\n\t                        vstack.push(lexer.yytext);\n\t                        lstack.push(lexer.yylloc);\n\t                        stack.push(action[1]);\n\t                        symbol = null;\n\t                        if (!preErrorSymbol) {\n\t                            yyleng = lexer.yyleng;\n\t                            yytext = lexer.yytext;\n\t                            yylineno = lexer.yylineno;\n\t                            yyloc = lexer.yylloc;\n\t                            if (recovering > 0) {\n\t                                recovering--;\n\t                            }\n\t                        } else {\n\t                            symbol = preErrorSymbol;\n\t                            preErrorSymbol = null;\n\t                        }\n\t                        break;\n\t                    case 2:\n\t                        len = this.productions_[action[1]][1];\n\t                        yyval.$ = vstack[vstack.length - len];\n\t                        yyval._$ = {\n\t                            first_line: lstack[lstack.length - (len || 1)].first_line,\n\t                            last_line: lstack[lstack.length - 1].last_line,\n\t                            first_column: lstack[lstack.length - (len || 1)].first_column,\n\t                            last_column: lstack[lstack.length - 1].last_column\n\t                        };\n\t                        if (ranges) {\n\t                            yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\n\t                        }\n\t                        r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\n\t                        if (typeof r !== 'undefined') {\n\t                            return r;\n\t                        }\n\t                        if (len) {\n\t                            stack = stack.slice(0, -1 * len * 2);\n\t                            vstack = vstack.slice(0, -1 * len);\n\t                            lstack = lstack.slice(0, -1 * len);\n\t                        }\n\t                        stack.push(this.productions_[action[1]][0]);\n\t                        vstack.push(yyval.$);\n\t                        lstack.push(yyval._$);\n\t                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n\t                        stack.push(newState);\n\t                        break;\n\t                    case 3:\n\t                        return true;\n\t                }\n\t            }\n\t            return true;\n\t        } };\n\t\n\t    /* generated by jison-lex 0.3.4 */\n\t    var lexer = (function () {\n\t        var lexer = {\n\t\n\t            EOF: 1,\n\t\n\t            parseError: function parseError(str, hash) {\n\t                if (this.yy.parser) {\n\t                    this.yy.parser.parseError(str, hash);\n\t                } else {\n\t                    throw new Error(str);\n\t                }\n\t            },\n\t\n\t            // resets the lexer, sets new input\n\t            setInput: function setInput(input, yy) {\n\t                this.yy = yy || this.yy || {};\n\t                this._input = input;\n\t                this._more = this._backtrack = this.done = false;\n\t                this.yylineno = this.yyleng = 0;\n\t                this.yytext = this.matched = this.match = '';\n\t                this.conditionStack = ['INITIAL'];\n\t                this.yylloc = {\n\t                    first_line: 1,\n\t                    first_column: 0,\n\t                    last_line: 1,\n\t                    last_column: 0\n\t                };\n\t                if (this.options.ranges) {\n\t                    this.yylloc.range = [0, 0];\n\t                }\n\t                this.offset = 0;\n\t                return this;\n\t            },\n\t\n\t            // consumes and returns one char from the input\n\t            input: function input() {\n\t                var ch = this._input[0];\n\t                this.yytext += ch;\n\t                this.yyleng++;\n\t                this.offset++;\n\t                this.match += ch;\n\t                this.matched += ch;\n\t                var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n\t                if (lines) {\n\t                    this.yylineno++;\n\t                    this.yylloc.last_line++;\n\t                } else {\n\t                    this.yylloc.last_column++;\n\t                }\n\t                if (this.options.ranges) {\n\t                    this.yylloc.range[1]++;\n\t                }\n\t\n\t                this._input = this._input.slice(1);\n\t                return ch;\n\t            },\n\t\n\t            // unshifts one char (or a string) into the input\n\t            unput: function unput(ch) {\n\t                var len = ch.length;\n\t                var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\t\n\t                this._input = ch + this._input;\n\t                this.yytext = this.yytext.substr(0, this.yytext.length - len);\n\t                //this.yyleng -= len;\n\t                this.offset -= len;\n\t                var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n\t                this.match = this.match.substr(0, this.match.length - 1);\n\t                this.matched = this.matched.substr(0, this.matched.length - 1);\n\t\n\t                if (lines.length - 1) {\n\t                    this.yylineno -= lines.length - 1;\n\t                }\n\t                var r = this.yylloc.range;\n\t\n\t                this.yylloc = {\n\t                    first_line: this.yylloc.first_line,\n\t                    last_line: this.yylineno + 1,\n\t                    first_column: this.yylloc.first_column,\n\t                    last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n\t                };\n\t\n\t                if (this.options.ranges) {\n\t                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n\t                }\n\t                this.yyleng = this.yytext.length;\n\t                return this;\n\t            },\n\t\n\t            // When called from action, caches matched text and appends it on next action\n\t            more: function more() {\n\t                this._more = true;\n\t                return this;\n\t            },\n\t\n\t            // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\n\t            reject: function reject() {\n\t                if (this.options.backtrack_lexer) {\n\t                    this._backtrack = true;\n\t                } else {\n\t                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n\t                        text: \"\",\n\t                        token: null,\n\t                        line: this.yylineno\n\t                    });\n\t                }\n\t                return this;\n\t            },\n\t\n\t            // retain first n characters of the match\n\t            less: function less(n) {\n\t                this.unput(this.match.slice(n));\n\t            },\n\t\n\t            // displays already matched input, i.e. for error messages\n\t            pastInput: function pastInput() {\n\t                var past = this.matched.substr(0, this.matched.length - this.match.length);\n\t                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\\n/g, \"\");\n\t            },\n\t\n\t            // displays upcoming input, i.e. for error messages\n\t            upcomingInput: function upcomingInput() {\n\t                var next = this.match;\n\t                if (next.length < 20) {\n\t                    next += this._input.substr(0, 20 - next.length);\n\t                }\n\t                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n\t            },\n\t\n\t            // displays the character position where the lexing error occurred, i.e. for error messages\n\t            showPosition: function showPosition() {\n\t                var pre = this.pastInput();\n\t                var c = new Array(pre.length + 1).join(\"-\");\n\t                return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n\t            },\n\t\n\t            // test the lexed token: return FALSE when not a match, otherwise return token\n\t            test_match: function test_match(match, indexed_rule) {\n\t                var token, lines, backup;\n\t\n\t                if (this.options.backtrack_lexer) {\n\t                    // save context\n\t                    backup = {\n\t                        yylineno: this.yylineno,\n\t                        yylloc: {\n\t                            first_line: this.yylloc.first_line,\n\t                            last_line: this.last_line,\n\t                            first_column: this.yylloc.first_column,\n\t                            last_column: this.yylloc.last_column\n\t                        },\n\t                        yytext: this.yytext,\n\t                        match: this.match,\n\t                        matches: this.matches,\n\t                        matched: this.matched,\n\t                        yyleng: this.yyleng,\n\t                        offset: this.offset,\n\t                        _more: this._more,\n\t                        _input: this._input,\n\t                        yy: this.yy,\n\t                        conditionStack: this.conditionStack.slice(0),\n\t                        done: this.done\n\t                    };\n\t                    if (this.options.ranges) {\n\t                        backup.yylloc.range = this.yylloc.range.slice(0);\n\t                    }\n\t                }\n\t\n\t                lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n\t                if (lines) {\n\t                    this.yylineno += lines.length;\n\t                }\n\t                this.yylloc = {\n\t                    first_line: this.yylloc.last_line,\n\t                    last_line: this.yylineno + 1,\n\t                    first_column: this.yylloc.last_column,\n\t                    last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\n\t                };\n\t                this.yytext += match[0];\n\t                this.match += match[0];\n\t                this.matches = match;\n\t                this.yyleng = this.yytext.length;\n\t                if (this.options.ranges) {\n\t                    this.yylloc.range = [this.offset, this.offset += this.yyleng];\n\t                }\n\t                this._more = false;\n\t                this._backtrack = false;\n\t                this._input = this._input.slice(match[0].length);\n\t                this.matched += match[0];\n\t                token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n\t                if (this.done && this._input) {\n\t                    this.done = false;\n\t                }\n\t                if (token) {\n\t                    return token;\n\t                } else if (this._backtrack) {\n\t                    // recover context\n\t                    for (var k in backup) {\n\t                        this[k] = backup[k];\n\t                    }\n\t                    return false; // rule action called reject() implying the next rule should be tested instead.\n\t                }\n\t                return false;\n\t            },\n\t\n\t            // return next match in input\n\t            next: function next() {\n\t                if (this.done) {\n\t                    return this.EOF;\n\t                }\n\t                if (!this._input) {\n\t                    this.done = true;\n\t                }\n\t\n\t                var token, match, tempMatch, index;\n\t                if (!this._more) {\n\t                    this.yytext = '';\n\t                    this.match = '';\n\t                }\n\t                var rules = this._currentRules();\n\t                for (var i = 0; i < rules.length; i++) {\n\t                    tempMatch = this._input.match(this.rules[rules[i]]);\n\t                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n\t                        match = tempMatch;\n\t                        index = i;\n\t                        if (this.options.backtrack_lexer) {\n\t                            token = this.test_match(tempMatch, rules[i]);\n\t                            if (token !== false) {\n\t                                return token;\n\t                            } else if (this._backtrack) {\n\t                                match = false;\n\t                                continue; // rule action called reject() implying a rule MISmatch.\n\t                            } else {\n\t                                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n\t                                    return false;\n\t                                }\n\t                        } else if (!this.options.flex) {\n\t                            break;\n\t                        }\n\t                    }\n\t                }\n\t                if (match) {\n\t                    token = this.test_match(match, rules[index]);\n\t                    if (token !== false) {\n\t                        return token;\n\t                    }\n\t                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n\t                    return false;\n\t                }\n\t                if (this._input === \"\") {\n\t                    return this.EOF;\n\t                } else {\n\t                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n\t                        text: \"\",\n\t                        token: null,\n\t                        line: this.yylineno\n\t                    });\n\t                }\n\t            },\n\t\n\t            // return next match that has a token\n\t            lex: function lex() {\n\t                var r = this.next();\n\t                if (r) {\n\t                    return r;\n\t                } else {\n\t                    return this.lex();\n\t                }\n\t            },\n\t\n\t            // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\n\t            begin: function begin(condition) {\n\t                this.conditionStack.push(condition);\n\t            },\n\t\n\t            // pop the previously active lexer condition state off the condition stack\n\t            popState: function popState() {\n\t                var n = this.conditionStack.length - 1;\n\t                if (n > 0) {\n\t                    return this.conditionStack.pop();\n\t                } else {\n\t                    return this.conditionStack[0];\n\t                }\n\t            },\n\t\n\t            // produce the lexer rule set which is active for the currently active lexer condition state\n\t            _currentRules: function _currentRules() {\n\t                if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n\t                    return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n\t                } else {\n\t                    return this.conditions[\"INITIAL\"].rules;\n\t                }\n\t            },\n\t\n\t            // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\n\t            topState: function topState(n) {\n\t                n = this.conditionStack.length - 1 - Math.abs(n || 0);\n\t                if (n >= 0) {\n\t                    return this.conditionStack[n];\n\t                } else {\n\t                    return \"INITIAL\";\n\t                }\n\t            },\n\t\n\t            // alias for begin(condition)\n\t            pushState: function pushState(condition) {\n\t                this.begin(condition);\n\t            },\n\t\n\t            // return the number of states currently on the stack\n\t            stateStackSize: function stateStackSize() {\n\t                return this.conditionStack.length;\n\t            },\n\t            options: {},\n\t            performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n\t                var YYSTATE = YY_START;\n\t                switch ($avoiding_name_collisions) {\n\t                    case 0:\n\t                        /* do nothing */\n\t                        break;\n\t                    case 1:\n\t                        return 6;\n\t                        break;\n\t                    case 2:\n\t                        /* skip whitespace */\n\t                        break;\n\t                    case 3:\n\t                        return 5;\n\t                        break;\n\t                    case 4:\n\t                        this.begin(\"struct\"); /*console.log('Starting struct');*/return 17;\n\t                        break;\n\t                    case 5:\n\t                        /*console.log('Ending struct');*/this.popState();return 19;\n\t                        break;\n\t                    case 6:\n\t                        /* nothing */\n\t                        break;\n\t                    case 7:\n\t                        /*console.log('lex-member: ' + yy_.yytext);*/return \"MEMBER\";\n\t                        break;\n\t                    case 8:\n\t                        return 16;\n\t                        break;\n\t                    case 9:\n\t                        this.begin(\"string\");\n\t                        break;\n\t                    case 10:\n\t                        this.popState();\n\t                        break;\n\t                    case 11:\n\t                        return \"STR\";\n\t                        break;\n\t                    case 12:\n\t                        return 27;\n\t                        break;\n\t                    case 13:\n\t                        return 27;\n\t                        break;\n\t                    case 14:\n\t                        return 29;\n\t                        break;\n\t                    case 15:\n\t                        return 29;\n\t                        break;\n\t                    case 16:\n\t                        return 28;\n\t                        break;\n\t                    case 17:\n\t                        return 26;\n\t                        break;\n\t                    case 18:\n\t                        return 30;\n\t                        break;\n\t                    case 19:\n\t                        return 31;\n\t                        break;\n\t                    case 20:\n\t                        return 13;\n\t                        break;\n\t                    case 21:\n\t                        return 43;\n\t                        break;\n\t                    case 22:\n\t                        return 'DOT';\n\t                        break;\n\t                    case 23:\n\t                        return 'PLUS';\n\t                        break;\n\t                    case 24:\n\t                        return 40;\n\t                        break;\n\t                    case 25:\n\t                        return 'EQUALS';\n\t                        break;\n\t                    case 26:\n\t                        return 'EQUALS';\n\t                        break;\n\t                    case 27:\n\t                        return 47;\n\t                        break;\n\t                    case 28:\n\t                        return 'PUNCTUATION';\n\t                        break;\n\t                    case 29:\n\t                        return 46;\n\t                        break;\n\t                    case 30:\n\t                        return 45;\n\t                        break;\n\t                    case 31:\n\t                        return 42;\n\t                        break;\n\t                    case 32:\n\t                        return 8;\n\t                        break;\n\t                }\n\t            },\n\t            rules: [/^(?:%%[^\\n]*)/, /^(?:\\n+)/, /^(?:\\s+)/, /^(?:classDiagram\\b)/, /^(?:[\\{])/, /^(?:\\})/, /^(?:[\\n])/, /^(?:[^\\{\\}\\n]*)/, /^(?:class\\b)/, /^(?:[\"])/, /^(?:[\"])/, /^(?:[^\"]*)/, /^(?:\\s*<\\|)/, /^(?:\\s*\\|>)/, /^(?:\\s*>)/, /^(?:\\s*<)/, /^(?:\\s*\\*)/, /^(?:\\s*o\\b)/, /^(?:--)/, /^(?:\\.\\.)/, /^(?::[^#\\n;]+)/, /^(?:-)/, /^(?:\\.)/, /^(?:\\+)/, /^(?:%)/, /^(?:=)/, /^(?:=)/, /^(?:[A-Za-z]+)/, /^(?:[!\"#$%&'*+,-.`?\\\\_\\/])/, /^(?:[0-9]+)/, /^(?:[\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6]|[\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377]|[\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5]|[\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA]|[\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE]|[\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA]|[\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0]|[\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977]|[\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2]|[\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A]|[\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39]|[\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8]|[\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C]|[\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C]|[\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99]|[\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0]|[\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D]|[\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3]|[\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10]|[\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1]|[\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81]|[\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3]|[\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6]|[\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A]|[\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081]|[\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D]|[\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0]|[\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310]|[\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C]|[\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711]|[\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7]|[\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C]|[\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16]|[\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF]|[\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC]|[\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D]|[\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D]|[\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3]|[\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F]|[\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128]|[\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184]|[\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3]|[\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6]|[\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE]|[\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C]|[\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D]|[\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC]|[\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B]|[\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788]|[\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805]|[\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB]|[\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28]|[\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5]|[\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4]|[\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E]|[\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D]|[\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36]|[\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D]|[\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC]|[\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF]|[\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC])/, /^(?:\\s)/, /^(?:$)/],\n\t            conditions: { \"string\": { \"rules\": [10, 11], \"inclusive\": false }, \"struct\": { \"rules\": [5, 6, 7], \"inclusive\": false }, \"INITIAL\": { \"rules\": [0, 1, 2, 3, 4, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], \"inclusive\": true } }\n\t        };\n\t        return lexer;\n\t    })();\n\t    parser.lexer = lexer;\n\t    function Parser() {\n\t        this.yy = {};\n\t    }\n\t    Parser.prototype = parser;parser.Parser = Parser;\n\t    return new Parser();\n\t})();\n\t\n\tif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\n\t    exports.parser = classDiagram;\n\t    exports.Parser = classDiagram.Parser;\n\t    exports.parse = function () {\n\t        return classDiagram.parse.apply(classDiagram, arguments);\n\t    };\n\t    exports.main = function commonjsMain(args) {\n\t        if (!args[1]) {\n\t            console.log('Usage: ' + args[0] + ' FILE');\n\t            process.exit(1);\n\t        }\n\t        var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n\t        return exports.parser.parse(source);\n\t    };\n\t    if (typeof module !== 'undefined' && require.main === module) {\n\t        exports.main(process.argv.slice(1));\n\t    }\n\t}\n\t\n\t}).call(this,require('_process'))\n\t},{\"_process\":3,\"fs\":1,\"path\":2}],111:[function(require,module,exports){\n\t(function (global){\n\t/**\n\t * Created by knut on 15-01-14.\n\t */\n\t'use strict';\n\t\n\tvar Logger = require('../../logger');\n\tvar log = new Logger.Log();\n\t\n\tvar message = '';\n\tvar info = false;\n\t\n\texports.setMessage = function (txt) {\n\t    log.debug('Setting message to: ' + txt);\n\t    message = txt;\n\t};\n\t\n\texports.getMessage = function () {\n\t    return message;\n\t};\n\t\n\texports.setInfo = function (inf) {\n\t    info = inf;\n\t};\n\t\n\texports.getInfo = function () {\n\t    return info;\n\t};\n\t\n\texports.parseError = function (err, hash) {\n\t    global.mermaidAPI.parseError(err, hash);\n\t};\n\t\n\t}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\t},{\"../../logger\":126}],112:[function(require,module,exports){\n\t/**\n\t * Created by knut on 14-12-11.\n\t */\n\t'use strict';\n\t\n\tvar db = require('./exampleDb');\n\tvar exampleParser = require('./parser/example.js');\n\tvar d3 = require('../../d3');\n\tvar Logger = require('../../logger');\n\tvar log = new Logger.Log();\n\t\n\t/**\n\t * Draws a an info picture in the tag with id: id based on the graph definition in text.\n\t * @param text\n\t * @param id\n\t */\n\texports.draw = function (txt, id, ver) {\n\t    var parser;\n\t    parser = exampleParser.parser;\n\t    parser.yy = db;\n\t    log.debug('Renering example diagram');\n\t    // Parse the graph definition\n\t    parser.parse(txt);\n\t\n\t    // Fetch the default direction, use TD if none was found\n\t    var svg = d3.select('#' + id);\n\t\n\t    var g = svg.append('g');\n\t\n\t    g.append('text') // text label for the x axis\n\t    .attr('x', 100).attr('y', 40).attr('class', 'version').attr('font-size', '32px').style('text-anchor', 'middle').text('mermaid ' + ver);\n\t\n\t    /*\n\t    var box = exports.bounds.getBounds();\n\t     var height = box.stopy-box.starty+2*conf.diagramMarginY;\n\t    var width  = box.stopx-box.startx+2*conf.diagramMarginX;*/\n\t\n\t    svg.attr('height', 100);\n\t    svg.attr('width', 400);\n\t    //svg.attr('viewBox', '0 0 300 150');\n\t};\n\t\n\t},{\"../../d3\":107,\"../../logger\":126,\"./exampleDb\":111,\"./parser/example.js\":113}],113:[function(require,module,exports){\n\t(function (process){\n\t/* parser generated by jison 0.4.15 */\n\t/*\n\t  Returns a Parser object of the following structure:\n\t\n\t  Parser: {\n\t    yy: {}\n\t  }\n\t\n\t  Parser.prototype: {\n\t    yy: {},\n\t    trace: function(),\n\t    symbols_: {associative list: name ==> number},\n\t    terminals_: {associative list: number ==> name},\n\t    productions_: [...],\n\t    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n\t    table: [...],\n\t    defaultActions: {...},\n\t    parseError: function(str, hash),\n\t    parse: function(input),\n\t\n\t    lexer: {\n\t        EOF: 1,\n\t        parseError: function(str, hash),\n\t        setInput: function(input),\n\t        input: function(),\n\t        unput: function(str),\n\t        more: function(),\n\t        less: function(n),\n\t        pastInput: function(),\n\t        upcomingInput: function(),\n\t        showPosition: function(),\n\t        test_match: function(regex_match_array, rule_index),\n\t        next: function(),\n\t        lex: function(),\n\t        begin: function(condition),\n\t        popState: function(),\n\t        _currentRules: function(),\n\t        topState: function(),\n\t        pushState: function(condition),\n\t\n\t        options: {\n\t            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n\t            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n\t            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n\t        },\n\t\n\t        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n\t        rules: [...],\n\t        conditions: {associative list: name ==> set},\n\t    }\n\t  }\n\t\n\t\n\t  token location info (@$, _$, etc.): {\n\t    first_line: n,\n\t    last_line: n,\n\t    first_column: n,\n\t    last_column: n,\n\t    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n\t  }\n\t\n\t\n\t  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n\t    text:        (matched text)\n\t    token:       (the produced terminal token, if any)\n\t    line:        (yylineno)\n\t  }\n\t  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n\t    loc:         (yylloc)\n\t    expected:    (string describing the set of expected tokens)\n\t    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n\t  }\n\t*/\n\t\"use strict\";\n\t\n\tvar example = (function () {\n\t    var o = function o(k, v, _o, l) {\n\t        for (_o = _o || {}, l = k.length; l--; _o[k[l]] = v);return _o;\n\t    },\n\t        $V0 = [6, 9, 10, 12];\n\t    var parser = { trace: function trace() {},\n\t        yy: {},\n\t        symbols_: { \"error\": 2, \"start\": 3, \"info\": 4, \"document\": 5, \"EOF\": 6, \"line\": 7, \"statement\": 8, \"NL\": 9, \"showInfo\": 10, \"message\": 11, \"say\": 12, \"TXT\": 13, \"$accept\": 0, \"$end\": 1 },\n\t        terminals_: { 2: \"error\", 4: \"info\", 6: \"EOF\", 9: \"NL\", 10: \"showInfo\", 12: \"say\", 13: \"TXT\" },\n\t        productions_: [0, [3, 3], [5, 0], [5, 2], [7, 1], [7, 1], [8, 1], [8, 1], [11, 2]],\n\t        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, /* action[1] */$$, /* vstack */_$ /* lstack */) {\n\t            /* this == yyval */\n\t\n\t            var $0 = $$.length - 1;\n\t            switch (yystate) {\n\t                case 1:\n\t                    return yy;\n\t                    break;\n\t                case 4:\n\t\n\t                    break;\n\t                case 6:\n\t                    yy.setInfo(true);\n\t                    break;\n\t                case 7:\n\t                    yy.setMessage($$[$0]);\n\t                    break;\n\t                case 8:\n\t                    this.$ = $$[$0 - 1].substring(1).trim().replace(/\\\\n/gm, \"\\n\");\n\t                    break;\n\t            }\n\t        },\n\t        table: [{ 3: 1, 4: [1, 2] }, { 1: [3] }, o($V0, [2, 2], { 5: 3 }), { 6: [1, 4], 7: 5, 8: 6, 9: [1, 7], 10: [1, 8], 11: 9, 12: [1, 10] }, { 1: [2, 1] }, o($V0, [2, 3]), o($V0, [2, 4]), o($V0, [2, 5]), o($V0, [2, 6]), o($V0, [2, 7]), { 13: [1, 11] }, o($V0, [2, 8])],\n\t        defaultActions: { 4: [2, 1] },\n\t        parseError: function parseError(str, hash) {\n\t            if (hash.recoverable) {\n\t                this.trace(str);\n\t            } else {\n\t                var _parseError = function _parseError(msg, hash) {\n\t                    this.message = msg;\n\t                    this.hash = hash;\n\t                };\n\t\n\t                _parseError.prototype = new Error();\n\t\n\t                throw new _parseError(str, hash);\n\t            }\n\t        },\n\t        parse: function parse(input) {\n\t            var self = this,\n\t                stack = [0],\n\t                tstack = [],\n\t                vstack = [null],\n\t                lstack = [],\n\t                table = this.table,\n\t                yytext = '',\n\t                yylineno = 0,\n\t                yyleng = 0,\n\t                recovering = 0,\n\t                TERROR = 2,\n\t                EOF = 1;\n\t            var args = lstack.slice.call(arguments, 1);\n\t            var lexer = Object.create(this.lexer);\n\t            var sharedState = { yy: {} };\n\t            for (var k in this.yy) {\n\t                if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n\t                    sharedState.yy[k] = this.yy[k];\n\t                }\n\t            }\n\t            lexer.setInput(input, sharedState.yy);\n\t            sharedState.yy.lexer = lexer;\n\t            sharedState.yy.parser = this;\n\t            if (typeof lexer.yylloc == 'undefined') {\n\t                lexer.yylloc = {};\n\t            }\n\t            var yyloc = lexer.yylloc;\n\t            lstack.push(yyloc);\n\t            var ranges = lexer.options && lexer.options.ranges;\n\t            if (typeof sharedState.yy.parseError === 'function') {\n\t                this.parseError = sharedState.yy.parseError;\n\t            } else {\n\t                this.parseError = Object.getPrototypeOf(this).parseError;\n\t            }\n\t            function popStack(n) {\n\t                stack.length = stack.length - 2 * n;\n\t                vstack.length = vstack.length - n;\n\t                lstack.length = lstack.length - n;\n\t            }\n\t            _token_stack: var lex = function lex() {\n\t                var token;\n\t                token = lexer.lex() || EOF;\n\t                if (typeof token !== 'number') {\n\t                    token = self.symbols_[token] || token;\n\t                }\n\t                return token;\n\t            };\n\t            var symbol,\n\t                preErrorSymbol,\n\t                state,\n\t                action,\n\t                a,\n\t                r,\n\t                yyval = {},\n\t                p,\n\t                len,\n\t                newState,\n\t                expected;\n\t            while (true) {\n\t                state = stack[stack.length - 1];\n\t                if (this.defaultActions[state]) {\n\t                    action = this.defaultActions[state];\n\t                } else {\n\t                    if (symbol === null || typeof symbol == 'undefined') {\n\t                        symbol = lex();\n\t                    }\n\t                    action = table[state] && table[state][symbol];\n\t                }\n\t                if (typeof action === 'undefined' || !action.length || !action[0]) {\n\t                    var errStr = '';\n\t                    expected = [];\n\t                    for (p in table[state]) {\n\t                        if (this.terminals_[p] && p > TERROR) {\n\t                            expected.push('\\'' + this.terminals_[p] + '\\'');\n\t                        }\n\t                    }\n\t                    if (lexer.showPosition) {\n\t                        errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n\t                    } else {\n\t                        errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n\t                    }\n\t                    this.parseError(errStr, {\n\t                        text: lexer.match,\n\t                        token: this.terminals_[symbol] || symbol,\n\t                        line: lexer.yylineno,\n\t                        loc: yyloc,\n\t                        expected: expected\n\t                    });\n\t                }\n\t                if (action[0] instanceof Array && action.length > 1) {\n\t                    throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n\t                }\n\t                switch (action[0]) {\n\t                    case 1:\n\t                        stack.push(symbol);\n\t                        vstack.push(lexer.yytext);\n\t                        lstack.push(lexer.yylloc);\n\t                        stack.push(action[1]);\n\t                        symbol = null;\n\t                        if (!preErrorSymbol) {\n\t                            yyleng = lexer.yyleng;\n\t                            yytext = lexer.yytext;\n\t                            yylineno = lexer.yylineno;\n\t                            yyloc = lexer.yylloc;\n\t                            if (recovering > 0) {\n\t                                recovering--;\n\t                            }\n\t                        } else {\n\t                            symbol = preErrorSymbol;\n\t                            preErrorSymbol = null;\n\t                        }\n\t                        break;\n\t                    case 2:\n\t                        len = this.productions_[action[1]][1];\n\t                        yyval.$ = vstack[vstack.length - len];\n\t                        yyval._$ = {\n\t                            first_line: lstack[lstack.length - (len || 1)].first_line,\n\t                            last_line: lstack[lstack.length - 1].last_line,\n\t                            first_column: lstack[lstack.length - (len || 1)].first_column,\n\t                            last_column: lstack[lstack.length - 1].last_column\n\t                        };\n\t                        if (ranges) {\n\t                            yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\n\t                        }\n\t                        r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\n\t                        if (typeof r !== 'undefined') {\n\t                            return r;\n\t                        }\n\t                        if (len) {\n\t                            stack = stack.slice(0, -1 * len * 2);\n\t                            vstack = vstack.slice(0, -1 * len);\n\t                            lstack = lstack.slice(0, -1 * len);\n\t                        }\n\t                        stack.push(this.productions_[action[1]][0]);\n\t                        vstack.push(yyval.$);\n\t                        lstack.push(yyval._$);\n\t                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n\t                        stack.push(newState);\n\t                        break;\n\t                    case 3:\n\t                        return true;\n\t                }\n\t            }\n\t            return true;\n\t        } };\n\t    /* generated by jison-lex 0.3.4 */\n\t    var lexer = (function () {\n\t        var lexer = {\n\t\n\t            EOF: 1,\n\t\n\t            parseError: function parseError(str, hash) {\n\t                if (this.yy.parser) {\n\t                    this.yy.parser.parseError(str, hash);\n\t                } else {\n\t                    throw new Error(str);\n\t                }\n\t            },\n\t\n\t            // resets the lexer, sets new input\n\t            setInput: function setInput(input, yy) {\n\t                this.yy = yy || this.yy || {};\n\t                this._input = input;\n\t                this._more = this._backtrack = this.done = false;\n\t                this.yylineno = this.yyleng = 0;\n\t                this.yytext = this.matched = this.match = '';\n\t                this.conditionStack = ['INITIAL'];\n\t                this.yylloc = {\n\t                    first_line: 1,\n\t                    first_column: 0,\n\t                    last_line: 1,\n\t                    last_column: 0\n\t                };\n\t                if (this.options.ranges) {\n\t                    this.yylloc.range = [0, 0];\n\t                }\n\t                this.offset = 0;\n\t                return this;\n\t            },\n\t\n\t            // consumes and returns one char from the input\n\t            input: function input() {\n\t                var ch = this._input[0];\n\t                this.yytext += ch;\n\t                this.yyleng++;\n\t                this.offset++;\n\t                this.match += ch;\n\t                this.matched += ch;\n\t                var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n\t                if (lines) {\n\t                    this.yylineno++;\n\t                    this.yylloc.last_line++;\n\t                } else {\n\t                    this.yylloc.last_column++;\n\t                }\n\t                if (this.options.ranges) {\n\t                    this.yylloc.range[1]++;\n\t                }\n\t\n\t                this._input = this._input.slice(1);\n\t                return ch;\n\t            },\n\t\n\t            // unshifts one char (or a string) into the input\n\t            unput: function unput(ch) {\n\t                var len = ch.length;\n\t                var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\t\n\t                this._input = ch + this._input;\n\t                this.yytext = this.yytext.substr(0, this.yytext.length - len);\n\t                //this.yyleng -= len;\n\t                this.offset -= len;\n\t                var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n\t                this.match = this.match.substr(0, this.match.length - 1);\n\t                this.matched = this.matched.substr(0, this.matched.length - 1);\n\t\n\t                if (lines.length - 1) {\n\t                    this.yylineno -= lines.length - 1;\n\t                }\n\t                var r = this.yylloc.range;\n\t\n\t                this.yylloc = {\n\t                    first_line: this.yylloc.first_line,\n\t                    last_line: this.yylineno + 1,\n\t                    first_column: this.yylloc.first_column,\n\t                    last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n\t                };\n\t\n\t                if (this.options.ranges) {\n\t                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n\t                }\n\t                this.yyleng = this.yytext.length;\n\t                return this;\n\t            },\n\t\n\t            // When called from action, caches matched text and appends it on next action\n\t            more: function more() {\n\t                this._more = true;\n\t                return this;\n\t            },\n\t\n\t            // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\n\t            reject: function reject() {\n\t                if (this.options.backtrack_lexer) {\n\t                    this._backtrack = true;\n\t                } else {\n\t                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n\t                        text: \"\",\n\t                        token: null,\n\t                        line: this.yylineno\n\t                    });\n\t                }\n\t                return this;\n\t            },\n\t\n\t            // retain first n characters of the match\n\t            less: function less(n) {\n\t                this.unput(this.match.slice(n));\n\t            },\n\t\n\t            // displays already matched input, i.e. for error messages\n\t            pastInput: function pastInput() {\n\t                var past = this.matched.substr(0, this.matched.length - this.match.length);\n\t                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\\n/g, \"\");\n\t            },\n\t\n\t            // displays upcoming input, i.e. for error messages\n\t            upcomingInput: function upcomingInput() {\n\t                var next = this.match;\n\t                if (next.length < 20) {\n\t                    next += this._input.substr(0, 20 - next.length);\n\t                }\n\t                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n\t            },\n\t\n\t            // displays the character position where the lexing error occurred, i.e. for error messages\n\t            showPosition: function showPosition() {\n\t                var pre = this.pastInput();\n\t                var c = new Array(pre.length + 1).join(\"-\");\n\t                return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n\t            },\n\t\n\t            // test the lexed token: return FALSE when not a match, otherwise return token\n\t            test_match: function test_match(match, indexed_rule) {\n\t                var token, lines, backup;\n\t\n\t                if (this.options.backtrack_lexer) {\n\t                    // save context\n\t                    backup = {\n\t                        yylineno: this.yylineno,\n\t                        yylloc: {\n\t                            first_line: this.yylloc.first_line,\n\t                            last_line: this.last_line,\n\t                            first_column: this.yylloc.first_column,\n\t                            last_column: this.yylloc.last_column\n\t                        },\n\t                        yytext: this.yytext,\n\t                        match: this.match,\n\t                        matches: this.matches,\n\t                        matched: this.matched,\n\t                        yyleng: this.yyleng,\n\t                        offset: this.offset,\n\t                        _more: this._more,\n\t                        _input: this._input,\n\t                        yy: this.yy,\n\t                        conditionStack: this.conditionStack.slice(0),\n\t                        done: this.done\n\t                    };\n\t                    if (this.options.ranges) {\n\t                        backup.yylloc.range = this.yylloc.range.slice(0);\n\t                    }\n\t                }\n\t\n\t                lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n\t                if (lines) {\n\t                    this.yylineno += lines.length;\n\t                }\n\t                this.yylloc = {\n\t                    first_line: this.yylloc.last_line,\n\t                    last_line: this.yylineno + 1,\n\t                    first_column: this.yylloc.last_column,\n\t                    last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\n\t                };\n\t                this.yytext += match[0];\n\t                this.match += match[0];\n\t                this.matches = match;\n\t                this.yyleng = this.yytext.length;\n\t                if (this.options.ranges) {\n\t                    this.yylloc.range = [this.offset, this.offset += this.yyleng];\n\t                }\n\t                this._more = false;\n\t                this._backtrack = false;\n\t                this._input = this._input.slice(match[0].length);\n\t                this.matched += match[0];\n\t                token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n\t                if (this.done && this._input) {\n\t                    this.done = false;\n\t                }\n\t                if (token) {\n\t                    return token;\n\t                } else if (this._backtrack) {\n\t                    // recover context\n\t                    for (var k in backup) {\n\t                        this[k] = backup[k];\n\t                    }\n\t                    return false; // rule action called reject() implying the next rule should be tested instead.\n\t                }\n\t                return false;\n\t            },\n\t\n\t            // return next match in input\n\t            next: function next() {\n\t                if (this.done) {\n\t                    return this.EOF;\n\t                }\n\t                if (!this._input) {\n\t                    this.done = true;\n\t                }\n\t\n\t                var token, match, tempMatch, index;\n\t                if (!this._more) {\n\t                    this.yytext = '';\n\t                    this.match = '';\n\t                }\n\t                var rules = this._currentRules();\n\t                for (var i = 0; i < rules.length; i++) {\n\t                    tempMatch = this._input.match(this.rules[rules[i]]);\n\t                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n\t                        match = tempMatch;\n\t                        index = i;\n\t                        if (this.options.backtrack_lexer) {\n\t                            token = this.test_match(tempMatch, rules[i]);\n\t                            if (token !== false) {\n\t                                return token;\n\t                            } else if (this._backtrack) {\n\t                                match = false;\n\t                                continue; // rule action called reject() implying a rule MISmatch.\n\t                            } else {\n\t                                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n\t                                    return false;\n\t                                }\n\t                        } else if (!this.options.flex) {\n\t                            break;\n\t                        }\n\t                    }\n\t                }\n\t                if (match) {\n\t                    token = this.test_match(match, rules[index]);\n\t                    if (token !== false) {\n\t                        return token;\n\t                    }\n\t                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n\t                    return false;\n\t                }\n\t                if (this._input === \"\") {\n\t                    return this.EOF;\n\t                } else {\n\t                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n\t                        text: \"\",\n\t                        token: null,\n\t                        line: this.yylineno\n\t                    });\n\t                }\n\t            },\n\t\n\t            // return next match that has a token\n\t            lex: function lex() {\n\t                var r = this.next();\n\t                if (r) {\n\t                    return r;\n\t                } else {\n\t                    return this.lex();\n\t                }\n\t            },\n\t\n\t            // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\n\t            begin: function begin(condition) {\n\t                this.conditionStack.push(condition);\n\t            },\n\t\n\t            // pop the previously active lexer condition state off the condition stack\n\t            popState: function popState() {\n\t                var n = this.conditionStack.length - 1;\n\t                if (n > 0) {\n\t                    return this.conditionStack.pop();\n\t                } else {\n\t                    return this.conditionStack[0];\n\t                }\n\t            },\n\t\n\t            // produce the lexer rule set which is active for the currently active lexer condition state\n\t            _currentRules: function _currentRules() {\n\t                if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n\t                    return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n\t                } else {\n\t                    return this.conditions[\"INITIAL\"].rules;\n\t                }\n\t            },\n\t\n\t            // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\n\t            topState: function topState(n) {\n\t                n = this.conditionStack.length - 1 - Math.abs(n || 0);\n\t                if (n >= 0) {\n\t                    return this.conditionStack[n];\n\t                } else {\n\t                    return \"INITIAL\";\n\t                }\n\t            },\n\t\n\t            // alias for begin(condition)\n\t            pushState: function pushState(condition) {\n\t                this.begin(condition);\n\t            },\n\t\n\t            // return the number of states currently on the stack\n\t            stateStackSize: function stateStackSize() {\n\t                return this.conditionStack.length;\n\t            },\n\t            options: { \"case-insensitive\": true },\n\t            performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n\t                // Pre-lexer code can go here\n\t\n\t                var YYSTATE = YY_START;\n\t                switch ($avoiding_name_collisions) {\n\t                    case 0:\n\t                        return 9;\n\t                        break;\n\t                    case 1:\n\t                        return 10;\n\t                        break;\n\t                    case 2:\n\t                        return 4;\n\t                        break;\n\t                    case 3:\n\t                        return 12;\n\t                        break;\n\t                    case 4:\n\t                        return 13;\n\t                        break;\n\t                    case 5:\n\t                        return 6;\n\t                        break;\n\t                    case 6:\n\t                        return 'INVALID';\n\t                        break;\n\t                }\n\t            },\n\t            rules: [/^(?:[\\n]+)/i, /^(?:showInfo\\b)/i, /^(?:info\\b)/i, /^(?:say\\b)/i, /^(?::[^#\\n;]+)/i, /^(?:$)/i, /^(?:.)/i],\n\t            conditions: { \"INITIAL\": { \"rules\": [0, 1, 2, 3, 4, 5, 6], \"inclusive\": true } }\n\t        };\n\t        return lexer;\n\t    })();\n\t    parser.lexer = lexer;\n\t    function Parser() {\n\t        this.yy = {};\n\t    }\n\t    Parser.prototype = parser;parser.Parser = Parser;\n\t    return new Parser();\n\t})();\n\t\n\tif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\n\t    exports.parser = example;\n\t    exports.Parser = example.Parser;\n\t    exports.parse = function () {\n\t        return example.parse.apply(example, arguments);\n\t    };\n\t    exports.main = function commonjsMain(args) {\n\t        if (!args[1]) {\n\t            console.log('Usage: ' + args[0] + ' FILE');\n\t            process.exit(1);\n\t        }\n\t        var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n\t        return exports.parser.parse(source);\n\t    };\n\t    if (typeof module !== 'undefined' && require.main === module) {\n\t        exports.main(process.argv.slice(1));\n\t    }\n\t}\n\t\n\t}).call(this,require('_process'))\n\t},{\"_process\":3,\"fs\":1,\"path\":2}],114:[function(require,module,exports){\n\t/* global window */\n\t'use strict';\n\t\n\tvar Logger = require('../../logger');\n\tvar log = new Logger.Log();\n\t\n\tvar dagreD3;\n\t//log.debug('setting up dagre-d3');\n\tif (require) {\n\t  try {\n\t    dagreD3 = require('dagre-d3');\n\t    //log.debug('Got it (dagre-d3)');\n\t  } catch (e) {\n\t    log.debug('Could not load dagre-d3');\n\t  }\n\t}\n\t\n\tif (!dagreD3) {\n\t  dagreD3 = window.dagreD3;\n\t}\n\t\n\tmodule.exports = dagreD3;\n\t\n\t},{\"../../logger\":126,\"dagre-d3\":5}],115:[function(require,module,exports){\n\t/**\n\t * Created by knut on 14-12-11.\n\t */\n\t'use strict';\n\t\n\tvar graph = require('./graphDb');\n\tvar flow = require('./parser/flow');\n\tvar dot = require('./parser/dot');\n\tvar d3 = require('../../d3');\n\tvar dagreD3 = require('./dagre-d3');\n\tvar Logger = require('../../logger');\n\tvar log = new Logger.Log();\n\t\n\tvar conf = {};\n\tmodule.exports.setConf = function (cnf) {\n\t    var keys = Object.keys(cnf);\n\t    var i;\n\t    for (i = 0; i < keys.length; i++) {\n\t        conf[keys[i]] = cnf[keys[i]];\n\t    }\n\t};\n\t\n\t/**\n\t * Function that adds the vertices found in the graph definition to the graph to be rendered.\n\t * @param vert Object containing the vertices.\n\t * @param g The graph that is to be drawn.\n\t */\n\texports.addVertices = function (vert, g) {\n\t    var keys = Object.keys(vert);\n\t\n\t    var styleFromStyleArr = function styleFromStyleArr(styleStr, arr) {\n\t        var i;\n\t        // Create a compound style definition from the style definitions found for the node in the graph definition\n\t        for (i = 0; i < arr.length; i++) {\n\t            if (typeof arr[i] !== 'undefined') {\n\t                styleStr = styleStr + arr[i] + ';';\n\t            }\n\t        }\n\t\n\t        return styleStr;\n\t    };\n\t\n\t    // Iterate through each item in the vertice object (containing all the vertices found) in the graph definition\n\t    keys.forEach(function (id) {\n\t        var vertice = vert[id];\n\t        var verticeText;\n\t\n\t        /**\n\t         * Variable for storing the classes for the vertice\n\t         * @type {string}\n\t         */\n\t        var classStr = '';\n\t\n\t        //log.debug(vertice.classes);\n\t\n\t        if (vertice.classes.length > 0) {\n\t            classStr = vertice.classes.join(' ');\n\t        }\n\t\n\t        /**\n\t         * Variable for storing the extracted style for the vertice\n\t         * @type {string}\n\t         */\n\t        var style = '';\n\t        // Create a compound style definition from the style definitions found for the node in the graph definition\n\t        style = styleFromStyleArr(style, vertice.styles);\n\t\n\t        // Use vertice id as text in the box if no text is provided by the graph definition\n\t        if (typeof vertice.text === 'undefined') {\n\t            verticeText = vertice.id;\n\t        } else {\n\t            verticeText = vertice.text;\n\t        }\n\t\n\t        var labelTypeStr = '';\n\t        if (conf.htmlLabels) {\n\t            labelTypeStr = 'html';\n\t            verticeText = verticeText.replace(/fa:fa[\\w\\-]+/g, function (s) {\n\t                return '<i class=\"fa ' + s.substring(3) + '\"></i>';\n\t            });\n\t        } else {\n\t            verticeText = verticeText.replace(/<br>/g, '\\n');\n\t            labelTypeStr = 'text';\n\t        }\n\t\n\t        var radious = 0;\n\t        var _shape = '';\n\t\n\t        // Set the shape based parameters\n\t        switch (vertice.type) {\n\t            case 'round':\n\t                radious = 5;\n\t                _shape = 'rect';\n\t                break;\n\t            case 'square':\n\t                _shape = 'rect';\n\t                break;\n\t            case 'diamond':\n\t                _shape = 'question';\n\t                break;\n\t            case 'odd':\n\t                _shape = 'rect_left_inv_arrow';\n\t                break;\n\t            case 'odd_right':\n\t                _shape = 'rect_left_inv_arrow';\n\t                break;\n\t            case 'circle':\n\t                _shape = 'circle';\n\t                break;\n\t            case 'ellipse':\n\t                _shape = 'ellipse';\n\t                break;\n\t            case 'group':\n\t                _shape = 'rect';\n\t                verticeText = '';\n\t                break;\n\t            default:\n\t                _shape = 'rect';\n\t        }\n\t        // Add the node\n\t        g.setNode(vertice.id, { labelType: labelTypeStr, shape: _shape, label: verticeText, rx: radious, ry: radious, 'class': classStr, style: style, id: vertice.id });\n\t    });\n\t};\n\t\n\t/**\n\t * Add edges to graph based on parsed graph defninition\n\t * @param {Object} edges The edges to add to the graph\n\t * @param {Object} g The graph object\n\t */\n\texports.addEdges = function (edges, g) {\n\t    var cnt = 0;\n\t    var aHead;\n\t\n\t    var defaultStyle;\n\t    if (typeof edges.defaultStyle !== 'undefined') {\n\t        defaultStyle = edges.defaultStyle.toString().replace(/,/g, ';');\n\t    }\n\t\n\t    edges.forEach(function (edge) {\n\t        cnt++;\n\t\n\t        // Set link type for rendering\n\t        if (edge.type === 'arrow_open') {\n\t            aHead = 'none';\n\t        } else {\n\t            aHead = 'normal';\n\t        }\n\t\n\t        var style = '';\n\t\n\t        if (typeof edge.style !== 'undefined') {\n\t            edge.style.forEach(function (s) {\n\t                style = style + s + ';';\n\t            });\n\t        } else {\n\t            switch (edge.stroke) {\n\t                case 'normal':\n\t                    style = 'fill:none';\n\t                    if (typeof defaultStyle !== 'undefined') {\n\t                        style = defaultStyle;\n\t                    }\n\t                    break;\n\t                case 'dotted':\n\t                    style = 'stroke: #333; fill:none;stroke-width:2px;stroke-dasharray:3;';\n\t                    break;\n\t                case 'thick':\n\t                    style = 'stroke: #333; stroke-width: 3.5px;fill:none';\n\t                    break;\n\t            }\n\t        }\n\t\n\t        // Add the edge to the graph\n\t        if (typeof edge.text === 'undefined') {\n\t            if (typeof edge.style === 'undefined') {\n\t                g.setEdge(edge.start, edge.end, { style: style, arrowhead: aHead }, cnt);\n\t            } else {\n\t                g.setEdge(edge.start, edge.end, {\n\t                    style: style, arrowheadStyle: 'fill: #333', arrowhead: aHead\n\t                }, cnt);\n\t            }\n\t        }\n\t        // Edge with text\n\t        else {\n\t                var edgeText = edge.text.replace(/<br>/g, '\\n');\n\t                if (typeof edge.style === 'undefined') {\n\t                    if (conf.htmlLabels) {\n\t                        g.setEdge(edge.start, edge.end, { labelType: 'html', style: style, labelpos: 'c', label: '<span class=\"edgeLabel\">' + edge.text + '</span>', arrowheadStyle: 'fill: #333', arrowhead: aHead }, cnt);\n\t                    } else {\n\t                        g.setEdge(edge.start, edge.end, { labelType: 'text', style: 'stroke: #333; stroke-width: 1.5px;fill:none', labelpos: 'c', label: edgeText, arrowheadStyle: 'fill: #333', arrowhead: aHead }, cnt);\n\t                    }\n\t                } else {\n\t                    g.setEdge(edge.start, edge.end, {\n\t                        labelType: 'text', style: style, arrowheadStyle: 'fill: #333', label: edgeText, arrowhead: aHead\n\t                    }, cnt);\n\t                }\n\t            }\n\t    });\n\t};\n\t\n\t/**\n\t * Returns the all the styles from classDef statements in the graph definition.\n\t * @returns {object} classDef styles\n\t */\n\texports.getClasses = function (text, isDot) {\n\t    var parser;\n\t    graph.clear();\n\t    if (isDot) {\n\t        parser = dot.parser;\n\t    } else {\n\t        parser = flow.parser;\n\t    }\n\t    parser.yy = graph;\n\t\n\t    // Parse the graph definition\n\t    parser.parse(text);\n\t\n\t    var classes = graph.getClasses();\n\t\n\t    // Add default class if undefined\n\t    if (typeof classes['default'] === 'undefined') {\n\t        classes['default'] = { id: 'default' };\n\t        //classes.default.styles = ['fill:#ffa','stroke:#666','stroke-width:3px'];\n\t        classes['default'].styles = [];\n\t        classes['default'].clusterStyles = ['rx:4px', 'fill: rgb(255, 255, 222)', 'rx: 4px', 'stroke: rgb(170, 170, 51)', 'stroke-width: 1px'];\n\t        classes['default'].nodeLabelStyles = ['fill:#000', 'stroke:none', 'font-weight:300', 'font-family:\"Helvetica Neue\",Helvetica,Arial,sans-serf', 'font-size:14px'];\n\t        classes['default'].edgeLabelStyles = ['fill:#000', 'stroke:none', 'font-weight:300', 'font-family:\"Helvetica Neue\",Helvetica,Arial,sans-serf', 'font-size:14px'];\n\t    }\n\t    return classes;\n\t};\n\t\n\t/**\n\t * Draws a flowchart in the tag with id: id based on the graph definition in text.\n\t * @param text\n\t * @param id\n\t */\n\texports.draw = function (text, id, isDot) {\n\t    log.debug('Drawing flowchart');\n\t    var parser;\n\t    graph.clear();\n\t    if (isDot) {\n\t        parser = dot.parser;\n\t    } else {\n\t        parser = flow.parser;\n\t    }\n\t    parser.yy = graph;\n\t\n\t    // Parse the graph definition\n\t    try {\n\t\n\t        parser.parse(text);\n\t    } catch (err) {\n\t        log.debug('Parsing failed');\n\t    }\n\t\n\t    // Fetch the default direction, use TD if none was found\n\t    var dir;\n\t    dir = graph.getDirection();\n\t    if (typeof dir === 'undefined') {\n\t        dir = 'TD';\n\t    }\n\t\n\t    // Create the input mermaid.graph\n\t    var g = new dagreD3.graphlib.Graph({\n\t        multigraph: true,\n\t        compound: true\n\t    }).setGraph({\n\t        rankdir: dir,\n\t        marginx: 20,\n\t        marginy: 20\n\t\n\t    }).setDefaultEdgeLabel(function () {\n\t        return {};\n\t    });\n\t\n\t    var subG;\n\t    var subGraphs = graph.getSubGraphs();\n\t    var i = 0;\n\t    for (i = subGraphs.length - 1; i >= 0; i--) {\n\t        subG = subGraphs[i];\n\t        graph.addVertex(subG.id, subG.title, 'group', undefined);\n\t    }\n\t\n\t    // Fetch the verices/nodes and edges/links from the parsed graph definition\n\t    var vert = graph.getVertices();\n\t\n\t    //log.debug(vert);\n\t    var edges = graph.getEdges();\n\t\n\t    i = 0;\n\t    var j;\n\t    for (i = subGraphs.length - 1; i >= 0; i--) {\n\t        subG = subGraphs[i];\n\t\n\t        d3.selectAll('cluster').append('text');\n\t\n\t        for (j = 0; j < subG.nodes.length; j++) {\n\t            //log.debug('Setting node',subG.nodes[j],' to subgraph '+id);\n\t            g.setParent(subG.nodes[j], subG.id);\n\t        }\n\t    }\n\t    exports.addVertices(vert, g);\n\t    exports.addEdges(edges, g);\n\t\n\t    // Create the renderer\n\t    var render = new dagreD3.render();\n\t\n\t    // Add custom shape for rhombus type of boc (decision)\n\t    render.shapes().question = function (parent, bbox, node) {\n\t        var w = bbox.width,\n\t            h = bbox.height,\n\t            s = (w + h) * 0.8,\n\t            points = [{ x: s / 2, y: 0 }, { x: s, y: -s / 2 }, { x: s / 2, y: -s }, { x: 0, y: -s / 2 }];\n\t        var shapeSvg = parent.insert('polygon', ':first-child').attr('points', points.map(function (d) {\n\t            return d.x + ',' + d.y;\n\t        }).join(' ')).attr('rx', 5).attr('ry', 5).attr('transform', 'translate(' + -s / 2 + ',' + s * 2 / 4 + ')');\n\t        node.intersect = function (point) {\n\t            return dagreD3.intersect.polygon(node, points, point);\n\t        };\n\t        return shapeSvg;\n\t    };\n\t\n\t    // Add custom shape for box with inverted arrow on left side\n\t    render.shapes().rect_left_inv_arrow = function (parent, bbox, node) {\n\t        var w = bbox.width,\n\t            h = bbox.height,\n\t            points = [{ x: -h / 2, y: 0 }, { x: w, y: 0 }, { x: w, y: -h }, { x: -h / 2, y: -h }, { x: 0, y: -h / 2 }];\n\t        var shapeSvg = parent.insert('polygon', ':first-child').attr('points', points.map(function (d) {\n\t            return d.x + ',' + d.y;\n\t        }).join(' ')).attr('transform', 'translate(' + -w / 2 + ',' + h * 2 / 4 + ')');\n\t        node.intersect = function (point) {\n\t            return dagreD3.intersect.polygon(node, points, point);\n\t        };\n\t        return shapeSvg;\n\t    };\n\t\n\t    // Add custom shape for box with inverted arrow on right side\n\t    render.shapes().rect_right_inv_arrow = function (parent, bbox, node) {\n\t        var w = bbox.width,\n\t            h = bbox.height,\n\t            points = [{ x: 0, y: 0 }, { x: w + h / 2, y: 0 }, { x: w, y: -h / 2 }, { x: w + h / 2, y: -h }, { x: 0, y: -h }];\n\t        var shapeSvg = parent.insert('polygon', ':first-child').attr('points', points.map(function (d) {\n\t            return d.x + ',' + d.y;\n\t        }).join(' ')).attr('transform', 'translate(' + -w / 2 + ',' + h * 2 / 4 + ')');\n\t        node.intersect = function (point) {\n\t            return dagreD3.intersect.polygon(node, points, point);\n\t        };\n\t        return shapeSvg;\n\t    };\n\t\n\t    // Add our custom arrow - an empty arrowhead\n\t    render.arrows().none = function normal(parent, id, edge, type) {\n\t        var marker = parent.append('marker').attr('id', id).attr('viewBox', '0 0 10 10').attr('refX', 9).attr('refY', 5).attr('markerUnits', 'strokeWidth').attr('markerWidth', 8).attr('markerHeight', 6).attr('orient', 'auto');\n\t\n\t        var path = marker.append('path').attr('d', 'M 0 0 L 0 0 L 0 0 z');\n\t        dagreD3.util.applyStyle(path, edge[type + 'Style']);\n\t    };\n\t\n\t    // Set up an SVG group so that we can translate the final graph.\n\t    var svg = d3.select('#' + id);\n\t    //svgGroup = d3.select('#' + id + ' g');\n\t\n\t    // Run the renderer. This is what draws the final graph.\n\t    var element = d3.select('#' + id + ' g');\n\t    render(element, g);\n\t\n\t    //var tip = d3.tip().html(function(d) { return d; });\n\t    element.selectAll('g.node').attr('title', function () {\n\t        return graph.getTooltip(this.id);\n\t    });\n\t\n\t    /*\n\t     var xPos = document.querySelectorAll('.clusters rect')[0].x.baseVal.value;\n\t     var width = document.querySelectorAll('.clusters rect')[0].width.baseVal.value;\n\t        var cluster = d3.selectAll('.cluster');\n\t        var te = cluster.append('text');\n\t        te.attr('x', xPos+width/2);\n\t        te.attr('y', 12);\n\t        //te.stroke('black');\n\t        te.attr('id', 'apa12');\n\t        te.style('text-anchor', 'middle');\n\t        te.text('Title for cluster');\n\t    */\n\t    if (conf.useMaxWidth) {\n\t        // Center the graph\n\t        svg.attr('height', '100%');\n\t        svg.attr('width', conf.width);\n\t        //svg.attr('viewBox', svgb.getBBox().x + ' 0 '+ g.graph().width+' '+ g.graph().height);\n\t        svg.attr('viewBox', '0 0 ' + (g.graph().width + 20) + ' ' + (g.graph().height + 20));\n\t        svg.attr('style', 'max-width:' + (g.graph().width + 20) + 'px;');\n\t    } else {\n\t        // Center the graph\n\t        svg.attr('height', g.graph().height);\n\t        if (typeof conf.width === 'undefined') {\n\t            svg.attr('width', g.graph().width);\n\t        } else {\n\t            svg.attr('width', conf.width);\n\t        }\n\t        //svg.attr('viewBox', svgb.getBBox().x + ' 0 '+ g.graph().width+' '+ g.graph().height);\n\t        svg.attr('viewBox', '0 0 ' + (g.graph().width + 20) + ' ' + (g.graph().height + 20));\n\t    }\n\t\n\t    // Index nodes\n\t    graph.indexNodes('subGraph' + i);\n\t\n\t    for (i = 0; i < subGraphs.length; i++) {\n\t        subG = subGraphs[i];\n\t\n\t        if (subG.title !== 'undefined') {\n\t            var clusterRects = document.querySelectorAll('#' + id + ' #' + subG.id + ' rect');\n\t            //log.debug('looking up: #' + id + ' #' + subG.id)\n\t            var clusterEl = document.querySelectorAll('#' + id + ' #' + subG.id);\n\t\n\t            var xPos = clusterRects[0].x.baseVal.value;\n\t            var yPos = clusterRects[0].y.baseVal.value;\n\t            var width = clusterRects[0].width.baseVal.value;\n\t            var cluster = d3.select(clusterEl[0]);\n\t            var te = cluster.append('text');\n\t            te.attr('x', xPos + width / 2);\n\t            te.attr('y', yPos + 14);\n\t            te.attr('fill', 'black');\n\t            te.attr('stroke', 'none');\n\t            te.attr('id', id + 'Text');\n\t            te.style('text-anchor', 'middle');\n\t\n\t            if (typeof subG.title === 'undefined') {\n\t                te.text('Undef');\n\t            } else {\n\t                //te.text(subGraphs[subGraphs.length-i-1].title);\n\t                te.text(subG.title);\n\t            }\n\t        }\n\t    }\n\t};\n\t\n\t},{\"../../d3\":107,\"../../logger\":126,\"./dagre-d3\":114,\"./graphDb\":116,\"./parser/dot\":117,\"./parser/flow\":118}],116:[function(require,module,exports){\n\t(function (global){\n\t/**\n\t * Created by knut on 14-11-03.\n\t */\n\t'use strict';\n\t\n\tvar Logger = require('../../logger');\n\tvar log = new Logger.Log();\n\t\n\tvar d3 = require('../../d3');\n\tvar vertices = {};\n\tvar edges = [];\n\tvar classes = [];\n\tvar subGraphs = [];\n\tvar tooltips = {};\n\tvar subCount = 0;\n\tvar direction;\n\t// Functions to be run after graph rendering\n\tvar funs = [];\n\t/**\n\t * Function called by parser when a node definition has been found\n\t * @param id\n\t * @param text\n\t * @param type\n\t * @param style\n\t */\n\texports.addVertex = function (id, text, type, style) {\n\t    var txt;\n\t\n\t    if (typeof id === 'undefined') {\n\t        return;\n\t    }\n\t    if (id.trim().length === 0) {\n\t        return;\n\t    }\n\t\n\t    if (typeof vertices[id] === 'undefined') {\n\t        vertices[id] = { id: id, styles: [], classes: [] };\n\t    }\n\t    if (typeof text !== 'undefined') {\n\t        txt = text.trim();\n\t\n\t        // strip quotes if string starts and exnds with a quote\n\t        if (txt[0] === '\"' && txt[txt.length - 1] === '\"') {\n\t            txt = txt.substring(1, txt.length - 1);\n\t        }\n\t\n\t        vertices[id].text = txt;\n\t    }\n\t    if (typeof type !== 'undefined') {\n\t        vertices[id].type = type;\n\t    }\n\t    if (typeof type !== 'undefined') {\n\t        vertices[id].type = type;\n\t    }\n\t    if (typeof style !== 'undefined') {\n\t        if (style !== null) {\n\t            style.forEach(function (s) {\n\t                vertices[id].styles.push(s);\n\t            });\n\t        }\n\t    }\n\t};\n\t\n\t/**\n\t * Function called by parser when a link/edge definition has been found\n\t * @param start\n\t * @param end\n\t * @param type\n\t * @param linktext\n\t */\n\texports.addLink = function (start, end, type, linktext) {\n\t    log.debug('Got edge', start, end);\n\t    var edge = { start: start, end: end, type: undefined, text: '' };\n\t    linktext = type.text;\n\t\n\t    if (typeof linktext !== 'undefined') {\n\t        edge.text = linktext.trim();\n\t\n\t        // strip quotes if string starts and exnds with a quote\n\t        if (edge.text[0] === '\"' && edge.text[edge.text.length - 1] === '\"') {\n\t            edge.text = edge.text.substring(1, edge.text.length - 1);\n\t        }\n\t    }\n\t\n\t    if (typeof type !== 'undefined') {\n\t        edge.type = type.type;\n\t        edge.stroke = type.stroke;\n\t    }\n\t    edges.push(edge);\n\t};\n\t/**\n\t * Updates a link with a style\n\t * @param pos\n\t * @param style\n\t */\n\texports.updateLink = function (pos, style) {\n\t    if (pos === 'default') {\n\t        edges.defaultStyle = style;\n\t    } else {\n\t        edges[pos].style = style;\n\t    }\n\t};\n\t\n\texports.addClass = function (id, style) {\n\t    if (typeof classes[id] === 'undefined') {\n\t        classes[id] = { id: id, styles: [] };\n\t    }\n\t\n\t    if (typeof style !== 'undefined') {\n\t        if (style !== null) {\n\t            style.forEach(function (s) {\n\t                classes[id].styles.push(s);\n\t            });\n\t        }\n\t    }\n\t};\n\t\n\t/**\n\t * Called by parser when a graph definition is found, stores the direction of the chart.\n\t * @param dir\n\t */\n\texports.setDirection = function (dir) {\n\t    direction = dir;\n\t};\n\t\n\t/**\n\t * Called by parser when a graph definition is found, stores the direction of the chart.\n\t * @param dir\n\t */\n\texports.setClass = function (id, className) {\n\t    if (id.indexOf(',') > 0) {\n\t        id.split(',').forEach(function (id2) {\n\t            if (typeof vertices[id2] !== 'undefined') {\n\t                vertices[id2].classes.push(className);\n\t            }\n\t        });\n\t    } else {\n\t        if (typeof vertices[id] !== 'undefined') {\n\t            vertices[id].classes.push(className);\n\t        }\n\t    }\n\t};\n\t\n\tvar setTooltip = function setTooltip(id, tooltip) {\n\t    if (typeof tooltip !== 'undefined') {\n\t        tooltips[id] = tooltip;\n\t    }\n\t};\n\t\n\tvar setClickFun = function setClickFun(id, functionName) {\n\t    if (typeof functionName === 'undefined') {\n\t        return;\n\t    }\n\t    if (typeof vertices[id] !== 'undefined') {\n\t        funs.push(function (element) {\n\t            var elem = d3.select(element).select('#' + id);\n\t            if (elem !== null) {\n\t                elem.on('click', function () {\n\t                    eval(functionName + '(\\'' + id + '\\')'); // jshint ignore:line\n\t                });\n\t            }\n\t        });\n\t    }\n\t};\n\t\n\tvar setLink = function setLink(id, linkStr) {\n\t    if (typeof linkStr === 'undefined') {\n\t        return;\n\t    }\n\t    if (typeof vertices[id] !== 'undefined') {\n\t        funs.push(function (element) {\n\t            var elem = d3.select(element).select('#' + id);\n\t            if (elem !== null) {\n\t                elem.on('click', function () {\n\t                    window.open(linkStr, 'newTab'); // jshint ignore:line\n\t                });\n\t            }\n\t        });\n\t    }\n\t};\n\texports.getTooltip = function (id) {\n\t    return tooltips[id];\n\t};\n\t\n\t/**\n\t * Called by parser when a graph definition is found, stores the direction of the chart.\n\t * @param dir\n\t */\n\texports.setClickEvent = function (id, functionName, link, tooltip) {\n\t    if (id.indexOf(',') > 0) {\n\t        id.split(',').forEach(function (id2) {\n\t            setTooltip(id2, tooltip);\n\t            setClickFun(id2, functionName);\n\t            setLink(id2, link);\n\t        });\n\t    } else {\n\t        setTooltip(id, tooltip);\n\t        setClickFun(id, functionName);\n\t        setLink(id, link);\n\t    }\n\t};\n\t\n\texports.bindFunctions = function (element) {\n\t    funs.forEach(function (fun) {\n\t        fun(element);\n\t    });\n\t};\n\texports.getDirection = function () {\n\t    return direction;\n\t};\n\t/**\n\t * Retrieval function for fetching the found nodes after parsing has completed.\n\t * @returns {{}|*|vertices}\n\t */\n\texports.getVertices = function () {\n\t    return vertices;\n\t};\n\t\n\t/**\n\t * Retrieval function for fetching the found links after parsing has completed.\n\t * @returns {{}|*|edges}\n\t */\n\texports.getEdges = function () {\n\t    return edges;\n\t};\n\t\n\t/**\n\t * Retrieval function for fetching the found class definitions after parsing has completed.\n\t * @returns {{}|*|classes}\n\t */\n\texports.getClasses = function () {\n\t    return classes;\n\t};\n\t\n\tvar setupToolTips = function setupToolTips(element) {\n\t\n\t    var tooltipElem = d3.select('.mermaidTooltip');\n\t    if (tooltipElem[0][0] === null) {\n\t        tooltipElem = d3.select('body').append('div').attr('class', 'mermaidTooltip').style('opacity', 0);\n\t    }\n\t\n\t    var svg = d3.select(element).select('svg');\n\t\n\t    var nodes = svg.selectAll('g.node');\n\t    nodes.on('mouseover', function () {\n\t        var el = d3.select(this);\n\t        var title = el.attr('title');\n\t        // Dont try to draw a tooltip if no data is provided\n\t        if (title === null) {\n\t            return;\n\t        }\n\t        var rect = this.getBoundingClientRect();\n\t\n\t        tooltipElem.transition().duration(200).style('opacity', '.9');\n\t        tooltipElem.html(el.attr('title')).style('left', rect.left + (rect.right - rect.left) / 2 + 'px').style('top', rect.top - 14 + document.body.scrollTop + 'px');\n\t        el.classed('hover', true);\n\t    }).on('mouseout', function () {\n\t        tooltipElem.transition().duration(500).style('opacity', 0);\n\t        var el = d3.select(this);\n\t        el.classed('hover', false);\n\t    });\n\t};\n\tfuns.push(setupToolTips);\n\t\n\t/**\n\t * Clears the internal graph db so that a new graph can be parsed.\n\t */\n\texports.clear = function () {\n\t    vertices = {};\n\t    classes = {};\n\t    edges = [];\n\t    funs = [];\n\t    funs.push(setupToolTips);\n\t    subGraphs = [];\n\t    subCount = 0;\n\t    tooltips = [];\n\t};\n\t/**\n\t *\n\t * @returns {string}\n\t */\n\texports.defaultStyle = function () {\n\t    return 'fill:#ffa;stroke: #f66; stroke-width: 3px; stroke-dasharray: 5, 5;fill:#ffa;stroke: #666;';\n\t};\n\t\n\t/**\n\t * Clears the internal graph db so that a new graph can be parsed.\n\t */\n\texports.addSubGraph = function (list, title) {\n\t    function uniq(a) {\n\t        var prims = { 'boolean': {}, 'number': {}, 'string': {} },\n\t            objs = [];\n\t\n\t        return a.filter(function (item) {\n\t            var type = typeof item;\n\t            if (item === ' ') {\n\t                return false;\n\t            }\n\t            if (type in prims) return prims[type].hasOwnProperty(item) ? false : prims[type][item] = true;else return objs.indexOf(item) >= 0 ? false : objs.push(item);\n\t        });\n\t    }\n\t\n\t    var nodeList = [];\n\t\n\t    nodeList = uniq(nodeList.concat.apply(nodeList, list));\n\t\n\t    var subGraph = { id: 'subGraph' + subCount, nodes: nodeList, title: title };\n\t    //log.debug('subGraph:' + subGraph.title + subGraph.id);\n\t    //log.debug(subGraph.nodes);\n\t    subGraphs.push(subGraph);\n\t    subCount = subCount + 1;\n\t    return subGraph.id;\n\t};\n\t\n\tvar getPosForId = function getPosForId(id) {\n\t    var i;\n\t    for (i = 0; i < subGraphs.length; i++) {\n\t        if (subGraphs[i].id === id) {\n\t            //log.debug('Found pos for ',id,' ',i);\n\t            return i;\n\t        }\n\t    }\n\t    //log.debug('No pos found for ',id,' ',i);\n\t    return -1;\n\t};\n\tvar secCount = -1;\n\tvar posCrossRef = [];\n\tvar indexNodes = function indexNodes(id, pos) {\n\t    var nodes = subGraphs[pos].nodes;\n\t    secCount = secCount + 1;\n\t    if (secCount > 2000) {\n\t        return;\n\t    }\n\t    //var nPos = getPosForId(subGraphs[pos].id);\n\t    posCrossRef[secCount] = pos;\n\t    // Check if match\n\t    if (subGraphs[pos].id === id) {\n\t        return {\n\t            result: true,\n\t            count: 0\n\t        };\n\t    }\n\t\n\t    var count = 0;\n\t    var posCount = 1;\n\t    while (count < nodes.length) {\n\t        var childPos = getPosForId(nodes[count]);\n\t        // Ignore regular nodes (pos will be -1)\n\t        if (childPos >= 0) {\n\t            var res = indexNodes(id, childPos);\n\t            if (res.result) {\n\t                return {\n\t                    result: true,\n\t                    count: posCount + res.count\n\t                };\n\t            } else {\n\t                posCount = posCount + res.count;\n\t            }\n\t        }\n\t        count = count + 1;\n\t    }\n\t\n\t    return {\n\t        result: false,\n\t        count: posCount\n\t    };\n\t};\n\t\n\texports.getDepthFirstPos = function (pos) {\n\t    return posCrossRef[pos];\n\t};\n\texports.indexNodes = function () {\n\t    secCount = -1;\n\t    if (subGraphs.length > 0) {\n\t        indexNodes('none', subGraphs.length - 1, 0);\n\t    }\n\t};\n\t\n\texports.getSubGraphs = function () {\n\t    return subGraphs;\n\t};\n\t\n\texports.parseError = function (err, hash) {\n\t    global.mermaidAPI.parseError(err, hash);\n\t};\n\t\n\t}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\t},{\"../../d3\":107,\"../../logger\":126}],117:[function(require,module,exports){\n\t(function (process){\n\t/* parser generated by jison 0.4.15 */\n\t/*\n\t  Returns a Parser object of the following structure:\n\t\n\t  Parser: {\n\t    yy: {}\n\t  }\n\t\n\t  Parser.prototype: {\n\t    yy: {},\n\t    trace: function(),\n\t    symbols_: {associative list: name ==> number},\n\t    terminals_: {associative list: number ==> name},\n\t    productions_: [...],\n\t    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n\t    table: [...],\n\t    defaultActions: {...},\n\t    parseError: function(str, hash),\n\t    parse: function(input),\n\t\n\t    lexer: {\n\t        EOF: 1,\n\t        parseError: function(str, hash),\n\t        setInput: function(input),\n\t        input: function(),\n\t        unput: function(str),\n\t        more: function(),\n\t        less: function(n),\n\t        pastInput: function(),\n\t        upcomingInput: function(),\n\t        showPosition: function(),\n\t        test_match: function(regex_match_array, rule_index),\n\t        next: function(),\n\t        lex: function(),\n\t        begin: function(condition),\n\t        popState: function(),\n\t        _currentRules: function(),\n\t        topState: function(),\n\t        pushState: function(condition),\n\t\n\t        options: {\n\t            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n\t            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n\t            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n\t        },\n\t\n\t        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n\t        rules: [...],\n\t        conditions: {associative list: name ==> set},\n\t    }\n\t  }\n\t\n\t\n\t  token location info (@$, _$, etc.): {\n\t    first_line: n,\n\t    last_line: n,\n\t    first_column: n,\n\t    last_column: n,\n\t    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n\t  }\n\t\n\t\n\t  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n\t    text:        (matched text)\n\t    token:       (the produced terminal token, if any)\n\t    line:        (yylineno)\n\t  }\n\t  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n\t    loc:         (yylloc)\n\t    expected:    (string describing the set of expected tokens)\n\t    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n\t  }\n\t*/\n\t\"use strict\";\n\t\n\tvar dot = (function () {\n\t    var o = function o(k, v, _o, l) {\n\t        for (_o = _o || {}, l = k.length; l--; _o[k[l]] = v);return _o;\n\t    },\n\t        $V0 = [1, 5],\n\t        $V1 = [1, 6],\n\t        $V2 = [1, 12],\n\t        $V3 = [1, 13],\n\t        $V4 = [1, 14],\n\t        $V5 = [1, 15],\n\t        $V6 = [1, 16],\n\t        $V7 = [1, 17],\n\t        $V8 = [1, 18],\n\t        $V9 = [1, 19],\n\t        $Va = [1, 20],\n\t        $Vb = [1, 21],\n\t        $Vc = [1, 22],\n\t        $Vd = [8, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26],\n\t        $Ve = [1, 37],\n\t        $Vf = [1, 33],\n\t        $Vg = [1, 34],\n\t        $Vh = [1, 35],\n\t        $Vi = [1, 36],\n\t        $Vj = [8, 10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 32, 37, 39, 40, 45, 57, 58],\n\t        $Vk = [10, 28],\n\t        $Vl = [10, 28, 37, 57, 58],\n\t        $Vm = [2, 49],\n\t        $Vn = [1, 45],\n\t        $Vo = [1, 48],\n\t        $Vp = [1, 49],\n\t        $Vq = [1, 52],\n\t        $Vr = [2, 65],\n\t        $Vs = [1, 65],\n\t        $Vt = [1, 66],\n\t        $Vu = [1, 67],\n\t        $Vv = [1, 68],\n\t        $Vw = [1, 69],\n\t        $Vx = [1, 70],\n\t        $Vy = [1, 71],\n\t        $Vz = [1, 72],\n\t        $VA = [1, 73],\n\t        $VB = [8, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 47],\n\t        $VC = [10, 28, 37];\n\t    var parser = { trace: function trace() {},\n\t        yy: {},\n\t        symbols_: { \"error\": 2, \"expressions\": 3, \"graph\": 4, \"EOF\": 5, \"graphStatement\": 6, \"idStatement\": 7, \"{\": 8, \"stmt_list\": 9, \"}\": 10, \"strict\": 11, \"GRAPH\": 12, \"DIGRAPH\": 13, \"textNoTags\": 14, \"textNoTagsToken\": 15, \"ALPHA\": 16, \"NUM\": 17, \"COLON\": 18, \"PLUS\": 19, \"EQUALS\": 20, \"MULT\": 21, \"DOT\": 22, \"BRKT\": 23, \"SPACE\": 24, \"MINUS\": 25, \"keywords\": 26, \"stmt\": 27, \";\": 28, \"node_stmt\": 29, \"edge_stmt\": 30, \"attr_stmt\": 31, \"=\": 32, \"subgraph\": 33, \"attr_list\": 34, \"NODE\": 35, \"EDGE\": 36, \"[\": 37, \"a_list\": 38, \"]\": 39, \",\": 40, \"edgeRHS\": 41, \"node_id\": 42, \"edgeop\": 43, \"port\": 44, \":\": 45, \"compass_pt\": 46, \"SUBGRAPH\": 47, \"n\": 48, \"ne\": 49, \"e\": 50, \"se\": 51, \"s\": 52, \"sw\": 53, \"w\": 54, \"nw\": 55, \"c\": 56, \"ARROW_POINT\": 57, \"ARROW_OPEN\": 58, \"$accept\": 0, \"$end\": 1 },\n\t        terminals_: { 2: \"error\", 5: \"EOF\", 8: \"{\", 10: \"}\", 11: \"strict\", 12: \"GRAPH\", 13: \"DIGRAPH\", 16: \"ALPHA\", 17: \"NUM\", 18: \"COLON\", 19: \"PLUS\", 20: \"EQUALS\", 21: \"MULT\", 22: \"DOT\", 23: \"BRKT\", 24: \"SPACE\", 25: \"MINUS\", 26: \"keywords\", 28: \";\", 32: \"=\", 35: \"NODE\", 36: \"EDGE\", 37: \"[\", 39: \"]\", 40: \",\", 45: \":\", 47: \"SUBGRAPH\", 48: \"n\", 49: \"ne\", 50: \"e\", 51: \"se\", 52: \"s\", 53: \"sw\", 54: \"w\", 55: \"nw\", 56: \"c\", 57: \"ARROW_POINT\", 58: \"ARROW_OPEN\" },\n\t        productions_: [0, [3, 2], [4, 5], [4, 6], [4, 4], [6, 1], [6, 1], [7, 1], [14, 1], [14, 2], [15, 1], [15, 1], [15, 1], [15, 1], [15, 1], [15, 1], [15, 1], [15, 1], [15, 1], [15, 1], [15, 1], [9, 1], [9, 3], [27, 1], [27, 1], [27, 1], [27, 3], [27, 1], [31, 2], [31, 2], [31, 2], [34, 4], [34, 3], [34, 3], [34, 2], [38, 5], [38, 5], [38, 3], [30, 3], [30, 3], [30, 2], [30, 2], [41, 3], [41, 3], [41, 2], [41, 2], [29, 2], [29, 1], [42, 2], [42, 1], [44, 4], [44, 2], [44, 2], [33, 5], [33, 4], [33, 3], [46, 1], [46, 1], [46, 1], [46, 1], [46, 1], [46, 1], [46, 1], [46, 1], [46, 1], [46, 0], [43, 1], [43, 1]],\n\t        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, /* action[1] */$$, /* vstack */_$ /* lstack */) {\n\t            /* this == yyval */\n\t\n\t            var $0 = $$.length - 1;\n\t            switch (yystate) {\n\t                case 1:\n\t                    this.$ = $$[$0 - 1];\n\t                    break;\n\t                case 2:\n\t                    this.$ = $$[$0 - 4];\n\t                    break;\n\t                case 3:\n\t                    this.$ = $$[$0 - 5];\n\t                    break;\n\t                case 4:\n\t                    this.$ = $$[$0 - 3];\n\t                    break;\n\t                case 8:case 10:case 11:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 9:\n\t                    this.$ = $$[$0 - 1] + '' + $$[$0];\n\t                    break;\n\t                case 12:case 13:case 14:case 15:case 16:case 18:case 19:case 20:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 17:\n\t                    this.$ = '<br>';\n\t                    break;\n\t                case 39:\n\t                    this.$ = 'oy';\n\t                    break;\n\t                case 40:\n\t\n\t                    yy.addLink($$[$0 - 1], $$[$0].id, $$[$0].op);\n\t                    this.$ = 'oy';\n\t                    break;\n\t                case 42:\n\t\n\t                    yy.addLink($$[$0 - 1], $$[$0].id, $$[$0].op);\n\t                    this.$ = { op: $$[$0 - 2], id: $$[$0 - 1] };\n\t\n\t                    break;\n\t                case 44:\n\t\n\t                    this.$ = { op: $$[$0 - 1], id: $$[$0] };\n\t\n\t                    break;\n\t                case 48:\n\t                    yy.addVertex($$[$0 - 1]);this.$ = $$[$0 - 1];\n\t                    break;\n\t                case 49:\n\t                    yy.addVertex($$[$0]);this.$ = $$[$0];\n\t                    break;\n\t                case 66:\n\t                    this.$ = 'arrow';\n\t                    break;\n\t                case 67:\n\t                    this.$ = 'arrow_open';\n\t                    break;\n\t            }\n\t        },\n\t        table: [{ 3: 1, 4: 2, 6: 3, 11: [1, 4], 12: $V0, 13: $V1 }, { 1: [3] }, { 5: [1, 7] }, { 7: 8, 8: [1, 9], 14: 10, 15: 11, 16: $V2, 17: $V3, 18: $V4, 19: $V5, 20: $V6, 21: $V7, 22: $V8, 23: $V9, 24: $Va, 25: $Vb, 26: $Vc }, { 6: 23, 12: $V0, 13: $V1 }, o($Vd, [2, 5]), o($Vd, [2, 6]), { 1: [2, 1] }, { 8: [1, 24] }, { 7: 30, 8: $Ve, 9: 25, 12: $Vf, 14: 10, 15: 11, 16: $V2, 17: $V3, 18: $V4, 19: $V5, 20: $V6, 21: $V7, 22: $V8, 23: $V9, 24: $Va, 25: $Vb, 26: $Vc, 27: 26, 29: 27, 30: 28, 31: 29, 33: 31, 35: $Vg, 36: $Vh, 42: 32, 47: $Vi }, o([8, 10, 28, 32, 37, 39, 40, 45, 57, 58], [2, 7], { 15: 38, 16: $V2, 17: $V3, 18: $V4, 19: $V5, 20: $V6, 21: $V7, 22: $V8, 23: $V9, 24: $Va, 25: $Vb, 26: $Vc }), o($Vj, [2, 8]), o($Vj, [2, 10]), o($Vj, [2, 11]), o($Vj, [2, 12]), o($Vj, [2, 13]), o($Vj, [2, 14]), o($Vj, [2, 15]), o($Vj, [2, 16]), o($Vj, [2, 17]), o($Vj, [2, 18]), o($Vj, [2, 19]), o($Vj, [2, 20]), { 7: 39, 14: 10, 15: 11, 16: $V2, 17: $V3, 18: $V4, 19: $V5, 20: $V6, 21: $V7, 22: $V8, 23: $V9, 24: $Va, 25: $Vb, 26: $Vc }, { 7: 30, 8: $Ve, 9: 40, 12: $Vf, 14: 10, 15: 11, 16: $V2, 17: $V3, 18: $V4, 19: $V5, 20: $V6, 21: $V7, 22: $V8, 23: $V9, 24: $Va, 25: $Vb, 26: $Vc, 27: 26, 29: 27, 30: 28, 31: 29, 33: 31, 35: $Vg, 36: $Vh, 42: 32, 47: $Vi }, { 10: [1, 41] }, { 10: [2, 21], 28: [1, 42] }, o($Vk, [2, 23]), o($Vk, [2, 24]), o($Vk, [2, 25]), o($Vl, $Vm, { 44: 44, 32: [1, 43], 45: $Vn }), o($Vk, [2, 27], { 41: 46, 43: 47, 57: $Vo, 58: $Vp }), o($Vk, [2, 47], { 43: 47, 34: 50, 41: 51, 37: $Vq, 57: $Vo, 58: $Vp }), { 34: 53, 37: $Vq }, { 34: 54, 37: $Vq }, { 34: 55, 37: $Vq }, { 7: 56, 8: [1, 57], 14: 10, 15: 11, 16: $V2, 17: $V3, 18: $V4, 19: $V5, 20: $V6, 21: $V7, 22: $V8, 23: $V9, 24: $Va, 25: $Vb, 26: $Vc }, { 7: 30, 8: $Ve, 9: 58, 12: $Vf, 14: 10, 15: 11, 16: $V2, 17: $V3, 18: $V4, 19: $V5, 20: $V6, 21: $V7, 22: $V8, 23: $V9, 24: $Va, 25: $Vb, 26: $Vc, 27: 26, 29: 27, 30: 28, 31: 29, 33: 31, 35: $Vg, 36: $Vh, 42: 32, 47: $Vi }, o($Vj, [2, 9]), { 8: [1, 59] }, { 10: [1, 60] }, { 5: [2, 4] }, { 7: 30, 8: $Ve, 9: 61, 12: $Vf, 14: 10, 15: 11, 16: $V2, 17: $V3, 18: $V4, 19: $V5, 20: $V6, 21: $V7, 22: $V8, 23: $V9, 24: $Va, 25: $Vb, 26: $Vc, 27: 26, 29: 27, 30: 28, 31: 29, 33: 31, 35: $Vg, 36: $Vh, 42: 32, 47: $Vi }, { 7: 62, 14: 10, 15: 11, 16: $V2, 17: $V3, 18: $V4, 19: $V5, 20: $V6, 21: $V7, 22: $V8, 23: $V9, 24: $Va, 25: $Vb, 26: $Vc }, o($Vl, [2, 48]), o($Vl, $Vr, { 14: 10, 15: 11, 7: 63, 46: 64, 16: $V2, 17: $V3, 18: $V4, 19: $V5, 20: $V6, 21: $V7, 22: $V8, 23: $V9, 24: $Va, 25: $Vb, 26: $Vc, 48: $Vs, 49: $Vt, 50: $Vu, 51: $Vv, 52: $Vw, 53: $Vx, 54: $Vy, 55: $Vz, 56: $VA }), o($Vk, [2, 41], { 34: 74, 37: $Vq }), { 7: 77, 8: $Ve, 14: 10, 15: 11, 16: $V2, 17: $V3, 18: $V4, 19: $V5, 20: $V6, 21: $V7, 22: $V8, 23: $V9, 24: $Va, 25: $Vb, 26: $Vc, 33: 76, 42: 75, 47: $Vi }, o($VB, [2, 66]), o($VB, [2, 67]), o($Vk, [2, 46]), o($Vk, [2, 40], { 34: 78, 37: $Vq }), { 7: 81, 14: 10, 15: 11, 16: $V2, 17: $V3, 18: $V4, 19: $V5, 20: $V6, 21: $V7, 22: $V8, 23: $V9, 24: $Va, 25: $Vb, 26: $Vc, 38: 79, 39: [1, 80] }, o($Vk, [2, 28]), o($Vk, [2, 29]), o($Vk, [2, 30]), { 8: [1, 82] }, { 7: 30, 8: $Ve, 9: 83, 12: $Vf, 14: 10, 15: 11, 16: $V2, 17: $V3, 18: $V4, 19: $V5, 20: $V6, 21: $V7, 22: $V8, 23: $V9, 24: $Va, 25: $Vb, 26: $Vc, 27: 26, 29: 27, 30: 28, 31: 29, 33: 31, 35: $Vg, 36: $Vh, 42: 32, 47: $Vi }, { 10: [1, 84] }, { 7: 30, 8: $Ve, 9: 85, 12: $Vf, 14: 10, 15: 11, 16: $V2, 17: $V3, 18: $V4, 19: $V5, 20: $V6, 21: $V7, 22: $V8, 23: $V9, 24: $Va, 25: $Vb, 26: $Vc, 27: 26, 29: 27, 30: 28, 31: 29, 33: 31, 35: $Vg, 36: $Vh, 42: 32, 47: $Vi }, { 5: [2, 2] }, { 10: [2, 22] }, o($Vk, [2, 26]), o($Vl, [2, 51], { 45: [1, 86] }), o($Vl, [2, 52]), o($Vl, [2, 56]), o($Vl, [2, 57]), o($Vl, [2, 58]), o($Vl, [2, 59]), o($Vl, [2, 60]), o($Vl, [2, 61]), o($Vl, [2, 62]), o($Vl, [2, 63]), o($Vl, [2, 64]), o($Vk, [2, 38]), o($VC, [2, 44], { 43: 47, 41: 87, 57: $Vo, 58: $Vp }), o($VC, [2, 45], { 43: 47, 41: 88, 57: $Vo, 58: $Vp }), o($Vl, $Vm, { 44: 44, 45: $Vn }), o($Vk, [2, 39]), { 39: [1, 89] }, o($Vk, [2, 34], { 34: 90, 37: $Vq }), { 32: [1, 91] }, { 7: 30, 8: $Ve, 9: 92, 12: $Vf, 14: 10, 15: 11, 16: $V2, 17: $V3, 18: $V4, 19: $V5, 20: $V6, 21: $V7, 22: $V8, 23: $V9, 24: $Va, 25: $Vb, 26: $Vc, 27: 26, 29: 27, 30: 28, 31: 29, 33: 31, 35: $Vg, 36: $Vh, 42: 32, 47: $Vi }, { 10: [1, 93] }, o($Vl, [2, 55]), { 10: [1, 94] }, o($Vl, $Vr, { 46: 95, 48: $Vs, 49: $Vt, 50: $Vu, 51: $Vv, 52: $Vw, 53: $Vx, 54: $Vy, 55: $Vz, 56: $VA }), o($VC, [2, 42]), o($VC, [2, 43]), o($Vk, [2, 33], { 34: 96, 37: $Vq }), o($Vk, [2, 32]), { 7: 97, 14: 10, 15: 11, 16: $V2, 17: $V3, 18: $V4, 19: $V5, 20: $V6, 21: $V7, 22: $V8, 23: $V9, 24: $Va, 25: $Vb, 26: $Vc }, { 10: [1, 98] }, o($Vl, [2, 54]), { 5: [2, 3] }, o($Vl, [2, 50]), o($Vk, [2, 31]), { 28: [1, 99], 39: [2, 37], 40: [1, 100] }, o($Vl, [2, 53]), { 7: 81, 14: 10, 15: 11, 16: $V2, 17: $V3, 18: $V4, 19: $V5, 20: $V6, 21: $V7, 22: $V8, 23: $V9, 24: $Va, 25: $Vb, 26: $Vc, 38: 101 }, { 7: 81, 14: 10, 15: 11, 16: $V2, 17: $V3, 18: $V4, 19: $V5, 20: $V6, 21: $V7, 22: $V8, 23: $V9, 24: $Va, 25: $Vb, 26: $Vc, 38: 102 }, { 39: [2, 35] }, { 39: [2, 36] }],\n\t        defaultActions: { 7: [2, 1], 41: [2, 4], 60: [2, 2], 61: [2, 22], 94: [2, 3], 101: [2, 35], 102: [2, 36] },\n\t        parseError: function parseError(str, hash) {\n\t            if (hash.recoverable) {\n\t                this.trace(str);\n\t            } else {\n\t                var _parseError = function _parseError(msg, hash) {\n\t                    this.message = msg;\n\t                    this.hash = hash;\n\t                };\n\t\n\t                _parseError.prototype = new Error();\n\t\n\t                throw new _parseError(str, hash);\n\t            }\n\t        },\n\t        parse: function parse(input) {\n\t            var self = this,\n\t                stack = [0],\n\t                tstack = [],\n\t                vstack = [null],\n\t                lstack = [],\n\t                table = this.table,\n\t                yytext = '',\n\t                yylineno = 0,\n\t                yyleng = 0,\n\t                recovering = 0,\n\t                TERROR = 2,\n\t                EOF = 1;\n\t            var args = lstack.slice.call(arguments, 1);\n\t            var lexer = Object.create(this.lexer);\n\t            var sharedState = { yy: {} };\n\t            for (var k in this.yy) {\n\t                if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n\t                    sharedState.yy[k] = this.yy[k];\n\t                }\n\t            }\n\t            lexer.setInput(input, sharedState.yy);\n\t            sharedState.yy.lexer = lexer;\n\t            sharedState.yy.parser = this;\n\t            if (typeof lexer.yylloc == 'undefined') {\n\t                lexer.yylloc = {};\n\t            }\n\t            var yyloc = lexer.yylloc;\n\t            lstack.push(yyloc);\n\t            var ranges = lexer.options && lexer.options.ranges;\n\t            if (typeof sharedState.yy.parseError === 'function') {\n\t                this.parseError = sharedState.yy.parseError;\n\t            } else {\n\t                this.parseError = Object.getPrototypeOf(this).parseError;\n\t            }\n\t            function popStack(n) {\n\t                stack.length = stack.length - 2 * n;\n\t                vstack.length = vstack.length - n;\n\t                lstack.length = lstack.length - n;\n\t            }\n\t            _token_stack: var lex = function lex() {\n\t                var token;\n\t                token = lexer.lex() || EOF;\n\t                if (typeof token !== 'number') {\n\t                    token = self.symbols_[token] || token;\n\t                }\n\t                return token;\n\t            };\n\t            var symbol,\n\t                preErrorSymbol,\n\t                state,\n\t                action,\n\t                a,\n\t                r,\n\t                yyval = {},\n\t                p,\n\t                len,\n\t                newState,\n\t                expected;\n\t            while (true) {\n\t                state = stack[stack.length - 1];\n\t                if (this.defaultActions[state]) {\n\t                    action = this.defaultActions[state];\n\t                } else {\n\t                    if (symbol === null || typeof symbol == 'undefined') {\n\t                        symbol = lex();\n\t                    }\n\t                    action = table[state] && table[state][symbol];\n\t                }\n\t                if (typeof action === 'undefined' || !action.length || !action[0]) {\n\t                    var errStr = '';\n\t                    expected = [];\n\t                    for (p in table[state]) {\n\t                        if (this.terminals_[p] && p > TERROR) {\n\t                            expected.push('\\'' + this.terminals_[p] + '\\'');\n\t                        }\n\t                    }\n\t                    if (lexer.showPosition) {\n\t                        errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n\t                    } else {\n\t                        errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n\t                    }\n\t                    this.parseError(errStr, {\n\t                        text: lexer.match,\n\t                        token: this.terminals_[symbol] || symbol,\n\t                        line: lexer.yylineno,\n\t                        loc: yyloc,\n\t                        expected: expected\n\t                    });\n\t                }\n\t                if (action[0] instanceof Array && action.length > 1) {\n\t                    throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n\t                }\n\t                switch (action[0]) {\n\t                    case 1:\n\t                        stack.push(symbol);\n\t                        vstack.push(lexer.yytext);\n\t                        lstack.push(lexer.yylloc);\n\t                        stack.push(action[1]);\n\t                        symbol = null;\n\t                        if (!preErrorSymbol) {\n\t                            yyleng = lexer.yyleng;\n\t                            yytext = lexer.yytext;\n\t                            yylineno = lexer.yylineno;\n\t                            yyloc = lexer.yylloc;\n\t                            if (recovering > 0) {\n\t                                recovering--;\n\t                            }\n\t                        } else {\n\t                            symbol = preErrorSymbol;\n\t                            preErrorSymbol = null;\n\t                        }\n\t                        break;\n\t                    case 2:\n\t                        len = this.productions_[action[1]][1];\n\t                        yyval.$ = vstack[vstack.length - len];\n\t                        yyval._$ = {\n\t                            first_line: lstack[lstack.length - (len || 1)].first_line,\n\t                            last_line: lstack[lstack.length - 1].last_line,\n\t                            first_column: lstack[lstack.length - (len || 1)].first_column,\n\t                            last_column: lstack[lstack.length - 1].last_column\n\t                        };\n\t                        if (ranges) {\n\t                            yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\n\t                        }\n\t                        r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\n\t                        if (typeof r !== 'undefined') {\n\t                            return r;\n\t                        }\n\t                        if (len) {\n\t                            stack = stack.slice(0, -1 * len * 2);\n\t                            vstack = vstack.slice(0, -1 * len);\n\t                            lstack = lstack.slice(0, -1 * len);\n\t                        }\n\t                        stack.push(this.productions_[action[1]][0]);\n\t                        vstack.push(yyval.$);\n\t                        lstack.push(yyval._$);\n\t                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n\t                        stack.push(newState);\n\t                        break;\n\t                    case 3:\n\t                        return true;\n\t                }\n\t            }\n\t            return true;\n\t        } };\n\t\n\t    /* generated by jison-lex 0.3.4 */\n\t    var lexer = (function () {\n\t        var lexer = {\n\t\n\t            EOF: 1,\n\t\n\t            parseError: function parseError(str, hash) {\n\t                if (this.yy.parser) {\n\t                    this.yy.parser.parseError(str, hash);\n\t                } else {\n\t                    throw new Error(str);\n\t                }\n\t            },\n\t\n\t            // resets the lexer, sets new input\n\t            setInput: function setInput(input, yy) {\n\t                this.yy = yy || this.yy || {};\n\t                this._input = input;\n\t                this._more = this._backtrack = this.done = false;\n\t                this.yylineno = this.yyleng = 0;\n\t                this.yytext = this.matched = this.match = '';\n\t                this.conditionStack = ['INITIAL'];\n\t                this.yylloc = {\n\t                    first_line: 1,\n\t                    first_column: 0,\n\t                    last_line: 1,\n\t                    last_column: 0\n\t                };\n\t                if (this.options.ranges) {\n\t                    this.yylloc.range = [0, 0];\n\t                }\n\t                this.offset = 0;\n\t                return this;\n\t            },\n\t\n\t            // consumes and returns one char from the input\n\t            input: function input() {\n\t                var ch = this._input[0];\n\t                this.yytext += ch;\n\t                this.yyleng++;\n\t                this.offset++;\n\t                this.match += ch;\n\t                this.matched += ch;\n\t                var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n\t                if (lines) {\n\t                    this.yylineno++;\n\t                    this.yylloc.last_line++;\n\t                } else {\n\t                    this.yylloc.last_column++;\n\t                }\n\t                if (this.options.ranges) {\n\t                    this.yylloc.range[1]++;\n\t                }\n\t\n\t                this._input = this._input.slice(1);\n\t                return ch;\n\t            },\n\t\n\t            // unshifts one char (or a string) into the input\n\t            unput: function unput(ch) {\n\t                var len = ch.length;\n\t                var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\t\n\t                this._input = ch + this._input;\n\t                this.yytext = this.yytext.substr(0, this.yytext.length - len);\n\t                //this.yyleng -= len;\n\t                this.offset -= len;\n\t                var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n\t                this.match = this.match.substr(0, this.match.length - 1);\n\t                this.matched = this.matched.substr(0, this.matched.length - 1);\n\t\n\t                if (lines.length - 1) {\n\t                    this.yylineno -= lines.length - 1;\n\t                }\n\t                var r = this.yylloc.range;\n\t\n\t                this.yylloc = {\n\t                    first_line: this.yylloc.first_line,\n\t                    last_line: this.yylineno + 1,\n\t                    first_column: this.yylloc.first_column,\n\t                    last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n\t                };\n\t\n\t                if (this.options.ranges) {\n\t                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n\t                }\n\t                this.yyleng = this.yytext.length;\n\t                return this;\n\t            },\n\t\n\t            // When called from action, caches matched text and appends it on next action\n\t            more: function more() {\n\t                this._more = true;\n\t                return this;\n\t            },\n\t\n\t            // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\n\t            reject: function reject() {\n\t                if (this.options.backtrack_lexer) {\n\t                    this._backtrack = true;\n\t                } else {\n\t                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n\t                        text: \"\",\n\t                        token: null,\n\t                        line: this.yylineno\n\t                    });\n\t                }\n\t                return this;\n\t            },\n\t\n\t            // retain first n characters of the match\n\t            less: function less(n) {\n\t                this.unput(this.match.slice(n));\n\t            },\n\t\n\t            // displays already matched input, i.e. for error messages\n\t            pastInput: function pastInput() {\n\t                var past = this.matched.substr(0, this.matched.length - this.match.length);\n\t                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\\n/g, \"\");\n\t            },\n\t\n\t            // displays upcoming input, i.e. for error messages\n\t            upcomingInput: function upcomingInput() {\n\t                var next = this.match;\n\t                if (next.length < 20) {\n\t                    next += this._input.substr(0, 20 - next.length);\n\t                }\n\t                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n\t            },\n\t\n\t            // displays the character position where the lexing error occurred, i.e. for error messages\n\t            showPosition: function showPosition() {\n\t                var pre = this.pastInput();\n\t                var c = new Array(pre.length + 1).join(\"-\");\n\t                return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n\t            },\n\t\n\t            // test the lexed token: return FALSE when not a match, otherwise return token\n\t            test_match: function test_match(match, indexed_rule) {\n\t                var token, lines, backup;\n\t\n\t                if (this.options.backtrack_lexer) {\n\t                    // save context\n\t                    backup = {\n\t                        yylineno: this.yylineno,\n\t                        yylloc: {\n\t                            first_line: this.yylloc.first_line,\n\t                            last_line: this.last_line,\n\t                            first_column: this.yylloc.first_column,\n\t                            last_column: this.yylloc.last_column\n\t                        },\n\t                        yytext: this.yytext,\n\t                        match: this.match,\n\t                        matches: this.matches,\n\t                        matched: this.matched,\n\t                        yyleng: this.yyleng,\n\t                        offset: this.offset,\n\t                        _more: this._more,\n\t                        _input: this._input,\n\t                        yy: this.yy,\n\t                        conditionStack: this.conditionStack.slice(0),\n\t                        done: this.done\n\t                    };\n\t                    if (this.options.ranges) {\n\t                        backup.yylloc.range = this.yylloc.range.slice(0);\n\t                    }\n\t                }\n\t\n\t                lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n\t                if (lines) {\n\t                    this.yylineno += lines.length;\n\t                }\n\t                this.yylloc = {\n\t                    first_line: this.yylloc.last_line,\n\t                    last_line: this.yylineno + 1,\n\t                    first_column: this.yylloc.last_column,\n\t                    last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\n\t                };\n\t                this.yytext += match[0];\n\t                this.match += match[0];\n\t                this.matches = match;\n\t                this.yyleng = this.yytext.length;\n\t                if (this.options.ranges) {\n\t                    this.yylloc.range = [this.offset, this.offset += this.yyleng];\n\t                }\n\t                this._more = false;\n\t                this._backtrack = false;\n\t                this._input = this._input.slice(match[0].length);\n\t                this.matched += match[0];\n\t                token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n\t                if (this.done && this._input) {\n\t                    this.done = false;\n\t                }\n\t                if (token) {\n\t                    return token;\n\t                } else if (this._backtrack) {\n\t                    // recover context\n\t                    for (var k in backup) {\n\t                        this[k] = backup[k];\n\t                    }\n\t                    return false; // rule action called reject() implying the next rule should be tested instead.\n\t                }\n\t                return false;\n\t            },\n\t\n\t            // return next match in input\n\t            next: function next() {\n\t                if (this.done) {\n\t                    return this.EOF;\n\t                }\n\t                if (!this._input) {\n\t                    this.done = true;\n\t                }\n\t\n\t                var token, match, tempMatch, index;\n\t                if (!this._more) {\n\t                    this.yytext = '';\n\t                    this.match = '';\n\t                }\n\t                var rules = this._currentRules();\n\t                for (var i = 0; i < rules.length; i++) {\n\t                    tempMatch = this._input.match(this.rules[rules[i]]);\n\t                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n\t                        match = tempMatch;\n\t                        index = i;\n\t                        if (this.options.backtrack_lexer) {\n\t                            token = this.test_match(tempMatch, rules[i]);\n\t                            if (token !== false) {\n\t                                return token;\n\t                            } else if (this._backtrack) {\n\t                                match = false;\n\t                                continue; // rule action called reject() implying a rule MISmatch.\n\t                            } else {\n\t                                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n\t                                    return false;\n\t                                }\n\t                        } else if (!this.options.flex) {\n\t                            break;\n\t                        }\n\t                    }\n\t                }\n\t                if (match) {\n\t                    token = this.test_match(match, rules[index]);\n\t                    if (token !== false) {\n\t                        return token;\n\t                    }\n\t                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n\t                    return false;\n\t                }\n\t                if (this._input === \"\") {\n\t                    return this.EOF;\n\t                } else {\n\t                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n\t                        text: \"\",\n\t                        token: null,\n\t                        line: this.yylineno\n\t                    });\n\t                }\n\t            },\n\t\n\t            // return next match that has a token\n\t            lex: function lex() {\n\t                var r = this.next();\n\t                if (r) {\n\t                    return r;\n\t                } else {\n\t                    return this.lex();\n\t                }\n\t            },\n\t\n\t            // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\n\t            begin: function begin(condition) {\n\t                this.conditionStack.push(condition);\n\t            },\n\t\n\t            // pop the previously active lexer condition state off the condition stack\n\t            popState: function popState() {\n\t                var n = this.conditionStack.length - 1;\n\t                if (n > 0) {\n\t                    return this.conditionStack.pop();\n\t                } else {\n\t                    return this.conditionStack[0];\n\t                }\n\t            },\n\t\n\t            // produce the lexer rule set which is active for the currently active lexer condition state\n\t            _currentRules: function _currentRules() {\n\t                if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n\t                    return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n\t                } else {\n\t                    return this.conditions[\"INITIAL\"].rules;\n\t                }\n\t            },\n\t\n\t            // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\n\t            topState: function topState(n) {\n\t                n = this.conditionStack.length - 1 - Math.abs(n || 0);\n\t                if (n >= 0) {\n\t                    return this.conditionStack[n];\n\t                } else {\n\t                    return \"INITIAL\";\n\t                }\n\t            },\n\t\n\t            // alias for begin(condition)\n\t            pushState: function pushState(condition) {\n\t                this.begin(condition);\n\t            },\n\t\n\t            // return the number of states currently on the stack\n\t            stateStackSize: function stateStackSize() {\n\t                return this.conditionStack.length;\n\t            },\n\t            options: {},\n\t            performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n\t                var YYSTATE = YY_START;\n\t                switch ($avoiding_name_collisions) {\n\t                    case 0:\n\t                        return 'STYLE';\n\t                        break;\n\t                    case 1:\n\t                        return 'LINKSTYLE';\n\t                        break;\n\t                    case 2:\n\t                        return 'CLASSDEF';\n\t                        break;\n\t                    case 3:\n\t                        return 'CLASS';\n\t                        break;\n\t                    case 4:\n\t                        return 'CLICK';\n\t                        break;\n\t                    case 5:\n\t                        return 12;\n\t                        break;\n\t                    case 6:\n\t                        return 13;\n\t                        break;\n\t                    case 7:\n\t                        return 47;\n\t                        break;\n\t                    case 8:\n\t                        return 35;\n\t                        break;\n\t                    case 9:\n\t                        return 36;\n\t                        break;\n\t                    case 10:\n\t                        return 'DIR';\n\t                        break;\n\t                    case 11:\n\t                        return 'DIR';\n\t                        break;\n\t                    case 12:\n\t                        return 'DIR';\n\t                        break;\n\t                    case 13:\n\t                        return 'DIR';\n\t                        break;\n\t                    case 14:\n\t                        return 'DIR';\n\t                        break;\n\t                    case 15:\n\t                        return 'DIR';\n\t                        break;\n\t                    case 16:\n\t                        return 17;\n\t                        break;\n\t                    case 17:\n\t                        return 23;\n\t                        break;\n\t                    case 18:\n\t                        return 18;\n\t                        break;\n\t                    case 19:\n\t                        return 28;\n\t                        break;\n\t                    case 20:\n\t                        return 40;\n\t                        break;\n\t                    case 21:\n\t                        return 32;\n\t                        break;\n\t                    case 22:\n\t                        return 21;\n\t                        break;\n\t                    case 23:\n\t                        return 22;\n\t                        break;\n\t                    case 24:\n\t                        return 'ARROW_CROSS';\n\t                        break;\n\t                    case 25:\n\t                        return 57;\n\t                        break;\n\t                    case 26:\n\t                        return 'ARROW_CIRCLE';\n\t                        break;\n\t                    case 27:\n\t                        return 58;\n\t                        break;\n\t                    case 28:\n\t                        return 25;\n\t                        break;\n\t                    case 29:\n\t                        return 19;\n\t                        break;\n\t                    case 30:\n\t                        return 20;\n\t                        break;\n\t                    case 31:\n\t                        return 16;\n\t                        break;\n\t                    case 32:\n\t                        return 'PIPE';\n\t                        break;\n\t                    case 33:\n\t                        return 'PS';\n\t                        break;\n\t                    case 34:\n\t                        return 'PE';\n\t                        break;\n\t                    case 35:\n\t                        return 37;\n\t                        break;\n\t                    case 36:\n\t                        return 39;\n\t                        break;\n\t                    case 37:\n\t                        return 8;\n\t                        break;\n\t                    case 38:\n\t                        return 10;\n\t                        break;\n\t                    case 39:\n\t                        return 'QUOTE';\n\t                        break;\n\t                    case 40:\n\t                        return 24;\n\t                        break;\n\t                    case 41:\n\t                        return 'NEWLINE';\n\t                        break;\n\t                    case 42:\n\t                        return 5;\n\t                        break;\n\t                }\n\t            },\n\t            rules: [/^(?:style\\b)/, /^(?:linkStyle\\b)/, /^(?:classDef\\b)/, /^(?:class\\b)/, /^(?:click\\b)/, /^(?:graph\\b)/, /^(?:digraph\\b)/, /^(?:subgraph\\b)/, /^(?:node\\b)/, /^(?:edge\\b)/, /^(?:LR\\b)/, /^(?:RL\\b)/, /^(?:TB\\b)/, /^(?:BT\\b)/, /^(?:TD\\b)/, /^(?:BR\\b)/, /^(?:[0-9])/, /^(?:#)/, /^(?::)/, /^(?:;)/, /^(?:,)/, /^(?:=)/, /^(?:\\*)/, /^(?:\\.)/, /^(?:--[x])/, /^(?:->)/, /^(?:--[o])/, /^(?:--)/, /^(?:-)/, /^(?:\\+)/, /^(?:=)/, /^(?:[\\u0021-\\u0027\\u002A-\\u002E\\u003F\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6]|[\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377]|[\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5]|[\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA]|[\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE]|[\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA]|[\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0]|[\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977]|[\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2]|[\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A]|[\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39]|[\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8]|[\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C]|[\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C]|[\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99]|[\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0]|[\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D]|[\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3]|[\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10]|[\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1]|[\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81]|[\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3]|[\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6]|[\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A]|[\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081]|[\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D]|[\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0]|[\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310]|[\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C]|[\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711]|[\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7]|[\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C]|[\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16]|[\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF]|[\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC]|[\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D]|[\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D]|[\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3]|[\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F]|[\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128]|[\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184]|[\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3]|[\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6]|[\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE]|[\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C]|[\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D]|[\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC]|[\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B]|[\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788]|[\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805]|[\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB]|[\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28]|[\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5]|[\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4]|[\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E]|[\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D]|[\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36]|[\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D]|[\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC]|[\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF]|[\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC_])/, /^(?:\\|)/, /^(?:\\()/, /^(?:\\))/, /^(?:\\[)/, /^(?:\\])/, /^(?:\\{)/, /^(?:\\})/, /^(?:\")/, /^(?:\\s)/, /^(?:\\n)/, /^(?:$)/],\n\t            conditions: { \"INITIAL\": { \"rules\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], \"inclusive\": true } }\n\t        };\n\t        return lexer;\n\t    })();\n\t    parser.lexer = lexer;\n\t    function Parser() {\n\t        this.yy = {};\n\t    }\n\t    Parser.prototype = parser;parser.Parser = Parser;\n\t    return new Parser();\n\t})();\n\t\n\tif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\n\t    exports.parser = dot;\n\t    exports.Parser = dot.Parser;\n\t    exports.parse = function () {\n\t        return dot.parse.apply(dot, arguments);\n\t    };\n\t    exports.main = function commonjsMain(args) {\n\t        if (!args[1]) {\n\t            console.log('Usage: ' + args[0] + ' FILE');\n\t            process.exit(1);\n\t        }\n\t        var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n\t        return exports.parser.parse(source);\n\t    };\n\t    if (typeof module !== 'undefined' && require.main === module) {\n\t        exports.main(process.argv.slice(1));\n\t    }\n\t}\n\t\n\t}).call(this,require('_process'))\n\t},{\"_process\":3,\"fs\":1,\"path\":2}],118:[function(require,module,exports){\n\t(function (process){\n\t/* parser generated by jison 0.4.15 */\n\t/*\n\t  Returns a Parser object of the following structure:\n\t\n\t  Parser: {\n\t    yy: {}\n\t  }\n\t\n\t  Parser.prototype: {\n\t    yy: {},\n\t    trace: function(),\n\t    symbols_: {associative list: name ==> number},\n\t    terminals_: {associative list: number ==> name},\n\t    productions_: [...],\n\t    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n\t    table: [...],\n\t    defaultActions: {...},\n\t    parseError: function(str, hash),\n\t    parse: function(input),\n\t\n\t    lexer: {\n\t        EOF: 1,\n\t        parseError: function(str, hash),\n\t        setInput: function(input),\n\t        input: function(),\n\t        unput: function(str),\n\t        more: function(),\n\t        less: function(n),\n\t        pastInput: function(),\n\t        upcomingInput: function(),\n\t        showPosition: function(),\n\t        test_match: function(regex_match_array, rule_index),\n\t        next: function(),\n\t        lex: function(),\n\t        begin: function(condition),\n\t        popState: function(),\n\t        _currentRules: function(),\n\t        topState: function(),\n\t        pushState: function(condition),\n\t\n\t        options: {\n\t            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n\t            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n\t            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n\t        },\n\t\n\t        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n\t        rules: [...],\n\t        conditions: {associative list: name ==> set},\n\t    }\n\t  }\n\t\n\t\n\t  token location info (@$, _$, etc.): {\n\t    first_line: n,\n\t    last_line: n,\n\t    first_column: n,\n\t    last_column: n,\n\t    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n\t  }\n\t\n\t\n\t  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n\t    text:        (matched text)\n\t    token:       (the produced terminal token, if any)\n\t    line:        (yylineno)\n\t  }\n\t  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n\t    loc:         (yylloc)\n\t    expected:    (string describing the set of expected tokens)\n\t    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n\t  }\n\t*/\n\t\"use strict\";\n\t\n\tvar flow = (function () {\n\t    var o = function o(k, v, _o, l) {\n\t        for (_o = _o || {}, l = k.length; l--; _o[k[l]] = v);return _o;\n\t    },\n\t        $V0 = [1, 4],\n\t        $V1 = [1, 3],\n\t        $V2 = [1, 5],\n\t        $V3 = [1, 8, 9, 10, 11, 13, 18, 30, 46, 71, 72, 73, 74, 75, 81, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97],\n\t        $V4 = [2, 2],\n\t        $V5 = [1, 12],\n\t        $V6 = [1, 13],\n\t        $V7 = [1, 14],\n\t        $V8 = [1, 15],\n\t        $V9 = [1, 31],\n\t        $Va = [1, 33],\n\t        $Vb = [1, 22],\n\t        $Vc = [1, 34],\n\t        $Vd = [1, 24],\n\t        $Ve = [1, 25],\n\t        $Vf = [1, 26],\n\t        $Vg = [1, 27],\n\t        $Vh = [1, 28],\n\t        $Vi = [1, 38],\n\t        $Vj = [1, 40],\n\t        $Vk = [1, 35],\n\t        $Vl = [1, 39],\n\t        $Vm = [1, 45],\n\t        $Vn = [1, 44],\n\t        $Vo = [1, 36],\n\t        $Vp = [1, 37],\n\t        $Vq = [1, 41],\n\t        $Vr = [1, 42],\n\t        $Vs = [1, 43],\n\t        $Vt = [1, 8, 9, 10, 11, 13, 18, 30, 32, 46, 71, 72, 73, 74, 75, 81, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97],\n\t        $Vu = [1, 53],\n\t        $Vv = [1, 52],\n\t        $Vw = [1, 54],\n\t        $Vx = [1, 72],\n\t        $Vy = [1, 80],\n\t        $Vz = [1, 81],\n\t        $VA = [1, 66],\n\t        $VB = [1, 65],\n\t        $VC = [1, 85],\n\t        $VD = [1, 84],\n\t        $VE = [1, 82],\n\t        $VF = [1, 83],\n\t        $VG = [1, 73],\n\t        $VH = [1, 68],\n\t        $VI = [1, 67],\n\t        $VJ = [1, 63],\n\t        $VK = [1, 75],\n\t        $VL = [1, 76],\n\t        $VM = [1, 77],\n\t        $VN = [1, 78],\n\t        $VO = [1, 79],\n\t        $VP = [1, 70],\n\t        $VQ = [1, 69],\n\t        $VR = [8, 9, 11],\n\t        $VS = [8, 9, 11, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64],\n\t        $VT = [1, 115],\n\t        $VU = [8, 9, 10, 11, 13, 15, 18, 36, 38, 40, 42, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 81, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97],\n\t        $VV = [8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 30, 32, 36, 37, 38, 39, 40, 41, 42, 43, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 71, 72, 73, 74, 75, 78, 81, 83, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97],\n\t        $VW = [1, 117],\n\t        $VX = [1, 118],\n\t        $VY = [8, 9, 10, 11, 13, 18, 30, 32, 46, 71, 72, 73, 74, 75, 81, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97],\n\t        $VZ = [8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 30, 32, 37, 39, 41, 43, 46, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 71, 72, 73, 74, 75, 78, 81, 83, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97],\n\t        $V_ = [13, 18, 46, 81, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97],\n\t        $V$ = [13, 18, 46, 49, 65, 81, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97],\n\t        $V01 = [1, 191],\n\t        $V11 = [1, 188],\n\t        $V21 = [1, 195],\n\t        $V31 = [1, 192],\n\t        $V41 = [1, 189],\n\t        $V51 = [1, 196],\n\t        $V61 = [1, 186],\n\t        $V71 = [1, 187],\n\t        $V81 = [1, 190],\n\t        $V91 = [1, 193],\n\t        $Va1 = [1, 194],\n\t        $Vb1 = [1, 211],\n\t        $Vc1 = [8, 9, 11, 85],\n\t        $Vd1 = [8, 9, 10, 11, 46, 71, 80, 81, 83, 85, 87, 88, 89, 90, 91];\n\t    var parser = { trace: function trace() {},\n\t        yy: {},\n\t        symbols_: { \"error\": 2, \"mermaidDoc\": 3, \"graphConfig\": 4, \"document\": 5, \"line\": 6, \"statement\": 7, \"SEMI\": 8, \"NEWLINE\": 9, \"SPACE\": 10, \"EOF\": 11, \"GRAPH\": 12, \"DIR\": 13, \"FirstStmtSeperator\": 14, \"TAGEND\": 15, \"TAGSTART\": 16, \"UP\": 17, \"DOWN\": 18, \"ending\": 19, \"endToken\": 20, \"spaceList\": 21, \"spaceListNewline\": 22, \"verticeStatement\": 23, \"separator\": 24, \"styleStatement\": 25, \"linkStyleStatement\": 26, \"classDefStatement\": 27, \"classStatement\": 28, \"clickStatement\": 29, \"subgraph\": 30, \"text\": 31, \"end\": 32, \"vertex\": 33, \"link\": 34, \"alphaNum\": 35, \"SQS\": 36, \"SQE\": 37, \"PS\": 38, \"PE\": 39, \"(-\": 40, \"-)\": 41, \"DIAMOND_START\": 42, \"DIAMOND_STOP\": 43, \"alphaNumStatement\": 44, \"alphaNumToken\": 45, \"MINUS\": 46, \"linkStatement\": 47, \"arrowText\": 48, \"TESTSTR\": 49, \"--\": 50, \"ARROW_POINT\": 51, \"ARROW_CIRCLE\": 52, \"ARROW_CROSS\": 53, \"ARROW_OPEN\": 54, \"-.\": 55, \"DOTTED_ARROW_POINT\": 56, \"DOTTED_ARROW_CIRCLE\": 57, \"DOTTED_ARROW_CROSS\": 58, \"DOTTED_ARROW_OPEN\": 59, \"==\": 60, \"THICK_ARROW_POINT\": 61, \"THICK_ARROW_CIRCLE\": 62, \"THICK_ARROW_CROSS\": 63, \"THICK_ARROW_OPEN\": 64, \"PIPE\": 65, \"textToken\": 66, \"STR\": 67, \"commentText\": 68, \"commentToken\": 69, \"keywords\": 70, \"STYLE\": 71, \"LINKSTYLE\": 72, \"CLASSDEF\": 73, \"CLASS\": 74, \"CLICK\": 75, \"textNoTags\": 76, \"textNoTagsToken\": 77, \"DEFAULT\": 78, \"stylesOpt\": 79, \"HEX\": 80, \"NUM\": 81, \"commentStatement\": 82, \"PCT\": 83, \"style\": 84, \"COMMA\": 85, \"styleComponent\": 86, \"ALPHA\": 87, \"COLON\": 88, \"UNIT\": 89, \"BRKT\": 90, \"DOT\": 91, \"graphCodeTokens\": 92, \"PUNCTUATION\": 93, \"UNICODE_TEXT\": 94, \"PLUS\": 95, \"EQUALS\": 96, \"MULT\": 97, \"TAG_START\": 98, \"TAG_END\": 99, \"QUOTE\": 100, \"$accept\": 0, \"$end\": 1 },\n\t        terminals_: { 2: \"error\", 8: \"SEMI\", 9: \"NEWLINE\", 10: \"SPACE\", 11: \"EOF\", 12: \"GRAPH\", 13: \"DIR\", 15: \"TAGEND\", 16: \"TAGSTART\", 17: \"UP\", 18: \"DOWN\", 30: \"subgraph\", 32: \"end\", 36: \"SQS\", 37: \"SQE\", 38: \"PS\", 39: \"PE\", 40: \"(-\", 41: \"-)\", 42: \"DIAMOND_START\", 43: \"DIAMOND_STOP\", 46: \"MINUS\", 49: \"TESTSTR\", 50: \"--\", 51: \"ARROW_POINT\", 52: \"ARROW_CIRCLE\", 53: \"ARROW_CROSS\", 54: \"ARROW_OPEN\", 55: \"-.\", 56: \"DOTTED_ARROW_POINT\", 57: \"DOTTED_ARROW_CIRCLE\", 58: \"DOTTED_ARROW_CROSS\", 59: \"DOTTED_ARROW_OPEN\", 60: \"==\", 61: \"THICK_ARROW_POINT\", 62: \"THICK_ARROW_CIRCLE\", 63: \"THICK_ARROW_CROSS\", 64: \"THICK_ARROW_OPEN\", 65: \"PIPE\", 67: \"STR\", 71: \"STYLE\", 72: \"LINKSTYLE\", 73: \"CLASSDEF\", 74: \"CLASS\", 75: \"CLICK\", 78: \"DEFAULT\", 80: \"HEX\", 81: \"NUM\", 83: \"PCT\", 85: \"COMMA\", 87: \"ALPHA\", 88: \"COLON\", 89: \"UNIT\", 90: \"BRKT\", 91: \"DOT\", 93: \"PUNCTUATION\", 94: \"UNICODE_TEXT\", 95: \"PLUS\", 96: \"EQUALS\", 97: \"MULT\", 98: \"TAG_START\", 99: \"TAG_END\", 100: \"QUOTE\" },\n\t        productions_: [0, [3, 2], [5, 0], [5, 2], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [4, 2], [4, 2], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [19, 2], [19, 1], [20, 1], [20, 1], [20, 1], [14, 1], [14, 1], [14, 2], [22, 2], [22, 2], [22, 1], [22, 1], [21, 2], [21, 1], [7, 2], [7, 2], [7, 2], [7, 2], [7, 2], [7, 2], [7, 5], [7, 4], [24, 1], [24, 1], [24, 1], [23, 3], [23, 1], [33, 4], [33, 5], [33, 6], [33, 7], [33, 4], [33, 5], [33, 4], [33, 5], [33, 4], [33, 5], [33, 4], [33, 5], [33, 1], [33, 2], [35, 1], [35, 2], [44, 1], [44, 1], [44, 1], [44, 1], [34, 2], [34, 3], [34, 3], [34, 1], [34, 3], [34, 3], [34, 3], [34, 3], [34, 3], [34, 3], [34, 3], [34, 3], [34, 3], [34, 3], [34, 3], [34, 3], [47, 1], [47, 1], [47, 1], [47, 1], [47, 1], [47, 1], [47, 1], [47, 1], [47, 1], [47, 1], [47, 1], [47, 1], [48, 3], [31, 1], [31, 2], [31, 1], [68, 1], [68, 2], [70, 1], [70, 1], [70, 1], [70, 1], [70, 1], [70, 1], [70, 1], [70, 1], [70, 1], [70, 1], [70, 1], [76, 1], [76, 2], [27, 5], [27, 5], [28, 5], [29, 5], [29, 7], [29, 5], [29, 7], [25, 5], [25, 5], [26, 5], [26, 5], [82, 3], [79, 1], [79, 3], [84, 1], [84, 2], [86, 1], [86, 1], [86, 1], [86, 1], [86, 1], [86, 1], [86, 1], [86, 1], [86, 1], [86, 1], [86, 1], [69, 1], [69, 1], [66, 1], [66, 1], [66, 1], [66, 1], [66, 1], [66, 1], [66, 1], [77, 1], [77, 1], [77, 1], [77, 1], [45, 1], [45, 1], [45, 1], [45, 1], [45, 1], [45, 1], [45, 1], [45, 1], [45, 1], [45, 1], [45, 1], [92, 1], [92, 1], [92, 1], [92, 1], [92, 1], [92, 1], [92, 1], [92, 1], [92, 1], [92, 1], [92, 1], [92, 1], [92, 1], [92, 1], [92, 1]],\n\t        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, /* action[1] */$$, /* vstack */_$ /* lstack */) {\n\t            /* this == yyval */\n\t\n\t            var $0 = $$.length - 1;\n\t            switch (yystate) {\n\t                case 2:\n\t                    this.$ = [];\n\t                    break;\n\t                case 3:\n\t\n\t                    if ($$[$0] !== []) {\n\t                        $$[$0 - 1].push($$[$0]);\n\t                    }\n\t                    this.$ = $$[$0 - 1];\n\t                    break;\n\t                case 4:case 57:case 59:case 60:case 92:case 94:case 95:case 108:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 11:\n\t                    yy.setDirection($$[$0 - 1]);this.$ = $$[$0 - 1];\n\t                    break;\n\t                case 12:\n\t                    yy.setDirection(\"LR\");this.$ = $$[$0 - 1];\n\t                    break;\n\t                case 13:\n\t                    yy.setDirection(\"RL\");this.$ = $$[$0 - 1];\n\t                    break;\n\t                case 14:\n\t                    yy.setDirection(\"BT\");this.$ = $$[$0 - 1];\n\t                    break;\n\t                case 15:\n\t                    yy.setDirection(\"TB\");this.$ = $$[$0 - 1];\n\t                    break;\n\t                case 30:\n\t                    this.$ = $$[$0 - 1];\n\t                    break;\n\t                case 31:case 32:case 33:case 34:case 35:\n\t                    this.$ = [];\n\t                    break;\n\t                case 36:\n\t                    this.$ = yy.addSubGraph($$[$0 - 1], $$[$0 - 3]);\n\t                    break;\n\t                case 37:\n\t                    this.$ = yy.addSubGraph($$[$0 - 1], undefined);\n\t                    break;\n\t                case 41:\n\t                    yy.addLink($$[$0 - 2], $$[$0], $$[$0 - 1]);this.$ = [$$[$0 - 2], $$[$0]];\n\t                    break;\n\t                case 42:\n\t                    this.$ = [$$[$0]];\n\t                    break;\n\t                case 43:\n\t                    this.$ = $$[$0 - 3];yy.addVertex($$[$0 - 3], $$[$0 - 1], 'square');\n\t                    break;\n\t                case 44:\n\t                    this.$ = $$[$0 - 4];yy.addVertex($$[$0 - 4], $$[$0 - 2], 'square');\n\t                    break;\n\t                case 45:\n\t                    this.$ = $$[$0 - 5];yy.addVertex($$[$0 - 5], $$[$0 - 2], 'circle');\n\t                    break;\n\t                case 46:\n\t                    this.$ = $$[$0 - 6];yy.addVertex($$[$0 - 6], $$[$0 - 3], 'circle');\n\t                    break;\n\t                case 47:\n\t                    this.$ = $$[$0 - 3];yy.addVertex($$[$0 - 3], $$[$0 - 1], 'ellipse');\n\t                    break;\n\t                case 48:\n\t                    this.$ = $$[$0 - 4];yy.addVertex($$[$0 - 4], $$[$0 - 2], 'ellipse');\n\t                    break;\n\t                case 49:\n\t                    this.$ = $$[$0 - 3];yy.addVertex($$[$0 - 3], $$[$0 - 1], 'round');\n\t                    break;\n\t                case 50:\n\t                    this.$ = $$[$0 - 4];yy.addVertex($$[$0 - 4], $$[$0 - 2], 'round');\n\t                    break;\n\t                case 51:\n\t                    this.$ = $$[$0 - 3];yy.addVertex($$[$0 - 3], $$[$0 - 1], 'diamond');\n\t                    break;\n\t                case 52:\n\t                    this.$ = $$[$0 - 4];yy.addVertex($$[$0 - 4], $$[$0 - 2], 'diamond');\n\t                    break;\n\t                case 53:\n\t                    this.$ = $$[$0 - 3];yy.addVertex($$[$0 - 3], $$[$0 - 1], 'odd');\n\t                    break;\n\t                case 54:\n\t                    this.$ = $$[$0 - 4];yy.addVertex($$[$0 - 4], $$[$0 - 2], 'odd');\n\t                    break;\n\t                case 55:\n\t                    this.$ = $$[$0];yy.addVertex($$[$0]);\n\t                    break;\n\t                case 56:\n\t                    this.$ = $$[$0 - 1];yy.addVertex($$[$0 - 1]);\n\t                    break;\n\t                case 58:case 93:case 96:case 109:\n\t                    this.$ = $$[$0 - 1] + '' + $$[$0];\n\t                    break;\n\t                case 61:\n\t                    this.$ = 'v';\n\t                    break;\n\t                case 62:\n\t                    this.$ = '-';\n\t                    break;\n\t                case 63:\n\t                    $$[$0 - 1].text = $$[$0];this.$ = $$[$0 - 1];\n\t                    break;\n\t                case 64:case 65:\n\t                    $$[$0 - 2].text = $$[$0 - 1];this.$ = $$[$0 - 2];\n\t                    break;\n\t                case 66:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 67:\n\t                    this.$ = { \"type\": \"arrow\", \"stroke\": \"normal\", \"text\": $$[$0 - 1] };\n\t                    break;\n\t                case 68:\n\t                    this.$ = { \"type\": \"arrow_circle\", \"stroke\": \"normal\", \"text\": $$[$0 - 1] };\n\t                    break;\n\t                case 69:\n\t                    this.$ = { \"type\": \"arrow_cross\", \"stroke\": \"normal\", \"text\": $$[$0 - 1] };\n\t                    break;\n\t                case 70:\n\t                    this.$ = { \"type\": \"arrow_open\", \"stroke\": \"normal\", \"text\": $$[$0 - 1] };\n\t                    break;\n\t                case 71:\n\t                    this.$ = { \"type\": \"arrow\", \"stroke\": \"dotted\", \"text\": $$[$0 - 1] };\n\t                    break;\n\t                case 72:\n\t                    this.$ = { \"type\": \"arrow_circle\", \"stroke\": \"dotted\", \"text\": $$[$0 - 1] };\n\t                    break;\n\t                case 73:\n\t                    this.$ = { \"type\": \"arrow_cross\", \"stroke\": \"dotted\", \"text\": $$[$0 - 1] };\n\t                    break;\n\t                case 74:\n\t                    this.$ = { \"type\": \"arrow_open\", \"stroke\": \"dotted\", \"text\": $$[$0 - 1] };\n\t                    break;\n\t                case 75:\n\t                    this.$ = { \"type\": \"arrow\", \"stroke\": \"thick\", \"text\": $$[$0 - 1] };\n\t                    break;\n\t                case 76:\n\t                    this.$ = { \"type\": \"arrow_circle\", \"stroke\": \"thick\", \"text\": $$[$0 - 1] };\n\t                    break;\n\t                case 77:\n\t                    this.$ = { \"type\": \"arrow_cross\", \"stroke\": \"thick\", \"text\": $$[$0 - 1] };\n\t                    break;\n\t                case 78:\n\t                    this.$ = { \"type\": \"arrow_open\", \"stroke\": \"thick\", \"text\": $$[$0 - 1] };\n\t                    break;\n\t                case 79:\n\t                    this.$ = { \"type\": \"arrow\", \"stroke\": \"normal\" };\n\t                    break;\n\t                case 80:\n\t                    this.$ = { \"type\": \"arrow_circle\", \"stroke\": \"normal\" };\n\t                    break;\n\t                case 81:\n\t                    this.$ = { \"type\": \"arrow_cross\", \"stroke\": \"normal\" };\n\t                    break;\n\t                case 82:\n\t                    this.$ = { \"type\": \"arrow_open\", \"stroke\": \"normal\" };\n\t                    break;\n\t                case 83:\n\t                    this.$ = { \"type\": \"arrow\", \"stroke\": \"dotted\" };\n\t                    break;\n\t                case 84:\n\t                    this.$ = { \"type\": \"arrow_circle\", \"stroke\": \"dotted\" };\n\t                    break;\n\t                case 85:\n\t                    this.$ = { \"type\": \"arrow_cross\", \"stroke\": \"dotted\" };\n\t                    break;\n\t                case 86:\n\t                    this.$ = { \"type\": \"arrow_open\", \"stroke\": \"dotted\" };\n\t                    break;\n\t                case 87:\n\t                    this.$ = { \"type\": \"arrow\", \"stroke\": \"thick\" };\n\t                    break;\n\t                case 88:\n\t                    this.$ = { \"type\": \"arrow_circle\", \"stroke\": \"thick\" };\n\t                    break;\n\t                case 89:\n\t                    this.$ = { \"type\": \"arrow_cross\", \"stroke\": \"thick\" };\n\t                    break;\n\t                case 90:\n\t                    this.$ = { \"type\": \"arrow_open\", \"stroke\": \"thick\" };\n\t                    break;\n\t                case 91:\n\t                    this.$ = $$[$0 - 1];\n\t                    break;\n\t                case 110:case 111:\n\t                    this.$ = $$[$0 - 4];yy.addClass($$[$0 - 2], $$[$0]);\n\t                    break;\n\t                case 112:\n\t                    this.$ = $$[$0 - 4];yy.setClass($$[$0 - 2], $$[$0]);\n\t                    break;\n\t                case 113:\n\t                    this.$ = $$[$0 - 4];yy.setClickEvent($$[$0 - 2], $$[$0], undefined, undefined);\n\t                    break;\n\t                case 114:\n\t                    this.$ = $$[$0 - 6];yy.setClickEvent($$[$0 - 4], $$[$0 - 2], undefined, $$[$0]);\n\t                    break;\n\t                case 115:\n\t                    this.$ = $$[$0 - 4];yy.setClickEvent($$[$0 - 2], undefined, $$[$0], undefined);\n\t                    break;\n\t                case 116:\n\t                    this.$ = $$[$0 - 6];yy.setClickEvent($$[$0 - 4], undefined, $$[$0 - 2], $$[$0]);\n\t                    break;\n\t                case 117:\n\t                    this.$ = $$[$0 - 4];yy.addVertex($$[$0 - 2], undefined, undefined, $$[$0]);\n\t                    break;\n\t                case 118:case 119:case 120:\n\t                    this.$ = $$[$0 - 4];yy.updateLink($$[$0 - 2], $$[$0]);\n\t                    break;\n\t                case 122:\n\t                    this.$ = [$$[$0]];\n\t                    break;\n\t                case 123:\n\t                    $$[$0 - 2].push($$[$0]);this.$ = $$[$0 - 2];\n\t                    break;\n\t                case 125:\n\t                    this.$ = $$[$0 - 1] + $$[$0];\n\t                    break;\n\t            }\n\t        },\n\t        table: [{ 3: 1, 4: 2, 9: $V0, 10: $V1, 12: $V2 }, { 1: [3] }, o($V3, $V4, { 5: 6 }), { 4: 7, 9: $V0, 10: $V1, 12: $V2 }, { 4: 8, 9: $V0, 10: $V1, 12: $V2 }, { 10: [1, 9] }, { 1: [2, 1], 6: 10, 7: 11, 8: $V5, 9: $V6, 10: $V7, 11: $V8, 13: $V9, 18: $Va, 23: 16, 25: 17, 26: 18, 27: 19, 28: 20, 29: 21, 30: $Vb, 33: 23, 35: 29, 44: 30, 45: 32, 46: $Vc, 71: $Vd, 72: $Ve, 73: $Vf, 74: $Vg, 75: $Vh, 81: $Vi, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, o($V3, [2, 9]), o($V3, [2, 10]), { 13: [1, 46], 15: [1, 47], 16: [1, 48], 17: [1, 49], 18: [1, 50] }, o($Vt, [2, 3]), o($Vt, [2, 4]), o($Vt, [2, 5]), o($Vt, [2, 6]), o($Vt, [2, 7]), o($Vt, [2, 8]), { 8: $Vu, 9: $Vv, 11: $Vw, 24: 51 }, { 8: $Vu, 9: $Vv, 11: $Vw, 24: 55 }, { 8: $Vu, 9: $Vv, 11: $Vw, 24: 56 }, { 8: $Vu, 9: $Vv, 11: $Vw, 24: 57 }, { 8: $Vu, 9: $Vv, 11: $Vw, 24: 58 }, { 8: $Vu, 9: $Vv, 11: $Vw, 24: 59 }, { 8: $Vu, 9: $Vv, 10: $Vx, 11: $Vw, 12: $Vy, 13: $Vz, 15: $VA, 16: $VB, 17: $VC, 18: $VD, 24: 61, 30: $VE, 31: 60, 32: $VF, 45: 71, 46: $VG, 50: $VH, 60: $VI, 66: 62, 67: $VJ, 70: 74, 71: $VK, 72: $VL, 73: $VM, 74: $VN, 75: $VO, 77: 64, 78: $VP, 81: $Vi, 83: $VQ, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, o($VR, [2, 42], { 34: 86, 47: 87, 50: [1, 88], 51: [1, 91], 52: [1, 92], 53: [1, 93], 54: [1, 94], 55: [1, 89], 56: [1, 95], 57: [1, 96], 58: [1, 97], 59: [1, 98], 60: [1, 90], 61: [1, 99], 62: [1, 100], 63: [1, 101], 64: [1, 102] }), { 10: [1, 103] }, { 10: [1, 104] }, { 10: [1, 105] }, { 10: [1, 106] }, { 10: [1, 107] }, o($VS, [2, 55], { 45: 32, 21: 113, 44: 114, 10: $VT, 13: $V9, 15: [1, 112], 18: $Va, 36: [1, 108], 38: [1, 109], 40: [1, 110], 42: [1, 111], 46: $Vc, 81: $Vi, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }), o($VU, [2, 57]), o($VU, [2, 59]), o($VU, [2, 60]), o($VU, [2, 61]), o($VU, [2, 62]), o($VV, [2, 150]), o($VV, [2, 151]), o($VV, [2, 152]), o($VV, [2, 153]), o($VV, [2, 154]), o($VV, [2, 155]), o($VV, [2, 156]), o($VV, [2, 157]), o($VV, [2, 158]), o($VV, [2, 159]), o($VV, [2, 160]), { 8: $VW, 9: $VX, 10: $VT, 14: 116, 21: 119 }, { 8: $VW, 9: $VX, 10: $VT, 14: 120, 21: 119 }, { 8: $VW, 9: $VX, 10: $VT, 14: 121, 21: 119 }, { 8: $VW, 9: $VX, 10: $VT, 14: 122, 21: 119 }, { 8: $VW, 9: $VX, 10: $VT, 14: 123, 21: 119 }, o($Vt, [2, 30]), o($Vt, [2, 38]), o($Vt, [2, 39]), o($Vt, [2, 40]), o($Vt, [2, 31]), o($Vt, [2, 32]), o($Vt, [2, 33]), o($Vt, [2, 34]), o($Vt, [2, 35]), { 8: $Vu, 9: $Vv, 10: $Vx, 11: $Vw, 12: $Vy, 13: $Vz, 15: $VA, 16: $VB, 17: $VC, 18: $VD, 24: 124, 30: $VE, 32: $VF, 45: 71, 46: $VG, 50: $VH, 60: $VI, 66: 125, 70: 74, 71: $VK, 72: $VL, 73: $VM, 74: $VN, 75: $VO, 77: 64, 78: $VP, 81: $Vi, 83: $VQ, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, o($VY, $V4, { 5: 126 }), o($VZ, [2, 92]), o($VZ, [2, 94]), o($VZ, [2, 139]), o($VZ, [2, 140]), o($VZ, [2, 141]), o($VZ, [2, 142]), o($VZ, [2, 143]), o($VZ, [2, 144]), o($VZ, [2, 145]), o($VZ, [2, 146]), o($VZ, [2, 147]), o($VZ, [2, 148]), o($VZ, [2, 149]), o($VZ, [2, 97]), o($VZ, [2, 98]), o($VZ, [2, 99]), o($VZ, [2, 100]), o($VZ, [2, 101]), o($VZ, [2, 102]), o($VZ, [2, 103]), o($VZ, [2, 104]), o($VZ, [2, 105]), o($VZ, [2, 106]), o($VZ, [2, 107]), { 13: $V9, 18: $Va, 33: 127, 35: 29, 44: 30, 45: 32, 46: $Vc, 81: $Vi, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, o($V_, [2, 66], { 48: 128, 49: [1, 129], 65: [1, 130] }), { 10: $Vx, 12: $Vy, 13: $Vz, 15: $VA, 16: $VB, 17: $VC, 18: $VD, 30: $VE, 31: 131, 32: $VF, 45: 71, 46: $VG, 50: $VH, 60: $VI, 66: 62, 67: $VJ, 70: 74, 71: $VK, 72: $VL, 73: $VM, 74: $VN, 75: $VO, 77: 64, 78: $VP, 81: $Vi, 83: $VQ, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 10: $Vx, 12: $Vy, 13: $Vz, 15: $VA, 16: $VB, 17: $VC, 18: $VD, 30: $VE, 31: 132, 32: $VF, 45: 71, 46: $VG, 50: $VH, 60: $VI, 66: 62, 67: $VJ, 70: 74, 71: $VK, 72: $VL, 73: $VM, 74: $VN, 75: $VO, 77: 64, 78: $VP, 81: $Vi, 83: $VQ, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 10: $Vx, 12: $Vy, 13: $Vz, 15: $VA, 16: $VB, 17: $VC, 18: $VD, 30: $VE, 31: 133, 32: $VF, 45: 71, 46: $VG, 50: $VH, 60: $VI, 66: 62, 67: $VJ, 70: 74, 71: $VK, 72: $VL, 73: $VM, 74: $VN, 75: $VO, 77: 64, 78: $VP, 81: $Vi, 83: $VQ, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, o($V$, [2, 79]), o($V$, [2, 80]), o($V$, [2, 81]), o($V$, [2, 82]), o($V$, [2, 83]), o($V$, [2, 84]), o($V$, [2, 85]), o($V$, [2, 86]), o($V$, [2, 87]), o($V$, [2, 88]), o($V$, [2, 89]), o($V$, [2, 90]), { 13: $V9, 18: $Va, 35: 134, 44: 30, 45: 32, 46: $Vc, 80: [1, 135], 81: $Vi, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 78: [1, 136], 81: [1, 137] }, { 13: $V9, 18: $Va, 35: 139, 44: 30, 45: 32, 46: $Vc, 78: [1, 138], 81: $Vi, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 13: $V9, 18: $Va, 35: 140, 44: 30, 45: 32, 46: $Vc, 81: $Vi, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 13: $V9, 18: $Va, 35: 141, 44: 30, 45: 32, 46: $Vc, 81: $Vi, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 10: $Vx, 12: $Vy, 13: $Vz, 15: $VA, 16: $VB, 17: $VC, 18: $VD, 30: $VE, 31: 142, 32: $VF, 45: 71, 46: $VG, 50: $VH, 60: $VI, 66: 62, 67: $VJ, 70: 74, 71: $VK, 72: $VL, 73: $VM, 74: $VN, 75: $VO, 77: 64, 78: $VP, 81: $Vi, 83: $VQ, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 10: $Vx, 12: $Vy, 13: $Vz, 15: $VA, 16: $VB, 17: $VC, 18: $VD, 30: $VE, 31: 144, 32: $VF, 38: [1, 143], 45: 71, 46: $VG, 50: $VH, 60: $VI, 66: 62, 67: $VJ, 70: 74, 71: $VK, 72: $VL, 73: $VM, 74: $VN, 75: $VO, 77: 64, 78: $VP, 81: $Vi, 83: $VQ, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 10: $Vx, 12: $Vy, 13: $Vz, 15: $VA, 16: $VB, 17: $VC, 18: $VD, 30: $VE, 31: 145, 32: $VF, 45: 71, 46: $VG, 50: $VH, 60: $VI, 66: 62, 67: $VJ, 70: 74, 71: $VK, 72: $VL, 73: $VM, 74: $VN, 75: $VO, 77: 64, 78: $VP, 81: $Vi, 83: $VQ, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 10: $Vx, 12: $Vy, 13: $Vz, 15: $VA, 16: $VB, 17: $VC, 18: $VD, 30: $VE, 31: 146, 32: $VF, 45: 71, 46: $VG, 50: $VH, 60: $VI, 66: 62, 67: $VJ, 70: 74, 71: $VK, 72: $VL, 73: $VM, 74: $VN, 75: $VO, 77: 64, 78: $VP, 81: $Vi, 83: $VQ, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 10: $Vx, 12: $Vy, 13: $Vz, 15: $VA, 16: $VB, 17: $VC, 18: $VD, 30: $VE, 31: 147, 32: $VF, 45: 71, 46: $VG, 50: $VH, 60: $VI, 66: 62, 67: $VJ, 70: 74, 71: $VK, 72: $VL, 73: $VM, 74: $VN, 75: $VO, 77: 64, 78: $VP, 81: $Vi, 83: $VQ, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, o($VS, [2, 56]), o($VU, [2, 58]), o($VS, [2, 29], { 21: 148, 10: $VT }), o($V3, [2, 11]), o($V3, [2, 21]), o($V3, [2, 22]), { 9: [1, 149] }, o($V3, [2, 12]), o($V3, [2, 13]), o($V3, [2, 14]), o($V3, [2, 15]), o($VY, $V4, { 5: 150 }), o($VZ, [2, 93]), { 6: 10, 7: 11, 8: $V5, 9: $V6, 10: $V7, 11: $V8, 13: $V9, 18: $Va, 23: 16, 25: 17, 26: 18, 27: 19, 28: 20, 29: 21, 30: $Vb, 32: [1, 151], 33: 23, 35: 29, 44: 30, 45: 32, 46: $Vc, 71: $Vd, 72: $Ve, 73: $Vf, 74: $Vg, 75: $Vh, 81: $Vi, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, o($VR, [2, 41]), o($V_, [2, 63], { 10: [1, 152] }), { 10: [1, 153] }, { 10: $Vx, 12: $Vy, 13: $Vz, 15: $VA, 16: $VB, 17: $VC, 18: $VD, 30: $VE, 31: 154, 32: $VF, 45: 71, 46: $VG, 50: $VH, 60: $VI, 66: 62, 67: $VJ, 70: 74, 71: $VK, 72: $VL, 73: $VM, 74: $VN, 75: $VO, 77: 64, 78: $VP, 81: $Vi, 83: $VQ, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 10: $Vx, 12: $Vy, 13: $Vz, 15: $VA, 16: $VB, 17: $VC, 18: $VD, 30: $VE, 32: $VF, 45: 71, 46: $VG, 50: $VH, 51: [1, 155], 52: [1, 156], 53: [1, 157], 54: [1, 158], 60: $VI, 66: 125, 70: 74, 71: $VK, 72: $VL, 73: $VM, 74: $VN, 75: $VO, 77: 64, 78: $VP, 81: $Vi, 83: $VQ, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 10: $Vx, 12: $Vy, 13: $Vz, 15: $VA, 16: $VB, 17: $VC, 18: $VD, 30: $VE, 32: $VF, 45: 71, 46: $VG, 50: $VH, 56: [1, 159], 57: [1, 160], 58: [1, 161], 59: [1, 162], 60: $VI, 66: 125, 70: 74, 71: $VK, 72: $VL, 73: $VM, 74: $VN, 75: $VO, 77: 64, 78: $VP, 81: $Vi, 83: $VQ, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 10: $Vx, 12: $Vy, 13: $Vz, 15: $VA, 16: $VB, 17: $VC, 18: $VD, 30: $VE, 32: $VF, 45: 71, 46: $VG, 50: $VH, 60: $VI, 61: [1, 163], 62: [1, 164], 63: [1, 165], 64: [1, 166], 66: 125, 70: 74, 71: $VK, 72: $VL, 73: $VM, 74: $VN, 75: $VO, 77: 64, 78: $VP, 81: $Vi, 83: $VQ, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 10: [1, 167], 13: $V9, 18: $Va, 44: 114, 45: 32, 46: $Vc, 81: $Vi, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 10: [1, 168] }, { 10: [1, 169] }, { 10: [1, 170] }, { 10: [1, 171] }, { 10: [1, 172], 13: $V9, 18: $Va, 44: 114, 45: 32, 46: $Vc, 81: $Vi, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 10: [1, 173], 13: $V9, 18: $Va, 44: 114, 45: 32, 46: $Vc, 81: $Vi, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 10: [1, 174], 13: $V9, 18: $Va, 44: 114, 45: 32, 46: $Vc, 81: $Vi, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 10: $Vx, 12: $Vy, 13: $Vz, 15: $VA, 16: $VB, 17: $VC, 18: $VD, 30: $VE, 32: $VF, 37: [1, 175], 45: 71, 46: $VG, 50: $VH, 60: $VI, 66: 125, 70: 74, 71: $VK, 72: $VL, 73: $VM, 74: $VN, 75: $VO, 77: 64, 78: $VP, 81: $Vi, 83: $VQ, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 10: $Vx, 12: $Vy, 13: $Vz, 15: $VA, 16: $VB, 17: $VC, 18: $VD, 30: $VE, 31: 176, 32: $VF, 45: 71, 46: $VG, 50: $VH, 60: $VI, 66: 62, 67: $VJ, 70: 74, 71: $VK, 72: $VL, 73: $VM, 74: $VN, 75: $VO, 77: 64, 78: $VP, 81: $Vi, 83: $VQ, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 10: $Vx, 12: $Vy, 13: $Vz, 15: $VA, 16: $VB, 17: $VC, 18: $VD, 30: $VE, 32: $VF, 39: [1, 177], 45: 71, 46: $VG, 50: $VH, 60: $VI, 66: 125, 70: 74, 71: $VK, 72: $VL, 73: $VM, 74: $VN, 75: $VO, 77: 64, 78: $VP, 81: $Vi, 83: $VQ, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 10: $Vx, 12: $Vy, 13: $Vz, 15: $VA, 16: $VB, 17: $VC, 18: $VD, 30: $VE, 32: $VF, 41: [1, 178], 45: 71, 46: $VG, 50: $VH, 60: $VI, 66: 125, 70: 74, 71: $VK, 72: $VL, 73: $VM, 74: $VN, 75: $VO, 77: 64, 78: $VP, 81: $Vi, 83: $VQ, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 10: $Vx, 12: $Vy, 13: $Vz, 15: $VA, 16: $VB, 17: $VC, 18: $VD, 30: $VE, 32: $VF, 43: [1, 179], 45: 71, 46: $VG, 50: $VH, 60: $VI, 66: 125, 70: 74, 71: $VK, 72: $VL, 73: $VM, 74: $VN, 75: $VO, 77: 64, 78: $VP, 81: $Vi, 83: $VQ, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 10: $Vx, 12: $Vy, 13: $Vz, 15: $VA, 16: $VB, 17: $VC, 18: $VD, 30: $VE, 32: $VF, 37: [1, 180], 45: 71, 46: $VG, 50: $VH, 60: $VI, 66: 125, 70: 74, 71: $VK, 72: $VL, 73: $VM, 74: $VN, 75: $VO, 77: 64, 78: $VP, 81: $Vi, 83: $VQ, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, o($VS, [2, 28]), o($V3, [2, 23]), { 6: 10, 7: 11, 8: $V5, 9: $V6, 10: $V7, 11: $V8, 13: $V9, 18: $Va, 23: 16, 25: 17, 26: 18, 27: 19, 28: 20, 29: 21, 30: $Vb, 32: [1, 181], 33: 23, 35: 29, 44: 30, 45: 32, 46: $Vc, 71: $Vd, 72: $Ve, 73: $Vf, 74: $Vg, 75: $Vh, 81: $Vi, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, o($Vt, [2, 37]), o($V_, [2, 65]), o($V_, [2, 64]), { 10: $Vx, 12: $Vy, 13: $Vz, 15: $VA, 16: $VB, 17: $VC, 18: $VD, 30: $VE, 32: $VF, 45: 71, 46: $VG, 50: $VH, 60: $VI, 65: [1, 182], 66: 125, 70: 74, 71: $VK, 72: $VL, 73: $VM, 74: $VN, 75: $VO, 77: 64, 78: $VP, 81: $Vi, 83: $VQ, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, o($V_, [2, 67]), o($V_, [2, 68]), o($V_, [2, 69]), o($V_, [2, 70]), o($V_, [2, 71]), o($V_, [2, 72]), o($V_, [2, 73]), o($V_, [2, 74]), o($V_, [2, 75]), o($V_, [2, 76]), o($V_, [2, 77]), o($V_, [2, 78]), { 10: $V01, 46: $V11, 71: $V21, 79: 183, 80: $V31, 81: $V41, 83: $V51, 84: 184, 86: 185, 87: $V61, 88: $V71, 89: $V81, 90: $V91, 91: $Va1 }, { 10: $V01, 46: $V11, 71: $V21, 79: 197, 80: $V31, 81: $V41, 83: $V51, 84: 184, 86: 185, 87: $V61, 88: $V71, 89: $V81, 90: $V91, 91: $Va1 }, { 10: $V01, 46: $V11, 71: $V21, 79: 198, 80: $V31, 81: $V41, 83: $V51, 84: 184, 86: 185, 87: $V61, 88: $V71, 89: $V81, 90: $V91, 91: $Va1 }, { 10: $V01, 46: $V11, 71: $V21, 79: 199, 80: $V31, 81: $V41, 83: $V51, 84: 184, 86: 185, 87: $V61, 88: $V71, 89: $V81, 90: $V91, 91: $Va1 }, { 10: $V01, 46: $V11, 71: $V21, 79: 200, 80: $V31, 81: $V41, 83: $V51, 84: 184, 86: 185, 87: $V61, 88: $V71, 89: $V81, 90: $V91, 91: $Va1 }, { 10: $V01, 46: $V11, 71: $V21, 79: 201, 80: $V31, 81: $V41, 83: $V51, 84: 184, 86: 185, 87: $V61, 88: $V71, 89: $V81, 90: $V91, 91: $Va1 }, { 13: $V9, 18: $Va, 35: 202, 44: 30, 45: 32, 46: $Vc, 81: $Vi, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 13: $V9, 18: $Va, 35: 203, 44: 30, 45: 32, 46: $Vc, 67: [1, 204], 81: $Vi, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, o($VS, [2, 43], { 21: 205, 10: $VT }), { 10: $Vx, 12: $Vy, 13: $Vz, 15: $VA, 16: $VB, 17: $VC, 18: $VD, 30: $VE, 32: $VF, 39: [1, 206], 45: 71, 46: $VG, 50: $VH, 60: $VI, 66: 125, 70: 74, 71: $VK, 72: $VL, 73: $VM, 74: $VN, 75: $VO, 77: 64, 78: $VP, 81: $Vi, 83: $VQ, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, o($VS, [2, 49], { 21: 207, 10: $VT }), o($VS, [2, 47], { 21: 208, 10: $VT }), o($VS, [2, 51], { 21: 209, 10: $VT }), o($VS, [2, 53], { 21: 210, 10: $VT }), o($Vt, [2, 36]), o([10, 13, 18, 46, 81, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97], [2, 91]), o($VR, [2, 117], { 85: $Vb1 }), o($Vc1, [2, 122], { 86: 212, 10: $V01, 46: $V11, 71: $V21, 80: $V31, 81: $V41, 83: $V51, 87: $V61, 88: $V71, 89: $V81, 90: $V91, 91: $Va1 }), o($Vd1, [2, 124]), o($Vd1, [2, 126]), o($Vd1, [2, 127]), o($Vd1, [2, 128]), o($Vd1, [2, 129]), o($Vd1, [2, 130]), o($Vd1, [2, 131]), o($Vd1, [2, 132]), o($Vd1, [2, 133]), o($Vd1, [2, 134]), o($Vd1, [2, 135]), o($Vd1, [2, 136]), o($VR, [2, 118], { 85: $Vb1 }), o($VR, [2, 119], { 85: $Vb1 }), o($VR, [2, 120], { 85: $Vb1 }), o($VR, [2, 110], { 85: $Vb1 }), o($VR, [2, 111], { 85: $Vb1 }), o($VR, [2, 112], { 45: 32, 44: 114, 13: $V9, 18: $Va, 46: $Vc, 81: $Vi, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }), o($VR, [2, 113], { 45: 32, 44: 114, 10: [1, 213], 13: $V9, 18: $Va, 46: $Vc, 81: $Vi, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }), o($VR, [2, 115], { 10: [1, 214] }), o($VS, [2, 44]), { 39: [1, 215] }, o($VS, [2, 50]), o($VS, [2, 48]), o($VS, [2, 52]), o($VS, [2, 54]), { 10: $V01, 46: $V11, 71: $V21, 80: $V31, 81: $V41, 83: $V51, 84: 216, 86: 185, 87: $V61, 88: $V71, 89: $V81, 90: $V91, 91: $Va1 }, o($Vd1, [2, 125]), { 67: [1, 217] }, { 67: [1, 218] }, o($VS, [2, 45], { 21: 219, 10: $VT }), o($Vc1, [2, 123], { 86: 212, 10: $V01, 46: $V11, 71: $V21, 80: $V31, 81: $V41, 83: $V51, 87: $V61, 88: $V71, 89: $V81, 90: $V91, 91: $Va1 }), o($VR, [2, 114]), o($VR, [2, 116]), o($VS, [2, 46])],\n\t        defaultActions: {},\n\t        parseError: function parseError(str, hash) {\n\t            if (hash.recoverable) {\n\t                this.trace(str);\n\t            } else {\n\t                var _parseError = function _parseError(msg, hash) {\n\t                    this.message = msg;\n\t                    this.hash = hash;\n\t                };\n\t\n\t                _parseError.prototype = new Error();\n\t\n\t                throw new _parseError(str, hash);\n\t            }\n\t        },\n\t        parse: function parse(input) {\n\t            var self = this,\n\t                stack = [0],\n\t                tstack = [],\n\t                vstack = [null],\n\t                lstack = [],\n\t                table = this.table,\n\t                yytext = '',\n\t                yylineno = 0,\n\t                yyleng = 0,\n\t                recovering = 0,\n\t                TERROR = 2,\n\t                EOF = 1;\n\t            var args = lstack.slice.call(arguments, 1);\n\t            var lexer = Object.create(this.lexer);\n\t            var sharedState = { yy: {} };\n\t            for (var k in this.yy) {\n\t                if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n\t                    sharedState.yy[k] = this.yy[k];\n\t                }\n\t            }\n\t            lexer.setInput(input, sharedState.yy);\n\t            sharedState.yy.lexer = lexer;\n\t            sharedState.yy.parser = this;\n\t            if (typeof lexer.yylloc == 'undefined') {\n\t                lexer.yylloc = {};\n\t            }\n\t            var yyloc = lexer.yylloc;\n\t            lstack.push(yyloc);\n\t            var ranges = lexer.options && lexer.options.ranges;\n\t            if (typeof sharedState.yy.parseError === 'function') {\n\t                this.parseError = sharedState.yy.parseError;\n\t            } else {\n\t                this.parseError = Object.getPrototypeOf(this).parseError;\n\t            }\n\t            function popStack(n) {\n\t                stack.length = stack.length - 2 * n;\n\t                vstack.length = vstack.length - n;\n\t                lstack.length = lstack.length - n;\n\t            }\n\t            _token_stack: var lex = function lex() {\n\t                var token;\n\t                token = lexer.lex() || EOF;\n\t                if (typeof token !== 'number') {\n\t                    token = self.symbols_[token] || token;\n\t                }\n\t                return token;\n\t            };\n\t            var symbol,\n\t                preErrorSymbol,\n\t                state,\n\t                action,\n\t                a,\n\t                r,\n\t                yyval = {},\n\t                p,\n\t                len,\n\t                newState,\n\t                expected;\n\t            while (true) {\n\t                state = stack[stack.length - 1];\n\t                if (this.defaultActions[state]) {\n\t                    action = this.defaultActions[state];\n\t                } else {\n\t                    if (symbol === null || typeof symbol == 'undefined') {\n\t                        symbol = lex();\n\t                    }\n\t                    action = table[state] && table[state][symbol];\n\t                }\n\t                if (typeof action === 'undefined' || !action.length || !action[0]) {\n\t                    var errStr = '';\n\t                    expected = [];\n\t                    for (p in table[state]) {\n\t                        if (this.terminals_[p] && p > TERROR) {\n\t                            expected.push('\\'' + this.terminals_[p] + '\\'');\n\t                        }\n\t                    }\n\t                    if (lexer.showPosition) {\n\t                        errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n\t                    } else {\n\t                        errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n\t                    }\n\t                    this.parseError(errStr, {\n\t                        text: lexer.match,\n\t                        token: this.terminals_[symbol] || symbol,\n\t                        line: lexer.yylineno,\n\t                        loc: yyloc,\n\t                        expected: expected\n\t                    });\n\t                }\n\t                if (action[0] instanceof Array && action.length > 1) {\n\t                    throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n\t                }\n\t                switch (action[0]) {\n\t                    case 1:\n\t                        stack.push(symbol);\n\t                        vstack.push(lexer.yytext);\n\t                        lstack.push(lexer.yylloc);\n\t                        stack.push(action[1]);\n\t                        symbol = null;\n\t                        if (!preErrorSymbol) {\n\t                            yyleng = lexer.yyleng;\n\t                            yytext = lexer.yytext;\n\t                            yylineno = lexer.yylineno;\n\t                            yyloc = lexer.yylloc;\n\t                            if (recovering > 0) {\n\t                                recovering--;\n\t                            }\n\t                        } else {\n\t                            symbol = preErrorSymbol;\n\t                            preErrorSymbol = null;\n\t                        }\n\t                        break;\n\t                    case 2:\n\t                        len = this.productions_[action[1]][1];\n\t                        yyval.$ = vstack[vstack.length - len];\n\t                        yyval._$ = {\n\t                            first_line: lstack[lstack.length - (len || 1)].first_line,\n\t                            last_line: lstack[lstack.length - 1].last_line,\n\t                            first_column: lstack[lstack.length - (len || 1)].first_column,\n\t                            last_column: lstack[lstack.length - 1].last_column\n\t                        };\n\t                        if (ranges) {\n\t                            yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\n\t                        }\n\t                        r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\n\t                        if (typeof r !== 'undefined') {\n\t                            return r;\n\t                        }\n\t                        if (len) {\n\t                            stack = stack.slice(0, -1 * len * 2);\n\t                            vstack = vstack.slice(0, -1 * len);\n\t                            lstack = lstack.slice(0, -1 * len);\n\t                        }\n\t                        stack.push(this.productions_[action[1]][0]);\n\t                        vstack.push(yyval.$);\n\t                        lstack.push(yyval._$);\n\t                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n\t                        stack.push(newState);\n\t                        break;\n\t                    case 3:\n\t                        return true;\n\t                }\n\t            }\n\t            return true;\n\t        } };\n\t\n\t    /* generated by jison-lex 0.3.4 */\n\t    var lexer = (function () {\n\t        var lexer = {\n\t\n\t            EOF: 1,\n\t\n\t            parseError: function parseError(str, hash) {\n\t                if (this.yy.parser) {\n\t                    this.yy.parser.parseError(str, hash);\n\t                } else {\n\t                    throw new Error(str);\n\t                }\n\t            },\n\t\n\t            // resets the lexer, sets new input\n\t            setInput: function setInput(input, yy) {\n\t                this.yy = yy || this.yy || {};\n\t                this._input = input;\n\t                this._more = this._backtrack = this.done = false;\n\t                this.yylineno = this.yyleng = 0;\n\t                this.yytext = this.matched = this.match = '';\n\t                this.conditionStack = ['INITIAL'];\n\t                this.yylloc = {\n\t                    first_line: 1,\n\t                    first_column: 0,\n\t                    last_line: 1,\n\t                    last_column: 0\n\t                };\n\t                if (this.options.ranges) {\n\t                    this.yylloc.range = [0, 0];\n\t                }\n\t                this.offset = 0;\n\t                return this;\n\t            },\n\t\n\t            // consumes and returns one char from the input\n\t            input: function input() {\n\t                var ch = this._input[0];\n\t                this.yytext += ch;\n\t                this.yyleng++;\n\t                this.offset++;\n\t                this.match += ch;\n\t                this.matched += ch;\n\t                var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n\t                if (lines) {\n\t                    this.yylineno++;\n\t                    this.yylloc.last_line++;\n\t                } else {\n\t                    this.yylloc.last_column++;\n\t                }\n\t                if (this.options.ranges) {\n\t                    this.yylloc.range[1]++;\n\t                }\n\t\n\t                this._input = this._input.slice(1);\n\t                return ch;\n\t            },\n\t\n\t            // unshifts one char (or a string) into the input\n\t            unput: function unput(ch) {\n\t                var len = ch.length;\n\t                var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\t\n\t                this._input = ch + this._input;\n\t                this.yytext = this.yytext.substr(0, this.yytext.length - len);\n\t                //this.yyleng -= len;\n\t                this.offset -= len;\n\t                var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n\t                this.match = this.match.substr(0, this.match.length - 1);\n\t                this.matched = this.matched.substr(0, this.matched.length - 1);\n\t\n\t                if (lines.length - 1) {\n\t                    this.yylineno -= lines.length - 1;\n\t                }\n\t                var r = this.yylloc.range;\n\t\n\t                this.yylloc = {\n\t                    first_line: this.yylloc.first_line,\n\t                    last_line: this.yylineno + 1,\n\t                    first_column: this.yylloc.first_column,\n\t                    last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n\t                };\n\t\n\t                if (this.options.ranges) {\n\t                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n\t                }\n\t                this.yyleng = this.yytext.length;\n\t                return this;\n\t            },\n\t\n\t            // When called from action, caches matched text and appends it on next action\n\t            more: function more() {\n\t                this._more = true;\n\t                return this;\n\t            },\n\t\n\t            // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\n\t            reject: function reject() {\n\t                if (this.options.backtrack_lexer) {\n\t                    this._backtrack = true;\n\t                } else {\n\t                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n\t                        text: \"\",\n\t                        token: null,\n\t                        line: this.yylineno\n\t                    });\n\t                }\n\t                return this;\n\t            },\n\t\n\t            // retain first n characters of the match\n\t            less: function less(n) {\n\t                this.unput(this.match.slice(n));\n\t            },\n\t\n\t            // displays already matched input, i.e. for error messages\n\t            pastInput: function pastInput() {\n\t                var past = this.matched.substr(0, this.matched.length - this.match.length);\n\t                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\\n/g, \"\");\n\t            },\n\t\n\t            // displays upcoming input, i.e. for error messages\n\t            upcomingInput: function upcomingInput() {\n\t                var next = this.match;\n\t                if (next.length < 20) {\n\t                    next += this._input.substr(0, 20 - next.length);\n\t                }\n\t                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n\t            },\n\t\n\t            // displays the character position where the lexing error occurred, i.e. for error messages\n\t            showPosition: function showPosition() {\n\t                var pre = this.pastInput();\n\t                var c = new Array(pre.length + 1).join(\"-\");\n\t                return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n\t            },\n\t\n\t            // test the lexed token: return FALSE when not a match, otherwise return token\n\t            test_match: function test_match(match, indexed_rule) {\n\t                var token, lines, backup;\n\t\n\t                if (this.options.backtrack_lexer) {\n\t                    // save context\n\t                    backup = {\n\t                        yylineno: this.yylineno,\n\t                        yylloc: {\n\t                            first_line: this.yylloc.first_line,\n\t                            last_line: this.last_line,\n\t                            first_column: this.yylloc.first_column,\n\t                            last_column: this.yylloc.last_column\n\t                        },\n\t                        yytext: this.yytext,\n\t                        match: this.match,\n\t                        matches: this.matches,\n\t                        matched: this.matched,\n\t                        yyleng: this.yyleng,\n\t                        offset: this.offset,\n\t                        _more: this._more,\n\t                        _input: this._input,\n\t                        yy: this.yy,\n\t                        conditionStack: this.conditionStack.slice(0),\n\t                        done: this.done\n\t                    };\n\t                    if (this.options.ranges) {\n\t                        backup.yylloc.range = this.yylloc.range.slice(0);\n\t                    }\n\t                }\n\t\n\t                lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n\t                if (lines) {\n\t                    this.yylineno += lines.length;\n\t                }\n\t                this.yylloc = {\n\t                    first_line: this.yylloc.last_line,\n\t                    last_line: this.yylineno + 1,\n\t                    first_column: this.yylloc.last_column,\n\t                    last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\n\t                };\n\t                this.yytext += match[0];\n\t                this.match += match[0];\n\t                this.matches = match;\n\t                this.yyleng = this.yytext.length;\n\t                if (this.options.ranges) {\n\t                    this.yylloc.range = [this.offset, this.offset += this.yyleng];\n\t                }\n\t                this._more = false;\n\t                this._backtrack = false;\n\t                this._input = this._input.slice(match[0].length);\n\t                this.matched += match[0];\n\t                token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n\t                if (this.done && this._input) {\n\t                    this.done = false;\n\t                }\n\t                if (token) {\n\t                    return token;\n\t                } else if (this._backtrack) {\n\t                    // recover context\n\t                    for (var k in backup) {\n\t                        this[k] = backup[k];\n\t                    }\n\t                    return false; // rule action called reject() implying the next rule should be tested instead.\n\t                }\n\t                return false;\n\t            },\n\t\n\t            // return next match in input\n\t            next: function next() {\n\t                if (this.done) {\n\t                    return this.EOF;\n\t                }\n\t                if (!this._input) {\n\t                    this.done = true;\n\t                }\n\t\n\t                var token, match, tempMatch, index;\n\t                if (!this._more) {\n\t                    this.yytext = '';\n\t                    this.match = '';\n\t                }\n\t                var rules = this._currentRules();\n\t                for (var i = 0; i < rules.length; i++) {\n\t                    tempMatch = this._input.match(this.rules[rules[i]]);\n\t                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n\t                        match = tempMatch;\n\t                        index = i;\n\t                        if (this.options.backtrack_lexer) {\n\t                            token = this.test_match(tempMatch, rules[i]);\n\t                            if (token !== false) {\n\t                                return token;\n\t                            } else if (this._backtrack) {\n\t                                match = false;\n\t                                continue; // rule action called reject() implying a rule MISmatch.\n\t                            } else {\n\t                                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n\t                                    return false;\n\t                                }\n\t                        } else if (!this.options.flex) {\n\t                            break;\n\t                        }\n\t                    }\n\t                }\n\t                if (match) {\n\t                    token = this.test_match(match, rules[index]);\n\t                    if (token !== false) {\n\t                        return token;\n\t                    }\n\t                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n\t                    return false;\n\t                }\n\t                if (this._input === \"\") {\n\t                    return this.EOF;\n\t                } else {\n\t                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n\t                        text: \"\",\n\t                        token: null,\n\t                        line: this.yylineno\n\t                    });\n\t                }\n\t            },\n\t\n\t            // return next match that has a token\n\t            lex: function lex() {\n\t                var r = this.next();\n\t                if (r) {\n\t                    return r;\n\t                } else {\n\t                    return this.lex();\n\t                }\n\t            },\n\t\n\t            // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\n\t            begin: function begin(condition) {\n\t                this.conditionStack.push(condition);\n\t            },\n\t\n\t            // pop the previously active lexer condition state off the condition stack\n\t            popState: function popState() {\n\t                var n = this.conditionStack.length - 1;\n\t                if (n > 0) {\n\t                    return this.conditionStack.pop();\n\t                } else {\n\t                    return this.conditionStack[0];\n\t                }\n\t            },\n\t\n\t            // produce the lexer rule set which is active for the currently active lexer condition state\n\t            _currentRules: function _currentRules() {\n\t                if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n\t                    return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n\t                } else {\n\t                    return this.conditions[\"INITIAL\"].rules;\n\t                }\n\t            },\n\t\n\t            // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\n\t            topState: function topState(n) {\n\t                n = this.conditionStack.length - 1 - Math.abs(n || 0);\n\t                if (n >= 0) {\n\t                    return this.conditionStack[n];\n\t                } else {\n\t                    return \"INITIAL\";\n\t                }\n\t            },\n\t\n\t            // alias for begin(condition)\n\t            pushState: function pushState(condition) {\n\t                this.begin(condition);\n\t            },\n\t\n\t            // return the number of states currently on the stack\n\t            stateStackSize: function stateStackSize() {\n\t                return this.conditionStack.length;\n\t            },\n\t            options: {},\n\t            performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n\t                var YYSTATE = YY_START;\n\t                switch ($avoiding_name_collisions) {\n\t                    case 0:\n\t                        /* do nothing */\n\t                        break;\n\t                    case 1:\n\t                        this.begin(\"string\");\n\t                        break;\n\t                    case 2:\n\t                        this.popState();\n\t                        break;\n\t                    case 3:\n\t                        return \"STR\";\n\t                        break;\n\t                    case 4:\n\t                        return 71;\n\t                        break;\n\t                    case 5:\n\t                        return 78;\n\t                        break;\n\t                    case 6:\n\t                        return 72;\n\t                        break;\n\t                    case 7:\n\t                        return 73;\n\t                        break;\n\t                    case 8:\n\t                        return 74;\n\t                        break;\n\t                    case 9:\n\t                        return 75;\n\t                        break;\n\t                    case 10:\n\t                        return 12;\n\t                        break;\n\t                    case 11:\n\t                        return 30;\n\t                        break;\n\t                    case 12:\n\t                        return 32;\n\t                        break;\n\t                    case 13:\n\t                        return 13;\n\t                        break;\n\t                    case 14:\n\t                        return 13;\n\t                        break;\n\t                    case 15:\n\t                        return 13;\n\t                        break;\n\t                    case 16:\n\t                        return 13;\n\t                        break;\n\t                    case 17:\n\t                        return 13;\n\t                        break;\n\t                    case 18:\n\t                        return 13;\n\t                        break;\n\t                    case 19:\n\t                        return 81;\n\t                        break;\n\t                    case 20:\n\t                        return 90;\n\t                        break;\n\t                    case 21:\n\t                        return 88;\n\t                        break;\n\t                    case 22:\n\t                        return 8;\n\t                        break;\n\t                    case 23:\n\t                        return 85;\n\t                        break;\n\t                    case 24:\n\t                        return 97;\n\t                        break;\n\t                    case 25:\n\t                        return 16;\n\t                        break;\n\t                    case 26:\n\t                        return 15;\n\t                        break;\n\t                    case 27:\n\t                        return 17;\n\t                        break;\n\t                    case 28:\n\t                        return 18;\n\t                        break;\n\t                    case 29:\n\t                        return 53;\n\t                        break;\n\t                    case 30:\n\t                        return 51;\n\t                        break;\n\t                    case 31:\n\t                        return 52;\n\t                        break;\n\t                    case 32:\n\t                        return 54;\n\t                        break;\n\t                    case 33:\n\t                        return 58;\n\t                        break;\n\t                    case 34:\n\t                        return 56;\n\t                        break;\n\t                    case 35:\n\t                        return 57;\n\t                        break;\n\t                    case 36:\n\t                        return 59;\n\t                        break;\n\t                    case 37:\n\t                        return 58;\n\t                        break;\n\t                    case 38:\n\t                        return 56;\n\t                        break;\n\t                    case 39:\n\t                        return 57;\n\t                        break;\n\t                    case 40:\n\t                        return 59;\n\t                        break;\n\t                    case 41:\n\t                        return 63;\n\t                        break;\n\t                    case 42:\n\t                        return 61;\n\t                        break;\n\t                    case 43:\n\t                        return 62;\n\t                        break;\n\t                    case 44:\n\t                        return 64;\n\t                        break;\n\t                    case 45:\n\t                        return 50;\n\t                        break;\n\t                    case 46:\n\t                        return 55;\n\t                        break;\n\t                    case 47:\n\t                        return 60;\n\t                        break;\n\t                    case 48:\n\t                        return 40;\n\t                        break;\n\t                    case 49:\n\t                        return 41;\n\t                        break;\n\t                    case 50:\n\t                        return 46;\n\t                        break;\n\t                    case 51:\n\t                        return 91;\n\t                        break;\n\t                    case 52:\n\t                        return 95;\n\t                        break;\n\t                    case 53:\n\t                        return 83;\n\t                        break;\n\t                    case 54:\n\t                        return 96;\n\t                        break;\n\t                    case 55:\n\t                        return 96;\n\t                        break;\n\t                    case 56:\n\t                        return 87;\n\t                        break;\n\t                    case 57:\n\t                        return 93;\n\t                        break;\n\t                    case 58:\n\t                        return 94;\n\t                        break;\n\t                    case 59:\n\t                        return 65;\n\t                        break;\n\t                    case 60:\n\t                        return 38;\n\t                        break;\n\t                    case 61:\n\t                        return 39;\n\t                        break;\n\t                    case 62:\n\t                        return 36;\n\t                        break;\n\t                    case 63:\n\t                        return 37;\n\t                        break;\n\t                    case 64:\n\t                        return 42;\n\t                        break;\n\t                    case 65:\n\t                        return 43;\n\t                        break;\n\t                    case 66:\n\t                        return 100;\n\t                        break;\n\t                    case 67:\n\t                        return 9;\n\t                        break;\n\t                    case 68:\n\t                        return 10;\n\t                        break;\n\t                    case 69:\n\t                        return 11;\n\t                        break;\n\t                }\n\t            },\n\t            rules: [/^(?:%%[^\\n]*)/, /^(?:[\"])/, /^(?:[\"])/, /^(?:[^\"]*)/, /^(?:style\\b)/, /^(?:default\\b)/, /^(?:linkStyle\\b)/, /^(?:classDef\\b)/, /^(?:class\\b)/, /^(?:click\\b)/, /^(?:graph\\b)/, /^(?:subgraph\\b)/, /^(?:end\\b\\s*)/, /^(?:LR\\b)/, /^(?:RL\\b)/, /^(?:TB\\b)/, /^(?:BT\\b)/, /^(?:TD\\b)/, /^(?:BR\\b)/, /^(?:[0-9]+)/, /^(?:#)/, /^(?::)/, /^(?:;)/, /^(?:,)/, /^(?:\\*)/, /^(?:<)/, /^(?:>)/, /^(?:\\^)/, /^(?:v\\b)/, /^(?:\\s*--[x]\\s*)/, /^(?:\\s*-->\\s*)/, /^(?:\\s*--[o]\\s*)/, /^(?:\\s*---\\s*)/, /^(?:\\s*-\\.-[x]\\s*)/, /^(?:\\s*-\\.->\\s*)/, /^(?:\\s*-\\.-[o]\\s*)/, /^(?:\\s*-\\.-\\s*)/, /^(?:\\s*.-[x]\\s*)/, /^(?:\\s*\\.->\\s*)/, /^(?:\\s*\\.-[o]\\s*)/, /^(?:\\s*\\.-\\s*)/, /^(?:\\s*==[x]\\s*)/, /^(?:\\s*==>\\s*)/, /^(?:\\s*==[o]\\s*)/, /^(?:\\s*==[\\=]\\s*)/, /^(?:\\s*--\\s*)/, /^(?:\\s*-\\.\\s*)/, /^(?:\\s*==\\s*)/, /^(?:\\(-)/, /^(?:-\\))/, /^(?:-)/, /^(?:\\.)/, /^(?:\\+)/, /^(?:%)/, /^(?:=)/, /^(?:=)/, /^(?:[A-Za-z]+)/, /^(?:[!\"#$%&'*+,-.`?\\\\_\\/])/, /^(?:[\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6]|[\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377]|[\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5]|[\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA]|[\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE]|[\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA]|[\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0]|[\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977]|[\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2]|[\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A]|[\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39]|[\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8]|[\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C]|[\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C]|[\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99]|[\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0]|[\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D]|[\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3]|[\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10]|[\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1]|[\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81]|[\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3]|[\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6]|[\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A]|[\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081]|[\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D]|[\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0]|[\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310]|[\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C]|[\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711]|[\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7]|[\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C]|[\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16]|[\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF]|[\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC]|[\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D]|[\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D]|[\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3]|[\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F]|[\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128]|[\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184]|[\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3]|[\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6]|[\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE]|[\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C]|[\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D]|[\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC]|[\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B]|[\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788]|[\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805]|[\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB]|[\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28]|[\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5]|[\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4]|[\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E]|[\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D]|[\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36]|[\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D]|[\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC]|[\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF]|[\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC])/, /^(?:\\|)/, /^(?:\\()/, /^(?:\\))/, /^(?:\\[)/, /^(?:\\])/, /^(?:\\{)/, /^(?:\\})/, /^(?:\")/, /^(?:\\n+)/, /^(?:\\s)/, /^(?:$)/],\n\t            conditions: { \"string\": { \"rules\": [2, 3], \"inclusive\": false }, \"INITIAL\": { \"rules\": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], \"inclusive\": true } }\n\t        };\n\t        return lexer;\n\t    })();\n\t    parser.lexer = lexer;\n\t    function Parser() {\n\t        this.yy = {};\n\t    }\n\t    Parser.prototype = parser;parser.Parser = Parser;\n\t    return new Parser();\n\t})();\n\t\n\tif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\n\t    exports.parser = flow;\n\t    exports.Parser = flow.Parser;\n\t    exports.parse = function () {\n\t        return flow.parse.apply(flow, arguments);\n\t    };\n\t    exports.main = function commonjsMain(args) {\n\t        if (!args[1]) {\n\t            console.log('Usage: ' + args[0] + ' FILE');\n\t            process.exit(1);\n\t        }\n\t        var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n\t        return exports.parser.parse(source);\n\t    };\n\t    if (typeof module !== 'undefined' && require.main === module) {\n\t        exports.main(process.argv.slice(1));\n\t    }\n\t}\n\t\n\t}).call(this,require('_process'))\n\t},{\"_process\":3,\"fs\":1,\"path\":2}],119:[function(require,module,exports){\n\t(function (global){\n\t/**\n\t * Created by knut on 15-01-14.\n\t */\n\t'use strict';\n\t\n\tvar moment = require('moment');\n\tvar Logger = require('../../logger');\n\tvar log = new Logger.Log();\n\t\n\tvar dateFormat = '';\n\tvar title = '';\n\tvar sections = [];\n\tvar tasks = [];\n\tvar currentSection = '';\n\t\n\texports.clear = function () {\n\t    sections = [];\n\t    tasks = [];\n\t    currentSection = '';\n\t    title = '';\n\t    taskCnt = 0;\n\t    lastTask = undefined;\n\t    lastTaskID = undefined;\n\t    rawTasks = [];\n\t};\n\t\n\texports.setDateFormat = function (txt) {\n\t    dateFormat = txt;\n\t};\n\t\n\texports.getDateFormat = function () {\n\t    return dateFormat;\n\t};\n\texports.setTitle = function (txt) {\n\t    title = txt;\n\t};\n\t\n\texports.getTitle = function () {\n\t    return title;\n\t};\n\t\n\texports.addSection = function (txt) {\n\t    currentSection = txt;\n\t    sections.push(txt);\n\t};\n\t\n\texports.getTasks = function () {\n\t    var allItemsPricessed = compileTasks();\n\t    var maxDepth = 10;\n\t    var iterationCount = 0;\n\t    while (!allItemsPricessed && iterationCount < maxDepth) {\n\t        allItemsPricessed = compileTasks();\n\t        iterationCount++;\n\t    }\n\t\n\t    tasks = rawTasks;\n\t\n\t    //var i;\n\t    //for(i=10000;i<tasks.length;i++){\n\t    //    tasks[i].startTime = moment(tasks[i].startTime).format(dateFormat);\n\t    //    tasks[i].endTime = moment(tasks[i].endTime).format(dateFormat);\n\t    //}\n\t\n\t    return tasks;\n\t};\n\t\n\tvar getStartDate = function getStartDate(prevTime, dateFormat, str) {\n\t    //console.log('Deciding start date:'+JSON.stringify(str));\n\t    //log.debug('Deciding start date:'+str);\n\t    //log.debug('with dateformat:'+dateFormat);\n\t\n\t    str = str.trim();\n\t\n\t    // Test for after\n\t    var re = /^after\\s+([\\d\\w\\-]+)/;\n\t    var afterStatement = re.exec(str.trim());\n\t\n\t    if (afterStatement !== null) {\n\t        var task = exports.findTaskById(afterStatement[1]);\n\t\n\t        if (typeof task === 'undefined') {\n\t            var dt = new Date();\n\t            dt.setHours(0, 0, 0, 0);\n\t            return dt;\n\t            //return undefined;\n\t        }\n\t        return task.endTime;\n\t    }\n\t\n\t    // Check for actual date set\n\t    if (moment(str, dateFormat.trim(), true).isValid()) {\n\t        return moment(str, dateFormat.trim(), true).toDate();\n\t    } else {\n\t        log.debug('Invalid date:' + str);\n\t        log.debug('With date format:' + dateFormat.trim());\n\t        //log.debug('----');\n\t    }\n\t\n\t    // Default date - now\n\t    return new Date();\n\t};\n\t\n\tvar getEndDate = function getEndDate(prevTime, dateFormat, str) {\n\t    str = str.trim();\n\t\n\t    // Check for actual date\n\t    if (moment(str, dateFormat.trim(), true).isValid()) {\n\t\n\t        return moment(str, dateFormat.trim()).toDate();\n\t    }\n\t\n\t    var d = moment(prevTime);\n\t    // Check for length\n\t    var re = /^([\\d]+)([wdhms])/;\n\t    var durationStatement = re.exec(str.trim());\n\t\n\t    if (durationStatement !== null) {\n\t        switch (durationStatement[2]) {\n\t            case 's':\n\t                d.add(durationStatement[1], 'seconds');\n\t                break;\n\t            case 'm':\n\t                d.add(durationStatement[1], 'minutes');\n\t                break;\n\t            case 'h':\n\t                d.add(durationStatement[1], 'hours');\n\t                break;\n\t            case 'd':\n\t                d.add(durationStatement[1], 'days');\n\t                break;\n\t            case 'w':\n\t                d.add(durationStatement[1], 'weeks');\n\t                break;\n\t        }\n\t        return d.toDate();\n\t    }\n\t    // Default date - now\n\t    return d.toDate();\n\t};\n\t\n\tvar taskCnt = 0;\n\tvar parseId = function parseId(idStr) {\n\t    if (typeof idStr === 'undefined') {\n\t        taskCnt = taskCnt + 1;\n\t        return 'task' + taskCnt;\n\t    }\n\t    return idStr;\n\t};\n\t// id, startDate, endDate\n\t// id, startDate, length\n\t// id, after x, endDate\n\t// id, after x, length\n\t// startDate, endDate\n\t// startDate, length\n\t// after x, endDate\n\t// after x, length\n\t// endDate\n\t// length\n\t\n\tvar compileData = function compileData(prevTask, dataStr) {\n\t    var ds;\n\t\n\t    if (dataStr.substr(0, 1) === ':') {\n\t        ds = dataStr.substr(1, dataStr.length);\n\t    } else {\n\t        ds = dataStr;\n\t    }\n\t\n\t    var data = ds.split(',');\n\t\n\t    var task = {};\n\t    var df = exports.getDateFormat();\n\t\n\t    // Get tags like active, done cand crit\n\t    var matchFound = true;\n\t    while (matchFound) {\n\t        matchFound = false;\n\t        if (data[0].match(/^\\s*active\\s*$/)) {\n\t            task.active = true;\n\t            data.shift(1);\n\t            matchFound = true;\n\t        }\n\t        if (data[0].match(/^\\s*done\\s*$/)) {\n\t            task.done = true;\n\t            data.shift(1);\n\t            matchFound = true;\n\t        }\n\t        if (data[0].match(/^\\s*crit\\s*$/)) {\n\t            task.crit = true;\n\t            data.shift(1);\n\t            matchFound = true;\n\t        }\n\t    }\n\t    var i;\n\t    for (i = 0; i < data.length; i++) {\n\t        data[i] = data[i].trim();\n\t    }\n\t\n\t    switch (data.length) {\n\t        case 1:\n\t            task.id = parseId();\n\t            task.startTime = prevTask.endTime;\n\t            task.endTime = getEndDate(task.startTime, df, data[0]);\n\t            break;\n\t        case 2:\n\t            task.id = parseId();\n\t            task.startTime = getStartDate(undefined, df, data[0]);\n\t            task.endTime = getEndDate(task.startTime, df, data[1]);\n\t            break;\n\t        case 3:\n\t            task.id = parseId(data[0]);\n\t            task.startTime = getStartDate(undefined, df, data[1]);\n\t            task.endTime = getEndDate(task.startTime, df, data[2]);\n\t            break;\n\t        default:\n\t\n\t    }\n\t\n\t    return task;\n\t};\n\t\n\tvar parseData = function parseData(prevTaskId, dataStr) {\n\t    var ds;\n\t\n\t    if (dataStr.substr(0, 1) === ':') {\n\t        ds = dataStr.substr(1, dataStr.length);\n\t    } else {\n\t        ds = dataStr;\n\t    }\n\t\n\t    var data = ds.split(',');\n\t\n\t    var task = {};\n\t\n\t    // Get tags like active, done cand crit\n\t    var matchFound = true;\n\t    while (matchFound) {\n\t        matchFound = false;\n\t        if (data[0].match(/^\\s*active\\s*$/)) {\n\t            task.active = true;\n\t            data.shift(1);\n\t            matchFound = true;\n\t        }\n\t        if (data[0].match(/^\\s*done\\s*$/)) {\n\t            task.done = true;\n\t            data.shift(1);\n\t            matchFound = true;\n\t        }\n\t        if (data[0].match(/^\\s*crit\\s*$/)) {\n\t            task.crit = true;\n\t            data.shift(1);\n\t            matchFound = true;\n\t        }\n\t    }\n\t    var i;\n\t    for (i = 0; i < data.length; i++) {\n\t        data[i] = data[i].trim();\n\t    }\n\t\n\t    switch (data.length) {\n\t        case 1:\n\t            task.id = parseId();\n\t            task.startTime = { type: 'prevTaskEnd', id: prevTaskId };\n\t            task.endTime = { data: data[0] };\n\t            break;\n\t        case 2:\n\t            task.id = parseId();\n\t            task.startTime = { type: 'getStartDate', startData: data[0] };\n\t            task.endTime = { data: data[1] };\n\t            break;\n\t        case 3:\n\t            task.id = parseId(data[0]);\n\t            task.startTime = { type: 'getStartDate', startData: data[1] };\n\t            task.endTime = { data: data[2] };\n\t            break;\n\t        default:\n\t\n\t    }\n\t\n\t    return task;\n\t};\n\t\n\tvar lastTask;\n\tvar lastTaskID;\n\tvar rawTasks = [];\n\tvar taskDb = {};\n\texports.addTask = function (descr, data) {\n\t    var rawTask = {\n\t        section: currentSection,\n\t        type: currentSection,\n\t        processed: false,\n\t        raw: { data: data },\n\t        task: descr\n\t    };\n\t    var taskInfo = parseData(lastTaskID, data);\n\t    rawTask.raw.startTime = taskInfo.startTime;\n\t    rawTask.raw.endTime = taskInfo.endTime;\n\t    rawTask.id = taskInfo.id;\n\t    rawTask.prevTaskId = lastTaskID;\n\t    rawTask.active = taskInfo.active;\n\t    rawTask.done = taskInfo.done;\n\t    rawTask.crit = taskInfo.crit;\n\t\n\t    var pos = rawTasks.push(rawTask);\n\t\n\t    lastTaskID = rawTask.id;\n\t    // Store cross ref\n\t    taskDb[rawTask.id] = pos - 1;\n\t};\n\t\n\texports.findTaskById = function (id) {\n\t    //var i;\n\t    //for(i=0;i<tasks.length;i++){\n\t    //    if(tasks[i].id === id){\n\t    //        return tasks[i];\n\t    //    }\n\t    //}\n\t\n\t    var pos = taskDb[id];\n\t    return rawTasks[pos];\n\t};\n\t\n\texports.addTaskOrg = function (descr, data) {\n\t\n\t    var newTask = {\n\t        section: currentSection,\n\t        type: currentSection,\n\t        description: descr,\n\t        task: descr\n\t    };\n\t    var taskInfo = compileData(lastTask, data);\n\t    newTask.startTime = taskInfo.startTime;\n\t    newTask.endTime = taskInfo.endTime;\n\t    newTask.id = taskInfo.id;\n\t    newTask.active = taskInfo.active;\n\t    newTask.done = taskInfo.done;\n\t    newTask.crit = taskInfo.crit;\n\t    lastTask = newTask;\n\t    tasks.push(newTask);\n\t};\n\t\n\tvar compileTasks = function compileTasks() {\n\t    var df = exports.getDateFormat();\n\t\n\t    var compileTask = function compileTask(pos) {\n\t        var task = rawTasks[pos];\n\t        var startTime = '';\n\t        switch (rawTasks[pos].raw.startTime.type) {\n\t            case 'prevTaskEnd':\n\t                var prevTask = exports.findTaskById(task.prevTaskId);\n\t                task.startTime = prevTask.endTime;\n\t                break;\n\t            case 'getStartDate':\n\t                startTime = getStartDate(undefined, df, rawTasks[pos].raw.startTime.startData);\n\t                if (startTime) {\n\t                    rawTasks[pos].startTime = startTime;\n\t                }\n\t                break;\n\t        }\n\t\n\t        if (rawTasks[pos].startTime) {\n\t            rawTasks[pos].endTime = getEndDate(rawTasks[pos].startTime, df, rawTasks[pos].raw.endTime.data);\n\t            if (rawTasks[pos].endTime) {\n\t                rawTasks[pos].processed = true;\n\t            }\n\t        }\n\t\n\t        return rawTasks[pos].processed;\n\t    };\n\t\n\t    var i;\n\t    var allProcessed = true;\n\t    for (i = 0; i < rawTasks.length; i++) {\n\t        compileTask(i);\n\t\n\t        allProcessed = allProcessed && rawTasks[i].processed;\n\t    }\n\t    return allProcessed;\n\t};\n\t\n\texports.parseError = function (err, hash) {\n\t    global.mermaidAPI.parseError(err, hash);\n\t};\n\t\n\t}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\t},{\"../../logger\":126,\"moment\":105}],120:[function(require,module,exports){\n\t'use strict';\n\t\n\tvar gantt = require('./parser/gantt').parser;\n\tgantt.yy = require('./ganttDb');\n\tvar d3 = require('../../d3');\n\tvar moment = require('moment');\n\t//var log = require('../../logger').create();\n\t\n\tvar daysInChart;\n\tvar conf = {\n\t    titleTopMargin: 25,\n\t    barHeight: 20,\n\t    barGap: 4,\n\t    topPadding: 50,\n\t    sidePadding: 75,\n\t    gridLineStartPadding: 35,\n\t    fontSize: 11,\n\t    fontFamily: '\"Open-Sans\", \"sans-serif\"'\n\t};\n\tmodule.exports.setConf = function (cnf) {\n\t    var keys = Object.keys(cnf);\n\t\n\t    keys.forEach(function (key) {\n\t        conf[key] = cnf[key];\n\t    });\n\t};\n\tvar w;\n\tmodule.exports.draw = function (text, id) {\n\t    gantt.yy.clear();\n\t    gantt.parse(text);\n\t\n\t    var elem = document.getElementById(id);\n\t    w = elem.parentElement.offsetWidth;\n\t\n\t    if (typeof w === 'undefined') {\n\t        w = 1200;\n\t    }\n\t\n\t    if (typeof conf.useWidth !== 'undefined') {\n\t        w = conf.useWidth;\n\t    }\n\t\n\t    var taskArray = gantt.yy.getTasks();\n\t\n\t    // Set height based on number of tasks\n\t    var h = taskArray.length * (conf.barHeight + conf.barGap) + 2 * conf.topPadding;\n\t\n\t    elem.setAttribute('height', '100%');\n\t    // Set viewBox\n\t    elem.setAttribute('viewBox', '0 0 ' + w + ' ' + h);\n\t    var svg = d3.select('#' + id);\n\t\n\t    //var dateFormat = d3.time.format('%Y-%m-%d');\n\t\n\t    var startDate = d3.min(taskArray, function (d) {\n\t        return d.startTime;\n\t    });\n\t    var endDate = d3.max(taskArray, function (d) {\n\t        return d.endTime;\n\t    });\n\t\n\t    // Set timescale\n\t    var timeScale = d3.time.scale().domain([d3.min(taskArray, function (d) {\n\t        return d.startTime;\n\t    }), d3.max(taskArray, function (d) {\n\t        return d.endTime;\n\t    })]).rangeRound([0, w - 150]);\n\t    //.nice(d3.time.monday);\n\t\n\t    var categories = [];\n\t\n\t    daysInChart = moment.duration(endDate - startDate).asDays();\n\t\n\t    for (var i = 0; i < taskArray.length; i++) {\n\t        categories.push(taskArray[i].type);\n\t    }\n\t\n\t    var catsUnfiltered = categories; //for vert labels\n\t\n\t    categories = checkUnique(categories);\n\t\n\t    makeGant(taskArray, w, h);\n\t    if (typeof conf.useWidth !== 'undefined') {\n\t        elem.setAttribute('width', w);\n\t    }\n\t\n\t    svg.append('text').text(gantt.yy.getTitle()).attr('x', w / 2).attr('y', conf.titleTopMargin).attr('class', 'titleText');\n\t\n\t    function makeGant(tasks, pageWidth, pageHeight) {\n\t\n\t        var barHeight = conf.barHeight;\n\t        var gap = barHeight + conf.barGap;\n\t        var topPadding = conf.topPadding;\n\t        var sidePadding = conf.sidePadding;\n\t\n\t        var colorScale = d3.scale.linear().domain([0, categories.length]).range(['#00B9FA', '#F95002']).interpolate(d3.interpolateHcl);\n\t\n\t        makeGrid(sidePadding, topPadding, pageWidth, pageHeight);\n\t        drawRects(tasks, gap, topPadding, sidePadding, barHeight, colorScale, pageWidth, pageHeight);\n\t        vertLabels(gap, topPadding, sidePadding, barHeight, colorScale);\n\t        drawToday(sidePadding, topPadding, pageWidth, pageHeight);\n\t    }\n\t\n\t    function drawRects(theArray, theGap, theTopPad, theSidePad, theBarHeight, theColorScale, w, h) {\n\t        //eslint-disable-line no-unused-vars\n\t\n\t        svg.append('g').selectAll('rect').data(theArray).enter().append('rect').attr('x', 0).attr('y', function (d, i) {\n\t            return i * theGap + theTopPad - 2;\n\t        }).attr('width', function () {\n\t            return w - theSidePad / 2;\n\t        }).attr('height', theGap).attr('class', function (d) {\n\t            //eslint-disable-line no-unused-vars\n\t            for (var i = 0; i < categories.length; i++) {\n\t                if (d.type === categories[i]) {\n\t                    return 'section section' + i % conf.numberSectionStyles;\n\t                }\n\t            }\n\t            return 'section section0';\n\t        });\n\t\n\t        var rectangles = svg.append('g').selectAll('rect').data(theArray).enter();\n\t\n\t        rectangles.append('rect').attr('rx', 3).attr('ry', 3).attr('x', function (d) {\n\t            return timeScale(d.startTime) + theSidePad;\n\t        }).attr('y', function (d, i) {\n\t            return i * theGap + theTopPad;\n\t        }).attr('width', function (d) {\n\t            return timeScale(d.endTime) - timeScale(d.startTime);\n\t        }).attr('height', theBarHeight).attr('class', function (d) {\n\t            var res = 'task ';\n\t\n\t            var secNum = 0;\n\t            for (var i = 0; i < categories.length; i++) {\n\t                if (d.type === categories[i]) {\n\t                    secNum = i % conf.numberSectionStyles;\n\t                }\n\t            }\n\t\n\t            if (d.active) {\n\t                if (d.crit) {\n\t                    return res + ' activeCrit' + secNum;\n\t                } else {\n\t                    return res + ' active' + secNum;\n\t                }\n\t            }\n\t\n\t            if (d.done) {\n\t                if (d.crit) {\n\t                    return res + ' doneCrit' + secNum;\n\t                } else {\n\t                    return res + ' done' + secNum;\n\t                }\n\t            }\n\t\n\t            if (d.crit) {\n\t                return res + ' crit' + secNum;\n\t            }\n\t\n\t            return res + ' task' + secNum;\n\t        });\n\t\n\t        rectangles.append('text').text(function (d) {\n\t            return d.task;\n\t        }).attr('font-size', conf.fontSize)\n\t        //.attr('font-family',conf.fontFamily)\n\t        .attr('x', function (d) {\n\t            var startX = timeScale(d.startTime),\n\t                endX = timeScale(d.endTime),\n\t                textWidth = this.getBBox().width;\n\t\n\t            // Check id text width > width of rectangle\n\t            if (textWidth > endX - startX) {\n\t                if (endX + textWidth + 1.5 * conf.sidePadding > w) {\n\t                    return startX + theSidePad - 5;\n\t                } else {\n\t                    return endX + theSidePad + 5;\n\t                }\n\t            } else {\n\t                return (endX - startX) / 2 + startX + theSidePad;\n\t            }\n\t        }).attr('y', function (d, i) {\n\t            return i * theGap + conf.barHeight / 2 + (conf.fontSize / 2 - 2) + theTopPad;\n\t        })\n\t        //.attr('text-anchor', 'middle')\n\t        .attr('text-height', theBarHeight).attr('class', function (d) {\n\t            var startX = timeScale(d.startTime),\n\t                endX = timeScale(d.endTime),\n\t                textWidth = this.getBBox().width;\n\t            var secNum = 0;\n\t            for (var i = 0; i < categories.length; i++) {\n\t                if (d.type === categories[i]) {\n\t                    secNum = i % conf.numberSectionStyles;\n\t                }\n\t            }\n\t\n\t            var taskType = '';\n\t            if (d.active) {\n\t                if (d.crit) {\n\t                    taskType = 'activeCritText' + secNum;\n\t                } else {\n\t                    taskType = 'activeText' + secNum;\n\t                }\n\t            }\n\t\n\t            if (d.done) {\n\t                if (d.crit) {\n\t                    taskType = taskType + ' doneCritText' + secNum;\n\t                } else {\n\t                    taskType = taskType + ' doneText' + secNum;\n\t                }\n\t            } else {\n\t                if (d.crit) {\n\t                    taskType = taskType + ' critText' + secNum;\n\t                }\n\t            }\n\t\n\t            // Check id text width > width of rectangle\n\t            if (textWidth > endX - startX) {\n\t                if (endX + textWidth + 1.5 * conf.sidePadding > w) {\n\t                    return 'taskTextOutsideLeft taskTextOutside' + secNum + ' ' + taskType;\n\t                } else {\n\t                    return 'taskTextOutsideRight taskTextOutside' + secNum + ' ' + taskType;\n\t                }\n\t            } else {\n\t                return 'taskText taskText' + secNum + ' ' + taskType;\n\t            }\n\t        });\n\t    }\n\t\n\t    function makeGrid(theSidePad, theTopPad, w, h) {\n\t\n\t        var pre = [['.%L', function (d) {\n\t            return d.getMilliseconds();\n\t        }], [':%S', function (d) {\n\t            return d.getSeconds();\n\t        }],\n\t        // Within a hour\n\t        ['h1 %I:%M', function (d) {\n\t            return d.getMinutes();\n\t        }]];\n\t        var post = [['%Y', function () {\n\t            return true;\n\t        }]];\n\t\n\t        var mid = [\n\t        // Within a day\n\t        ['%I:%M', function (d) {\n\t            return d.getHours();\n\t        }],\n\t        // Day within a week (not monday)\n\t        ['%a %d', function (d) {\n\t            //return d.getDay() ==1;\n\t            return d.getDay() && d.getDate() != 1;\n\t        }],\n\t        // within a month\n\t        ['%b %d', function (d) {\n\t            return d.getDate() != 1;\n\t        }],\n\t        // Month\n\t        ['%B', function (d) {\n\t            return d.getMonth();\n\t        }]];\n\t        var formatter;\n\t        if (typeof conf.axisFormatter !== 'undefined') {\n\t            mid = [];\n\t            conf.axisFormatter.forEach(function (item) {\n\t                var n = [];\n\t                n[0] = item[0];\n\t                n[1] = item[1];\n\t                mid.push(n);\n\t            });\n\t        }\n\t        formatter = pre.concat(mid).concat(post);\n\t\n\t        var xAxis = d3.svg.axis().scale(timeScale).orient('bottom').tickSize(-h + theTopPad + conf.gridLineStartPadding, 0, 0).tickFormat(d3.time.format.multi(formatter));\n\t\n\t        if (daysInChart > 7 && daysInChart < 230) {\n\t            xAxis = xAxis.ticks(d3.time.monday.range);\n\t        }\n\t\n\t        svg.append('g').attr('class', 'grid').attr('transform', 'translate(' + theSidePad + ', ' + (h - 50) + ')').call(xAxis).selectAll('text').style('text-anchor', 'middle').attr('fill', '#000').attr('stroke', 'none').attr('font-size', 10).attr('dy', '1em');\n\t    }\n\t\n\t    function vertLabels(theGap, theTopPad) {\n\t        var numOccurances = [];\n\t        var prevGap = 0;\n\t\n\t        for (var i = 0; i < categories.length; i++) {\n\t            numOccurances[i] = [categories[i], getCount(categories[i], catsUnfiltered)];\n\t        }\n\t\n\t        svg.append('g') //without doing this, impossible to put grid lines behind text\n\t        .selectAll('text').data(numOccurances).enter().append('text').text(function (d) {\n\t            return d[0];\n\t        }).attr('x', 10).attr('y', function (d, i) {\n\t            if (i > 0) {\n\t                for (var j = 0; j < i; j++) {\n\t                    prevGap += numOccurances[i - 1][1];\n\t                    // log.debug(prevGap);\n\t                    return d[1] * theGap / 2 + prevGap * theGap + theTopPad;\n\t                }\n\t            } else {\n\t                return d[1] * theGap / 2 + theTopPad;\n\t            }\n\t        }).attr('class', function (d) {\n\t            for (var i = 0; i < categories.length; i++) {\n\t                if (d[0] === categories[i]) {\n\t                    return 'sectionTitle sectionTitle' + i % conf.numberSectionStyles;\n\t                }\n\t            }\n\t            return 'sectionTitle';\n\t        });\n\t    }\n\t\n\t    function drawToday(theSidePad, theTopPad, w, h) {\n\t        var todayG = svg.append('g').attr('class', 'today');\n\t\n\t        var today = new Date();\n\t\n\t        todayG.append('line').attr('x1', timeScale(today) + theSidePad).attr('x2', timeScale(today) + theSidePad).attr('y1', conf.titleTopMargin).attr('y2', h - conf.titleTopMargin).attr('class', 'today');\n\t    }\n\t\n\t    //from this stackexchange question: http://stackoverflow.com/questions/1890203/unique-for-arrays-in-javascript\n\t    function checkUnique(arr) {\n\t        var hash = {},\n\t            result = [];\n\t        for (var i = 0, l = arr.length; i < l; ++i) {\n\t            if (!hash.hasOwnProperty(arr[i])) {\n\t                //it works with objects! in FF, at least\n\t                hash[arr[i]] = true;\n\t                result.push(arr[i]);\n\t            }\n\t        }\n\t        return result;\n\t    }\n\t\n\t    //from this stackexchange question: http://stackoverflow.com/questions/14227981/count-how-many-strings-in-an-array-have-duplicates-in-the-same-array\n\t    function getCounts(arr) {\n\t        var i = arr.length,\n\t            // var to loop over\n\t        obj = {}; // obj to store results\n\t        while (i) {\n\t            obj[arr[--i]] = (obj[arr[i]] || 0) + 1; // count occurrences\n\t        }\n\t        return obj;\n\t    }\n\t\n\t    // get specific from everything\n\t    function getCount(word, arr) {\n\t        return getCounts(arr)[word] || 0;\n\t    }\n\t};\n\t\n\t},{\"../../d3\":107,\"./ganttDb\":119,\"./parser/gantt\":121,\"moment\":105}],121:[function(require,module,exports){\n\t(function (process){\n\t/* parser generated by jison 0.4.15 */\n\t/*\n\t  Returns a Parser object of the following structure:\n\t\n\t  Parser: {\n\t    yy: {}\n\t  }\n\t\n\t  Parser.prototype: {\n\t    yy: {},\n\t    trace: function(),\n\t    symbols_: {associative list: name ==> number},\n\t    terminals_: {associative list: number ==> name},\n\t    productions_: [...],\n\t    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n\t    table: [...],\n\t    defaultActions: {...},\n\t    parseError: function(str, hash),\n\t    parse: function(input),\n\t\n\t    lexer: {\n\t        EOF: 1,\n\t        parseError: function(str, hash),\n\t        setInput: function(input),\n\t        input: function(),\n\t        unput: function(str),\n\t        more: function(),\n\t        less: function(n),\n\t        pastInput: function(),\n\t        upcomingInput: function(),\n\t        showPosition: function(),\n\t        test_match: function(regex_match_array, rule_index),\n\t        next: function(),\n\t        lex: function(),\n\t        begin: function(condition),\n\t        popState: function(),\n\t        _currentRules: function(),\n\t        topState: function(),\n\t        pushState: function(condition),\n\t\n\t        options: {\n\t            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n\t            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n\t            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n\t        },\n\t\n\t        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n\t        rules: [...],\n\t        conditions: {associative list: name ==> set},\n\t    }\n\t  }\n\t\n\t\n\t  token location info (@$, _$, etc.): {\n\t    first_line: n,\n\t    last_line: n,\n\t    first_column: n,\n\t    last_column: n,\n\t    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n\t  }\n\t\n\t\n\t  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n\t    text:        (matched text)\n\t    token:       (the produced terminal token, if any)\n\t    line:        (yylineno)\n\t  }\n\t  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n\t    loc:         (yylloc)\n\t    expected:    (string describing the set of expected tokens)\n\t    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n\t  }\n\t*/\n\t\"use strict\";\n\t\n\tvar gantt = (function () {\n\t    var o = function o(k, v, _o, l) {\n\t        for (_o = _o || {}, l = k.length; l--; _o[k[l]] = v);return _o;\n\t    },\n\t        $V0 = [6, 8, 10, 11, 12, 13, 14],\n\t        $V1 = [1, 9],\n\t        $V2 = [1, 10],\n\t        $V3 = [1, 11],\n\t        $V4 = [1, 12];\n\t    var parser = { trace: function trace() {},\n\t        yy: {},\n\t        symbols_: { \"error\": 2, \"start\": 3, \"gantt\": 4, \"document\": 5, \"EOF\": 6, \"line\": 7, \"SPACE\": 8, \"statement\": 9, \"NL\": 10, \"dateFormat\": 11, \"title\": 12, \"section\": 13, \"taskTxt\": 14, \"taskData\": 15, \"$accept\": 0, \"$end\": 1 },\n\t        terminals_: { 2: \"error\", 4: \"gantt\", 6: \"EOF\", 8: \"SPACE\", 10: \"NL\", 11: \"dateFormat\", 12: \"title\", 13: \"section\", 14: \"taskTxt\", 15: \"taskData\" },\n\t        productions_: [0, [3, 3], [5, 0], [5, 2], [7, 2], [7, 1], [7, 1], [7, 1], [9, 1], [9, 1], [9, 1], [9, 2]],\n\t        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, /* action[1] */$$, /* vstack */_$ /* lstack */) {\n\t            /* this == yyval */\n\t\n\t            var $0 = $$.length - 1;\n\t            switch (yystate) {\n\t                case 1:\n\t                    return $$[$0 - 1];\n\t                    break;\n\t                case 2:\n\t                    this.$ = [];\n\t                    break;\n\t                case 3:\n\t                    $$[$0 - 1].push($$[$0]);this.$ = $$[$0 - 1];\n\t                    break;\n\t                case 4:case 5:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 6:case 7:\n\t                    this.$ = [];\n\t                    break;\n\t                case 8:\n\t                    yy.setDateFormat($$[$0].substr(11));this.$ = $$[$0].substr(11);\n\t                    break;\n\t                case 9:\n\t                    yy.setTitle($$[$0].substr(6));this.$ = $$[$0].substr(6);\n\t                    break;\n\t                case 10:\n\t                    yy.addSection($$[$0].substr(8));this.$ = $$[$0].substr(8);\n\t                    break;\n\t                case 11:\n\t                    yy.addTask($$[$0 - 1], $$[$0]);this.$ = 'task';\n\t                    break;\n\t            }\n\t        },\n\t        table: [{ 3: 1, 4: [1, 2] }, { 1: [3] }, o($V0, [2, 2], { 5: 3 }), { 6: [1, 4], 7: 5, 8: [1, 6], 9: 7, 10: [1, 8], 11: $V1, 12: $V2, 13: $V3, 14: $V4 }, o($V0, [2, 7], { 1: [2, 1] }), o($V0, [2, 3]), { 9: 13, 11: $V1, 12: $V2, 13: $V3, 14: $V4 }, o($V0, [2, 5]), o($V0, [2, 6]), o($V0, [2, 8]), o($V0, [2, 9]), o($V0, [2, 10]), { 15: [1, 14] }, o($V0, [2, 4]), o($V0, [2, 11])],\n\t        defaultActions: {},\n\t        parseError: function parseError(str, hash) {\n\t            if (hash.recoverable) {\n\t                this.trace(str);\n\t            } else {\n\t                var _parseError = function _parseError(msg, hash) {\n\t                    this.message = msg;\n\t                    this.hash = hash;\n\t                };\n\t\n\t                _parseError.prototype = new Error();\n\t\n\t                throw new _parseError(str, hash);\n\t            }\n\t        },\n\t        parse: function parse(input) {\n\t            var self = this,\n\t                stack = [0],\n\t                tstack = [],\n\t                vstack = [null],\n\t                lstack = [],\n\t                table = this.table,\n\t                yytext = '',\n\t                yylineno = 0,\n\t                yyleng = 0,\n\t                recovering = 0,\n\t                TERROR = 2,\n\t                EOF = 1;\n\t            var args = lstack.slice.call(arguments, 1);\n\t            var lexer = Object.create(this.lexer);\n\t            var sharedState = { yy: {} };\n\t            for (var k in this.yy) {\n\t                if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n\t                    sharedState.yy[k] = this.yy[k];\n\t                }\n\t            }\n\t            lexer.setInput(input, sharedState.yy);\n\t            sharedState.yy.lexer = lexer;\n\t            sharedState.yy.parser = this;\n\t            if (typeof lexer.yylloc == 'undefined') {\n\t                lexer.yylloc = {};\n\t            }\n\t            var yyloc = lexer.yylloc;\n\t            lstack.push(yyloc);\n\t            var ranges = lexer.options && lexer.options.ranges;\n\t            if (typeof sharedState.yy.parseError === 'function') {\n\t                this.parseError = sharedState.yy.parseError;\n\t            } else {\n\t                this.parseError = Object.getPrototypeOf(this).parseError;\n\t            }\n\t            function popStack(n) {\n\t                stack.length = stack.length - 2 * n;\n\t                vstack.length = vstack.length - n;\n\t                lstack.length = lstack.length - n;\n\t            }\n\t            _token_stack: var lex = function lex() {\n\t                var token;\n\t                token = lexer.lex() || EOF;\n\t                if (typeof token !== 'number') {\n\t                    token = self.symbols_[token] || token;\n\t                }\n\t                return token;\n\t            };\n\t            var symbol,\n\t                preErrorSymbol,\n\t                state,\n\t                action,\n\t                a,\n\t                r,\n\t                yyval = {},\n\t                p,\n\t                len,\n\t                newState,\n\t                expected;\n\t            while (true) {\n\t                state = stack[stack.length - 1];\n\t                if (this.defaultActions[state]) {\n\t                    action = this.defaultActions[state];\n\t                } else {\n\t                    if (symbol === null || typeof symbol == 'undefined') {\n\t                        symbol = lex();\n\t                    }\n\t                    action = table[state] && table[state][symbol];\n\t                }\n\t                if (typeof action === 'undefined' || !action.length || !action[0]) {\n\t                    var errStr = '';\n\t                    expected = [];\n\t                    for (p in table[state]) {\n\t                        if (this.terminals_[p] && p > TERROR) {\n\t                            expected.push('\\'' + this.terminals_[p] + '\\'');\n\t                        }\n\t                    }\n\t                    if (lexer.showPosition) {\n\t                        errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n\t                    } else {\n\t                        errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n\t                    }\n\t                    this.parseError(errStr, {\n\t                        text: lexer.match,\n\t                        token: this.terminals_[symbol] || symbol,\n\t                        line: lexer.yylineno,\n\t                        loc: yyloc,\n\t                        expected: expected\n\t                    });\n\t                }\n\t                if (action[0] instanceof Array && action.length > 1) {\n\t                    throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n\t                }\n\t                switch (action[0]) {\n\t                    case 1:\n\t                        stack.push(symbol);\n\t                        vstack.push(lexer.yytext);\n\t                        lstack.push(lexer.yylloc);\n\t                        stack.push(action[1]);\n\t                        symbol = null;\n\t                        if (!preErrorSymbol) {\n\t                            yyleng = lexer.yyleng;\n\t                            yytext = lexer.yytext;\n\t                            yylineno = lexer.yylineno;\n\t                            yyloc = lexer.yylloc;\n\t                            if (recovering > 0) {\n\t                                recovering--;\n\t                            }\n\t                        } else {\n\t                            symbol = preErrorSymbol;\n\t                            preErrorSymbol = null;\n\t                        }\n\t                        break;\n\t                    case 2:\n\t                        len = this.productions_[action[1]][1];\n\t                        yyval.$ = vstack[vstack.length - len];\n\t                        yyval._$ = {\n\t                            first_line: lstack[lstack.length - (len || 1)].first_line,\n\t                            last_line: lstack[lstack.length - 1].last_line,\n\t                            first_column: lstack[lstack.length - (len || 1)].first_column,\n\t                            last_column: lstack[lstack.length - 1].last_column\n\t                        };\n\t                        if (ranges) {\n\t                            yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\n\t                        }\n\t                        r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\n\t                        if (typeof r !== 'undefined') {\n\t                            return r;\n\t                        }\n\t                        if (len) {\n\t                            stack = stack.slice(0, -1 * len * 2);\n\t                            vstack = vstack.slice(0, -1 * len);\n\t                            lstack = lstack.slice(0, -1 * len);\n\t                        }\n\t                        stack.push(this.productions_[action[1]][0]);\n\t                        vstack.push(yyval.$);\n\t                        lstack.push(yyval._$);\n\t                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n\t                        stack.push(newState);\n\t                        break;\n\t                    case 3:\n\t                        return true;\n\t                }\n\t            }\n\t            return true;\n\t        } };\n\t    /* generated by jison-lex 0.3.4 */\n\t    var lexer = (function () {\n\t        var lexer = {\n\t\n\t            EOF: 1,\n\t\n\t            parseError: function parseError(str, hash) {\n\t                if (this.yy.parser) {\n\t                    this.yy.parser.parseError(str, hash);\n\t                } else {\n\t                    throw new Error(str);\n\t                }\n\t            },\n\t\n\t            // resets the lexer, sets new input\n\t            setInput: function setInput(input, yy) {\n\t                this.yy = yy || this.yy || {};\n\t                this._input = input;\n\t                this._more = this._backtrack = this.done = false;\n\t                this.yylineno = this.yyleng = 0;\n\t                this.yytext = this.matched = this.match = '';\n\t                this.conditionStack = ['INITIAL'];\n\t                this.yylloc = {\n\t                    first_line: 1,\n\t                    first_column: 0,\n\t                    last_line: 1,\n\t                    last_column: 0\n\t                };\n\t                if (this.options.ranges) {\n\t                    this.yylloc.range = [0, 0];\n\t                }\n\t                this.offset = 0;\n\t                return this;\n\t            },\n\t\n\t            // consumes and returns one char from the input\n\t            input: function input() {\n\t                var ch = this._input[0];\n\t                this.yytext += ch;\n\t                this.yyleng++;\n\t                this.offset++;\n\t                this.match += ch;\n\t                this.matched += ch;\n\t                var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n\t                if (lines) {\n\t                    this.yylineno++;\n\t                    this.yylloc.last_line++;\n\t                } else {\n\t                    this.yylloc.last_column++;\n\t                }\n\t                if (this.options.ranges) {\n\t                    this.yylloc.range[1]++;\n\t                }\n\t\n\t                this._input = this._input.slice(1);\n\t                return ch;\n\t            },\n\t\n\t            // unshifts one char (or a string) into the input\n\t            unput: function unput(ch) {\n\t                var len = ch.length;\n\t                var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\t\n\t                this._input = ch + this._input;\n\t                this.yytext = this.yytext.substr(0, this.yytext.length - len);\n\t                //this.yyleng -= len;\n\t                this.offset -= len;\n\t                var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n\t                this.match = this.match.substr(0, this.match.length - 1);\n\t                this.matched = this.matched.substr(0, this.matched.length - 1);\n\t\n\t                if (lines.length - 1) {\n\t                    this.yylineno -= lines.length - 1;\n\t                }\n\t                var r = this.yylloc.range;\n\t\n\t                this.yylloc = {\n\t                    first_line: this.yylloc.first_line,\n\t                    last_line: this.yylineno + 1,\n\t                    first_column: this.yylloc.first_column,\n\t                    last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n\t                };\n\t\n\t                if (this.options.ranges) {\n\t                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n\t                }\n\t                this.yyleng = this.yytext.length;\n\t                return this;\n\t            },\n\t\n\t            // When called from action, caches matched text and appends it on next action\n\t            more: function more() {\n\t                this._more = true;\n\t                return this;\n\t            },\n\t\n\t            // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\n\t            reject: function reject() {\n\t                if (this.options.backtrack_lexer) {\n\t                    this._backtrack = true;\n\t                } else {\n\t                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n\t                        text: \"\",\n\t                        token: null,\n\t                        line: this.yylineno\n\t                    });\n\t                }\n\t                return this;\n\t            },\n\t\n\t            // retain first n characters of the match\n\t            less: function less(n) {\n\t                this.unput(this.match.slice(n));\n\t            },\n\t\n\t            // displays already matched input, i.e. for error messages\n\t            pastInput: function pastInput() {\n\t                var past = this.matched.substr(0, this.matched.length - this.match.length);\n\t                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\\n/g, \"\");\n\t            },\n\t\n\t            // displays upcoming input, i.e. for error messages\n\t            upcomingInput: function upcomingInput() {\n\t                var next = this.match;\n\t                if (next.length < 20) {\n\t                    next += this._input.substr(0, 20 - next.length);\n\t                }\n\t                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n\t            },\n\t\n\t            // displays the character position where the lexing error occurred, i.e. for error messages\n\t            showPosition: function showPosition() {\n\t                var pre = this.pastInput();\n\t                var c = new Array(pre.length + 1).join(\"-\");\n\t                return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n\t            },\n\t\n\t            // test the lexed token: return FALSE when not a match, otherwise return token\n\t            test_match: function test_match(match, indexed_rule) {\n\t                var token, lines, backup;\n\t\n\t                if (this.options.backtrack_lexer) {\n\t                    // save context\n\t                    backup = {\n\t                        yylineno: this.yylineno,\n\t                        yylloc: {\n\t                            first_line: this.yylloc.first_line,\n\t                            last_line: this.last_line,\n\t                            first_column: this.yylloc.first_column,\n\t                            last_column: this.yylloc.last_column\n\t                        },\n\t                        yytext: this.yytext,\n\t                        match: this.match,\n\t                        matches: this.matches,\n\t                        matched: this.matched,\n\t                        yyleng: this.yyleng,\n\t                        offset: this.offset,\n\t                        _more: this._more,\n\t                        _input: this._input,\n\t                        yy: this.yy,\n\t                        conditionStack: this.conditionStack.slice(0),\n\t                        done: this.done\n\t                    };\n\t                    if (this.options.ranges) {\n\t                        backup.yylloc.range = this.yylloc.range.slice(0);\n\t                    }\n\t                }\n\t\n\t                lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n\t                if (lines) {\n\t                    this.yylineno += lines.length;\n\t                }\n\t                this.yylloc = {\n\t                    first_line: this.yylloc.last_line,\n\t                    last_line: this.yylineno + 1,\n\t                    first_column: this.yylloc.last_column,\n\t                    last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\n\t                };\n\t                this.yytext += match[0];\n\t                this.match += match[0];\n\t                this.matches = match;\n\t                this.yyleng = this.yytext.length;\n\t                if (this.options.ranges) {\n\t                    this.yylloc.range = [this.offset, this.offset += this.yyleng];\n\t                }\n\t                this._more = false;\n\t                this._backtrack = false;\n\t                this._input = this._input.slice(match[0].length);\n\t                this.matched += match[0];\n\t                token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n\t                if (this.done && this._input) {\n\t                    this.done = false;\n\t                }\n\t                if (token) {\n\t                    return token;\n\t                } else if (this._backtrack) {\n\t                    // recover context\n\t                    for (var k in backup) {\n\t                        this[k] = backup[k];\n\t                    }\n\t                    return false; // rule action called reject() implying the next rule should be tested instead.\n\t                }\n\t                return false;\n\t            },\n\t\n\t            // return next match in input\n\t            next: function next() {\n\t                if (this.done) {\n\t                    return this.EOF;\n\t                }\n\t                if (!this._input) {\n\t                    this.done = true;\n\t                }\n\t\n\t                var token, match, tempMatch, index;\n\t                if (!this._more) {\n\t                    this.yytext = '';\n\t                    this.match = '';\n\t                }\n\t                var rules = this._currentRules();\n\t                for (var i = 0; i < rules.length; i++) {\n\t                    tempMatch = this._input.match(this.rules[rules[i]]);\n\t                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n\t                        match = tempMatch;\n\t                        index = i;\n\t                        if (this.options.backtrack_lexer) {\n\t                            token = this.test_match(tempMatch, rules[i]);\n\t                            if (token !== false) {\n\t                                return token;\n\t                            } else if (this._backtrack) {\n\t                                match = false;\n\t                                continue; // rule action called reject() implying a rule MISmatch.\n\t                            } else {\n\t                                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n\t                                    return false;\n\t                                }\n\t                        } else if (!this.options.flex) {\n\t                            break;\n\t                        }\n\t                    }\n\t                }\n\t                if (match) {\n\t                    token = this.test_match(match, rules[index]);\n\t                    if (token !== false) {\n\t                        return token;\n\t                    }\n\t                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n\t                    return false;\n\t                }\n\t                if (this._input === \"\") {\n\t                    return this.EOF;\n\t                } else {\n\t                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n\t                        text: \"\",\n\t                        token: null,\n\t                        line: this.yylineno\n\t                    });\n\t                }\n\t            },\n\t\n\t            // return next match that has a token\n\t            lex: function lex() {\n\t                var r = this.next();\n\t                if (r) {\n\t                    return r;\n\t                } else {\n\t                    return this.lex();\n\t                }\n\t            },\n\t\n\t            // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\n\t            begin: function begin(condition) {\n\t                this.conditionStack.push(condition);\n\t            },\n\t\n\t            // pop the previously active lexer condition state off the condition stack\n\t            popState: function popState() {\n\t                var n = this.conditionStack.length - 1;\n\t                if (n > 0) {\n\t                    return this.conditionStack.pop();\n\t                } else {\n\t                    return this.conditionStack[0];\n\t                }\n\t            },\n\t\n\t            // produce the lexer rule set which is active for the currently active lexer condition state\n\t            _currentRules: function _currentRules() {\n\t                if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n\t                    return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n\t                } else {\n\t                    return this.conditions[\"INITIAL\"].rules;\n\t                }\n\t            },\n\t\n\t            // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\n\t            topState: function topState(n) {\n\t                n = this.conditionStack.length - 1 - Math.abs(n || 0);\n\t                if (n >= 0) {\n\t                    return this.conditionStack[n];\n\t                } else {\n\t                    return \"INITIAL\";\n\t                }\n\t            },\n\t\n\t            // alias for begin(condition)\n\t            pushState: function pushState(condition) {\n\t                this.begin(condition);\n\t            },\n\t\n\t            // return the number of states currently on the stack\n\t            stateStackSize: function stateStackSize() {\n\t                return this.conditionStack.length;\n\t            },\n\t            options: { \"case-insensitive\": true },\n\t            performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n\t                // Pre-lexer code can go here\n\t\n\t                var YYSTATE = YY_START;\n\t                switch ($avoiding_name_collisions) {\n\t                    case 0:\n\t                        return 10;\n\t                        break;\n\t                    case 1:\n\t                        /* skip whitespace */\n\t                        break;\n\t                    case 2:\n\t                        /* skip comments */\n\t                        break;\n\t                    case 3:\n\t                        /* skip comments */\n\t                        break;\n\t                    case 4:\n\t                        return 4;\n\t                        break;\n\t                    case 5:\n\t                        return 11;\n\t                        break;\n\t                    case 6:\n\t                        return 'date';\n\t                        break;\n\t                    case 7:\n\t                        return 12;\n\t                        break;\n\t                    case 8:\n\t                        return 13;\n\t                        break;\n\t                    case 9:\n\t                        return 14;\n\t                        break;\n\t                    case 10:\n\t                        return 15;\n\t                        break;\n\t                    case 11:\n\t                        return ':';\n\t                        break;\n\t                    case 12:\n\t                        return 6;\n\t                        break;\n\t                    case 13:\n\t                        return 'INVALID';\n\t                        break;\n\t                }\n\t            },\n\t            rules: [/^(?:[\\n]+)/i, /^(?:\\s+)/i, /^(?:#[^\\n]*)/i, /^(?:%[^\\n]*)/i, /^(?:gantt\\b)/i, /^(?:dateFormat\\s[^#\\n;]+)/i, /^(?:\\d\\d\\d\\d-\\d\\d-\\d\\d\\b)/i, /^(?:title\\s[^#\\n;]+)/i, /^(?:section\\s[^#:\\n;]+)/i, /^(?:[^#:\\n;]+)/i, /^(?::[^#\\n;]+)/i, /^(?::)/i, /^(?:$)/i, /^(?:.)/i],\n\t            conditions: { \"INITIAL\": { \"rules\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], \"inclusive\": true } }\n\t        };\n\t        return lexer;\n\t    })();\n\t    parser.lexer = lexer;\n\t    function Parser() {\n\t        this.yy = {};\n\t    }\n\t    Parser.prototype = parser;parser.Parser = Parser;\n\t    return new Parser();\n\t})();\n\t\n\tif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\n\t    exports.parser = gantt;\n\t    exports.Parser = gantt.Parser;\n\t    exports.parse = function () {\n\t        return gantt.parse.apply(gantt, arguments);\n\t    };\n\t    exports.main = function commonjsMain(args) {\n\t        if (!args[1]) {\n\t            console.log('Usage: ' + args[0] + ' FILE');\n\t            process.exit(1);\n\t        }\n\t        var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n\t        return exports.parser.parse(source);\n\t    };\n\t    if (typeof module !== 'undefined' && require.main === module) {\n\t        exports.main(process.argv.slice(1));\n\t    }\n\t}\n\t\n\t}).call(this,require('_process'))\n\t},{\"_process\":3,\"fs\":1,\"path\":2}],122:[function(require,module,exports){\n\t(function (process){\n\t/* parser generated by jison 0.4.15 */\n\t/*\n\t  Returns a Parser object of the following structure:\n\t\n\t  Parser: {\n\t    yy: {}\n\t  }\n\t\n\t  Parser.prototype: {\n\t    yy: {},\n\t    trace: function(),\n\t    symbols_: {associative list: name ==> number},\n\t    terminals_: {associative list: number ==> name},\n\t    productions_: [...],\n\t    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n\t    table: [...],\n\t    defaultActions: {...},\n\t    parseError: function(str, hash),\n\t    parse: function(input),\n\t\n\t    lexer: {\n\t        EOF: 1,\n\t        parseError: function(str, hash),\n\t        setInput: function(input),\n\t        input: function(),\n\t        unput: function(str),\n\t        more: function(),\n\t        less: function(n),\n\t        pastInput: function(),\n\t        upcomingInput: function(),\n\t        showPosition: function(),\n\t        test_match: function(regex_match_array, rule_index),\n\t        next: function(),\n\t        lex: function(),\n\t        begin: function(condition),\n\t        popState: function(),\n\t        _currentRules: function(),\n\t        topState: function(),\n\t        pushState: function(condition),\n\t\n\t        options: {\n\t            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n\t            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n\t            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n\t        },\n\t\n\t        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n\t        rules: [...],\n\t        conditions: {associative list: name ==> set},\n\t    }\n\t  }\n\t\n\t\n\t  token location info (@$, _$, etc.): {\n\t    first_line: n,\n\t    last_line: n,\n\t    first_column: n,\n\t    last_column: n,\n\t    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n\t  }\n\t\n\t\n\t  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n\t    text:        (matched text)\n\t    token:       (the produced terminal token, if any)\n\t    line:        (yylineno)\n\t  }\n\t  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n\t    loc:         (yylloc)\n\t    expected:    (string describing the set of expected tokens)\n\t    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n\t  }\n\t*/\n\t\"use strict\";\n\t\n\tvar sequenceDiagram = (function () {\n\t    var o = function o(k, v, _o, l) {\n\t        for (_o = _o || {}, l = k.length; l--; _o[k[l]] = v);return _o;\n\t    },\n\t        $V0 = [2, 2],\n\t        $V1 = [1, 5],\n\t        $V2 = [1, 7],\n\t        $V3 = [1, 8],\n\t        $V4 = [1, 11],\n\t        $V5 = [1, 12],\n\t        $V6 = [1, 13],\n\t        $V7 = [1, 14],\n\t        $V8 = [1, 16],\n\t        $V9 = [1, 17],\n\t        $Va = [1, 7, 9, 10, 16, 18, 19, 20, 21, 22, 23, 33],\n\t        $Vb = [7, 9, 10, 16, 18, 19, 20, 21, 23, 33],\n\t        $Vc = [1, 53];\n\t    var parser = { trace: function trace() {},\n\t        yy: {},\n\t        symbols_: { \"error\": 2, \"start\": 3, \"SD\": 4, \"document\": 5, \"line\": 6, \"SPACE\": 7, \"statement\": 8, \"NL\": 9, \"participant\": 10, \"actor\": 11, \"AS\": 12, \"restOfLine\": 13, \"signal\": 14, \"note_statement\": 15, \"title\": 16, \"text\": 17, \"loop\": 18, \"end\": 19, \"opt\": 20, \"alt\": 21, \"else\": 22, \"note\": 23, \"placement\": 24, \"text2\": 25, \"over\": 26, \"actor_pair\": 27, \"spaceList\": 28, \",\": 29, \"left_of\": 30, \"right_of\": 31, \"signaltype\": 32, \"ACTOR\": 33, \"SOLID_OPEN_ARROW\": 34, \"DOTTED_OPEN_ARROW\": 35, \"SOLID_ARROW\": 36, \"DOTTED_ARROW\": 37, \"SOLID_CROSS\": 38, \"DOTTED_CROSS\": 39, \"TXT\": 40, \"$accept\": 0, \"$end\": 1 },\n\t        terminals_: { 2: \"error\", 4: \"SD\", 7: \"SPACE\", 9: \"NL\", 10: \"participant\", 12: \"AS\", 13: \"restOfLine\", 16: \"title\", 17: \"text\", 18: \"loop\", 19: \"end\", 20: \"opt\", 21: \"alt\", 22: \"else\", 23: \"note\", 26: \"over\", 29: \",\", 30: \"left_of\", 31: \"right_of\", 33: \"ACTOR\", 34: \"SOLID_OPEN_ARROW\", 35: \"DOTTED_OPEN_ARROW\", 36: \"SOLID_ARROW\", 37: \"DOTTED_ARROW\", 38: \"SOLID_CROSS\", 39: \"DOTTED_CROSS\", 40: \"TXT\" },\n\t        productions_: [0, [3, 2], [5, 0], [5, 2], [6, 2], [6, 1], [6, 1], [8, 5], [8, 3], [8, 2], [8, 2], [8, 4], [8, 4], [8, 4], [8, 7], [15, 4], [15, 4], [28, 2], [28, 1], [27, 3], [27, 1], [24, 1], [24, 1], [14, 4], [11, 1], [32, 1], [32, 1], [32, 1], [32, 1], [32, 1], [32, 1], [25, 1]],\n\t        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, /* action[1] */$$, /* vstack */_$ /* lstack */) {\n\t            /* this == yyval */\n\t\n\t            var $0 = $$.length - 1;\n\t            switch (yystate) {\n\t                case 1:\n\t                    yy.apply($$[$0]);return $$[$0];\n\t                    break;\n\t                case 2:\n\t                    this.$ = [];\n\t                    break;\n\t                case 3:\n\t                    $$[$0 - 1].push($$[$0]);this.$ = $$[$0 - 1];\n\t                    break;\n\t                case 4:case 5:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 6:\n\t                    this.$ = [];\n\t                    break;\n\t                case 7:\n\t                    $$[$0 - 3].description = $$[$0 - 1];this.$ = $$[$0 - 3];\n\t                    break;\n\t                case 8:\n\t                    this.$ = $$[$0 - 1];\n\t                    break;\n\t                case 12:\n\t\n\t                    $$[$0 - 1].unshift({ type: 'loopStart', loopText: $$[$0 - 2], signalType: yy.LINETYPE.LOOP_START });\n\t                    $$[$0 - 1].push({ type: 'loopEnd', loopText: $$[$0 - 2], signalType: yy.LINETYPE.LOOP_END });\n\t                    this.$ = $$[$0 - 1];\n\t                    break;\n\t                case 13:\n\t\n\t                    $$[$0 - 1].unshift({ type: 'optStart', optText: $$[$0 - 2], signalType: yy.LINETYPE.OPT_START });\n\t                    $$[$0 - 1].push({ type: 'optEnd', optText: $$[$0 - 2], signalType: yy.LINETYPE.OPT_END });\n\t                    this.$ = $$[$0 - 1];\n\t                    break;\n\t                case 14:\n\t\n\t                    // Alt start\n\t                    $$[$0 - 4].unshift({ type: 'altStart', altText: $$[$0 - 5], signalType: yy.LINETYPE.ALT_START });\n\t                    // Content in alt is already in $$[$0-4]\n\t                    // Else\n\t                    $$[$0 - 4].push({ type: 'else', altText: $$[$0 - 2], signalType: yy.LINETYPE.ALT_ELSE });\n\t                    // Content in other alt\n\t                    $$[$0 - 4] = $$[$0 - 4].concat($$[$0 - 1]);\n\t                    // End\n\t                    $$[$0 - 4].push({ type: 'altEnd', signalType: yy.LINETYPE.ALT_END });\n\t\n\t                    this.$ = $$[$0 - 4];\n\t                    break;\n\t                case 15:\n\t\n\t                    this.$ = [$$[$0 - 1], { type: 'addNote', placement: $$[$0 - 2], actor: $$[$0 - 1].actor, text: $$[$0] }];\n\t                    break;\n\t                case 16:\n\t\n\t                    // Coerce actor_pair into a [to, from, ...] array\n\t                    $$[$0 - 2] = [].concat($$[$0 - 1], $$[$0 - 1]).slice(0, 2);\n\t                    $$[$0 - 2][0] = $$[$0 - 2][0].actor;\n\t                    $$[$0 - 2][1] = $$[$0 - 2][1].actor;\n\t                    this.$ = [$$[$0 - 1], { type: 'addNote', placement: yy.PLACEMENT.OVER, actor: $$[$0 - 2].slice(0, 2), text: $$[$0] }];\n\t                    break;\n\t                case 19:\n\t                    this.$ = [$$[$0 - 2], $$[$0]];\n\t                    break;\n\t                case 20:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 21:\n\t                    this.$ = yy.PLACEMENT.LEFTOF;\n\t                    break;\n\t                case 22:\n\t                    this.$ = yy.PLACEMENT.RIGHTOF;\n\t                    break;\n\t                case 23:\n\t                    this.$ = [$$[$0 - 3], $$[$0 - 1], { type: 'addMessage', from: $$[$0 - 3].actor, to: $$[$0 - 1].actor, signalType: $$[$0 - 2], msg: $$[$0] }];\n\t                    break;\n\t                case 24:\n\t                    this.$ = { type: 'addActor', actor: $$[$0] };\n\t                    break;\n\t                case 25:\n\t                    this.$ = yy.LINETYPE.SOLID_OPEN;\n\t                    break;\n\t                case 26:\n\t                    this.$ = yy.LINETYPE.DOTTED_OPEN;\n\t                    break;\n\t                case 27:\n\t                    this.$ = yy.LINETYPE.SOLID;\n\t                    break;\n\t                case 28:\n\t                    this.$ = yy.LINETYPE.DOTTED;\n\t                    break;\n\t                case 29:\n\t                    this.$ = yy.LINETYPE.SOLID_CROSS;\n\t                    break;\n\t                case 30:\n\t                    this.$ = yy.LINETYPE.DOTTED_CROSS;\n\t                    break;\n\t                case 31:\n\t                    this.$ = $$[$0].substring(1).trim().replace(/\\\\n/gm, \"\\n\");\n\t                    break;\n\t            }\n\t        },\n\t        table: [{ 3: 1, 4: [1, 2] }, { 1: [3] }, o([1, 7, 9, 10, 16, 18, 20, 21, 23, 33], $V0, { 5: 3 }), { 1: [2, 1], 6: 4, 7: $V1, 8: 6, 9: $V2, 10: $V3, 11: 15, 14: 9, 15: 10, 16: $V4, 18: $V5, 20: $V6, 21: $V7, 23: $V8, 33: $V9 }, o($Va, [2, 3]), { 8: 18, 10: $V3, 11: 15, 14: 9, 15: 10, 16: $V4, 18: $V5, 20: $V6, 21: $V7, 23: $V8, 33: $V9 }, o($Va, [2, 5]), o($Va, [2, 6]), { 11: 19, 33: $V9 }, { 9: [1, 20] }, { 9: [1, 21] }, { 7: [1, 22] }, { 13: [1, 23] }, { 13: [1, 24] }, { 13: [1, 25] }, { 32: 26, 34: [1, 27], 35: [1, 28], 36: [1, 29], 37: [1, 30], 38: [1, 31], 39: [1, 32] }, { 24: 33, 26: [1, 34], 30: [1, 35], 31: [1, 36] }, o([9, 12, 29, 34, 35, 36, 37, 38, 39, 40], [2, 24]), o($Va, [2, 4]), { 9: [1, 38], 12: [1, 37] }, o($Va, [2, 9]), o($Va, [2, 10]), { 17: [1, 39] }, o($Vb, $V0, { 5: 40 }), o($Vb, $V0, { 5: 41 }), o([7, 9, 10, 16, 18, 20, 21, 22, 23, 33], $V0, { 5: 42 }), { 11: 43, 33: $V9 }, { 33: [2, 25] }, { 33: [2, 26] }, { 33: [2, 27] }, { 33: [2, 28] }, { 33: [2, 29] }, { 33: [2, 30] }, { 11: 44, 33: $V9 }, { 11: 46, 27: 45, 33: $V9 }, { 33: [2, 21] }, { 33: [2, 22] }, { 13: [1, 47] }, o($Va, [2, 8]), { 9: [1, 48] }, { 6: 4, 7: $V1, 8: 6, 9: $V2, 10: $V3, 11: 15, 14: 9, 15: 10, 16: $V4, 18: $V5, 19: [1, 49], 20: $V6, 21: $V7, 23: $V8, 33: $V9 }, { 6: 4, 7: $V1, 8: 6, 9: $V2, 10: $V3, 11: 15, 14: 9, 15: 10, 16: $V4, 18: $V5, 19: [1, 50], 20: $V6, 21: $V7, 23: $V8, 33: $V9 }, { 6: 4, 7: $V1, 8: 6, 9: $V2, 10: $V3, 11: 15, 14: 9, 15: 10, 16: $V4, 18: $V5, 20: $V6, 21: $V7, 22: [1, 51], 23: $V8, 33: $V9 }, { 25: 52, 40: $Vc }, { 25: 54, 40: $Vc }, { 25: 55, 40: $Vc }, { 29: [1, 56], 40: [2, 20] }, { 9: [1, 57] }, o($Va, [2, 11]), o($Va, [2, 12]), o($Va, [2, 13]), { 13: [1, 58] }, { 9: [2, 23] }, { 9: [2, 31] }, { 9: [2, 15] }, { 9: [2, 16] }, { 11: 59, 33: $V9 }, o($Va, [2, 7]), o($Vb, $V0, { 5: 60 }), { 40: [2, 19] }, { 6: 4, 7: $V1, 8: 6, 9: $V2, 10: $V3, 11: 15, 14: 9, 15: 10, 16: $V4, 18: $V5, 19: [1, 61], 20: $V6, 21: $V7, 23: $V8, 33: $V9 }, o($Va, [2, 14])],\n\t        defaultActions: { 27: [2, 25], 28: [2, 26], 29: [2, 27], 30: [2, 28], 31: [2, 29], 32: [2, 30], 35: [2, 21], 36: [2, 22], 52: [2, 23], 53: [2, 31], 54: [2, 15], 55: [2, 16], 59: [2, 19] },\n\t        parseError: function parseError(str, hash) {\n\t            if (hash.recoverable) {\n\t                this.trace(str);\n\t            } else {\n\t                var _parseError = function _parseError(msg, hash) {\n\t                    this.message = msg;\n\t                    this.hash = hash;\n\t                };\n\t\n\t                _parseError.prototype = new Error();\n\t\n\t                throw new _parseError(str, hash);\n\t            }\n\t        },\n\t        parse: function parse(input) {\n\t            var self = this,\n\t                stack = [0],\n\t                tstack = [],\n\t                vstack = [null],\n\t                lstack = [],\n\t                table = this.table,\n\t                yytext = '',\n\t                yylineno = 0,\n\t                yyleng = 0,\n\t                recovering = 0,\n\t                TERROR = 2,\n\t                EOF = 1;\n\t            var args = lstack.slice.call(arguments, 1);\n\t            var lexer = Object.create(this.lexer);\n\t            var sharedState = { yy: {} };\n\t            for (var k in this.yy) {\n\t                if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n\t                    sharedState.yy[k] = this.yy[k];\n\t                }\n\t            }\n\t            lexer.setInput(input, sharedState.yy);\n\t            sharedState.yy.lexer = lexer;\n\t            sharedState.yy.parser = this;\n\t            if (typeof lexer.yylloc == 'undefined') {\n\t                lexer.yylloc = {};\n\t            }\n\t            var yyloc = lexer.yylloc;\n\t            lstack.push(yyloc);\n\t            var ranges = lexer.options && lexer.options.ranges;\n\t            if (typeof sharedState.yy.parseError === 'function') {\n\t                this.parseError = sharedState.yy.parseError;\n\t            } else {\n\t                this.parseError = Object.getPrototypeOf(this).parseError;\n\t            }\n\t            function popStack(n) {\n\t                stack.length = stack.length - 2 * n;\n\t                vstack.length = vstack.length - n;\n\t                lstack.length = lstack.length - n;\n\t            }\n\t            _token_stack: var lex = function lex() {\n\t                var token;\n\t                token = lexer.lex() || EOF;\n\t                if (typeof token !== 'number') {\n\t                    token = self.symbols_[token] || token;\n\t                }\n\t                return token;\n\t            };\n\t            var symbol,\n\t                preErrorSymbol,\n\t                state,\n\t                action,\n\t                a,\n\t                r,\n\t                yyval = {},\n\t                p,\n\t                len,\n\t                newState,\n\t                expected;\n\t            while (true) {\n\t                state = stack[stack.length - 1];\n\t                if (this.defaultActions[state]) {\n\t                    action = this.defaultActions[state];\n\t                } else {\n\t                    if (symbol === null || typeof symbol == 'undefined') {\n\t                        symbol = lex();\n\t                    }\n\t                    action = table[state] && table[state][symbol];\n\t                }\n\t                if (typeof action === 'undefined' || !action.length || !action[0]) {\n\t                    var errStr = '';\n\t                    expected = [];\n\t                    for (p in table[state]) {\n\t                        if (this.terminals_[p] && p > TERROR) {\n\t                            expected.push('\\'' + this.terminals_[p] + '\\'');\n\t                        }\n\t                    }\n\t                    if (lexer.showPosition) {\n\t                        errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n\t                    } else {\n\t                        errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n\t                    }\n\t                    this.parseError(errStr, {\n\t                        text: lexer.match,\n\t                        token: this.terminals_[symbol] || symbol,\n\t                        line: lexer.yylineno,\n\t                        loc: yyloc,\n\t                        expected: expected\n\t                    });\n\t                }\n\t                if (action[0] instanceof Array && action.length > 1) {\n\t                    throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n\t                }\n\t                switch (action[0]) {\n\t                    case 1:\n\t                        stack.push(symbol);\n\t                        vstack.push(lexer.yytext);\n\t                        lstack.push(lexer.yylloc);\n\t                        stack.push(action[1]);\n\t                        symbol = null;\n\t                        if (!preErrorSymbol) {\n\t                            yyleng = lexer.yyleng;\n\t                            yytext = lexer.yytext;\n\t                            yylineno = lexer.yylineno;\n\t                            yyloc = lexer.yylloc;\n\t                            if (recovering > 0) {\n\t                                recovering--;\n\t                            }\n\t                        } else {\n\t                            symbol = preErrorSymbol;\n\t                            preErrorSymbol = null;\n\t                        }\n\t                        break;\n\t                    case 2:\n\t                        len = this.productions_[action[1]][1];\n\t                        yyval.$ = vstack[vstack.length - len];\n\t                        yyval._$ = {\n\t                            first_line: lstack[lstack.length - (len || 1)].first_line,\n\t                            last_line: lstack[lstack.length - 1].last_line,\n\t                            first_column: lstack[lstack.length - (len || 1)].first_column,\n\t                            last_column: lstack[lstack.length - 1].last_column\n\t                        };\n\t                        if (ranges) {\n\t                            yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\n\t                        }\n\t                        r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\n\t                        if (typeof r !== 'undefined') {\n\t                            return r;\n\t                        }\n\t                        if (len) {\n\t                            stack = stack.slice(0, -1 * len * 2);\n\t                            vstack = vstack.slice(0, -1 * len);\n\t                            lstack = lstack.slice(0, -1 * len);\n\t                        }\n\t                        stack.push(this.productions_[action[1]][0]);\n\t                        vstack.push(yyval.$);\n\t                        lstack.push(yyval._$);\n\t                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n\t                        stack.push(newState);\n\t                        break;\n\t                    case 3:\n\t                        return true;\n\t                }\n\t            }\n\t            return true;\n\t        } };\n\t\n\t    /* generated by jison-lex 0.3.4 */\n\t    var lexer = (function () {\n\t        var lexer = {\n\t\n\t            EOF: 1,\n\t\n\t            parseError: function parseError(str, hash) {\n\t                if (this.yy.parser) {\n\t                    this.yy.parser.parseError(str, hash);\n\t                } else {\n\t                    throw new Error(str);\n\t                }\n\t            },\n\t\n\t            // resets the lexer, sets new input\n\t            setInput: function setInput(input, yy) {\n\t                this.yy = yy || this.yy || {};\n\t                this._input = input;\n\t                this._more = this._backtrack = this.done = false;\n\t                this.yylineno = this.yyleng = 0;\n\t                this.yytext = this.matched = this.match = '';\n\t                this.conditionStack = ['INITIAL'];\n\t                this.yylloc = {\n\t                    first_line: 1,\n\t                    first_column: 0,\n\t                    last_line: 1,\n\t                    last_column: 0\n\t                };\n\t                if (this.options.ranges) {\n\t                    this.yylloc.range = [0, 0];\n\t                }\n\t                this.offset = 0;\n\t                return this;\n\t            },\n\t\n\t            // consumes and returns one char from the input\n\t            input: function input() {\n\t                var ch = this._input[0];\n\t                this.yytext += ch;\n\t                this.yyleng++;\n\t                this.offset++;\n\t                this.match += ch;\n\t                this.matched += ch;\n\t                var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n\t                if (lines) {\n\t                    this.yylineno++;\n\t                    this.yylloc.last_line++;\n\t                } else {\n\t                    this.yylloc.last_column++;\n\t                }\n\t                if (this.options.ranges) {\n\t                    this.yylloc.range[1]++;\n\t                }\n\t\n\t                this._input = this._input.slice(1);\n\t                return ch;\n\t            },\n\t\n\t            // unshifts one char (or a string) into the input\n\t            unput: function unput(ch) {\n\t                var len = ch.length;\n\t                var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\t\n\t                this._input = ch + this._input;\n\t                this.yytext = this.yytext.substr(0, this.yytext.length - len);\n\t                //this.yyleng -= len;\n\t                this.offset -= len;\n\t                var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n\t                this.match = this.match.substr(0, this.match.length - 1);\n\t                this.matched = this.matched.substr(0, this.matched.length - 1);\n\t\n\t                if (lines.length - 1) {\n\t                    this.yylineno -= lines.length - 1;\n\t                }\n\t                var r = this.yylloc.range;\n\t\n\t                this.yylloc = {\n\t                    first_line: this.yylloc.first_line,\n\t                    last_line: this.yylineno + 1,\n\t                    first_column: this.yylloc.first_column,\n\t                    last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n\t                };\n\t\n\t                if (this.options.ranges) {\n\t                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n\t                }\n\t                this.yyleng = this.yytext.length;\n\t                return this;\n\t            },\n\t\n\t            // When called from action, caches matched text and appends it on next action\n\t            more: function more() {\n\t                this._more = true;\n\t                return this;\n\t            },\n\t\n\t            // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\n\t            reject: function reject() {\n\t                if (this.options.backtrack_lexer) {\n\t                    this._backtrack = true;\n\t                } else {\n\t                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n\t                        text: \"\",\n\t                        token: null,\n\t                        line: this.yylineno\n\t                    });\n\t                }\n\t                return this;\n\t            },\n\t\n\t            // retain first n characters of the match\n\t            less: function less(n) {\n\t                this.unput(this.match.slice(n));\n\t            },\n\t\n\t            // displays already matched input, i.e. for error messages\n\t            pastInput: function pastInput() {\n\t                var past = this.matched.substr(0, this.matched.length - this.match.length);\n\t                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\\n/g, \"\");\n\t            },\n\t\n\t            // displays upcoming input, i.e. for error messages\n\t            upcomingInput: function upcomingInput() {\n\t                var next = this.match;\n\t                if (next.length < 20) {\n\t                    next += this._input.substr(0, 20 - next.length);\n\t                }\n\t                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n\t            },\n\t\n\t            // displays the character position where the lexing error occurred, i.e. for error messages\n\t            showPosition: function showPosition() {\n\t                var pre = this.pastInput();\n\t                var c = new Array(pre.length + 1).join(\"-\");\n\t                return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n\t            },\n\t\n\t            // test the lexed token: return FALSE when not a match, otherwise return token\n\t            test_match: function test_match(match, indexed_rule) {\n\t                var token, lines, backup;\n\t\n\t                if (this.options.backtrack_lexer) {\n\t                    // save context\n\t                    backup = {\n\t                        yylineno: this.yylineno,\n\t                        yylloc: {\n\t                            first_line: this.yylloc.first_line,\n\t                            last_line: this.last_line,\n\t                            first_column: this.yylloc.first_column,\n\t                            last_column: this.yylloc.last_column\n\t                        },\n\t                        yytext: this.yytext,\n\t                        match: this.match,\n\t                        matches: this.matches,\n\t                        matched: this.matched,\n\t                        yyleng: this.yyleng,\n\t                        offset: this.offset,\n\t                        _more: this._more,\n\t                        _input: this._input,\n\t                        yy: this.yy,\n\t                        conditionStack: this.conditionStack.slice(0),\n\t                        done: this.done\n\t                    };\n\t                    if (this.options.ranges) {\n\t                        backup.yylloc.range = this.yylloc.range.slice(0);\n\t                    }\n\t                }\n\t\n\t                lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n\t                if (lines) {\n\t                    this.yylineno += lines.length;\n\t                }\n\t                this.yylloc = {\n\t                    first_line: this.yylloc.last_line,\n\t                    last_line: this.yylineno + 1,\n\t                    first_column: this.yylloc.last_column,\n\t                    last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\n\t                };\n\t                this.yytext += match[0];\n\t                this.match += match[0];\n\t                this.matches = match;\n\t                this.yyleng = this.yytext.length;\n\t                if (this.options.ranges) {\n\t                    this.yylloc.range = [this.offset, this.offset += this.yyleng];\n\t                }\n\t                this._more = false;\n\t                this._backtrack = false;\n\t                this._input = this._input.slice(match[0].length);\n\t                this.matched += match[0];\n\t                token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n\t                if (this.done && this._input) {\n\t                    this.done = false;\n\t                }\n\t                if (token) {\n\t                    return token;\n\t                } else if (this._backtrack) {\n\t                    // recover context\n\t                    for (var k in backup) {\n\t                        this[k] = backup[k];\n\t                    }\n\t                    return false; // rule action called reject() implying the next rule should be tested instead.\n\t                }\n\t                return false;\n\t            },\n\t\n\t            // return next match in input\n\t            next: function next() {\n\t                if (this.done) {\n\t                    return this.EOF;\n\t                }\n\t                if (!this._input) {\n\t                    this.done = true;\n\t                }\n\t\n\t                var token, match, tempMatch, index;\n\t                if (!this._more) {\n\t                    this.yytext = '';\n\t                    this.match = '';\n\t                }\n\t                var rules = this._currentRules();\n\t                for (var i = 0; i < rules.length; i++) {\n\t                    tempMatch = this._input.match(this.rules[rules[i]]);\n\t                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n\t                        match = tempMatch;\n\t                        index = i;\n\t                        if (this.options.backtrack_lexer) {\n\t                            token = this.test_match(tempMatch, rules[i]);\n\t                            if (token !== false) {\n\t                                return token;\n\t                            } else if (this._backtrack) {\n\t                                match = false;\n\t                                continue; // rule action called reject() implying a rule MISmatch.\n\t                            } else {\n\t                                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n\t                                    return false;\n\t                                }\n\t                        } else if (!this.options.flex) {\n\t                            break;\n\t                        }\n\t                    }\n\t                }\n\t                if (match) {\n\t                    token = this.test_match(match, rules[index]);\n\t                    if (token !== false) {\n\t                        return token;\n\t                    }\n\t                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n\t                    return false;\n\t                }\n\t                if (this._input === \"\") {\n\t                    return this.EOF;\n\t                } else {\n\t                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n\t                        text: \"\",\n\t                        token: null,\n\t                        line: this.yylineno\n\t                    });\n\t                }\n\t            },\n\t\n\t            // return next match that has a token\n\t            lex: function lex() {\n\t                var r = this.next();\n\t                if (r) {\n\t                    return r;\n\t                } else {\n\t                    return this.lex();\n\t                }\n\t            },\n\t\n\t            // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\n\t            begin: function begin(condition) {\n\t                this.conditionStack.push(condition);\n\t            },\n\t\n\t            // pop the previously active lexer condition state off the condition stack\n\t            popState: function popState() {\n\t                var n = this.conditionStack.length - 1;\n\t                if (n > 0) {\n\t                    return this.conditionStack.pop();\n\t                } else {\n\t                    return this.conditionStack[0];\n\t                }\n\t            },\n\t\n\t            // produce the lexer rule set which is active for the currently active lexer condition state\n\t            _currentRules: function _currentRules() {\n\t                if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n\t                    return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n\t                } else {\n\t                    return this.conditions[\"INITIAL\"].rules;\n\t                }\n\t            },\n\t\n\t            // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\n\t            topState: function topState(n) {\n\t                n = this.conditionStack.length - 1 - Math.abs(n || 0);\n\t                if (n >= 0) {\n\t                    return this.conditionStack[n];\n\t                } else {\n\t                    return \"INITIAL\";\n\t                }\n\t            },\n\t\n\t            // alias for begin(condition)\n\t            pushState: function pushState(condition) {\n\t                this.begin(condition);\n\t            },\n\t\n\t            // return the number of states currently on the stack\n\t            stateStackSize: function stateStackSize() {\n\t                return this.conditionStack.length;\n\t            },\n\t            options: { \"case-insensitive\": true },\n\t            performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n\t                var YYSTATE = YY_START;\n\t                switch ($avoiding_name_collisions) {\n\t                    case 0:\n\t                        return 9;\n\t                        break;\n\t                    case 1:\n\t                        /* skip all whitespace */\n\t                        break;\n\t                    case 2:\n\t                        /* skip same-line whitespace */\n\t                        break;\n\t                    case 3:\n\t                        /* skip comments */\n\t                        break;\n\t                    case 4:\n\t                        /* skip comments */\n\t                        break;\n\t                    case 5:\n\t                        this.begin('ID');return 10;\n\t                        break;\n\t                    case 6:\n\t                        this.begin('ALIAS');return 33;\n\t                        break;\n\t                    case 7:\n\t                        this.popState();this.popState();this.begin('LINE');return 12;\n\t                        break;\n\t                    case 8:\n\t                        this.popState();this.popState();return 9;\n\t                        break;\n\t                    case 9:\n\t                        this.begin('LINE');return 18;\n\t                        break;\n\t                    case 10:\n\t                        this.begin('LINE');return 20;\n\t                        break;\n\t                    case 11:\n\t                        this.begin('LINE');return 21;\n\t                        break;\n\t                    case 12:\n\t                        this.begin('LINE');return 22;\n\t                        break;\n\t                    case 13:\n\t                        this.popState();return 13;\n\t                        break;\n\t                    case 14:\n\t                        return 19;\n\t                        break;\n\t                    case 15:\n\t                        return 30;\n\t                        break;\n\t                    case 16:\n\t                        return 31;\n\t                        break;\n\t                    case 17:\n\t                        return 26;\n\t                        break;\n\t                    case 18:\n\t                        return 23;\n\t                        break;\n\t                    case 19:\n\t                        return 16;\n\t                        break;\n\t                    case 20:\n\t                        return 4;\n\t                        break;\n\t                    case 21:\n\t                        return 29;\n\t                        break;\n\t                    case 22:\n\t                        return 9;\n\t                        break;\n\t                    case 23:\n\t                        return 33;\n\t                        break;\n\t                    case 24:\n\t                        return 36;\n\t                        break;\n\t                    case 25:\n\t                        return 37;\n\t                        break;\n\t                    case 26:\n\t                        return 34;\n\t                        break;\n\t                    case 27:\n\t                        return 35;\n\t                        break;\n\t                    case 28:\n\t                        return 38;\n\t                        break;\n\t                    case 29:\n\t                        return 39;\n\t                        break;\n\t                    case 30:\n\t                        return 40;\n\t                        break;\n\t                    case 31:\n\t                        return 9;\n\t                        break;\n\t                    case 32:\n\t                        return 'INVALID';\n\t                        break;\n\t                }\n\t            },\n\t            rules: [/^(?:[\\n]+)/i, /^(?:\\s+)/i, /^(?:((?!\\n)\\s)+)/i, /^(?:#[^\\n]*)/i, /^(?:%[^\\n]*)/i, /^(?:participant\\b)/i, /^(?:[^\\->:\\n,;]+?(?=((?!\\n)\\s)+as(?!\\n)\\s|[#\\n;]|$))/i, /^(?:as\\b)/i, /^(?:(?:))/i, /^(?:loop\\b)/i, /^(?:opt\\b)/i, /^(?:alt\\b)/i, /^(?:else\\b)/i, /^(?:[^#\\n;]*)/i, /^(?:end\\b)/i, /^(?:left of\\b)/i, /^(?:right of\\b)/i, /^(?:over\\b)/i, /^(?:note\\b)/i, /^(?:title\\b)/i, /^(?:sequenceDiagram\\b)/i, /^(?:,)/i, /^(?:;)/i, /^(?:[^\\->:\\n,;]+)/i, /^(?:->>)/i, /^(?:-->>)/i, /^(?:->)/i, /^(?:-->)/i, /^(?:-[x])/i, /^(?:--[x])/i, /^(?::[^#\\n;]+)/i, /^(?:$)/i, /^(?:.)/i],\n\t            conditions: { \"LINE\": { \"rules\": [2, 3, 13], \"inclusive\": false }, \"ALIAS\": { \"rules\": [2, 3, 7, 8], \"inclusive\": false }, \"ID\": { \"rules\": [2, 3, 6], \"inclusive\": false }, \"INITIAL\": { \"rules\": [0, 1, 3, 4, 5, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], \"inclusive\": true } }\n\t        };\n\t        return lexer;\n\t    })();\n\t    parser.lexer = lexer;\n\t    function Parser() {\n\t        this.yy = {};\n\t    }\n\t    Parser.prototype = parser;parser.Parser = Parser;\n\t    return new Parser();\n\t})();\n\t\n\tif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\n\t    exports.parser = sequenceDiagram;\n\t    exports.Parser = sequenceDiagram.Parser;\n\t    exports.parse = function () {\n\t        return sequenceDiagram.parse.apply(sequenceDiagram, arguments);\n\t    };\n\t    exports.main = function commonjsMain(args) {\n\t        if (!args[1]) {\n\t            console.log('Usage: ' + args[0] + ' FILE');\n\t            process.exit(1);\n\t        }\n\t        var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n\t        return exports.parser.parse(source);\n\t    };\n\t    if (typeof module !== 'undefined' && require.main === module) {\n\t        exports.main(process.argv.slice(1));\n\t    }\n\t}\n\t\n\t}).call(this,require('_process'))\n\t},{\"_process\":3,\"fs\":1,\"path\":2}],123:[function(require,module,exports){\n\t(function (global){\n\t/**\n\t * Created by knut on 14-11-19.\n\t */\n\t'use strict';\n\t\n\tvar actors = {};\n\tvar messages = [];\n\tvar notes = [];\n\tvar Logger = require('../../logger');\n\tvar log = new Logger.Log();\n\t\n\texports.addActor = function (id, name, description) {\n\t    // Don't allow description nulling\n\t    var old = actors[id];\n\t    if (old && name === old.name && description == null) return;\n\t\n\t    // Don't allow null descriptions, either\n\t    if (description == null) description = name;\n\t\n\t    actors[id] = { name: name, description: description };\n\t};\n\t\n\texports.addMessage = function (idFrom, idTo, message, answer) {\n\t    messages.push({ from: idFrom, to: idTo, message: message, answer: answer });\n\t};\n\t\n\t/**\n\t *\n\t */\n\texports.addSignal = function (idFrom, idTo, message, messageType) {\n\t    log.debug('Adding message from=' + idFrom + ' to=' + idTo + ' message=' + message + ' type=' + messageType);\n\t    messages.push({ from: idFrom, to: idTo, message: message, type: messageType });\n\t};\n\t\n\texports.getMessages = function () {\n\t    return messages;\n\t};\n\t\n\texports.getActors = function () {\n\t    return actors;\n\t};\n\texports.getActor = function (id) {\n\t    return actors[id];\n\t};\n\texports.getActorKeys = function () {\n\t    return Object.keys(actors);\n\t};\n\t\n\texports.clear = function () {\n\t    actors = {};\n\t    messages = [];\n\t};\n\t\n\texports.LINETYPE = {\n\t    SOLID: 0,\n\t    DOTTED: 1,\n\t    NOTE: 2,\n\t    SOLID_CROSS: 3,\n\t    DOTTED_CROSS: 4,\n\t    SOLID_OPEN: 5,\n\t    DOTTED_OPEN: 6,\n\t    LOOP_START: 10,\n\t    LOOP_END: 11,\n\t    ALT_START: 12,\n\t    ALT_ELSE: 13,\n\t    ALT_END: 14,\n\t    OPT_START: 15,\n\t    OPT_END: 16\n\t};\n\t\n\texports.ARROWTYPE = {\n\t    FILLED: 0,\n\t    OPEN: 1\n\t};\n\t\n\texports.PLACEMENT = {\n\t    LEFTOF: 0,\n\t    RIGHTOF: 1,\n\t    OVER: 2\n\t};\n\t\n\texports.addNote = function (actor, placement, message) {\n\t    var note = { actor: actor, placement: placement, message: message };\n\t\n\t    // Coerce actor into a [to, from, ...] array\n\t    var actors = [].concat(actor, actor);\n\t\n\t    notes.push(note);\n\t    messages.push({ from: actors[0], to: actors[1], message: message, type: exports.LINETYPE.NOTE, placement: placement });\n\t};\n\t\n\texports.parseError = function (err, hash) {\n\t    global.mermaidAPI.parseError(err, hash);\n\t};\n\t\n\texports.apply = function (param) {\n\t    if (param instanceof Array) {\n\t        param.forEach(function (item) {\n\t            exports.apply(item);\n\t        });\n\t    } else {\n\t        // log.debug(param);\n\t        switch (param.type) {\n\t            case 'addActor':\n\t                exports.addActor(param.actor, param.actor, param.description);\n\t                break;\n\t            case 'addNote':\n\t                exports.addNote(param.actor, param.placement, param.text);\n\t                break;\n\t            case 'addMessage':\n\t                exports.addSignal(param.from, param.to, param.msg, param.signalType);\n\t                break;\n\t            case 'loopStart':\n\t                //log.debug('Loop text: ',param.loopText);\n\t                exports.addSignal(undefined, undefined, param.loopText, param.signalType);\n\t                //yy.addSignal(undefined, undefined, $2, yy.LINETYPE.LOOP_START);\n\t                break;\n\t            case 'loopEnd':\n\t                exports.addSignal(undefined, undefined, undefined, param.signalType);\n\t                break;\n\t            case 'optStart':\n\t                //log.debug('Loop text: ',param.loopText);\n\t                exports.addSignal(undefined, undefined, param.optText, param.signalType);\n\t                //yy.addSignal(undefined, undefined, $2, yy.LINETYPE.LOOP_START);\n\t                break;\n\t            case 'optEnd':\n\t                exports.addSignal(undefined, undefined, undefined, param.signalType);\n\t                break;\n\t            case 'altStart':\n\t                //log.debug('Loop text: ',param.loopText);\n\t                exports.addSignal(undefined, undefined, param.altText, param.signalType);\n\t                //yy.addSignal(undefined, undefined, $2, yy.LINETYPE.LOOP_START);\n\t                break;\n\t            case 'else':\n\t                exports.addSignal(undefined, undefined, param.altText, param.signalType);\n\t                break;\n\t            case 'altEnd':\n\t                exports.addSignal(undefined, undefined, undefined, param.signalType);\n\t                break;\n\t        }\n\t    }\n\t};\n\t\n\t}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\t},{\"../../logger\":126}],124:[function(require,module,exports){\n\t/**\n\t * Created by knut on 14-11-23.\n\t */\n\t\n\t'use strict';\n\t\n\tvar sq = require('./parser/sequenceDiagram').parser;\n\tsq.yy = require('./sequenceDb');\n\tvar svgDraw = require('./svgDraw');\n\tvar d3 = require('../../d3');\n\tvar Logger = require('../../logger');\n\tvar log = new Logger.Log();\n\t\n\tvar conf = {\n\t\n\t    diagramMarginX: 50,\n\t    diagramMarginY: 10,\n\t    // Margin between actors\n\t    actorMargin: 50,\n\t    // Width of actor moxes\n\t    width: 150,\n\t    // Height of actor boxes\n\t    height: 65,\n\t    // Margin around loop boxes\n\t    boxMargin: 10,\n\t    boxTextMargin: 5,\n\t    noteMargin: 10,\n\t    // Space between messages\n\t    messageMargin: 35,\n\t    //mirror actors under diagram\n\t    mirrorActors: false,\n\t    // Depending on css styling this might need adjustment\n\t    // Prolongs the edge of the diagram downwards\n\t    bottomMarginAdj: 1\n\t};\n\t\n\t//var bb = getBBox('path');\n\texports.bounds = {\n\t    data: {\n\t        startx: undefined,\n\t        stopx: undefined,\n\t        starty: undefined,\n\t        stopy: undefined\n\t    },\n\t    verticalPos: 0,\n\t\n\t    list: [],\n\t    init: function init() {\n\t        this.list = [];\n\t        this.data = {\n\t            startx: undefined,\n\t            stopx: undefined,\n\t            starty: undefined,\n\t            stopy: undefined\n\t        };\n\t        this.verticalPos = 0;\n\t    },\n\t    updateVal: function updateVal(obj, key, val, fun) {\n\t        if (typeof obj[key] === 'undefined') {\n\t            obj[key] = val;\n\t        } else {\n\t            obj[key] = fun(val, obj[key]);\n\t        }\n\t    },\n\t    updateLoops: function updateLoops(startx, starty, stopx, stopy) {\n\t        var _self = this;\n\t        var cnt = 0;\n\t        this.list.forEach(function (loop) {\n\t            cnt++;\n\t            // The loop list is a stack so the biggest margins in the beginning of the list\n\t            var n = _self.list.length - cnt + 1;\n\t\n\t            _self.updateVal(loop, 'startx', startx - n * conf.boxMargin, Math.min);\n\t            _self.updateVal(loop, 'starty', starty - n * conf.boxMargin, Math.min);\n\t            _self.updateVal(loop, 'stopx', stopx + n * conf.boxMargin, Math.max);\n\t            _self.updateVal(loop, 'stopy', stopy + n * conf.boxMargin, Math.max);\n\t\n\t            _self.updateVal(exports.bounds.data, 'startx', startx - n * conf.boxMargin, Math.min);\n\t            _self.updateVal(exports.bounds.data, 'starty', starty - n * conf.boxMargin, Math.min);\n\t            _self.updateVal(exports.bounds.data, 'stopx', stopx + n * conf.boxMargin, Math.max);\n\t            _self.updateVal(exports.bounds.data, 'stopy', stopy + n * conf.boxMargin, Math.max);\n\t        });\n\t    },\n\t    insert: function insert(startx, starty, stopx, stopy) {\n\t\n\t        var _startx, _starty, _stopx, _stopy;\n\t\n\t        _startx = Math.min(startx, stopx);\n\t        _stopx = Math.max(startx, stopx);\n\t        _starty = Math.min(starty, stopy);\n\t        _stopy = Math.max(starty, stopy);\n\t\n\t        this.updateVal(exports.bounds.data, 'startx', _startx, Math.min);\n\t        this.updateVal(exports.bounds.data, 'starty', _starty, Math.min);\n\t        this.updateVal(exports.bounds.data, 'stopx', _stopx, Math.max);\n\t        this.updateVal(exports.bounds.data, 'stopy', _stopy, Math.max);\n\t\n\t        this.updateLoops(_startx, _starty, _stopx, _stopy);\n\t    },\n\t    newLoop: function newLoop(title) {\n\t        this.list.push({ startx: undefined, starty: this.verticalPos, stopx: undefined, stopy: undefined, title: title });\n\t    },\n\t    endLoop: function endLoop() {\n\t        var loop = this.list.pop();\n\t        //loop.stopy =  exports.bounds.getVerticalPos();\n\t        return loop;\n\t    },\n\t    addElseToLoop: function addElseToLoop(message) {\n\t        var loop = this.list.pop();\n\t        loop.elsey = exports.bounds.getVerticalPos();\n\t        loop.elseText = message;\n\t        this.list.push(loop);\n\t    },\n\t    bumpVerticalPos: function bumpVerticalPos(bump) {\n\t        this.verticalPos = this.verticalPos + bump;\n\t        this.data.stopy = this.verticalPos;\n\t    },\n\t    getVerticalPos: function getVerticalPos() {\n\t        return this.verticalPos;\n\t    },\n\t    getBounds: function getBounds() {\n\t        return this.data;\n\t    }\n\t};\n\t\n\t/**\n\t * Draws an actor in the diagram with the attaced line\n\t * @param center - The center of the the actor\n\t * @param pos The position if the actor in the liost of actors\n\t * @param description The text in the box\n\t */\n\tvar drawNote = function drawNote(elem, startx, verticalPos, msg, forceWidth) {\n\t    var rect = svgDraw.getNoteRect();\n\t    rect.x = startx;\n\t    rect.y = verticalPos;\n\t    rect.width = forceWidth || conf.width;\n\t    rect['class'] = 'note';\n\t\n\t    var g = elem.append('g');\n\t    var rectElem = svgDraw.drawRect(g, rect);\n\t\n\t    var textObj = svgDraw.getTextObj();\n\t    textObj.x = startx - 4;\n\t    textObj.y = verticalPos - 13;\n\t    textObj.textMargin = conf.noteMargin;\n\t    textObj.dy = '1em';\n\t    textObj.text = msg.message;\n\t    textObj['class'] = 'noteText';\n\t\n\t    var textElem = svgDraw.drawText(g, textObj, rect.width - conf.noteMargin);\n\t\n\t    var textHeight = textElem[0][0].getBBox().height;\n\t    if (!forceWidth && textHeight > conf.width) {\n\t        textElem.remove();\n\t        g = elem.append('g');\n\t\n\t        textElem = svgDraw.drawText(g, textObj, 2 * rect.width - conf.noteMargin);\n\t        textHeight = textElem[0][0].getBBox().height;\n\t        rectElem.attr('width', 2 * rect.width);\n\t        exports.bounds.insert(startx, verticalPos, startx + 2 * rect.width, verticalPos + 2 * conf.noteMargin + textHeight);\n\t    } else {\n\t        exports.bounds.insert(startx, verticalPos, startx + rect.width, verticalPos + 2 * conf.noteMargin + textHeight);\n\t    }\n\t\n\t    rectElem.attr('height', textHeight + 2 * conf.noteMargin);\n\t    exports.bounds.bumpVerticalPos(textHeight + 2 * conf.noteMargin);\n\t};\n\t\n\t/**\n\t * Draws a message\n\t * @param elem\n\t * @param startx\n\t * @param stopx\n\t * @param verticalPos\n\t * @param txtCenter\n\t * @param msg\n\t */\n\tvar drawMessage = function drawMessage(elem, startx, stopx, verticalPos, msg) {\n\t    var g = elem.append('g');\n\t    var txtCenter = startx + (stopx - startx) / 2;\n\t\n\t    var textElem = g.append('text') // text label for the x axis\n\t    .attr('x', txtCenter).attr('y', verticalPos - 7).style('text-anchor', 'middle').attr('class', 'messageText').text(msg.message);\n\t\n\t    var textWidth;\n\t\n\t    if (typeof textElem[0][0].getBBox !== 'undefined') {\n\t        textWidth = textElem[0][0].getBBox().width;\n\t    } else {\n\t        //textWidth = getBBox(textElem).width; //.getComputedTextLength()\n\t        textWidth = textElem[0][0].getBoundingClientRect();\n\t        //textWidth = textElem[0][0].getComputedTextLength();\n\t    }\n\t\n\t    var line;\n\t\n\t    if (startx === stopx) {\n\t        line = g.append('path').attr('d', 'M ' + startx + ',' + verticalPos + ' C ' + (startx + 60) + ',' + (verticalPos - 10) + ' ' + (startx + 60) + ',' + (verticalPos + 30) + ' ' + startx + ',' + (verticalPos + 20));\n\t\n\t        exports.bounds.bumpVerticalPos(30);\n\t        var dx = Math.max(textWidth / 2, 100);\n\t        exports.bounds.insert(startx - dx, exports.bounds.getVerticalPos() - 10, stopx + dx, exports.bounds.getVerticalPos());\n\t    } else {\n\t        line = g.append('line');\n\t        line.attr('x1', startx);\n\t        line.attr('y1', verticalPos);\n\t        line.attr('x2', stopx);\n\t        line.attr('y2', verticalPos);\n\t        exports.bounds.insert(startx, exports.bounds.getVerticalPos() - 10, stopx, exports.bounds.getVerticalPos());\n\t    }\n\t    //Make an SVG Container\n\t    //Draw the line\n\t    if (msg.type === sq.yy.LINETYPE.DOTTED || msg.type === sq.yy.LINETYPE.DOTTED_CROSS || msg.type === sq.yy.LINETYPE.DOTTED_OPEN) {\n\t        line.style('stroke-dasharray', '3, 3');\n\t        line.attr('class', 'messageLine1');\n\t    } else {\n\t        line.attr('class', 'messageLine0');\n\t    }\n\t\n\t    var url = '';\n\t    if (conf.arrowMarkerAbsolute) {\n\t        url = window.location.protocol + '//' + window.location.host + window.location.pathname + window.location.search;\n\t        url = url.replace(/\\(/g, '\\\\(');\n\t        url = url.replace(/\\)/g, '\\\\)');\n\t    }\n\t\n\t    line.attr('stroke-width', 2);\n\t    line.attr('stroke', 'black');\n\t    line.style('fill', 'none'); // remove any fill colour\n\t    if (msg.type === sq.yy.LINETYPE.SOLID || msg.type === sq.yy.LINETYPE.DOTTED) {\n\t        line.attr('marker-end', 'url(' + url + '#arrowhead)');\n\t    }\n\t\n\t    if (msg.type === sq.yy.LINETYPE.SOLID_CROSS || msg.type === sq.yy.LINETYPE.DOTTED_CROSS) {\n\t        line.attr('marker-end', 'url(' + url + '#crosshead)');\n\t    }\n\t};\n\t\n\tmodule.exports.drawActors = function (diagram, actors, actorKeys, verticalPos) {\n\t    var i;\n\t    // Draw the actors\n\t    for (i = 0; i < actorKeys.length; i++) {\n\t        var key = actorKeys[i];\n\t\n\t        // Add some rendering data to the object\n\t        actors[key].x = i * conf.actorMargin + i * conf.width;\n\t        actors[key].y = verticalPos;\n\t        actors[key].width = conf.diagramMarginY;\n\t        actors[key].height = conf.diagramMarginY;\n\t\n\t        // Draw the box with the attached line\n\t        svgDraw.drawActor(diagram, actors[key].x, verticalPos, actors[key].description, conf);\n\t        exports.bounds.insert(actors[key].x, verticalPos, actors[key].x + conf.width, conf.height);\n\t    }\n\t\n\t    // Add a margin between the actor boxes and the first arrow\n\t    //exports.bounds.bumpVerticalPos(conf.height+conf.messageMargin);\n\t    exports.bounds.bumpVerticalPos(conf.height);\n\t};\n\t\n\tmodule.exports.setConf = function (cnf) {\n\t    var keys = Object.keys(cnf);\n\t\n\t    keys.forEach(function (key) {\n\t        conf[key] = cnf[key];\n\t    });\n\t};\n\t/**\n\t * Draws a flowchart in the tag with id: id based on the graph definition in text.\n\t * @param text\n\t * @param id\n\t */\n\tmodule.exports.draw = function (text, id) {\n\t    sq.yy.clear();\n\t    sq.parse(text + '\\n');\n\t\n\t    exports.bounds.init();\n\t    var diagram = d3.select('#' + id);\n\t\n\t    var startx;\n\t    var stopx;\n\t    var forceWidth;\n\t\n\t    // Fetch data from the parsing\n\t    var actors = sq.yy.getActors();\n\t    var actorKeys = sq.yy.getActorKeys();\n\t    var messages = sq.yy.getMessages();\n\t    module.exports.drawActors(diagram, actors, actorKeys, 0);\n\t\n\t    // The arrow head definition is attached to the svg once\n\t    svgDraw.insertArrowHead(diagram);\n\t    svgDraw.insertArrowCrossHead(diagram);\n\t\n\t    // Draw the messages/signals\n\t    messages.forEach(function (msg) {\n\t        var loopData;\n\t\n\t        switch (msg.type) {\n\t            case sq.yy.LINETYPE.NOTE:\n\t                exports.bounds.bumpVerticalPos(conf.boxMargin);\n\t\n\t                startx = actors[msg.from].x;\n\t                stopx = actors[msg.to].x;\n\t\n\t                if (msg.placement === sq.yy.PLACEMENT.RIGHTOF) {\n\t                    drawNote(diagram, startx + (conf.width + conf.actorMargin) / 2, exports.bounds.getVerticalPos(), msg);\n\t                } else if (msg.placement === sq.yy.PLACEMENT.LEFTOF) {\n\t                    drawNote(diagram, startx - (conf.width + conf.actorMargin) / 2, exports.bounds.getVerticalPos(), msg);\n\t                } else if (msg.to === msg.from) {\n\t                    // Single-actor over\n\t                    drawNote(diagram, startx, exports.bounds.getVerticalPos(), msg);\n\t                } else {\n\t                    // Multi-actor over\n\t                    forceWidth = Math.abs(startx - stopx) + conf.actorMargin;\n\t                    drawNote(diagram, (startx + stopx + conf.width - forceWidth) / 2, exports.bounds.getVerticalPos(), msg, forceWidth);\n\t                }\n\t                break;\n\t            case sq.yy.LINETYPE.LOOP_START:\n\t                exports.bounds.bumpVerticalPos(conf.boxMargin);\n\t                exports.bounds.newLoop(msg.message);\n\t                exports.bounds.bumpVerticalPos(conf.boxMargin + conf.boxTextMargin);\n\t                break;\n\t            case sq.yy.LINETYPE.LOOP_END:\n\t                loopData = exports.bounds.endLoop();\n\t\n\t                svgDraw.drawLoop(diagram, loopData, 'loop', conf);\n\t                exports.bounds.bumpVerticalPos(conf.boxMargin);\n\t                break;\n\t            case sq.yy.LINETYPE.OPT_START:\n\t                exports.bounds.bumpVerticalPos(conf.boxMargin);\n\t                exports.bounds.newLoop(msg.message);\n\t                exports.bounds.bumpVerticalPos(conf.boxMargin + conf.boxTextMargin);\n\t                break;\n\t            case sq.yy.LINETYPE.OPT_END:\n\t                loopData = exports.bounds.endLoop();\n\t\n\t                svgDraw.drawLoop(diagram, loopData, 'opt', conf);\n\t                exports.bounds.bumpVerticalPos(conf.boxMargin);\n\t                break;\n\t            case sq.yy.LINETYPE.ALT_START:\n\t                exports.bounds.bumpVerticalPos(conf.boxMargin);\n\t                exports.bounds.newLoop(msg.message);\n\t                exports.bounds.bumpVerticalPos(conf.boxMargin + conf.boxTextMargin);\n\t                break;\n\t            case sq.yy.LINETYPE.ALT_ELSE:\n\t\n\t                //exports.drawLoop(diagram, loopData);\n\t                exports.bounds.bumpVerticalPos(conf.boxMargin);\n\t                loopData = exports.bounds.addElseToLoop(msg.message);\n\t                exports.bounds.bumpVerticalPos(conf.boxMargin);\n\t                break;\n\t            case sq.yy.LINETYPE.ALT_END:\n\t                loopData = exports.bounds.endLoop();\n\t\n\t                svgDraw.drawLoop(diagram, loopData, 'alt', conf);\n\t                exports.bounds.bumpVerticalPos(conf.boxMargin);\n\t                break;\n\t            default:\n\t                exports.bounds.bumpVerticalPos(conf.messageMargin);\n\t                startx = actors[msg.from].x + conf.width / 2;\n\t                stopx = actors[msg.to].x + conf.width / 2;\n\t\n\t                drawMessage(diagram, startx, stopx, exports.bounds.getVerticalPos(), msg);\n\t\n\t        }\n\t    });\n\t\n\t    if (conf.mirrorActors) {\n\t        // Draw actors below diagram\n\t        exports.bounds.bumpVerticalPos(conf.boxMargin * 2);\n\t        module.exports.drawActors(diagram, actors, actorKeys, exports.bounds.getVerticalPos());\n\t    }\n\t\n\t    var box = exports.bounds.getBounds();\n\t\n\t    // Adjust line height of actor lines now that the height of the diagram is known\n\t    log.debug('For line height fix Querying: #' + id + ' .actor-line');\n\t    var actorLines = d3.selectAll('#' + id + ' .actor-line');\n\t    actorLines.attr('y2', box.stopy);\n\t\n\t    var height = box.stopy - box.starty + 2 * conf.diagramMarginY;\n\t\n\t    if (conf.mirrorActors) {\n\t        height = height - conf.boxMargin + conf.bottomMarginAdj;\n\t    }\n\t\n\t    var width = box.stopx - box.startx + 2 * conf.diagramMarginX;\n\t    if (conf.useMaxWidth) {\n\t        diagram.attr('height', '100%');\n\t        diagram.attr('width', '100%');\n\t        diagram.attr('style', 'max-width:' + width + 'px;');\n\t    } else {\n\t        diagram.attr('height', height);\n\t        diagram.attr('width', width);\n\t    }\n\t    diagram.attr('viewBox', box.startx - conf.diagramMarginX + ' -' + conf.diagramMarginY + ' ' + width + ' ' + height);\n\t};\n\t\n\t},{\"../../d3\":107,\"../../logger\":126,\"./parser/sequenceDiagram\":122,\"./sequenceDb\":123,\"./svgDraw\":125}],125:[function(require,module,exports){\n\t/**\n\t * Created by knut on 14-12-20.\n\t */\n\t//var log = require('../../logger').create();\n\t'use strict';\n\t\n\texports.drawRect = function (elem, rectData) {\n\t    var rectElem = elem.append('rect');\n\t    rectElem.attr('x', rectData.x);\n\t    rectElem.attr('y', rectData.y);\n\t    rectElem.attr('fill', rectData.fill);\n\t    rectElem.attr('stroke', rectData.stroke);\n\t    rectElem.attr('width', rectData.width);\n\t    rectElem.attr('height', rectData.height);\n\t    rectElem.attr('rx', rectData.rx);\n\t    rectElem.attr('ry', rectData.ry);\n\t\n\t    if (typeof rectData['class'] !== 'undefined') {\n\t        rectElem.attr('class', rectData['class']);\n\t    }\n\t\n\t    return rectElem;\n\t};\n\t\n\texports.drawText = function (elem, textData, width) {\n\t    // Remove and ignore br:s\n\t    var nText = textData.text.replace(/<br\\/?>/ig, ' ');\n\t\n\t    var textElem = elem.append('text');\n\t    textElem.attr('x', textData.x);\n\t    textElem.attr('y', textData.y);\n\t    textElem.style('text-anchor', textData.anchor);\n\t    textElem.attr('fill', textData.fill);\n\t    if (typeof textData['class'] !== 'undefined') {\n\t        textElem.attr('class', textData['class']);\n\t    }\n\t    /*    textData.text.split(/<br\\/?>/ig).forEach(function(rowText){\n\t            var span = textElem.append('tspan');\n\t            span.attr('x', textData.x +textData.textMargin);\n\t            span.attr('dy', textData.dy);\n\t            span.text(rowText);\n\t        });*/\n\t\n\t    var span = textElem.append('tspan');\n\t    //span.attr('x', textData.x);\n\t    span.attr('x', textData.x + textData.textMargin * 2);\n\t    //span.attr('dy', textData.dy);\n\t    span.text(nText);\n\t    if (typeof textElem.textwrap !== 'undefined') {\n\t\n\t        textElem.textwrap({\n\t            x: textData.x, // bounding box is 300 pixels from the left\n\t            y: textData.y, // bounding box is 400 pixels from the top\n\t            width: width, // bounding box is 500 pixels across\n\t            height: 1800 // bounding box is 600 pixels tall\n\t        }, textData.textMargin);\n\t    }\n\t\n\t    return textElem;\n\t};\n\t\n\texports.drawLabel = function (elem, txtObject) {\n\t    var rectData = exports.getNoteRect();\n\t    rectData.x = txtObject.x;\n\t    rectData.y = txtObject.y;\n\t    rectData.width = 50;\n\t    rectData.height = 20;\n\t    rectData.fill = '#526e52';\n\t    rectData.stroke = 'none';\n\t    rectData['class'] = 'labelBox';\n\t    //rectData.color = 'white';\n\t\n\t    exports.drawRect(elem, rectData);\n\t\n\t    txtObject.y = txtObject.y + txtObject.labelMargin;\n\t    txtObject.x = txtObject.x + 0.5 * txtObject.labelMargin;\n\t    txtObject.fill = 'white';\n\t    exports.drawText(elem, txtObject);\n\t\n\t    //return textElem;\n\t};\n\tvar actorCnt = -1;\n\t/**\n\t * Draws an actor in the diagram with the attaced line\n\t * @param center - The center of the the actor\n\t * @param pos The position if the actor in the liost of actors\n\t * @param description The text in the box\n\t */\n\texports.drawActor = function (elem, left, verticalPos, description, conf) {\n\t    var center = left + conf.width / 2;\n\t    var g = elem.append('g');\n\t    if (verticalPos === 0) {\n\t        actorCnt++;\n\t        g.append('line').attr('id', 'actor' + actorCnt).attr('x1', center).attr('y1', 5).attr('x2', center).attr('y2', 2000).attr('class', 'actor-line').attr('stroke-width', '0.5px').attr('stroke', '#999');\n\t    }\n\t\n\t    var rect = exports.getNoteRect();\n\t    rect.x = left;\n\t    rect.y = verticalPos;\n\t    rect.fill = '#eaeaea';\n\t    rect.width = conf.width;\n\t    rect.height = conf.height;\n\t    rect['class'] = 'actor';\n\t    rect.rx = 3;\n\t    rect.ry = 3;\n\t    exports.drawRect(g, rect);\n\t\n\t    g.append('text') // text label for the x axis\n\t    .attr('x', center).attr('y', verticalPos + conf.height / 2 + 5).attr('class', 'actor').style('text-anchor', 'middle').text(description);\n\t};\n\t\n\t/**\n\t * Draws an actor in the diagram with the attaced line\n\t * @param center - The center of the the actor\n\t * @param pos The position if the actor in the list of actors\n\t * @param description The text in the box\n\t */\n\texports.drawLoop = function (elem, bounds, labelText, conf) {\n\t    var g = elem.append('g');\n\t    var drawLoopLine = function drawLoopLine(startx, starty, stopx, stopy) {\n\t        g.append('line').attr('x1', startx).attr('y1', starty).attr('x2', stopx).attr('y2', stopy).attr('stroke-width', 2).attr('stroke', '#526e52').attr('class', 'loopLine');\n\t    };\n\t    drawLoopLine(bounds.startx, bounds.starty, bounds.stopx, bounds.starty);\n\t    drawLoopLine(bounds.stopx, bounds.starty, bounds.stopx, bounds.stopy);\n\t    drawLoopLine(bounds.startx, bounds.stopy, bounds.stopx, bounds.stopy);\n\t    drawLoopLine(bounds.startx, bounds.starty, bounds.startx, bounds.stopy);\n\t    if (typeof bounds.elsey !== 'undefined') {\n\t        drawLoopLine(bounds.startx, bounds.elsey, bounds.stopx, bounds.elsey);\n\t    }\n\t\n\t    var txt = exports.getTextObj();\n\t    txt.text = labelText;\n\t    txt.x = bounds.startx;\n\t    txt.y = bounds.starty;\n\t    txt.labelMargin = 1.5 * conf.boxMargin;\n\t    txt['class'] = 'labelText';\n\t    txt.fill = 'white';\n\t\n\t    exports.drawLabel(g, txt);\n\t\n\t    txt = exports.getTextObj();\n\t    txt.text = '[ ' + bounds.title + ' ]';\n\t    txt.x = bounds.startx + (bounds.stopx - bounds.startx) / 2;\n\t    txt.y = bounds.starty + 1.5 * conf.boxMargin;\n\t    txt.anchor = 'middle';\n\t    txt['class'] = 'loopText';\n\t\n\t    exports.drawText(g, txt);\n\t\n\t    if (typeof bounds.elseText !== 'undefined') {\n\t        txt.text = '[ ' + bounds.elseText + ' ]';\n\t        txt.y = bounds.elsey + 1.5 * conf.boxMargin;\n\t        exports.drawText(g, txt);\n\t    }\n\t};\n\t\n\t/**\n\t * Setup arrow head and define the marker. The result is appended to the svg.\n\t */\n\texports.insertArrowHead = function (elem) {\n\t    elem.append('defs').append('marker').attr('id', 'arrowhead').attr('refX', 5).attr('refY', 2).attr('markerWidth', 6).attr('markerHeight', 4).attr('orient', 'auto').append('path').attr('d', 'M 0,0 V 4 L6,2 Z'); //this is actual shape for arrowhead\n\t};\n\t/**\n\t * Setup arrow head and define the marker. The result is appended to the svg.\n\t */\n\texports.insertArrowCrossHead = function (elem) {\n\t    var defs = elem.append('defs');\n\t    var marker = defs.append('marker').attr('id', 'crosshead').attr('markerWidth', 15).attr('markerHeight', 8).attr('orient', 'auto').attr('refX', 16).attr('refY', 4);\n\t\n\t    // The arrow\n\t    marker.append('path').attr('fill', 'black').attr('stroke', '#000000').style('stroke-dasharray', '0, 0').attr('stroke-width', '1px').attr('d', 'M 9,2 V 6 L16,4 Z');\n\t\n\t    // The cross\n\t    marker.append('path').attr('fill', 'none').attr('stroke', '#000000').style('stroke-dasharray', '0, 0').attr('stroke-width', '1px').attr('d', 'M 0,1 L 6,7 M 6,1 L 0,7'); //this is actual shape for arrowhead\n\t};\n\t\n\texports.getTextObj = function () {\n\t    var txt = {\n\t        x: 0,\n\t        y: 0,\n\t        'fill': 'black',\n\t        'text-anchor': 'start',\n\t        style: '#666',\n\t        width: 100,\n\t        height: 100,\n\t        textMargin: 0,\n\t        rx: 0,\n\t        ry: 0\n\t    };\n\t    return txt;\n\t};\n\t\n\texports.getNoteRect = function () {\n\t    var rect = {\n\t        x: 0,\n\t        y: 0,\n\t        fill: '#EDF2AE',\n\t        stroke: '#666',\n\t        width: 100,\n\t        anchor: 'start',\n\t        height: 100,\n\t        rx: 0,\n\t        ry: 0\n\t    };\n\t    return rect;\n\t};\n\t\n\t},{}],126:[function(require,module,exports){\n\t/**\n\t * #logger\n\t * logger = require('logger').create()\n\t * logger.info(\"blah\")\n\t * => [2011-3-3T20:24:4.810 info (5021)] blah\n\t * logger.debug(\"boom\")\n\t * =>\n\t * logger.level = Logger.levels.debug\n\t * logger.debug(function() { return \"booom\" })\n\t * => [2011-3-3T20:24:4.810 error (5021)] booom\n\t */\n\t\n\t'use strict';\n\t\n\tvar LEVELS = {\n\t    debug: 1,\n\t    info: 2,\n\t    warn: 3,\n\t    error: 4,\n\t    fatal: 5,\n\t    'default': 5\n\t};\n\t\n\tvar defaultLevel = LEVELS.error;\n\t\n\texports.setLogLevel = function (level) {\n\t    defaultLevel = level;\n\t};\n\t\n\tfunction formatTime(timestamp) {\n\t    var hh = timestamp.getUTCHours();\n\t    var mm = timestamp.getUTCMinutes();\n\t    var ss = timestamp.getSeconds();\n\t    var ms = timestamp.getMilliseconds();\n\t    // If you were building a timestamp instead of a duration, you would uncomment the following line to get 12-hour (not 24) time\n\t    // if (hh > 12) {hh = hh % 12;}\n\t    // These lines ensure you have two-digits\n\t    if (hh < 10) {\n\t        hh = '0' + hh;\n\t    }\n\t    if (mm < 10) {\n\t        mm = '0' + mm;\n\t    }\n\t    if (ss < 10) {\n\t        ss = '0' + ss;\n\t    }\n\t    if (ms < 100) {\n\t        ms = '0' + ms;\n\t    }\n\t    if (ms < 10) {\n\t        ms = '00' + ms;\n\t    }\n\t    // This formats your string to HH:MM:SS\n\t    var t = hh + ':' + mm + ':' + ss + ' (' + ms + ')';\n\t    return t;\n\t}\n\t\n\tfunction Log(level) {\n\t    this.level = level;\n\t\n\t    this.log = function (str, level) {\n\t        var logLevel = this.level;\n\t        if (typeof logLevel === 'undefined') {\n\t            logLevel = defaultLevel;\n\t        }\n\t        if (logLevel <= level) {\n\t            if (typeof console !== 'undefined') {\n\t                //eslint-disable-line no-console\n\t                if (typeof console.log !== 'undefined') {\n\t                    //eslint-disable-line no-console\n\t                    return console.log('[' + formatTime(new Date()) + '] ' + str); //eslint-disable-line no-console\n\t                }\n\t            }\n\t        }\n\t    };\n\t\n\t    this.trace = function (str) {\n\t        this.log(str, LEVELS.trace);\n\t    };\n\t\n\t    this.debug = function (str) {\n\t        this.log(str, LEVELS.debug);\n\t    };\n\t\n\t    this.info = function (str) {\n\t        this.log(str, LEVELS.info);\n\t    };\n\t\n\t    this.warn = function (str) {\n\t        this.log(str, LEVELS.warn);\n\t    };\n\t\n\t    this.error = function (str) {\n\t        this.log(str, LEVELS.error);\n\t    };\n\t}\n\t\n\texports.Log = Log;\n\t\n\t},{}],127:[function(require,module,exports){\n\t(function (global){\n\t/**\n\t * ---\n\t * title: mermaidAPI\n\t * order: 5\n\t * ---\n\t * # mermaidAPI\n\t * This is the api to be used when handling the integration with the web page instead of using the default integration\n\t * (mermaid.js).\n\t *\n\t * The core of this api is the **render** function that given a graph definitionas text renders the graph/diagram and\n\t * returns a svg element for the graph. It is is then up to the user of the API to make use of the svg, either insert it\n\t * somewhere in the page or something completely different.\n\t */\n\t'use strict';\n\t\n\tvar Logger = require('./logger');\n\tvar log = new Logger.Log();\n\t\n\tvar graph = require('./diagrams/flowchart/graphDb');\n\tvar utils = require('./utils');\n\tvar flowRenderer = require('./diagrams/flowchart/flowRenderer');\n\tvar seq = require('./diagrams/sequenceDiagram/sequenceRenderer');\n\tvar info = require('./diagrams/example/exampleRenderer');\n\tvar infoParser = require('./diagrams/example/parser/example');\n\tvar flowParser = require('./diagrams/flowchart/parser/flow');\n\tvar dotParser = require('./diagrams/flowchart/parser/dot');\n\tvar sequenceParser = require('./diagrams/sequenceDiagram/parser/sequenceDiagram');\n\tvar sequenceDb = require('./diagrams/sequenceDiagram/sequenceDb');\n\tvar infoDb = require('./diagrams/example/exampleDb');\n\tvar gantt = require('./diagrams/gantt/ganttRenderer');\n\tvar ganttParser = require('./diagrams/gantt/parser/gantt');\n\tvar ganttDb = require('./diagrams/gantt/ganttDb');\n\tvar classParser = require('./diagrams/classDiagram/parser/classDiagram');\n\tvar classRenderer = require('./diagrams/classDiagram/classRenderer');\n\tvar classDb = require('./diagrams/classDiagram/classDb');\n\tvar d3 = require('./d3');\n\t\n\tSVGElement.prototype.getTransformToElement = SVGElement.prototype.getTransformToElement || function (toElement) {\n\t    return toElement.getScreenCTM().inverse().multiply(this.getScreenCTM());\n\t};\n\t/**\n\t * ## Configuration\n\t * These are the default options which can be overridden with the initialization call as in the example below:\n\t * ```\n\t * mermaid.initialize({\n\t *   flowchart:{\n\t *      htmlLabels: false\n\t *   }\n\t * });\n\t * ```\n\t */\n\tvar config = {\n\t    /**\n\t     * logLevel , decides the amount of logging to be used.\n\t     *    * debug: 1\n\t     *    * info: 2\n\t     *    * warn: 3\n\t     *    * error: 4\n\t     *    * fatal: 5\n\t     */\n\t    logLevel: 5,\n\t    /**\n\t     * **cloneCssStyles** - This options controls whether or not the css rules should be copied into the generated svg\n\t     */\n\t    cloneCssStyles: true,\n\t\n\t    /**\n\t     * **startOnLoad** - This options controls whether or mermaid starts when the page loads\n\t     */\n\t    startOnLoad: true,\n\t\n\t    /**\n\t     * **arrowMarkerAbsolute** - This options controls whether or arrow markers in html code will be absolute pats or\n\t     * an anchor, #. This matters if you are using base tag settings.\n\t     */\n\t    arrowMarkerAbsolute: false,\n\t\n\t    /**\n\t     * ### flowchart\n\t     * *The object containing configurations specific for flowcharts*\n\t     */\n\t    flowchart: {\n\t        /**\n\t         * **htmlLabels** - Flag for setting whether or not a html tag should be used for rendering labels\n\t         * on the edges\n\t         */\n\t        htmlLabels: true,\n\t        /**\n\t         * **useMaxWidth** - Flag for setting whether or not a all available width should be used for\n\t         * the diagram.\n\t         */\n\t        useMaxWidth: true\n\t    },\n\t\n\t    /**\n\t     * ###  sequenceDiagram\n\t     * The object containing configurations specific for sequence diagrams\n\t     */\n\t    sequenceDiagram: {\n\t\n\t        /**\n\t         * **diagramMarginX** - margin to the right and left of the sequence diagram\n\t         */\n\t        diagramMarginX: 50,\n\t\n\t        /**\n\t         * **diagramMarginY** - margin to the over and under the sequence diagram\n\t         */\n\t        diagramMarginY: 10,\n\t\n\t        /**\n\t         * **actorMargin** - Margin between actors\n\t         */\n\t        actorMargin: 50,\n\t\n\t        /**\n\t         * **width** - Width of actor boxes\n\t         */\n\t        width: 150,\n\t\n\t        /**\n\t         * **height** - Height of actor boxes\n\t         */\n\t        height: 65,\n\t\n\t        /**\n\t         * **boxMargin** - Margin around loop boxes\n\t         */\n\t        boxMargin: 10,\n\t\n\t        /**\n\t         * **boxTextMargin** - margin around the text in loop/alt/opt boxes\n\t         */\n\t        boxTextMargin: 5,\n\t\n\t        /**\n\t        * **noteMargin** - margin around notes\n\t         */\n\t        noteMargin: 10,\n\t\n\t        /**\n\t        * **messageMargin** - Space between messages\n\t         */\n\t        messageMargin: 35,\n\t\n\t        /**\n\t         * **mirrorActors** - mirror actors under diagram\n\t         */\n\t        mirrorActors: true,\n\t\n\t        /**\n\t         * **bottomMarginAdj** - Depending on css styling this might need adjustment.\n\t         * Prolongs the edge of the diagram downwards\n\t         */\n\t        bottomMarginAdj: 1,\n\t\n\t        /**\n\t         * **useMaxWidth** - when this flag is set the height and width is set to 100% and is then scaling with the\n\t         * available space if not the absolute space required is used\n\t         */\n\t        useMaxWidth: true\n\t    },\n\t\n\t    /** ### gantt\n\t     * The object containing configurations specific for gantt diagrams*\n\t     */\n\t    gantt: {\n\t        /**\n\t         * **titleTopMargin** - margin top for the text over the gantt diagram\n\t         */\n\t        titleTopMargin: 25,\n\t\n\t        /** \n\t         * **barHeight** - the height of the bars in the graph\n\t         */\n\t        barHeight: 20,\n\t\n\t        /** \n\t         * **barGap** - the margin between the different activities in the gantt diagram\n\t         */\n\t        barGap: 4,\n\t\n\t        /** \n\t         *  **topPadding** - margin between title and gantt diagram and between axis and gantt diagram.\n\t         */\n\t        topPadding: 50,\n\t\n\t        /** \n\t         *  **sidePadding** - the space allocated for the section name to the left of the activities.\n\t         */\n\t        sidePadding: 75,\n\t\n\t        /** \n\t         *  **gridLineStartPadding** - Vertical starting position of the grid lines\n\t         */\n\t        gridLineStartPadding: 35,\n\t\n\t        /** \n\t         *  **fontSize** - font size ...\n\t         */\n\t        fontSize: 11,\n\t\n\t        /** \n\t         * **fontFamily** - font family ...\n\t         */\n\t        fontFamily: '\"Open-Sans\", \"sans-serif\"',\n\t\n\t        /** \n\t         * **numberSectionStyles** - the number of alternating section styles\n\t         */\n\t        numberSectionStyles: 3,\n\t\n\t        /** \n\t         * **axisFormatter** - formatting of the axis, this might need adjustment to match your locale and preferences\n\t         */\n\t        axisFormatter: [\n\t\n\t        // Within a day\n\t        ['%I:%M', function (d) {\n\t            return d.getHours();\n\t        }],\n\t        // Monday a week\n\t        ['w. %U', function (d) {\n\t            return d.getDay() == 1;\n\t        }],\n\t        // Day within a week (not monday)\n\t        ['%a %d', function (d) {\n\t            return d.getDay() && d.getDate() != 1;\n\t        }],\n\t        // within a month\n\t        ['%b %d', function (d) {\n\t            return d.getDate() != 1;\n\t        }],\n\t        // Month\n\t        ['%m-%y', function (d) {\n\t            return d.getMonth();\n\t        }]]\n\t    },\n\t    classDiagram: {},\n\t    info: {}\n\t};\n\t\n\tLogger.setLogLevel(config.logLevel);\n\t\n\t/**\n\t * ## parse\n\t * Function that parses a mermaid diagram definition. If parsing fails the parseError callback is called and an error is\n\t * thrown and\n\t * @param text\n\t */\n\tvar parse = function parse(text) {\n\t    var graphType = utils.detectType(text);\n\t    var parser;\n\t\n\t    switch (graphType) {\n\t        case 'graph':\n\t            parser = flowParser;\n\t            parser.parser.yy = graph;\n\t            break;\n\t        case 'dotGraph':\n\t            parser = dotParser;\n\t            parser.parser.yy = graph;\n\t            break;\n\t        case 'sequenceDiagram':\n\t            parser = sequenceParser;\n\t            parser.parser.yy = sequenceDb;\n\t            break;\n\t        case 'info':\n\t            parser = infoParser;\n\t            parser.parser.yy = infoDb;\n\t            break;\n\t        case 'gantt':\n\t            parser = ganttParser;\n\t            parser.parser.yy = ganttDb;\n\t            break;\n\t        case 'classDiagram':\n\t            parser = classParser;\n\t            parser.parser.yy = classDb;\n\t            break;\n\t    }\n\t\n\t    try {\n\t        parser.parse(text);\n\t        return true;\n\t    } catch (err) {\n\t        return false;\n\t    }\n\t};\n\texports.parse = parse;\n\t\n\t/**\n\t * ## version\n\t * Function returning version information\n\t * @returns {string} A string containing the version info\n\t */\n\texports.version = function () {\n\t    return require('../package.json').version;\n\t};\n\t\n\texports.encodeEntities = function (text) {\n\t    var txt = text;\n\t\n\t    txt = txt.replace(/style.*:\\S*#.*;/g, function (s) {\n\t        var innerTxt = s.substring(0, s.length - 1);\n\t        return innerTxt;\n\t    });\n\t    txt = txt.replace(/classDef.*:\\S*#.*;/g, function (s) {\n\t        var innerTxt = s.substring(0, s.length - 1);\n\t        return innerTxt;\n\t    });\n\t\n\t    txt = txt.replace(/#\\w+\\;/g, function (s) {\n\t        var innerTxt = s.substring(1, s.length - 1);\n\t\n\t        var isInt = /^\\+?\\d+$/.test(innerTxt);\n\t        if (isInt) {\n\t            return 'ﬂ°°' + innerTxt + '¶ß';\n\t        } else {\n\t            return 'ﬂ°' + innerTxt + '¶ß';\n\t        }\n\t    });\n\t\n\t    return txt;\n\t};\n\t\n\texports.decodeEntities = function (text) {\n\t    var txt = text;\n\t\n\t    txt = txt.replace(/\\ﬂ\\°\\°/g, function () {\n\t        return '&#';\n\t    });\n\t    txt = txt.replace(/\\ﬂ\\°/g, function () {\n\t        return '&';\n\t    });\n\t    txt = txt.replace(/¶ß/g, function () {\n\t        return ';';\n\t    });\n\t\n\t    return txt;\n\t};\n\t/**\n\t * ##render\n\t * Function that renders an svg with a graph from a chart definition. Usage example below.\n\t *\n\t * ```\n\t * mermaidAPI.initialize({\n\t *      startOnLoad:true\n\t *  });\n\t *  $(function(){\n\t *      var graphDefinition = 'graph TB\\na-->b';\n\t *      var cb = function(svgGraph){\n\t *          console.log(svgGraph);\n\t *      };\n\t *      mermaidAPI.render('id1',graphDefinition,cb);\n\t *  });\n\t *```\n\t * @param id the id of the element to be rendered\n\t * @param txt the graph definition\n\t * @param cb callback which is called after rendering is finished with the svg code as inparam.\n\t * @param container selector to element in which a div with the graph temporarily will be inserted. In one is\n\t * provided a hidden div will be inserted in the body of the page instead. The element will be removed when rendering is\n\t * completed.\n\t */\n\tvar render = function render(id, txt, cb, container) {\n\t\n\t    if (typeof container !== 'undefined') {\n\t        d3.select(container).append('div').attr('id', 'd' + id).append('svg').attr('id', id).attr('width', '100%').attr('xmlns', 'http://www.w3.org/2000/svg').append('g');\n\t    } else {\n\t        d3.select('body').append('div').attr('id', 'd' + id).append('svg').attr('id', id).attr('width', '100%').attr('xmlns', 'http://www.w3.org/2000/svg').append('g');\n\t    }\n\t\n\t    window.txt = txt;\n\t    txt = exports.encodeEntities(txt);\n\t    //console.warn('mermaid encode: ');\n\t    //console.warn(txt);\n\t\n\t    var element = d3.select('#d' + id).node();\n\t    var graphType = utils.detectType(txt);\n\t    var classes = {};\n\t    switch (graphType) {\n\t        case 'graph':\n\t            config.flowchart.arrowMarkerAbsolute = config.arrowMarkerAbsolute;\n\t            flowRenderer.setConf(config.flowchart);\n\t            flowRenderer.draw(txt, id, false);\n\t            if (config.cloneCssStyles) {\n\t                classes = flowRenderer.getClasses(txt, false);\n\t                utils.cloneCssStyles(element.firstChild, classes);\n\t            }\n\t            break;\n\t        case 'dotGraph':\n\t            config.flowchart.arrowMarkerAbsolute = config.arrowMarkerAbsolute;\n\t            flowRenderer.setConf(config.flowchart);\n\t            flowRenderer.draw(txt, id, true);\n\t            if (config.cloneCssStyles) {\n\t                classes = flowRenderer.getClasses(txt, true);\n\t                utils.cloneCssStyles(element.firstChild, classes);\n\t            }\n\t            break;\n\t        case 'sequenceDiagram':\n\t            config.sequenceDiagram.arrowMarkerAbsolute = config.arrowMarkerAbsolute;\n\t            seq.setConf(config.sequenceDiagram);\n\t            seq.draw(txt, id);\n\t            if (config.cloneCssStyles) {\n\t                utils.cloneCssStyles(element.firstChild, []);\n\t            }\n\t            break;\n\t        case 'gantt':\n\t            config.gantt.arrowMarkerAbsolute = config.arrowMarkerAbsolute;\n\t            gantt.setConf(config.gantt);\n\t            gantt.draw(txt, id);\n\t            if (config.cloneCssStyles) {\n\t                utils.cloneCssStyles(element.firstChild, []);\n\t            }\n\t            break;\n\t        case 'classDiagram':\n\t            config.classDiagram.arrowMarkerAbsolute = config.arrowMarkerAbsolute;\n\t            classRenderer.setConf(config.classDiagram);\n\t            classRenderer.draw(txt, id);\n\t            if (config.cloneCssStyles) {\n\t                utils.cloneCssStyles(element.firstChild, []);\n\t            }\n\t            break;\n\t        case 'info':\n\t            config.info.arrowMarkerAbsolute = config.arrowMarkerAbsolute;\n\t            info.draw(txt, id, exports.version());\n\t            if (config.cloneCssStyles) {\n\t                utils.cloneCssStyles(element.firstChild, []);\n\t            }\n\t            break;\n\t    }\n\t\n\t    d3.select('#d' + id).selectAll('foreignobject div').attr('xmlns', 'http://www.w3.org/1999/xhtml');\n\t\n\t    var url = '';\n\t    if (config.arrowMarkerAbsolute) {\n\t        url = window.location.protocol + '//' + window.location.host + window.location.pathname + window.location.search;\n\t        url = url.replace(/\\(/g, '\\\\(');\n\t        url = url.replace(/\\)/g, '\\\\)');\n\t    }\n\t\n\t    // Fix for when the base tag is used\n\t    var svgCode = d3.select('#d' + id).node().innerHTML.replace(/url\\(#arrowhead/g, 'url(' + url + '#arrowhead', 'g');\n\t\n\t    svgCode = exports.decodeEntities(svgCode);\n\t\n\t    //console.warn('mermaid decode: ');\n\t    //console.warn(svgCode);\n\t    //var he = require('he');\n\t    //svgCode = he.decode(svgCode);\n\t    if (typeof cb !== 'undefined') {\n\t        cb(svgCode, graph.bindFunctions);\n\t    } else {\n\t        log.warn('CB = undefined!');\n\t    }\n\t\n\t    var node = d3.select('#d' + id).node();\n\t    if (node !== null && typeof node.remove === 'function') {\n\t        d3.select('#d' + id).node().remove();\n\t    }\n\t\n\t    return svgCode;\n\t};\n\t\n\texports.render = function (id, text, cb, containerElement) {\n\t    try {\n\t        if (arguments.length === 1) {\n\t            text = id;\n\t            id = 'mermaidId0';\n\t        }\n\t\n\t        if (typeof document === 'undefined') {\n\t            // Todo handle rendering serverside using phantomjs\n\t        } else {\n\t                // In browser\n\t                return render(id, text, cb, containerElement);\n\t            }\n\t    } catch (e) {\n\t        log.warn(e);\n\t    }\n\t};\n\t\n\tvar setConf = function setConf(cnf) {\n\t    // Top level initially mermaid, gflow, sequenceDiagram and gantt\n\t    var lvl1Keys = Object.keys(cnf);\n\t    var i;\n\t    for (i = 0; i < lvl1Keys.length; i++) {\n\t\n\t        if (typeof cnf[lvl1Keys[i]] === 'object') {\n\t            var lvl2Keys = Object.keys(cnf[lvl1Keys[i]]);\n\t\n\t            var j;\n\t            for (j = 0; j < lvl2Keys.length; j++) {\n\t                log.debug('Setting conf ', lvl1Keys[i], '-', lvl2Keys[j]);\n\t                if (typeof config[lvl1Keys[i]] === 'undefined') {\n\t\n\t                    config[lvl1Keys[i]] = {};\n\t                }\n\t                log.debug('Setting config: ' + lvl1Keys[i] + ' ' + lvl2Keys[j] + ' to ' + cnf[lvl1Keys[i]][lvl2Keys[j]]);\n\t                config[lvl1Keys[i]][lvl2Keys[j]] = cnf[lvl1Keys[i]][lvl2Keys[j]];\n\t            }\n\t        } else {\n\t            config[lvl1Keys[i]] = cnf[lvl1Keys[i]];\n\t        }\n\t    }\n\t};\n\texports.initialize = function (options) {\n\t    log.debug('Initializing mermaidAPI');\n\t    // Update default config with options supplied at initialization\n\t    if (typeof options === 'object') {\n\t        setConf(options);\n\t    }\n\t    Logger.setLogLevel(config.logLevel);\n\t};\n\texports.getConfig = function () {\n\t    return config;\n\t};\n\t\n\texports.parseError = function (err, hash) {\n\t    if (typeof mermaid !== 'undefined') {\n\t        global.mermaid.parseError(err, hash);\n\t    } else {\n\t        log.debug('Mermaid Syntax error:');\n\t        log.debug(err);\n\t    }\n\t};\n\tglobal.mermaidAPI = {\n\t    render: exports.render,\n\t    parse: exports.parse,\n\t    initialize: exports.initialize,\n\t    detectType: utils.detectType,\n\t    parseError: exports.parseError,\n\t    getConfig: exports.getConfig\n\t};\n\t\n\t}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\t},{\"../package.json\":106,\"./d3\":107,\"./diagrams/classDiagram/classDb\":108,\"./diagrams/classDiagram/classRenderer\":109,\"./diagrams/classDiagram/parser/classDiagram\":110,\"./diagrams/example/exampleDb\":111,\"./diagrams/example/exampleRenderer\":112,\"./diagrams/example/parser/example\":113,\"./diagrams/flowchart/flowRenderer\":115,\"./diagrams/flowchart/graphDb\":116,\"./diagrams/flowchart/parser/dot\":117,\"./diagrams/flowchart/parser/flow\":118,\"./diagrams/gantt/ganttDb\":119,\"./diagrams/gantt/ganttRenderer\":120,\"./diagrams/gantt/parser/gantt\":121,\"./diagrams/sequenceDiagram/parser/sequenceDiagram\":122,\"./diagrams/sequenceDiagram/sequenceDb\":123,\"./diagrams/sequenceDiagram/sequenceRenderer\":124,\"./logger\":126,\"./utils\":128}],128:[function(require,module,exports){\n\t/**\n\t * Created by knut on 14-11-23.\n\t */\n\t'use strict';\n\t\n\tvar Logger = require('./logger');\n\tvar log = new Logger.Log();\n\t\n\t/**\n\t * @function detectType\n\t * Detects the type of the graph text.\n\t * ```mermaid\n\t * graph LR\n\t *  a-->b\n\t *  b-->c\n\t *  c-->d\n\t *  d-->e\n\t *  e-->f\n\t *  f-->g\n\t *  g-->h\n\t * ```\n\t *\n\t * @param {string} text The text defining the graph\n\t * @returns {string} A graph definition key\n\t */\n\tvar detectType = function detectType(text) {\n\t    text = text.replace(/^\\s*%%.*\\n/g, '\\n');\n\t    if (text.match(/^\\s*sequenceDiagram/)) {\n\t        return 'sequenceDiagram';\n\t    }\n\t\n\t    if (text.match(/^\\s*digraph/)) {\n\t        //log.debug('Detected dot syntax');\n\t        return 'dotGraph';\n\t    }\n\t\n\t    if (text.match(/^\\s*info/)) {\n\t        //log.debug('Detected info syntax');\n\t        return 'info';\n\t    }\n\t\n\t    if (text.match(/^\\s*gantt/)) {\n\t        //log.debug('Detected info syntax');\n\t        return 'gantt';\n\t    }\n\t\n\t    if (text.match(/^\\s*classDiagram/)) {\n\t        log.debug('Detected classDiagram syntax');\n\t        return 'classDiagram';\n\t    }\n\t\n\t    return 'graph';\n\t};\n\texports.detectType = detectType;\n\t\n\t/**\n\t * Copies all relevant CSS content into the graph SVG.\n\t * This allows the SVG to be copied as is while keeping class based styling\n\t * @param {element} svg The root element of the SVG\n\t * @param {object} Hash table of class definitions from the graph definition\n\t */\n\tvar cloneCssStyles = function cloneCssStyles(svg, classes) {\n\t    var usedStyles = '';\n\t    var sheets = document.styleSheets;\n\t    var rule;\n\t    for (var i = 0; i < sheets.length; i++) {\n\t        // Avoid multiple inclusion on pages with multiple graphs\n\t        if (sheets[i].title !== 'mermaid-svg-internal-css') {\n\t            try {\n\t\n\t                var rules = sheets[i].cssRules;\n\t                if (rules !== null) {\n\t                    for (var j = 0; j < rules.length; j++) {\n\t                        rule = rules[j];\n\t                        if (typeof rule.style !== 'undefined') {\n\t                            var elems;\n\t                            elems = svg.querySelectorAll(rule.selectorText);\n\t                            if (elems.length > 0) {\n\t                                usedStyles += rule.selectorText + ' { ' + rule.style.cssText + '}\\n';\n\t                            }\n\t                        }\n\t                    }\n\t                }\n\t            } catch (err) {\n\t                if (typeof rule !== 'undefined') {\n\t                    log.warn('Invalid CSS selector \"' + rule.selectorText + '\"', err);\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t    var defaultStyles = '';\n\t    var embeddedStyles = '';\n\t\n\t    for (var className in classes) {\n\t        if (classes.hasOwnProperty(className) && typeof className != 'undefined') {\n\t            if (className === 'default') {\n\t                if (classes['default'].styles instanceof Array) {\n\t                    defaultStyles += '#' + svg.id.trim() + ' .node' + '>rect { ' + classes[className].styles.join('; ') + '; }\\n';\n\t                }\n\t                if (classes['default'].nodeLabelStyles instanceof Array) {\n\t                    defaultStyles += '#' + svg.id.trim() + ' .node text ' + ' { ' + classes[className].nodeLabelStyles.join('; ') + '; }\\n';\n\t                }\n\t                if (classes['default'].edgeLabelStyles instanceof Array) {\n\t                    defaultStyles += '#' + svg.id.trim() + ' .edgeLabel text ' + ' { ' + classes[className].edgeLabelStyles.join('; ') + '; }\\n';\n\t                }\n\t                if (classes['default'].clusterStyles instanceof Array) {\n\t                    defaultStyles += '#' + svg.id.trim() + ' .cluster rect ' + ' { ' + classes[className].clusterStyles.join('; ') + '; }\\n';\n\t                }\n\t            } else {\n\t                if (classes[className].styles instanceof Array) {\n\t                    embeddedStyles += '#' + svg.id.trim() + ' .' + className + '>rect, .' + className + '>polygon, .' + className + '>ellipse { ' + classes[className].styles.join('; ') + '; }\\n';\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t    if (usedStyles !== '' || defaultStyles !== '' || embeddedStyles !== '') {\n\t        var s = document.createElement('style');\n\t        s.setAttribute('type', 'text/css');\n\t        s.setAttribute('title', 'mermaid-svg-internal-css');\n\t        s.innerHTML = '/* <![CDATA[ */\\n';\n\t        // Make this CSS local to this SVG\n\t        if (defaultStyles !== '') {\n\t            s.innerHTML += defaultStyles;\n\t        }\n\t        if (usedStyles !== '') {\n\t            s.innerHTML += usedStyles;\n\t        }\n\t        if (embeddedStyles !== '') {\n\t            s.innerHTML += embeddedStyles;\n\t        }\n\t        s.innerHTML += '/* ]]> */\\n';\n\t        svg.insertBefore(s, svg.firstChild);\n\t    }\n\t};\n\t\n\texports.cloneCssStyles = cloneCssStyles;\n\t\n\t},{\"./logger\":126}]},{},[127])(127)\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }\n\n});\n\n\n// WEBPACK FOOTER //\n// 1.bundle.js","!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.mermaidAPI=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\n},{}],2:[function(require,module,exports){\n(function (process){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n\n}).call(this,require('_process'))\n},{\"_process\":3}],3:[function(require,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\n\nprocess.nextTick = (function () {\n    var canSetImmediate = typeof window !== 'undefined'\n    && window.setImmediate;\n    var canMutationObserver = typeof window !== 'undefined'\n    && window.MutationObserver;\n    var canPost = typeof window !== 'undefined'\n    && window.postMessage && window.addEventListener\n    ;\n\n    if (canSetImmediate) {\n        return function (f) { return window.setImmediate(f) };\n    }\n\n    var queue = [];\n\n    if (canMutationObserver) {\n        var hiddenDiv = document.createElement(\"div\");\n        var observer = new MutationObserver(function () {\n            var queueList = queue.slice();\n            queue.length = 0;\n            queueList.forEach(function (fn) {\n                fn();\n            });\n        });\n\n        observer.observe(hiddenDiv, { attributes: true });\n\n        return function nextTick(fn) {\n            if (!queue.length) {\n                hiddenDiv.setAttribute('yes', 'no');\n            }\n            queue.push(fn);\n        };\n    }\n\n    if (canPost) {\n        window.addEventListener('message', function (ev) {\n            var source = ev.source;\n            if ((source === window || source === null) && ev.data === 'process-tick') {\n                ev.stopPropagation();\n                if (queue.length > 0) {\n                    var fn = queue.shift();\n                    fn();\n                }\n            }\n        }, true);\n\n        return function nextTick(fn) {\n            queue.push(fn);\n            window.postMessage('process-tick', '*');\n        };\n    }\n\n    return function nextTick(fn) {\n        setTimeout(fn, 0);\n    };\n})();\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\n\n},{}],4:[function(require,module,exports){\n!function() {\n  var d3 = {\n    version: \"3.5.6\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.zip = function() {\n    if (!(n = arguments.length)) return [];\n    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n        zip[j] = arguments[j][i];\n      }\n    }\n    return zips;\n  };\n  function d3_zipLength(d) {\n    return d.length;\n  }\n  d3.transpose = function(matrix) {\n    return d3.zip.apply(d3, matrix);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: \"http://www.w3.org/1999/xhtml\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0) {\n        prefix = name.slice(0, i);\n        name = name.slice(i + 1);\n      }\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.has(keyValue = key.call(node = group[i], node.__data__, i))) {\n            exitNodes[i] = node;\n          } else {\n            nodeByKeyValue.set(keyValue, node);\n          }\n          keyValues[i] = keyValue;\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = nodes;\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged && d3.event.target === target);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n    function interpolate(t) {\n      var s = t * S;\n      if (dr) {\n        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      }\n      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n    }\n    interpolate.duration = S * 1e3;\n    return interpolate;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: +_\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged && d3.event.target === target);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    format = format.toLowerCase();\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format);\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      f: false,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  };\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now();\n    d3_timer_active = d3_timer_queueHead;\n    while (d3_timer_active) {\n      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n      d3_timer_active = d3_timer_active.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.f) {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      } else {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n      s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: 1,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: 3,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    } else {\n      s.push(\"\");\n    }\n    if (ra != rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(s.pop() + \"rotate(\" + rb + \")\");\n    }\n    if (wa != wb) {\n      q.push({\n        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(s.pop() + \"skewX(\" + wb + \")\");\n    }\n    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: n - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: n - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] != 1 || kb[1] != 1) {\n      s.push(s.pop() + \"scale(\" + kb + \")\");\n    }\n    n = q.length;\n    return function(t) {\n      var i = -1, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: (x - x0) / k\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight / (t.weight + s.weight));\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) alpha = x; else alpha = 0;\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        d3.timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), k = (da - n * pa) / d3.sum(values), index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = 0;\n      root.y = 0;\n      root.dx = size[0];\n      root.dy = size[1];\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n      Math.floor), e;\n      return function(d) {\n        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if ((rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n        if (x1 != null) {\n          var rc1 = Math.min(rc, (r1 - lc) / (kc + 1)), t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var rc0 = Math.min(rc, (r0 - lc) / (kc - 1)), t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(r * r * d2 - D * D), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.join(\"L\");\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return d3_svg_lineLinear(points) + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, active;\n      if ((lock = this[ns]) && (active = lock[lock.active])) {\n        if (--lock.count) delete lock[lock.active]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id];\n    if (!transition) {\n      var time = inherit.time;\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n      d3.timer(function(elapsed) {\n        var delay = transition.delay, duration, ease, timer = d3_timer_active, tweened = [];\n        timer.t = delay + time;\n        if (delay <= elapsed) return start(elapsed - delay);\n        timer.c = start;\n        function start(elapsed) {\n          if (lock.active > id) return stop();\n          var active = lock[lock.active];\n          if (active) {\n            --lock.count;\n            delete lock[lock.active];\n            active.event && active.event.interrupt.call(node, node.__data__, active.index);\n          }\n          lock.active = id;\n          transition.event && transition.event.start.call(node, node.__data__, i);\n          transition.tween.forEach(function(key, value) {\n            if (value = value.call(node, node.__data__, i)) {\n              tweened.push(value);\n            }\n          });\n          ease = transition.ease;\n          duration = transition.duration;\n          d3.timer(function() {\n            timer.c = tick(elapsed || 1) ? d3_true : tick;\n            return 1;\n          }, 0, time);\n        }\n        function tick(elapsed) {\n          if (lock.active !== id) return 1;\n          var t = elapsed / duration, e = ease(t), n = tweened.length;\n          while (n > 0) {\n            tweened[--n].call(node, e);\n          }\n          if (t >= 1) {\n            transition.event && transition.event.end.call(node, node.__data__, i);\n            return stop();\n          }\n        }\n        function stop() {\n          if (--lock.count) delete lock[id]; else delete node[ns];\n          return 1;\n        }\n      }, 0, time);\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = arguments;\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3;\n  this.d3 = d3;\n}();\n},{}],5:[function(require,module,exports){\n/**\n * @license\n * Copyright (c) 2012-2013 Chris Pettitt\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nmodule.exports =  {\n  graphlib: require(\"./lib/graphlib\"),\n  dagre: require(\"./lib/dagre\"),\n  intersect: require(\"./lib/intersect\"),\n  render: require(\"./lib/render\"),\n  util: require(\"./lib/util\"),\n  version: require(\"./lib/version\")\n};\n\n},{\"./lib/dagre\":12,\"./lib/graphlib\":13,\"./lib/intersect\":14,\"./lib/render\":29,\"./lib/util\":31,\"./lib/version\":32}],6:[function(require,module,exports){\nvar util = require(\"./util\");\n\nmodule.exports = {\n  \"default\": normal,\n  \"normal\": normal,\n  \"vee\": vee,\n  \"undirected\": undirected\n};\n\nfunction normal(parent, id, edge, type) {\n  var marker = parent.append(\"marker\")\n    .attr(\"id\", id)\n    .attr(\"viewBox\", \"0 0 10 10\")\n    .attr(\"refX\", 9)\n    .attr(\"refY\", 5)\n    .attr(\"markerUnits\", \"strokeWidth\")\n    .attr(\"markerWidth\", 8)\n    .attr(\"markerHeight\", 6)\n    .attr(\"orient\", \"auto\");\n\n  var path = marker.append(\"path\")\n    .attr(\"d\", \"M 0 0 L 10 5 L 0 10 z\")\n    .style(\"stroke-width\", 1)\n    .style(\"stroke-dasharray\", \"1,0\");\n  util.applyStyle(path, edge[type + \"Style\"]);\n}\n\nfunction vee(parent, id, edge, type) {\n  var marker = parent.append(\"marker\")\n    .attr(\"id\", id)\n    .attr(\"viewBox\", \"0 0 10 10\")\n    .attr(\"refX\", 9)\n    .attr(\"refY\", 5)\n    .attr(\"markerUnits\", \"strokeWidth\")\n    .attr(\"markerWidth\", 8)\n    .attr(\"markerHeight\", 6)\n    .attr(\"orient\", \"auto\");\n\n  var path = marker.append(\"path\")\n    .attr(\"d\", \"M 0 0 L 10 5 L 0 10 L 4 5 z\")\n    .style(\"stroke-width\", 1)\n    .style(\"stroke-dasharray\", \"1,0\");\n  util.applyStyle(path, edge[type + \"Style\"]);\n}\n\nfunction undirected(parent, id, edge, type) {\n  var marker = parent.append(\"marker\")\n    .attr(\"id\", id)\n    .attr(\"viewBox\", \"0 0 10 10\")\n    .attr(\"refX\", 9)\n    .attr(\"refY\", 5)\n    .attr(\"markerUnits\", \"strokeWidth\")\n    .attr(\"markerWidth\", 8)\n    .attr(\"markerHeight\", 6)\n    .attr(\"orient\", \"auto\");\n\n  var path = marker.append(\"path\")\n    .attr(\"d\", \"M 0 5 L 10 5\")\n    .style(\"stroke-width\", 1)\n    .style(\"stroke-dasharray\", \"1,0\");\n  util.applyStyle(path, edge[type + \"Style\"]);\n}\n\n},{\"./util\":31}],7:[function(require,module,exports){\nvar util = require(\"./util\"),\n    addLabel = require(\"./label/add-label\");\n\nmodule.exports = createClusters;\n\nfunction createClusters(selection, g) {\n  var clusters = g.nodes().filter(function(v) { return util.isSubgraph(g, v); }),\n      svgClusters = selection.selectAll(\"g.cluster\")\n        .data(clusters, function(v) { return v; });\n\n  svgClusters.selectAll(\"*\").remove();\n  svgClusters.enter()\n    .append(\"g\")\n      .attr(\"class\", \"cluster\")\n      .attr(\"id\",function(v){\n          var node = g.node(v);\n          return node.id;\n      })\n      .style(\"opacity\", 0);\n\n  util.applyTransition(svgClusters, g)\n    .style(\"opacity\", 1);\n\n  svgClusters.each(function(v) {\n    var node = g.node(v),\n        thisGroup = d3.select(this);\n    d3.select(this).append(\"rect\");\n    var labelGroup = thisGroup.append(\"g\").attr(\"class\", \"label\");\n    addLabel(labelGroup, node, node.clusterLabelPos);\n  });\n\n  svgClusters.selectAll(\"rect\").each(function(c) {\n    var node = g.node(c);\n    var domCluster = d3.select(this);\n    util.applyStyle(domCluster, node.style);\n  });\n\n  util.applyTransition(svgClusters.exit(), g)\n    .style(\"opacity\", 0)\n    .remove();\n\n  return svgClusters;\n}\n\n},{\"./label/add-label\":22,\"./util\":31}],8:[function(require,module,exports){\n\"use strict\";\n\nvar _ = require(\"./lodash\"),\n    addLabel = require(\"./label/add-label\"),\n    util = require(\"./util\"),\n    d3 = require(\"./d3\");\n\nmodule.exports = createEdgeLabels;\n\nfunction createEdgeLabels(selection, g) {\n  var svgEdgeLabels = selection.selectAll(\"g.edgeLabel\")\n    .data(g.edges(), function(e) { return util.edgeToId(e); })\n    .classed(\"update\", true);\n\n  svgEdgeLabels.selectAll(\"*\").remove();\n  svgEdgeLabels.enter()\n    .append(\"g\")\n      .classed(\"edgeLabel\", true)\n      .style(\"opacity\", 0);\n  svgEdgeLabels.each(function(e) {\n    var edge = g.edge(e),\n        label = addLabel(d3.select(this), g.edge(e), 0, 0).classed(\"label\", true),\n        bbox = label.node().getBBox();\n\n    if (edge.labelId) { label.attr(\"id\", edge.labelId); }\n    if (!_.has(edge, \"width\")) { edge.width = bbox.width; }\n    if (!_.has(edge, \"height\")) { edge.height = bbox.height; }\n  });\n\n  util.applyTransition(svgEdgeLabels.exit(), g)\n    .style(\"opacity\", 0)\n    .remove();\n\n  return svgEdgeLabels;\n}\n\n},{\"./d3\":11,\"./label/add-label\":22,\"./lodash\":25,\"./util\":31}],9:[function(require,module,exports){\n\"use strict\";\n\nvar _ = require(\"./lodash\"),\n    intersectNode = require(\"./intersect/intersect-node\"),\n    util = require(\"./util\"),\n    d3 = require(\"./d3\");\n\nmodule.exports = createEdgePaths;\n\nfunction createEdgePaths(selection, g, arrows) {\n  var svgPaths = selection.selectAll(\"g.edgePath\")\n    .data(g.edges(), function(e) { return util.edgeToId(e); })\n    .classed(\"update\", true);\n\n  enter(svgPaths, g);\n  exit(svgPaths, g);\n\n  util.applyTransition(svgPaths, g)\n    .style(\"opacity\", 1);\n\n  // Save DOM element in the path group, and set ID and class\n  svgPaths.each(function(e) {\n    var domEdge = d3.select(this);\n    var edge = g.edge(e);\n    edge.elem = this;\n\n    if (edge.id) {\n      domEdge.attr(\"id\", edge.id);\n    }\n\n    util.applyClass(domEdge, edge[\"class\"],\n      (domEdge.classed(\"update\") ? \"update \" : \"\") + \"edgePath\");\n  });\n\n  svgPaths.selectAll(\"path.path\")\n    .each(function(e) {\n      var edge = g.edge(e);\n      edge.arrowheadId = _.uniqueId(\"arrowhead\");\n\n      var domEdge = d3.select(this)\n        .attr(\"marker-end\", function() {\n          return \"url(#\" + edge.arrowheadId + \")\";\n        })\n        .style(\"fill\", \"none\");\n\n      util.applyTransition(domEdge, g)\n        .attr(\"d\", function(e) { return calcPoints(g, e); });\n\n      util.applyStyle(domEdge, edge.style);\n    });\n\n  svgPaths.selectAll(\"defs *\").remove();\n  svgPaths.selectAll(\"defs\")\n    .each(function(e) {\n      var edge = g.edge(e),\n          arrowhead = arrows[edge.arrowhead];\n      arrowhead(d3.select(this), edge.arrowheadId, edge, \"arrowhead\");\n    });\n\n  return svgPaths;\n}\n\nfunction calcPoints(g, e) {\n  var edge = g.edge(e),\n      tail = g.node(e.v),\n      head = g.node(e.w),\n      points = edge.points.slice(1, edge.points.length - 1);\n  points.unshift(intersectNode(tail, points[0]));\n  points.push(intersectNode(head, points[points.length - 1]));\n\n  return createLine(edge, points);\n}\n\nfunction createLine(edge, points) {\n  var line = d3.svg.line()\n    .x(function(d) { return d.x; })\n    .y(function(d) { return d.y; });\n\n  if (_.has(edge, \"lineInterpolate\")) {\n    line.interpolate(edge.lineInterpolate);\n  }\n\n  if (_.has(edge, \"lineTension\")) {\n    line.tension(Number(edge.lineTension));\n  }\n\n  return line(points);\n}\n\nfunction getCoords(elem) {\n  var bbox = elem.getBBox(),\n      matrix = elem.getTransformToElement(elem.ownerSVGElement)\n        .translate(bbox.width / 2, bbox.height / 2);\n  return { x: matrix.e, y: matrix.f };\n}\n\nfunction enter(svgPaths, g) {\n  var svgPathsEnter = svgPaths.enter()\n    .append(\"g\")\n      .attr(\"class\", \"edgePath\")\n      .style(\"opacity\", 0);\n  svgPathsEnter.append(\"path\")\n    .attr(\"class\", \"path\")\n    .attr(\"d\", function(e) {\n      var edge = g.edge(e),\n          sourceElem = g.node(e.v).elem,\n          points = _.range(edge.points.length).map(function() { return getCoords(sourceElem); });\n      return createLine(edge, points);\n    });\n  svgPathsEnter.append(\"defs\");\n}\n\nfunction exit(svgPaths, g) {\n  var svgPathExit = svgPaths.exit();\n  util.applyTransition(svgPathExit, g)\n    .style(\"opacity\", 0)\n    .remove();\n\n  util.applyTransition(svgPathExit.select(\"path.path\"), g)\n    .attr(\"d\", function(e) {\n      var source = g.node(e.v);\n\n      if (source) {\n        var points = _.range(this.pathSegList.length).map(function() { return source; });\n        return createLine({}, points);\n      } else {\n        return d3.select(this).attr(\"d\");\n      }\n    });\n}\n\n},{\"./d3\":11,\"./intersect/intersect-node\":18,\"./lodash\":25,\"./util\":31}],10:[function(require,module,exports){\n\"use strict\";\n\nvar _ = require(\"./lodash\"),\n    addLabel = require(\"./label/add-label\"),\n    util = require(\"./util\"),\n    d3 = require(\"./d3\");\n\nmodule.exports = createNodes;\n\nfunction createNodes(selection, g, shapes) {\n  var simpleNodes = g.nodes().filter(function(v) { return !util.isSubgraph(g, v); });\n  var svgNodes = selection.selectAll(\"g.node\")\n    .data(simpleNodes, function(v) { return v; })\n    .classed(\"update\", true);\n\n  svgNodes.selectAll(\"*\").remove();\n  svgNodes.enter()\n    .append(\"g\")\n      .attr(\"class\", \"node\")\n      .style(\"opacity\", 0);\n  svgNodes.each(function(v) {\n    var node = g.node(v),\n        thisGroup = d3.select(this),\n        labelGroup = thisGroup.append(\"g\").attr(\"class\", \"label\"),\n        labelDom = addLabel(labelGroup, node),\n        shape = shapes[node.shape],\n        bbox = _.pick(labelDom.node().getBBox(), \"width\", \"height\");\n\n    node.elem = this;\n\n    if (node.id) { thisGroup.attr(\"id\", node.id); }\n    if (node.labelId) { labelGroup.attr(\"id\", node.labelId); }\n    util.applyClass(thisGroup, node[\"class\"],\n      (thisGroup.classed(\"update\") ? \"update \" : \"\") + \"node\");\n\n    if (_.has(node, \"width\")) { bbox.width = node.width; }\n    if (_.has(node, \"height\")) { bbox.height = node.height; }\n\n    bbox.width += node.paddingLeft + node.paddingRight;\n    bbox.height += node.paddingTop + node.paddingBottom;\n    labelGroup.attr(\"transform\", \"translate(\" +\n      ((node.paddingLeft - node.paddingRight) / 2) + \",\" +\n      ((node.paddingTop - node.paddingBottom) / 2) + \")\");\n\n    var shapeSvg = shape(d3.select(this), bbox, node);\n    util.applyStyle(shapeSvg, node.style);\n\n    var shapeBBox = shapeSvg.node().getBBox();\n    node.width = shapeBBox.width;\n    node.height = shapeBBox.height;\n  });\n\n  util.applyTransition(svgNodes.exit(), g)\n    .style(\"opacity\", 0)\n    .remove();\n\n  return svgNodes;\n}\n\n},{\"./d3\":11,\"./label/add-label\":22,\"./lodash\":25,\"./util\":31}],11:[function(require,module,exports){\n// Stub to get D3 either via NPM or from the global object\nmodule.exports = window.d3;\n\n},{}],12:[function(require,module,exports){\n/* global window */\n\nvar dagre;\n\nif (require) {\n  try {\n    dagre = require(\"dagre\");\n  } catch (e) {}\n}\n\nif (!dagre) {\n  dagre = window.dagre;\n}\n\nmodule.exports = dagre;\n\n},{\"dagre\":54}],13:[function(require,module,exports){\n/* global window */\n\nvar graphlib;\n\nif (require) {\n  try {\n    graphlib = require(\"graphlib\");\n  } catch (e) {}\n}\n\nif (!graphlib) {\n  graphlib = window.graphlib;\n}\n\nmodule.exports = graphlib;\n\n},{\"graphlib\":33}],14:[function(require,module,exports){\nmodule.exports = {\n  node: require(\"./intersect-node\"),\n  circle: require(\"./intersect-circle\"),\n  ellipse: require(\"./intersect-ellipse\"),\n  polygon: require(\"./intersect-polygon\"),\n  rect: require(\"./intersect-rect\")\n};\n\n},{\"./intersect-circle\":15,\"./intersect-ellipse\":16,\"./intersect-node\":18,\"./intersect-polygon\":19,\"./intersect-rect\":20}],15:[function(require,module,exports){\nvar intersectEllipse = require(\"./intersect-ellipse\");\n\nmodule.exports = intersectCircle;\n\nfunction intersectCircle(node, rx, point) {\n  return intersectEllipse(node, rx, rx, point);\n}\n\n},{\"./intersect-ellipse\":16}],16:[function(require,module,exports){\nmodule.exports = intersectEllipse;\n\nfunction intersectEllipse(node, rx, ry, point) {\n  // Formulae from: http://mathworld.wolfram.com/Ellipse-LineIntersection.html\n\n  var cx = node.x;\n  var cy = node.y;\n\n  var px = cx - point.x;\n  var py = cy - point.y;\n\n  var det = Math.sqrt(rx * rx * py * py + ry * ry * px * px);\n\n  var dx = Math.abs(rx * ry * px / det);\n  if (point.x < cx) {\n    dx = -dx;\n  }\n  var dy = Math.abs(rx * ry * py / det);\n  if (point.y < cy) {\n    dy = -dy;\n  }\n\n  return {x: cx + dx, y: cy + dy};\n}\n\n\n},{}],17:[function(require,module,exports){\nmodule.exports = intersectLine;\n\n/*\n * Returns the point at which two lines, p and q, intersect or returns\n * undefined if they do not intersect.\n */\nfunction intersectLine(p1, p2, q1, q2) {\n  // Algorithm from J. Avro, (ed.) Graphics Gems, No 2, Morgan Kaufmann, 1994,\n  // p7 and p473.\n\n  var a1, a2, b1, b2, c1, c2;\n  var r1, r2 , r3, r4;\n  var denom, offset, num;\n  var x, y;\n\n  // Compute a1, b1, c1, where line joining points 1 and 2 is F(x,y) = a1 x +\n  // b1 y + c1 = 0.\n  a1 = p2.y - p1.y;\n  b1 = p1.x - p2.x;\n  c1 = (p2.x * p1.y) - (p1.x * p2.y);\n\n  // Compute r3 and r4.\n  r3 = ((a1 * q1.x) + (b1 * q1.y) + c1);\n  r4 = ((a1 * q2.x) + (b1 * q2.y) + c1);\n\n  // Check signs of r3 and r4. If both point 3 and point 4 lie on\n  // same side of line 1, the line segments do not intersect.\n  if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n    return /*DONT_INTERSECT*/;\n  }\n\n  // Compute a2, b2, c2 where line joining points 3 and 4 is G(x,y) = a2 x + b2 y + c2 = 0\n  a2 = q2.y - q1.y;\n  b2 = q1.x - q2.x;\n  c2 = (q2.x * q1.y) - (q1.x * q2.y);\n\n  // Compute r1 and r2\n  r1 = (a2 * p1.x) + (b2 * p1.yy) + c2;\n  r2 = (a2 * p2.x) + (b2 * p2.y) + c2;\n\n  // Check signs of r1 and r2. If both point 1 and point 2 lie\n  // on same side of second line segment, the line segments do\n  // not intersect.\n  if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n    return /*DONT_INTERSECT*/;\n  }\n\n  // Line segments intersect: compute intersection point.\n  denom = (a1 * b2) - (a2 * b1);\n  if (denom === 0) {\n    return /*COLLINEAR*/;\n  }\n\n  offset = Math.abs(denom / 2);\n\n  // The denom/2 is to get rounding instead of truncating. It\n  // is added or subtracted to the numerator, depending upon the\n  // sign of the numerator.\n  num = (b1 * c2) - (b2 * c1);\n  x = (num < 0) ? ((num - offset) / denom) : ((num + offset) / denom);\n\n  num = (a2 * c1) - (a1 * c2);\n  y = (num < 0) ? ((num - offset) / denom) : ((num + offset) / denom);\n\n  return { x: x, y: y };\n}\n\nfunction sameSign(r1, r2) {\n  return r1 * r2 > 0;\n}\n\n},{}],18:[function(require,module,exports){\nmodule.exports = intersectNode;\n\nfunction intersectNode(node, point) {\n  return node.intersect(point);\n}\n\n},{}],19:[function(require,module,exports){\nvar intersectLine = require(\"./intersect-line\");\n\nmodule.exports = intersectPolygon;\n\n/*\n * Returns the point ({x, y}) at which the point argument intersects with the\n * node argument assuming that it has the shape specified by polygon.\n */\nfunction intersectPolygon(node, polyPoints, point) {\n  var x1 = node.x;\n  var y1 = node.y;\n\n  var intersections = [];\n\n  var minX = Number.POSITIVE_INFINITY,\n      minY = Number.POSITIVE_INFINITY;\n  polyPoints.forEach(function(entry) {\n    minX = Math.min(minX, entry.x);\n    minY = Math.min(minY, entry.y);\n  });\n\n  var left = x1 - node.width / 2 - minX;\n  var top =  y1 - node.height / 2 - minY;\n\n  for (var i = 0; i < polyPoints.length; i++) {\n    var p1 = polyPoints[i];\n    var p2 = polyPoints[i < polyPoints.length - 1 ? i + 1 : 0];\n    var intersect = intersectLine(node, point,\n      {x: left + p1.x, y: top + p1.y}, {x: left + p2.x, y: top + p2.y});\n    if (intersect) {\n      intersections.push(intersect);\n    }\n  }\n\n  if (!intersections.length) {\n    console.log(\"NO INTERSECTION FOUND, RETURN NODE CENTER\", node);\n    return node;\n  }\n\n  if (intersections.length > 1) {\n    // More intersections, find the one nearest to edge end point\n    intersections.sort(function(p, q) {\n      var pdx = p.x - point.x,\n          pdy = p.y - point.y,\n          distp = Math.sqrt(pdx * pdx + pdy * pdy),\n\n          qdx = q.x - point.x,\n          qdy = q.y - point.y,\n          distq = Math.sqrt(qdx * qdx + qdy * qdy);\n\n      return (distp < distq) ? -1 : (distp === distq ? 0 : 1);\n    });\n  }\n  return intersections[0];\n}\n\n},{\"./intersect-line\":17}],20:[function(require,module,exports){\nmodule.exports = intersectRect;\n\nfunction intersectRect(node, point) {\n  var x = node.x;\n  var y = node.y;\n\n  // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = node.width / 2;\n  var h = node.height / 2;\n\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = dy === 0 ? 0 : h * dx / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = dx === 0 ? 0 : w * dy / dx;\n  }\n\n  return {x: x + sx, y: y + sy};\n}\n\n},{}],21:[function(require,module,exports){\nvar util = require(\"../util\");\n\nmodule.exports = addHtmlLabel;\n\nfunction addHtmlLabel(root, node) {\n  var fo = root\n    .append(\"foreignObject\")\n      .attr(\"width\", \"100000\");\n\n  var div = fo\n    .append(\"xhtml:div\");\n\n  var label = node.label;\n  switch(typeof label) {\n    case \"function\":\n      div.insert(label);\n      break;\n    case \"object\":\n      // Currently we assume this is a DOM object.\n      div.insert(function() { return label; });\n      break;\n    default: div.html(label);\n  }\n\n  util.applyStyle(div, node.labelStyle);\n  div.style(\"display\", \"inline-block\");\n  // Fix for firefox\n  div.style(\"white-space\", \"nowrap\");\n\n  // TODO find a better way to get dimensions for foreignObjects...\n  var w, h;\n  div\n    .each(function() {\n      w = this.clientWidth;\n      h = this.clientHeight;\n    });\n\n  fo\n    .attr(\"width\", w)\n    .attr(\"height\", h);\n\n  return fo;\n}\n\n},{\"../util\":31}],22:[function(require,module,exports){\nvar addTextLabel = require(\"./add-text-label\"),\n    addHtmlLabel = require(\"./add-html-label\"),\n    addSVGLabel  = require(\"./add-svg-label\");\n\nmodule.exports = addLabel;\n\nfunction addLabel(root, node, location) {\n  var label = node.label;\n  var labelSvg = root.append(\"g\");\n\n  // Allow the label to be a string, a function that returns a DOM element, or\n  // a DOM element itself.\n  if (node.labelType === \"svg\") {\n    addSVGLabel(labelSvg, node);\n  } else if (typeof label !== \"string\" || node.labelType === \"html\") {\n    addHtmlLabel(labelSvg, node);\n  } else {\n    addTextLabel(labelSvg, node);\n  }\n\n  var labelBBox = labelSvg.node().getBBox();\n  var y;\n  switch(location) {\n    case \"top\":\n      y = (-node.height / 2);\n      break;\n    case \"bottom\":\n      y = (node.height / 2) - labelBBox.height;\n      break;\n    default:\n      y = (-labelBBox.height / 2);\n  }\n  labelSvg.attr(\"transform\",\n                \"translate(\" + (-labelBBox.width / 2) + \",\" + y + \")\");\n\n  return labelSvg;\n}\n\n},{\"./add-html-label\":21,\"./add-svg-label\":23,\"./add-text-label\":24}],23:[function(require,module,exports){\nvar util = require(\"../util\");\n\nmodule.exports = addSVGLabel;\n\nfunction addSVGLabel(root, node) {\n  var domNode = root;\n\n  domNode.node().appendChild(node.label);\n\n  util.applyStyle(domNode, node.labelStyle);\n\n  return domNode;\n}\n\n},{\"../util\":31}],24:[function(require,module,exports){\nvar util = require(\"../util\");\n\nmodule.exports = addTextLabel;\n\n/*\n * Attaches a text label to the specified root. Handles escape sequences.\n */\nfunction addTextLabel(root, node) {\n  var domNode = root.append(\"text\");\n\n  var lines = processEscapeSequences(node.label).split(\"\\n\");\n  for (var i = 0; i < lines.length; i++) {\n    domNode\n      .append(\"tspan\")\n        .attr(\"xml:space\", \"preserve\")\n        .attr(\"dy\", \"1em\")\n        .attr(\"x\", \"1\")\n        .text(lines[i]);\n  }\n\n  util.applyStyle(domNode, node.labelStyle);\n\n  return domNode;\n}\n\nfunction processEscapeSequences(text) {\n  var newText = \"\",\n      escaped = false,\n      ch;\n  for (var i = 0; i < text.length; ++i) {\n    ch = text[i];\n    if (escaped) {\n      switch(ch) {\n        case \"n\": newText += \"\\n\"; break;\n        default: newText += ch;\n      }\n      escaped = false;\n    } else if (ch === \"\\\\\") {\n      escaped = true;\n    } else {\n      newText += ch;\n    }\n  }\n  return newText;\n}\n\n},{\"../util\":31}],25:[function(require,module,exports){\n/* global window */\n\nvar lodash;\n\nif (require) {\n  try {\n    lodash = require(\"lodash\");\n  } catch (e) {}\n}\n\nif (!lodash) {\n  lodash = window._;\n}\n\nmodule.exports = lodash;\n\n},{\"lodash\":53}],26:[function(require,module,exports){\n\"use strict\";\n\nvar util = require(\"./util\"),\n    d3 = require(\"./d3\");\n\nmodule.exports = positionClusters;\n\nfunction positionClusters(selection, g) {\n  var created = selection.filter(function() { return !d3.select(this).classed(\"update\"); });\n\n  function translate(v) {\n    var node = g.node(v);\n    return \"translate(\" + node.x + \",\" + node.y + \")\";\n  }\n\n  created.attr(\"transform\", translate);\n\n  util.applyTransition(selection, g)\n      .style(\"opacity\", 1)\n      .attr(\"transform\", translate);\n\n  util.applyTransition(created.selectAll(\"rect\"), g)\n      .attr(\"width\", function(v) { return g.node(v).width; })\n      .attr(\"height\", function(v) { return g.node(v).height; })\n      .attr(\"x\", function(v) {\n        var node = g.node(v);\n        return -node.width / 2;\n      })\n      .attr(\"y\", function(v) {\n        var node = g.node(v);\n        return -node.height / 2;\n      });\n\n}\n\n},{\"./d3\":11,\"./util\":31}],27:[function(require,module,exports){\n\"use strict\";\n\nvar util = require(\"./util\"),\n    d3 = require(\"./d3\"),\n    _ = require(\"./lodash\");\n\nmodule.exports = positionEdgeLabels;\n\nfunction positionEdgeLabels(selection, g) {\n  var created = selection.filter(function() { return !d3.select(this).classed(\"update\"); });\n\n  function translate(e) {\n    var edge = g.edge(e);\n    return _.has(edge, \"x\") ? \"translate(\" + edge.x + \",\" + edge.y + \")\" : \"\";\n  }\n\n  created.attr(\"transform\", translate);\n\n  util.applyTransition(selection, g)\n    .style(\"opacity\", 1)\n    .attr(\"transform\", translate);\n}\n\n},{\"./d3\":11,\"./lodash\":25,\"./util\":31}],28:[function(require,module,exports){\n\"use strict\";\n\nvar util = require(\"./util\"),\n    d3 = require(\"./d3\");\n\nmodule.exports = positionNodes;\n\nfunction positionNodes(selection, g) {\n  var created = selection.filter(function() { return !d3.select(this).classed(\"update\"); });\n\n  function translate(v) {\n    var node = g.node(v);\n    return \"translate(\" + node.x + \",\" + node.y + \")\";\n  }\n\n  created.attr(\"transform\", translate);\n\n  util.applyTransition(selection, g)\n    .style(\"opacity\", 1)\n    .attr(\"transform\", translate);\n}\n\n},{\"./d3\":11,\"./util\":31}],29:[function(require,module,exports){\nvar _ = require(\"./lodash\"),\n    layout = require(\"./dagre\").layout;\n\nmodule.exports = render;\n\n// This design is based on http://bost.ocks.org/mike/chart/.\nfunction render() {\n  var createNodes = require(\"./create-nodes\"),\n      createClusters = require(\"./create-clusters\"),\n      createEdgeLabels = require(\"./create-edge-labels\"),\n      createEdgePaths = require(\"./create-edge-paths\"),\n      positionNodes = require(\"./position-nodes\"),\n      positionEdgeLabels = require(\"./position-edge-labels\"),\n      positionClusters = require(\"./position-clusters\"),\n      shapes = require(\"./shapes\"),\n      arrows = require(\"./arrows\");\n\n  var fn = function(svg, g) {\n    preProcessGraph(g);\n\n    var outputGroup = createOrSelectGroup(svg, \"output\"),\n        clustersGroup = createOrSelectGroup(outputGroup, \"clusters\"),\n        edgePathsGroup = createOrSelectGroup(outputGroup, \"edgePaths\"),\n        edgeLabels = createEdgeLabels(createOrSelectGroup(outputGroup, \"edgeLabels\"), g),\n        nodes = createNodes(createOrSelectGroup(outputGroup, \"nodes\"), g, shapes);\n\n    layout(g);\n\n    positionNodes(nodes, g);\n    positionEdgeLabels(edgeLabels, g);\n    createEdgePaths(edgePathsGroup, g, arrows);\n\n    var clusters = createClusters(clustersGroup, g);\n    positionClusters(clusters, g);\n\n    postProcessGraph(g);\n  };\n\n  fn.createNodes = function(value) {\n    if (!arguments.length) return createNodes;\n    createNodes = value;\n    return fn;\n  };\n\n  fn.createClusters = function(value) {\n    if (!arguments.length) return createClusters;\n    createClusters = value;\n    return fn;\n  };\n\n  fn.createEdgeLabels = function(value) {\n    if (!arguments.length) return createEdgeLabels;\n    createEdgeLabels = value;\n    return fn;\n  };\n\n  fn.createEdgePaths = function(value) {\n    if (!arguments.length) return createEdgePaths;\n    createEdgePaths = value;\n    return fn;\n  };\n\n  fn.shapes = function(value) {\n    if (!arguments.length) return shapes;\n    shapes = value;\n    return fn;\n  };\n\n  fn.arrows = function(value) {\n    if (!arguments.length) return arrows;\n    arrows = value;\n    return fn;\n  };\n\n  return fn;\n}\n\nvar NODE_DEFAULT_ATTRS = {\n  paddingLeft: 10,\n  paddingRight: 10,\n  paddingTop: 10,\n  paddingBottom: 10,\n  rx: 0,\n  ry: 0,\n  shape: \"rect\"\n};\n\nvar EDGE_DEFAULT_ATTRS = {\n  arrowhead: \"normal\",\n  lineInterpolate: \"linear\"\n};\n\nfunction preProcessGraph(g) {\n  g.nodes().forEach(function(v) {\n    var node = g.node(v);\n    if (!_.has(node, \"label\") && !g.children(v).length) { node.label = v; }\n\n    if (_.has(node, \"paddingX\")) {\n      _.defaults(node, {\n        paddingLeft: node.paddingX,\n        paddingRight: node.paddingX\n      });\n    }\n\n    if (_.has(node, \"paddingY\")) {\n      _.defaults(node, {\n        paddingTop: node.paddingY,\n        paddingBottom: node.paddingY\n      });\n    }\n\n    if (_.has(node, \"padding\")) {\n      _.defaults(node, {\n        paddingLeft: node.padding,\n        paddingRight: node.padding,\n        paddingTop: node.padding,\n        paddingBottom: node.padding\n      });\n    }\n\n    _.defaults(node, NODE_DEFAULT_ATTRS);\n\n    _.each([\"paddingLeft\", \"paddingRight\", \"paddingTop\", \"paddingBottom\"], function(k) {\n      node[k] = Number(node[k]);\n    });\n\n    // Save dimensions for restore during post-processing\n    if (_.has(node, \"width\")) { node._prevWidth = node.width; }\n    if (_.has(node, \"height\")) { node._prevHeight = node.height; }\n  });\n\n  g.edges().forEach(function(e) {\n    var edge = g.edge(e);\n    if (!_.has(edge, \"label\")) { edge.label = \"\"; }\n    _.defaults(edge, EDGE_DEFAULT_ATTRS);\n  });\n}\n\nfunction postProcessGraph(g) {\n  _.each(g.nodes(), function(v) {\n    var node = g.node(v);\n\n    // Restore original dimensions\n    if (_.has(node, \"_prevWidth\")) {\n      node.width = node._prevWidth;\n    } else {\n      delete node.width;\n    }\n\n    if (_.has(node, \"_prevHeight\")) {\n      node.height = node._prevHeight;\n    } else {\n      delete node.height;\n    }\n\n    delete node._prevWidth;\n    delete node._prevHeight;\n  });\n}\n\nfunction createOrSelectGroup(root, name) {\n  var selection = root.select(\"g.\" + name);\n  if (selection.empty()) {\n    selection = root.append(\"g\").attr(\"class\", name);\n  }\n  return selection;\n}\n\n},{\"./arrows\":6,\"./create-clusters\":7,\"./create-edge-labels\":8,\"./create-edge-paths\":9,\"./create-nodes\":10,\"./dagre\":12,\"./lodash\":25,\"./position-clusters\":26,\"./position-edge-labels\":27,\"./position-nodes\":28,\"./shapes\":30}],30:[function(require,module,exports){\n\"use strict\";\n\nvar intersectRect = require(\"./intersect/intersect-rect\"),\n    intersectEllipse = require(\"./intersect/intersect-ellipse\"),\n    intersectCircle = require(\"./intersect/intersect-circle\"),\n    intersectPolygon = require(\"./intersect/intersect-polygon\");\n\nmodule.exports = {\n  rect: rect,\n  ellipse: ellipse,\n  circle: circle,\n  diamond: diamond\n};\n\nfunction rect(parent, bbox, node) {\n  var shapeSvg = parent.insert(\"rect\", \":first-child\")\n        .attr(\"rx\", node.rx)\n        .attr(\"ry\", node.ry)\n        .attr(\"x\", -bbox.width / 2)\n        .attr(\"y\", -bbox.height / 2)\n        .attr(\"width\", bbox.width)\n        .attr(\"height\", bbox.height);\n\n  node.intersect = function(point) {\n    return intersectRect(node, point);\n  };\n\n  return shapeSvg;\n}\n\nfunction ellipse(parent, bbox, node) {\n  var rx = bbox.width / 2,\n      ry = bbox.height / 2,\n      shapeSvg = parent.insert(\"ellipse\", \":first-child\")\n        .attr(\"x\", -bbox.width / 2)\n        .attr(\"y\", -bbox.height / 2)\n        .attr(\"rx\", rx)\n        .attr(\"ry\", ry);\n\n  node.intersect = function(point) {\n    return intersectEllipse(node, rx, ry, point);\n  };\n\n  return shapeSvg;\n}\n\nfunction circle(parent, bbox, node) {\n  var r = Math.max(bbox.width, bbox.height) / 2,\n      shapeSvg = parent.insert(\"circle\", \":first-child\")\n        .attr(\"x\", -bbox.width / 2)\n        .attr(\"y\", -bbox.height / 2)\n        .attr(\"r\", r);\n\n  node.intersect = function(point) {\n    return intersectCircle(node, r, point);\n  };\n\n  return shapeSvg;\n}\n\n// Circumscribe an ellipse for the bounding box with a diamond shape. I derived\n// the function to calculate the diamond shape from:\n// http://mathforum.org/kb/message.jspa?messageID=3750236\nfunction diamond(parent, bbox, node) {\n  var w = (bbox.width * Math.SQRT2) / 2,\n      h = (bbox.height * Math.SQRT2) / 2,\n      points = [\n        { x:  0, y: -h },\n        { x: -w, y:  0 },\n        { x:  0, y:  h },\n        { x:  w, y:  0 }\n      ],\n      shapeSvg = parent.insert(\"polygon\", \":first-child\")\n        .attr(\"points\", points.map(function(p) { return p.x + \",\" + p.y; }).join(\" \"));\n\n  node.intersect = function(p) {\n    return intersectPolygon(node, points, p);\n  };\n\n  return shapeSvg;\n}\n\n},{\"./intersect/intersect-circle\":15,\"./intersect/intersect-ellipse\":16,\"./intersect/intersect-polygon\":19,\"./intersect/intersect-rect\":20}],31:[function(require,module,exports){\nvar _ = require(\"./lodash\");\n\n// Public utility functions\nmodule.exports = {\n  isSubgraph: isSubgraph,\n  edgeToId: edgeToId,\n  applyStyle: applyStyle,\n  applyClass: applyClass,\n  applyTransition: applyTransition\n};\n\n/*\n * Returns true if the specified node in the graph is a subgraph node. A\n * subgraph node is one that contains other nodes.\n */\nfunction isSubgraph(g, v) {\n  return !!g.children(v).length;\n}\n\nfunction edgeToId(e) {\n  return escapeId(e.v) + \":\" + escapeId(e.w) + \":\" + escapeId(e.name);\n}\n\nvar ID_DELIM = /:/g;\nfunction escapeId(str) {\n  return str ? String(str).replace(ID_DELIM, \"\\\\:\") : \"\";\n}\n\nfunction applyStyle(dom, styleFn) {\n  if (styleFn) {\n    dom.attr(\"style\", styleFn);\n  }\n}\n\nfunction applyClass(dom, classFn, otherClasses) {\n  if (classFn) {\n    dom\n      .attr(\"class\", classFn)\n      .attr(\"class\", otherClasses + \" \" + dom.attr(\"class\"));\n  }\n}\n\nfunction applyTransition(selection, g) {\n  var graph = g.graph();\n\n  if (_.isPlainObject(graph)) {\n    var transition = graph.transition;\n    if (_.isFunction(transition)) {\n      return transition(selection);\n    }\n  }\n\n  return selection;\n}\n\n},{\"./lodash\":25}],32:[function(require,module,exports){\nmodule.exports = \"0.4.10\";\n\n},{}],33:[function(require,module,exports){\n/**\n * Copyright (c) 2014, Chris Pettitt\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n * list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of the copyright holder nor the names of its contributors\n * may be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar lib = require(\"./lib\");\n\nmodule.exports = {\n  Graph: lib.Graph,\n  json: require(\"./lib/json\"),\n  alg: require(\"./lib/alg\"),\n  version: lib.version\n};\n\n},{\"./lib\":49,\"./lib/alg\":40,\"./lib/json\":50}],34:[function(require,module,exports){\nvar _ = require(\"../lodash\");\n\nmodule.exports = components;\n\nfunction components(g) {\n  var visited = {},\n      cmpts = [],\n      cmpt;\n\n  function dfs(v) {\n    if (_.has(visited, v)) return;\n    visited[v] = true;\n    cmpt.push(v);\n    _.each(g.successors(v), dfs);\n    _.each(g.predecessors(v), dfs);\n  }\n\n  _.each(g.nodes(), function(v) {\n    cmpt = [];\n    dfs(v);\n    if (cmpt.length) {\n      cmpts.push(cmpt);\n    }\n  });\n\n  return cmpts;\n}\n\n},{\"../lodash\":51}],35:[function(require,module,exports){\nvar _ = require(\"../lodash\");\n\nmodule.exports = dfs;\n\n/*\n * A helper that preforms a pre- or post-order traversal on the input graph\n * and returns the nodes in the order they were visited. This algorithm treats\n * the input as undirected.\n *\n * Order must be one of \"pre\" or \"post\".\n */\nfunction dfs(g, vs, order) {\n  if (!_.isArray(vs)) {\n    vs = [vs];\n  }\n\n  var acc = [],\n      visited = {};\n  _.each(vs, function(v) {\n    if (!g.hasNode(v)) {\n      throw new Error(\"Graph does not have node: \" + v);\n    }\n\n    doDfs(g, v, order === \"post\", visited, acc);\n  });\n  return acc;\n}\n\nfunction doDfs(g, v, postorder, visited, acc) {\n  if (!_.has(visited, v)) {\n    visited[v] = true;\n\n    if (!postorder) { acc.push(v); }\n    _.each(g.neighbors(v), function(w) {\n      doDfs(g, w, postorder, visited, acc);\n    });\n    if (postorder) { acc.push(v); }\n  }\n}\n\n},{\"../lodash\":51}],36:[function(require,module,exports){\nvar dijkstra = require(\"./dijkstra\"),\n    _ = require(\"../lodash\");\n\nmodule.exports = dijkstraAll;\n\nfunction dijkstraAll(g, weightFunc, edgeFunc) {\n  return _.transform(g.nodes(), function(acc, v) {\n    acc[v] = dijkstra(g, v, weightFunc, edgeFunc);\n  }, {});\n}\n\n},{\"../lodash\":51,\"./dijkstra\":37}],37:[function(require,module,exports){\nvar _ = require(\"../lodash\"),\n    PriorityQueue = require(\"../data/priority-queue\");\n\nmodule.exports = dijkstra;\n\nvar DEFAULT_WEIGHT_FUNC = _.constant(1);\n\nfunction dijkstra(g, source, weightFn, edgeFn) {\n  return runDijkstra(g, String(source),\n                     weightFn || DEFAULT_WEIGHT_FUNC,\n                     edgeFn || function(v) { return g.outEdges(v); });\n}\n\nfunction runDijkstra(g, source, weightFn, edgeFn) {\n  var results = {},\n      pq = new PriorityQueue(),\n      v, vEntry;\n\n  var updateNeighbors = function(edge) {\n    var w = edge.v !== v ? edge.v : edge.w,\n        wEntry = results[w],\n        weight = weightFn(edge),\n        distance = vEntry.distance + weight;\n\n    if (weight < 0) {\n      throw new Error(\"dijkstra does not allow negative edge weights. \" +\n                      \"Bad edge: \" + edge + \" Weight: \" + weight);\n    }\n\n    if (distance < wEntry.distance) {\n      wEntry.distance = distance;\n      wEntry.predecessor = v;\n      pq.decrease(w, distance);\n    }\n  };\n\n  g.nodes().forEach(function(v) {\n    var distance = v === source ? 0 : Number.POSITIVE_INFINITY;\n    results[v] = { distance: distance };\n    pq.add(v, distance);\n  });\n\n  while (pq.size() > 0) {\n    v = pq.removeMin();\n    vEntry = results[v];\n    if (vEntry.distance === Number.POSITIVE_INFINITY) {\n      break;\n    }\n\n    edgeFn(v).forEach(updateNeighbors);\n  }\n\n  return results;\n}\n\n},{\"../data/priority-queue\":47,\"../lodash\":51}],38:[function(require,module,exports){\nvar _ = require(\"../lodash\"),\n    tarjan = require(\"./tarjan\");\n\nmodule.exports = findCycles;\n\nfunction findCycles(g) {\n  return _.filter(tarjan(g), function(cmpt) {\n    return cmpt.length > 1 || (cmpt.length === 1 && g.hasEdge(cmpt[0], cmpt[0]));\n  });\n}\n\n},{\"../lodash\":51,\"./tarjan\":45}],39:[function(require,module,exports){\nvar _ = require(\"../lodash\");\n\nmodule.exports = floydWarshall;\n\nvar DEFAULT_WEIGHT_FUNC = _.constant(1);\n\nfunction floydWarshall(g, weightFn, edgeFn) {\n  return runFloydWarshall(g,\n                          weightFn || DEFAULT_WEIGHT_FUNC,\n                          edgeFn || function(v) { return g.outEdges(v); });\n}\n\nfunction runFloydWarshall(g, weightFn, edgeFn) {\n  var results = {},\n      nodes = g.nodes();\n\n  nodes.forEach(function(v) {\n    results[v] = {};\n    results[v][v] = { distance: 0 };\n    nodes.forEach(function(w) {\n      if (v !== w) {\n        results[v][w] = { distance: Number.POSITIVE_INFINITY };\n      }\n    });\n    edgeFn(v).forEach(function(edge) {\n      var w = edge.v === v ? edge.w : edge.v,\n          d = weightFn(edge);\n      results[v][w] = { distance: d, predecessor: v };\n    });\n  });\n\n  nodes.forEach(function(k) {\n    var rowK = results[k];\n    nodes.forEach(function(i) {\n      var rowI = results[i];\n      nodes.forEach(function(j) {\n        var ik = rowI[k];\n        var kj = rowK[j];\n        var ij = rowI[j];\n        var altDistance = ik.distance + kj.distance;\n        if (altDistance < ij.distance) {\n          ij.distance = altDistance;\n          ij.predecessor = kj.predecessor;\n        }\n      });\n    });\n  });\n\n  return results;\n}\n\n},{\"../lodash\":51}],40:[function(require,module,exports){\nmodule.exports = {\n  components: require(\"./components\"),\n  dijkstra: require(\"./dijkstra\"),\n  dijkstraAll: require(\"./dijkstra-all\"),\n  findCycles: require(\"./find-cycles\"),\n  floydWarshall: require(\"./floyd-warshall\"),\n  isAcyclic: require(\"./is-acyclic\"),\n  postorder: require(\"./postorder\"),\n  preorder: require(\"./preorder\"),\n  prim: require(\"./prim\"),\n  tarjan: require(\"./tarjan\"),\n  topsort: require(\"./topsort\")\n};\n\n},{\"./components\":34,\"./dijkstra\":37,\"./dijkstra-all\":36,\"./find-cycles\":38,\"./floyd-warshall\":39,\"./is-acyclic\":41,\"./postorder\":42,\"./preorder\":43,\"./prim\":44,\"./tarjan\":45,\"./topsort\":46}],41:[function(require,module,exports){\nvar topsort = require(\"./topsort\");\n\nmodule.exports = isAcyclic;\n\nfunction isAcyclic(g) {\n  try {\n    topsort(g);\n  } catch (e) {\n    if (e instanceof topsort.CycleException) {\n      return false;\n    }\n    throw e;\n  }\n  return true;\n}\n\n},{\"./topsort\":46}],42:[function(require,module,exports){\nvar dfs = require(\"./dfs\");\n\nmodule.exports = postorder;\n\nfunction postorder(g, vs) {\n  return dfs(g, vs, \"post\");\n}\n\n},{\"./dfs\":35}],43:[function(require,module,exports){\nvar dfs = require(\"./dfs\");\n\nmodule.exports = preorder;\n\nfunction preorder(g, vs) {\n  return dfs(g, vs, \"pre\");\n}\n\n},{\"./dfs\":35}],44:[function(require,module,exports){\nvar _ = require(\"../lodash\"),\n    Graph = require(\"../graph\"),\n    PriorityQueue = require(\"../data/priority-queue\");\n\nmodule.exports = prim;\n\nfunction prim(g, weightFunc) {\n  var result = new Graph(),\n      parents = {},\n      pq = new PriorityQueue(),\n      v;\n\n  function updateNeighbors(edge) {\n    var w = edge.v === v ? edge.w : edge.v,\n        pri = pq.priority(w);\n    if (pri !== undefined) {\n      var edgeWeight = weightFunc(edge);\n      if (edgeWeight < pri) {\n        parents[w] = v;\n        pq.decrease(w, edgeWeight);\n      }\n    }\n  }\n\n  if (g.nodeCount() === 0) {\n    return result;\n  }\n\n  _.each(g.nodes(), function(v) {\n    pq.add(v, Number.POSITIVE_INFINITY);\n    result.setNode(v);\n  });\n\n  // Start from an arbitrary node\n  pq.decrease(g.nodes()[0], 0);\n\n  var init = false;\n  while (pq.size() > 0) {\n    v = pq.removeMin();\n    if (_.has(parents, v)) {\n      result.setEdge(v, parents[v]);\n    } else if (init) {\n      throw new Error(\"Input graph is not connected: \" + g);\n    } else {\n      init = true;\n    }\n\n    g.nodeEdges(v).forEach(updateNeighbors);\n  }\n\n  return result;\n}\n\n},{\"../data/priority-queue\":47,\"../graph\":48,\"../lodash\":51}],45:[function(require,module,exports){\nvar _ = require(\"../lodash\");\n\nmodule.exports = tarjan;\n\nfunction tarjan(g) {\n  var index = 0,\n      stack = [],\n      visited = {}, // node id -> { onStack, lowlink, index }\n      results = [];\n\n  function dfs(v) {\n    var entry = visited[v] = {\n      onStack: true,\n      lowlink: index,\n      index: index++\n    };\n    stack.push(v);\n\n    g.successors(v).forEach(function(w) {\n      if (!_.has(visited, w)) {\n        dfs(w);\n        entry.lowlink = Math.min(entry.lowlink, visited[w].lowlink);\n      } else if (visited[w].onStack) {\n        entry.lowlink = Math.min(entry.lowlink, visited[w].index);\n      }\n    });\n\n    if (entry.lowlink === entry.index) {\n      var cmpt = [],\n          w;\n      do {\n        w = stack.pop();\n        visited[w].onStack = false;\n        cmpt.push(w);\n      } while (v !== w);\n      results.push(cmpt);\n    }\n  }\n\n  g.nodes().forEach(function(v) {\n    if (!_.has(visited, v)) {\n      dfs(v);\n    }\n  });\n\n  return results;\n}\n\n},{\"../lodash\":51}],46:[function(require,module,exports){\nvar _ = require(\"../lodash\");\n\nmodule.exports = topsort;\ntopsort.CycleException = CycleException;\n\nfunction topsort(g) {\n  var visited = {},\n      stack = {},\n      results = [];\n\n  function visit(node) {\n    if (_.has(stack, node)) {\n      throw new CycleException();\n    }\n\n    if (!_.has(visited, node)) {\n      stack[node] = true;\n      visited[node] = true;\n      _.each(g.predecessors(node), visit);\n      delete stack[node];\n      results.push(node);\n    }\n  }\n\n  _.each(g.sinks(), visit);\n\n  if (_.size(visited) !== g.nodeCount()) {\n    throw new CycleException();\n  }\n\n  return results;\n}\n\nfunction CycleException() {}\n\n},{\"../lodash\":51}],47:[function(require,module,exports){\nvar _ = require(\"../lodash\");\n\nmodule.exports = PriorityQueue;\n\n/**\n * A min-priority queue data structure. This algorithm is derived from Cormen,\n * et al., \"Introduction to Algorithms\". The basic idea of a min-priority\n * queue is that you can efficiently (in O(1) time) get the smallest key in\n * the queue. Adding and removing elements takes O(log n) time. A key can\n * have its priority decreased in O(log n) time.\n */\nfunction PriorityQueue() {\n  this._arr = [];\n  this._keyIndices = {};\n}\n\n/**\n * Returns the number of elements in the queue. Takes `O(1)` time.\n */\nPriorityQueue.prototype.size = function() {\n  return this._arr.length;\n};\n\n/**\n * Returns the keys that are in the queue. Takes `O(n)` time.\n */\nPriorityQueue.prototype.keys = function() {\n  return this._arr.map(function(x) { return x.key; });\n};\n\n/**\n * Returns `true` if **key** is in the queue and `false` if not.\n */\nPriorityQueue.prototype.has = function(key) {\n  return _.has(this._keyIndices, key);\n};\n\n/**\n * Returns the priority for **key**. If **key** is not present in the queue\n * then this function returns `undefined`. Takes `O(1)` time.\n *\n * @param {Object} key\n */\nPriorityQueue.prototype.priority = function(key) {\n  var index = this._keyIndices[key];\n  if (index !== undefined) {\n    return this._arr[index].priority;\n  }\n};\n\n/**\n * Returns the key for the minimum element in this queue. If the queue is\n * empty this function throws an Error. Takes `O(1)` time.\n */\nPriorityQueue.prototype.min = function() {\n  if (this.size() === 0) {\n    throw new Error(\"Queue underflow\");\n  }\n  return this._arr[0].key;\n};\n\n/**\n * Inserts a new key into the priority queue. If the key already exists in\n * the queue this function returns `false`; otherwise it will return `true`.\n * Takes `O(n)` time.\n *\n * @param {Object} key the key to add\n * @param {Number} priority the initial priority for the key\n */\nPriorityQueue.prototype.add = function(key, priority) {\n  var keyIndices = this._keyIndices;\n  key = String(key);\n  if (!_.has(keyIndices, key)) {\n    var arr = this._arr;\n    var index = arr.length;\n    keyIndices[key] = index;\n    arr.push({key: key, priority: priority});\n    this._decrease(index);\n    return true;\n  }\n  return false;\n};\n\n/**\n * Removes and returns the smallest key in the queue. Takes `O(log n)` time.\n */\nPriorityQueue.prototype.removeMin = function() {\n  this._swap(0, this._arr.length - 1);\n  var min = this._arr.pop();\n  delete this._keyIndices[min.key];\n  this._heapify(0);\n  return min.key;\n};\n\n/**\n * Decreases the priority for **key** to **priority**. If the new priority is\n * greater than the previous priority, this function will throw an Error.\n *\n * @param {Object} key the key for which to raise priority\n * @param {Number} priority the new priority for the key\n */\nPriorityQueue.prototype.decrease = function(key, priority) {\n  var index = this._keyIndices[key];\n  if (priority > this._arr[index].priority) {\n    throw new Error(\"New priority is greater than current priority. \" +\n        \"Key: \" + key + \" Old: \" + this._arr[index].priority + \" New: \" + priority);\n  }\n  this._arr[index].priority = priority;\n  this._decrease(index);\n};\n\nPriorityQueue.prototype._heapify = function(i) {\n  var arr = this._arr;\n  var l = 2 * i,\n      r = l + 1,\n      largest = i;\n  if (l < arr.length) {\n    largest = arr[l].priority < arr[largest].priority ? l : largest;\n    if (r < arr.length) {\n      largest = arr[r].priority < arr[largest].priority ? r : largest;\n    }\n    if (largest !== i) {\n      this._swap(i, largest);\n      this._heapify(largest);\n    }\n  }\n};\n\nPriorityQueue.prototype._decrease = function(index) {\n  var arr = this._arr;\n  var priority = arr[index].priority;\n  var parent;\n  while (index !== 0) {\n    parent = index >> 1;\n    if (arr[parent].priority < priority) {\n      break;\n    }\n    this._swap(index, parent);\n    index = parent;\n  }\n};\n\nPriorityQueue.prototype._swap = function(i, j) {\n  var arr = this._arr;\n  var keyIndices = this._keyIndices;\n  var origArrI = arr[i];\n  var origArrJ = arr[j];\n  arr[i] = origArrJ;\n  arr[j] = origArrI;\n  keyIndices[origArrJ.key] = i;\n  keyIndices[origArrI.key] = j;\n};\n\n},{\"../lodash\":51}],48:[function(require,module,exports){\n\"use strict\";\n\nvar _ = require(\"./lodash\");\n\nmodule.exports = Graph;\n\nvar DEFAULT_EDGE_NAME = \"\\x00\",\n    GRAPH_NODE = \"\\x00\",\n    EDGE_KEY_DELIM = \"\\x01\";\n\n// Implementation notes:\n//\n//  * Node id query functions should return string ids for the nodes\n//  * Edge id query functions should return an \"edgeObj\", edge object, that is\n//    composed of enough information to uniquely identify an edge: {v, w, name}.\n//  * Internally we use an \"edgeId\", a stringified form of the edgeObj, to\n//    reference edges. This is because we need a performant way to look these\n//    edges up and, object properties, which have string keys, are the closest\n//    we're going to get to a performant hashtable in JavaScript.\n\nfunction Graph(opts) {\n  this._isDirected = _.has(opts, \"directed\") ? opts.directed : true;\n  this._isMultigraph = _.has(opts, \"multigraph\") ? opts.multigraph : false;\n  this._isCompound = _.has(opts, \"compound\") ? opts.compound : false;\n\n  // Label for the graph itself\n  this._label = undefined;\n\n  // Defaults to be set when creating a new node\n  this._defaultNodeLabelFn = _.constant(undefined);\n\n  // Defaults to be set when creating a new edge\n  this._defaultEdgeLabelFn = _.constant(undefined);\n\n  // v -> label\n  this._nodes = {};\n\n  if (this._isCompound) {\n    // v -> parent\n    this._parent = {};\n\n    // v -> children\n    this._children = {};\n    this._children[GRAPH_NODE] = {};\n  }\n\n  // v -> edgeObj\n  this._in = {};\n\n  // u -> v -> Number\n  this._preds = {};\n\n  // v -> edgeObj\n  this._out = {};\n\n  // v -> w -> Number\n  this._sucs = {};\n\n  // e -> edgeObj\n  this._edgeObjs = {};\n\n  // e -> label\n  this._edgeLabels = {};\n}\n\n/* Number of nodes in the graph. Should only be changed by the implementation. */\nGraph.prototype._nodeCount = 0;\n\n/* Number of edges in the graph. Should only be changed by the implementation. */\nGraph.prototype._edgeCount = 0;\n\n\n/* === Graph functions ========= */\n\nGraph.prototype.isDirected = function() {\n  return this._isDirected;\n};\n\nGraph.prototype.isMultigraph = function() {\n  return this._isMultigraph;\n};\n\nGraph.prototype.isCompound = function() {\n  return this._isCompound;\n};\n\nGraph.prototype.setGraph = function(label) {\n  this._label = label;\n  return this;\n};\n\nGraph.prototype.graph = function() {\n  return this._label;\n};\n\n\n/* === Node functions ========== */\n\nGraph.prototype.setDefaultNodeLabel = function(newDefault) {\n  if (!_.isFunction(newDefault)) {\n    newDefault = _.constant(newDefault);\n  }\n  this._defaultNodeLabelFn = newDefault;\n  return this;\n};\n\nGraph.prototype.nodeCount = function() {\n  return this._nodeCount;\n};\n\nGraph.prototype.nodes = function() {\n  return _.keys(this._nodes);\n};\n\nGraph.prototype.sources = function() {\n  return _.filter(this.nodes(), function(v) {\n    return _.isEmpty(this._in[v]);\n  }, this);\n};\n\nGraph.prototype.sinks = function() {\n  return _.filter(this.nodes(), function(v) {\n    return _.isEmpty(this._out[v]);\n  }, this);\n};\n\nGraph.prototype.setNodes = function(vs, value) {\n  var args = arguments;\n  _.each(vs, function(v) {\n    if (args.length > 1) {\n      this.setNode(v, value);\n    } else {\n      this.setNode(v);\n    }\n  }, this);\n  return this;\n};\n\nGraph.prototype.setNode = function(v, value) {\n  if (_.has(this._nodes, v)) {\n    if (arguments.length > 1) {\n      this._nodes[v] = value;\n    }\n    return this;\n  }\n\n  this._nodes[v] = arguments.length > 1 ? value : this._defaultNodeLabelFn(v);\n  if (this._isCompound) {\n    this._parent[v] = GRAPH_NODE;\n    this._children[v] = {};\n    this._children[GRAPH_NODE][v] = true;\n  }\n  this._in[v] = {};\n  this._preds[v] = {};\n  this._out[v] = {};\n  this._sucs[v] = {};\n  ++this._nodeCount;\n  return this;\n};\n\nGraph.prototype.node = function(v) {\n  return this._nodes[v];\n};\n\nGraph.prototype.hasNode = function(v) {\n  return _.has(this._nodes, v);\n};\n\nGraph.prototype.removeNode =  function(v) {\n  var self = this;\n  if (_.has(this._nodes, v)) {\n    var removeEdge = function(e) { self.removeEdge(self._edgeObjs[e]); };\n    delete this._nodes[v];\n    if (this._isCompound) {\n      this._removeFromParentsChildList(v);\n      delete this._parent[v];\n      _.each(this.children(v), function(child) {\n        this.setParent(child);\n      }, this);\n      delete this._children[v];\n    }\n    _.each(_.keys(this._in[v]), removeEdge);\n    delete this._in[v];\n    delete this._preds[v];\n    _.each(_.keys(this._out[v]), removeEdge);\n    delete this._out[v];\n    delete this._sucs[v];\n    --this._nodeCount;\n  }\n  return this;\n};\n\nGraph.prototype.setParent = function(v, parent) {\n  if (!this._isCompound) {\n    throw new Error(\"Cannot set parent in a non-compound graph\");\n  }\n\n  if (_.isUndefined(parent)) {\n    parent = GRAPH_NODE;\n  } else {\n    // Coerce parent to string\n    parent += \"\";\n    for (var ancestor = parent;\n         !_.isUndefined(ancestor);\n         ancestor = this.parent(ancestor)) {\n      if (ancestor === v) {\n        throw new Error(\"Setting \" + parent+ \" as parent of \" + v +\n                        \" would create create a cycle\");\n      }\n    }\n\n    this.setNode(parent);\n  }\n\n  this.setNode(v);\n  this._removeFromParentsChildList(v);\n  this._parent[v] = parent;\n  this._children[parent][v] = true;\n  return this;\n};\n\nGraph.prototype._removeFromParentsChildList = function(v) {\n  delete this._children[this._parent[v]][v];\n};\n\nGraph.prototype.parent = function(v) {\n  if (this._isCompound) {\n    var parent = this._parent[v];\n    if (parent !== GRAPH_NODE) {\n      return parent;\n    }\n  }\n};\n\nGraph.prototype.children = function(v) {\n  if (_.isUndefined(v)) {\n    v = GRAPH_NODE;\n  }\n\n  if (this._isCompound) {\n    var children = this._children[v];\n    if (children) {\n      return _.keys(children);\n    }\n  } else if (v === GRAPH_NODE) {\n    return this.nodes();\n  } else if (this.hasNode(v)) {\n    return [];\n  }\n};\n\nGraph.prototype.predecessors = function(v) {\n  var predsV = this._preds[v];\n  if (predsV) {\n    return _.keys(predsV);\n  }\n};\n\nGraph.prototype.successors = function(v) {\n  var sucsV = this._sucs[v];\n  if (sucsV) {\n    return _.keys(sucsV);\n  }\n};\n\nGraph.prototype.neighbors = function(v) {\n  var preds = this.predecessors(v);\n  if (preds) {\n    return _.union(preds, this.successors(v));\n  }\n};\n\nGraph.prototype.filterNodes = function(filter) {\n  var copy = new this.constructor({\n    directed: this._isDirected,\n    multigraph: this._isMultigraph,\n    compound: this._isCompound\n  });\n\n  copy.setGraph(this.graph());\n\n  _.each(this._nodes, function(value, v) {\n    if (filter(v)) {\n      copy.setNode(v, value);\n    }\n  }, this);\n\n  _.each(this._edgeObjs, function(e) {\n    if (copy.hasNode(e.v) && copy.hasNode(e.w)) {\n      copy.setEdge(e, this.edge(e));\n    }\n  }, this);\n\n  var self = this;\n  var parents = {};\n  function findParent(v) {\n    var parent = self.parent(v);\n    if (parent === undefined || copy.hasNode(parent)) {\n      parents[v] = parent;\n      return parent;\n    } else if (parent in parents) {\n      return parents[parent];\n    } else {\n      return findParent(parent);\n    }\n  }\n\n  if (this._isCompound) {\n    _.each(copy.nodes(), function(v) {\n      copy.setParent(v, findParent(v));\n    });\n  }\n\n  return copy;\n};\n\n/* === Edge functions ========== */\n\nGraph.prototype.setDefaultEdgeLabel = function(newDefault) {\n  if (!_.isFunction(newDefault)) {\n    newDefault = _.constant(newDefault);\n  }\n  this._defaultEdgeLabelFn = newDefault;\n  return this;\n};\n\nGraph.prototype.edgeCount = function() {\n  return this._edgeCount;\n};\n\nGraph.prototype.edges = function() {\n  return _.values(this._edgeObjs);\n};\n\nGraph.prototype.setPath = function(vs, value) {\n  var self = this,\n      args = arguments;\n  _.reduce(vs, function(v, w) {\n    if (args.length > 1) {\n      self.setEdge(v, w, value);\n    } else {\n      self.setEdge(v, w);\n    }\n    return w;\n  });\n  return this;\n};\n\n/*\n * setEdge(v, w, [value, [name]])\n * setEdge({ v, w, [name] }, [value])\n */\nGraph.prototype.setEdge = function() {\n  var v, w, name, value,\n      valueSpecified = false,\n      arg0 = arguments[0];\n\n  if (typeof arg0 === \"object\" && arg0 !== null && \"v\" in arg0) {\n    v = arg0.v;\n    w = arg0.w;\n    name = arg0.name;\n    if (arguments.length === 2) {\n      value = arguments[1];\n      valueSpecified = true;\n    }\n  } else {\n    v = arg0;\n    w = arguments[1];\n    name = arguments[3];\n    if (arguments.length > 2) {\n      value = arguments[2];\n      valueSpecified = true;\n    }\n  }\n\n  v = \"\" + v;\n  w = \"\" + w;\n  if (!_.isUndefined(name)) {\n    name = \"\" + name;\n  }\n\n  var e = edgeArgsToId(this._isDirected, v, w, name);\n  if (_.has(this._edgeLabels, e)) {\n    if (valueSpecified) {\n      this._edgeLabels[e] = value;\n    }\n    return this;\n  }\n\n  if (!_.isUndefined(name) && !this._isMultigraph) {\n    throw new Error(\"Cannot set a named edge when isMultigraph = false\");\n  }\n\n  // It didn't exist, so we need to create it.\n  // First ensure the nodes exist.\n  this.setNode(v);\n  this.setNode(w);\n\n  this._edgeLabels[e] = valueSpecified ? value : this._defaultEdgeLabelFn(v, w, name);\n\n  var edgeObj = edgeArgsToObj(this._isDirected, v, w, name);\n  // Ensure we add undirected edges in a consistent way.\n  v = edgeObj.v;\n  w = edgeObj.w;\n\n  Object.freeze(edgeObj);\n  this._edgeObjs[e] = edgeObj;\n  incrementOrInitEntry(this._preds[w], v);\n  incrementOrInitEntry(this._sucs[v], w);\n  this._in[w][e] = edgeObj;\n  this._out[v][e] = edgeObj;\n  this._edgeCount++;\n  return this;\n};\n\nGraph.prototype.edge = function(v, w, name) {\n  var e = (arguments.length === 1\n            ? edgeObjToId(this._isDirected, arguments[0])\n            : edgeArgsToId(this._isDirected, v, w, name));\n  return this._edgeLabels[e];\n};\n\nGraph.prototype.hasEdge = function(v, w, name) {\n  var e = (arguments.length === 1\n            ? edgeObjToId(this._isDirected, arguments[0])\n            : edgeArgsToId(this._isDirected, v, w, name));\n  return _.has(this._edgeLabels, e);\n};\n\nGraph.prototype.removeEdge = function(v, w, name) {\n  var e = (arguments.length === 1\n            ? edgeObjToId(this._isDirected, arguments[0])\n            : edgeArgsToId(this._isDirected, v, w, name)),\n      edge = this._edgeObjs[e];\n  if (edge) {\n    v = edge.v;\n    w = edge.w;\n    delete this._edgeLabels[e];\n    delete this._edgeObjs[e];\n    decrementOrRemoveEntry(this._preds[w], v);\n    decrementOrRemoveEntry(this._sucs[v], w);\n    delete this._in[w][e];\n    delete this._out[v][e];\n    this._edgeCount--;\n  }\n  return this;\n};\n\nGraph.prototype.inEdges = function(v, u) {\n  var inV = this._in[v];\n  if (inV) {\n    var edges = _.values(inV);\n    if (!u) {\n      return edges;\n    }\n    return _.filter(edges, function(edge) { return edge.v === u; });\n  }\n};\n\nGraph.prototype.outEdges = function(v, w) {\n  var outV = this._out[v];\n  if (outV) {\n    var edges = _.values(outV);\n    if (!w) {\n      return edges;\n    }\n    return _.filter(edges, function(edge) { return edge.w === w; });\n  }\n};\n\nGraph.prototype.nodeEdges = function(v, w) {\n  var inEdges = this.inEdges(v, w);\n  if (inEdges) {\n    return inEdges.concat(this.outEdges(v, w));\n  }\n};\n\nfunction incrementOrInitEntry(map, k) {\n  if (map[k]) {\n    map[k]++;\n  } else {\n    map[k] = 1;\n  }\n}\n\nfunction decrementOrRemoveEntry(map, k) {\n  if (!--map[k]) { delete map[k]; }\n}\n\nfunction edgeArgsToId(isDirected, v_, w_, name) {\n  var v = \"\" + v_;\n  var w = \"\" + w_;\n  if (!isDirected && v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  return v + EDGE_KEY_DELIM + w + EDGE_KEY_DELIM +\n             (_.isUndefined(name) ? DEFAULT_EDGE_NAME : name);\n}\n\nfunction edgeArgsToObj(isDirected, v_, w_, name) {\n  var v = \"\" + v_;\n  var w = \"\" + w_;\n  if (!isDirected && v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  var edgeObj =  { v: v, w: w };\n  if (name) {\n    edgeObj.name = name;\n  }\n  return edgeObj;\n}\n\nfunction edgeObjToId(isDirected, edgeObj) {\n  return edgeArgsToId(isDirected, edgeObj.v, edgeObj.w, edgeObj.name);\n}\n\n},{\"./lodash\":51}],49:[function(require,module,exports){\n// Includes only the \"core\" of graphlib\nmodule.exports = {\n  Graph: require(\"./graph\"),\n  version: require(\"./version\")\n};\n\n},{\"./graph\":48,\"./version\":52}],50:[function(require,module,exports){\nvar _ = require(\"./lodash\"),\n    Graph = require(\"./graph\");\n\nmodule.exports = {\n  write: write,\n  read: read\n};\n\nfunction write(g) {\n  var json = {\n    options: {\n      directed: g.isDirected(),\n      multigraph: g.isMultigraph(),\n      compound: g.isCompound()\n    },\n    nodes: writeNodes(g),\n    edges: writeEdges(g)\n  };\n  if (!_.isUndefined(g.graph())) {\n    json.value = _.clone(g.graph());\n  }\n  return json;\n}\n\nfunction writeNodes(g) {\n  return _.map(g.nodes(), function(v) {\n    var nodeValue = g.node(v),\n        parent = g.parent(v),\n        node = { v: v };\n    if (!_.isUndefined(nodeValue)) {\n      node.value = nodeValue;\n    }\n    if (!_.isUndefined(parent)) {\n      node.parent = parent;\n    }\n    return node;\n  });\n}\n\nfunction writeEdges(g) {\n  return _.map(g.edges(), function(e) {\n    var edgeValue = g.edge(e),\n        edge = { v: e.v, w: e.w };\n    if (!_.isUndefined(e.name)) {\n      edge.name = e.name;\n    }\n    if (!_.isUndefined(edgeValue)) {\n      edge.value = edgeValue;\n    }\n    return edge;\n  });\n}\n\nfunction read(json) {\n  var g = new Graph(json.options).setGraph(json.value);\n  _.each(json.nodes, function(entry) {\n    g.setNode(entry.v, entry.value);\n    if (entry.parent) {\n      g.setParent(entry.v, entry.parent);\n    }\n  });\n  _.each(json.edges, function(entry) {\n    g.setEdge({ v: entry.v, w: entry.w, name: entry.name }, entry.value);\n  });\n  return g;\n}\n\n},{\"./graph\":48,\"./lodash\":51}],51:[function(require,module,exports){\n/* global window */\n\nvar lodash;\n\nif (typeof require === \"function\") {\n  try {\n    lodash = require(\"lodash\");\n  } catch (e) {}\n}\n\nif (!lodash) {\n  lodash = window._;\n}\n\nmodule.exports = lodash;\n\n},{\"lodash\":53}],52:[function(require,module,exports){\nmodule.exports = '1.0.7';\n\n},{}],53:[function(require,module,exports){\n(function (global){\n/**\n * @license\n * lodash 3.10.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern -d -o ./index.js`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '3.10.1';\n\n  /** Used to compose bitmasks for wrapper metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256;\n\n  /** Used as default options for `_.trunc`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect when a function becomes hot. */\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2;\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      weakMapTag = '[object WeakMap]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\n  /**\n   * Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns)\n   * and those outlined by [`EscapeRegExpPattern`](http://ecma-international.org/ecma-262/6.0/#sec-escaperegexppattern).\n   */\n  var reRegExpChars = /^[:!,]|[\\\\^$.*+?()[\\]{}|\\/]|(^[0-9a-fA-Fnrtuvx])|([\\n\\r\\u2028\\u2029])/g,\n      reHasRegExpChars = RegExp(reRegExpChars.source);\n\n  /** Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks). */\n  var reComboMark = /[\\u0300-\\u036f\\ufe20-\\ufe23]/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /** Used to match [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components). */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect hexadecimal string values. */\n  var reHasHexPrefix = /^0[xX]/;\n\n  /** Used to detect host constructors (Safari > 5). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^\\d+$/;\n\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to match words to create compound words. */\n  var reWords = (function() {\n    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n\n    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n  }());\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number',\n    'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'isFinite',\n    'parseFloat', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[stringTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[mapTag] = cloneableTags[setTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n  var deburredLetters = {\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n\n  /** Used to determine if values are of the language type `Object`. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used to escape characters for inclusion in compiled regexes. */\n  var regexpEscapes = {\n    '0': 'x30', '1': 'x31', '2': 'x32', '3': 'x33', '4': 'x34',\n    '5': 'x35', '6': 'x36', '7': 'x37', '8': 'x38', '9': 'x39',\n    'A': 'x41', 'B': 'x42', 'C': 'x43', 'D': 'x44', 'E': 'x45', 'F': 'x46',\n    'a': 'x61', 'b': 'x62', 'c': 'x63', 'd': 'x64', 'e': 'x65', 'f': 'x66',\n    'n': 'x6e', 'r': 'x72', 't': 'x74', 'u': 'x75', 'v': 'x76', 'x': 'x78'\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Detect free variable `exports`. */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global && global.Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = objectTypes[typeof self] && self && self.Object && self;\n\n  /** Detect free variable `window`. */\n  var freeWindow = objectTypes[typeof window] && window && window.Object && window;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /**\n   * Used as a reference to the global object.\n   *\n   * The `this` value is used if it's the global object to avoid Greasemonkey's\n   * restricted `window` object, otherwise the `window` object is used.\n   */\n  var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || freeSelf || this;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `compareAscending` which compares values and\n   * sorts them in ascending order without guaranteeing a stable sort.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function baseCompareAscending(value, other) {\n    if (value !== other) {\n      var valIsNull = value === null,\n          valIsUndef = value === undefined,\n          valIsReflexive = value === value;\n\n      var othIsNull = other === null,\n          othIsUndef = other === undefined,\n          othIsReflexive = other === other;\n\n      if ((value > other && !othIsNull) || !valIsReflexive ||\n          (valIsNull && !othIsUndef && othIsReflexive) ||\n          (valIsUndef && othIsReflexive)) {\n        return 1;\n      }\n      if ((value < other && !valIsNull) || !othIsReflexive ||\n          (othIsNull && !valIsUndef && valIsReflexive) ||\n          (othIsUndef && valIsReflexive)) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromRight) {\n    var length = array.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return indexOfNaN(array, fromIndex);\n    }\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isFunction` without support for environments\n   * with incorrect `typeof` results.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n   */\n  function baseIsFunction(value) {\n    // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n    // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n    return typeof value == 'function' || false;\n  }\n\n  /**\n   * Converts `value` to a string if it's not one. An empty string is returned\n   * for `null` or `undefined` values.\n   *\n   * @private\n   * @param {*} value The value to process.\n   * @returns {string} Returns the string.\n   */\n  function baseToString(value) {\n    return value == null ? '' : (value + '');\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the first character not found in `chars`.\n   */\n  function charsLeftIndex(string, chars) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the last character not found in `chars`.\n   */\n  function charsRightIndex(string, chars) {\n    var index = string.length;\n\n    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.sortBy` to compare transformed elements of a collection and stable\n   * sort them in ascending order.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareAscending(object, other) {\n    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);\n  }\n\n  /**\n   * Used by `_.sortByOrder` to compare multiple properties of a value to another\n   * and stable sort them.\n   *\n   * If `orders` is unspecified, all valuess are sorted in ascending order. Otherwise,\n   * a value is sorted in ascending order if its corresponding order is \"asc\", and\n   * descending if \"desc\".\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {boolean[]} orders The order to sort by for each property.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareMultiple(object, other, orders) {\n    var index = -1,\n        objCriteria = object.criteria,\n        othCriteria = other.criteria,\n        length = objCriteria.length,\n        ordersLength = orders.length;\n\n    while (++index < length) {\n      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);\n      if (result) {\n        if (index >= ordersLength) {\n          return result;\n        }\n        var order = orders[index];\n        return result * ((order === 'asc' || order === true) ? 1 : -1);\n      }\n    }\n    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to provide the same value for\n    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n    // for more details.\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n    return object.index - other.index;\n  }\n\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  function deburrLetter(letter) {\n    return deburredLetters[letter];\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeHtmlChar(chr) {\n    return htmlEscapes[chr];\n  }\n\n  /**\n   * Used by `_.escapeRegExp` to escape characters for inclusion in compiled regexes.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @param {string} leadingChar The capture group for a leading character.\n   * @param {string} whitespaceChar The capture group for a whitespace character.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeRegExpChar(chr, leadingChar, whitespaceChar) {\n    if (leadingChar) {\n      chr = regexpEscapes[chr];\n    } else if (whitespaceChar) {\n      chr = stringEscapes[chr];\n    }\n    return '\\\\' + chr;\n  }\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n   */\n  function indexOfNaN(array, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 0 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var other = array[index];\n      if (other !== other) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Checks if `value` is object-like.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   */\n  function isObjectLike(value) {\n    return !!value && typeof value == 'object';\n  }\n\n  /**\n   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n   * character code is whitespace.\n   *\n   * @private\n   * @param {number} charCode The character code to inspect.\n   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.\n   */\n  function isSpace(charCode) {\n    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 ||\n      (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      if (array[index] === placeholder) {\n        array[index] = PLACEHOLDER;\n        result[++resIndex] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * An implementation of `_.uniq` optimized for sorted arrays without support\n   * for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} [iteratee] The function invoked per iteration.\n   * @returns {Array} Returns the new duplicate-value-free array.\n   */\n  function sortedUniq(array, iteratee) {\n    var seen,\n        index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index],\n          computed = iteratee ? iteratee(value, index, array) : value;\n\n      if (!index || seen !== computed) {\n        seen = computed;\n        result[++resIndex] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the first non-whitespace character.\n   */\n  function trimmedLeftIndex(string) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedRightIndex(string) {\n    var index = string.length;\n\n    while (index-- && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  function unescapeHtmlChar(chr) {\n    return htmlUnescapes[chr];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the given `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Utility\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // using `context` to mock `Date#getTime` use in `_.now`\n   * var mock = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': getTimeMock };\n   *   }\n   * });\n   *\n   * // or creating a suped-up `defer` in Node.js\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  function runInContext(context) {\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See https://es5.github.io/#x11.1.5 for more details.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Native constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Number = context.Number,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for native method references. */\n    var arrayProto = Array.prototype,\n        objectProto = Object.prototype,\n        stringProto = String.prototype;\n\n    /** Used to resolve the decompiled source of functions. */\n    var fnToString = Function.prototype.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /**\n     * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Native method references. */\n    var ArrayBuffer = context.ArrayBuffer,\n        clearTimeout = context.clearTimeout,\n        parseFloat = context.parseFloat,\n        pow = Math.pow,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        Set = getNative(context, 'Set'),\n        setTimeout = context.setTimeout,\n        splice = arrayProto.splice,\n        Uint8Array = context.Uint8Array,\n        WeakMap = getNative(context, 'WeakMap');\n\n    /* Native method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeCreate = getNative(Object, 'create'),\n        nativeFloor = Math.floor,\n        nativeIsArray = getNative(Array, 'isArray'),\n        nativeIsFinite = context.isFinite,\n        nativeKeys = getNative(Object, 'keys'),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = getNative(Date, 'now'),\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random;\n\n    /** Used as references for `-Infinity` and `Infinity`. */\n    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,\n        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\n    /** Used as references for the maximum length and index of an array. */\n    var MAX_ARRAY_LENGTH = 4294967295,\n        MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n    /**\n     * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n     * of an array-like value.\n     */\n    var MAX_SAFE_INTEGER = 9007199254740991;\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit chaining.\n     * Methods that operate on and return arrays, collections, and functions can\n     * be chained together. Methods that retrieve a single value or may return a\n     * primitive value will automatically end the chain returning the unwrapped\n     * value. Explicit chaining may be enabled using `_.chain`. The execution of\n     * chained methods is lazy, that is, execution is deferred until `_#value`\n     * is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n     * fusion is an optimization strategy which merge iteratee calls; this can help\n     * to avoid the creation of intermediate data structures and greatly reduce the\n     * number of iteratee executions.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\n     * `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\n     * and `where`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defaultsDeep`,\n     * `defer`, `delay`, `difference`, `drop`, `dropRight`, `dropRightWhile`,\n     * `dropWhile`, `fill`, `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`,\n     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n     * `invoke`, `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`,\n     * `matchesProperty`, `memoize`, `merge`, `method`, `methodOf`, `mixin`,\n     * `modArgs`, `negate`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n     * `partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, `pull`,\n     * `pullAt`, `push`, `range`, `rearg`, `reject`, `remove`, `rest`, `restParam`,\n     * `reverse`, `set`, `shuffle`, `slice`, `sort`, `sortBy`, `sortByAll`,\n     * `sortByOrder`, `splice`, `spread`, `take`, `takeRight`, `takeRightWhile`,\n     * `takeWhile`, `tap`, `throttle`, `thru`, `times`, `toArray`, `toPlainObject`,\n     * `transform`, `union`, `uniq`, `unshift`, `unzip`, `unzipWith`, `values`,\n     * `valuesIn`, `where`, `without`, `wrap`, `xor`, `zip`, `zipObject`, `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clone`, `cloneDeep`,\n     * `deburr`, `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`,\n     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`,\n     * `floor`, `get`, `gt`, `gte`, `has`, `identity`, `includes`, `indexOf`,\n     * `inRange`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n     * `isEmpty`, `isEqual`, `isError`, `isFinite` `isFunction`, `isMatch`,\n     * `isNative`, `isNaN`, `isNull`, `isNumber`, `isObject`, `isPlainObject`,\n     * `isRegExp`, `isString`, `isUndefined`, `isTypedArray`, `join`, `kebabCase`,\n     * `last`, `lastIndexOf`, `lt`, `lte`, `max`, `min`, `noConflict`, `noop`,\n     * `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`, `random`, `reduce`,\n     * `reduceRight`, `repeat`, `result`, `round`, `runInContext`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`, `startCase`,\n     * `startsWith`, `sum`, `template`, `trim`, `trimLeft`, `trimRight`, `trunc`,\n     * `unescape`, `uniqueId`, `value`, and `words`\n     *\n     * The wrapper method `sample` will return a wrapped value when `n` is provided,\n     * otherwise an unwrapped value is returned.\n     *\n     * @name _\n     * @constructor\n     * @category Chain\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // returns an unwrapped value\n     * wrapped.reduce(function(total, n) {\n     *   return total + n;\n     * });\n     * // => 6\n     *\n     * // returns a wrapped value\n     * var squares = wrapped.map(function(n) {\n     *   return n * n;\n     * });\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The function whose prototype all chaining wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n     */\n    function LodashWrapper(value, chainAll, actions) {\n      this.__wrapped__ = value;\n      this.__actions__ = actions || [];\n      this.__chain__ = !!chainAll;\n    }\n\n    /**\n     * An object environment feature flags.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    var support = lodash.support = {};\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type string\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type Object\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type Function\n         */\n        '_': lodash\n      }\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = POSITIVE_INFINITY;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = arrayCopy(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = arrayCopy(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = arrayCopy(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || arrLength < LARGE_ARRAY_SIZE || (arrLength == length && takeCount == length)) {\n        return baseWrapperValue((isRight && isArr) ? array.reverse() : array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a cache object to store key/value pairs.\n     *\n     * @private\n     * @static\n     * @name Cache\n     * @memberOf _.memoize\n     */\n    function MapCache() {\n      this.__data__ = {};\n    }\n\n    /**\n     * Removes `key` and its value from the cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.\n     */\n    function mapDelete(key) {\n      return this.has(key) && delete this.__data__[key];\n    }\n\n    /**\n     * Gets the cached value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the cached value.\n     */\n    function mapGet(key) {\n      return key == '__proto__' ? undefined : this.__data__[key];\n    }\n\n    /**\n     * Checks if a cached value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapHas(key) {\n      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);\n    }\n\n    /**\n     * Sets `value` to `key` of the cache.\n     *\n     * @private\n     * @name set\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to cache.\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache object.\n     */\n    function mapSet(key, value) {\n      if (key != '__proto__') {\n        this.__data__[key] = value;\n      }\n      return this;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates a cache object to store unique values.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var length = values ? values.length : 0;\n\n      this.data = { 'hash': nativeCreate(null), 'set': new Set };\n      while (length--) {\n        this.push(values[length]);\n      }\n    }\n\n    /**\n     * Checks if `value` is in `cache` mimicking the return signature of\n     * `_.indexOf` by returning `0` if the value is found, else `-1`.\n     *\n     * @private\n     * @param {Object} cache The cache to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `0` if `value` is found, else `-1`.\n     */\n    function cacheIndexOf(cache, value) {\n      var data = cache.data,\n          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];\n\n      return result ? 0 : -1;\n    }\n\n    /**\n     * Adds `value` to the cache.\n     *\n     * @private\n     * @name push\n     * @memberOf SetCache\n     * @param {*} value The value to cache.\n     */\n    function cachePush(value) {\n      var data = this.data;\n      if (typeof value == 'string' || isObject(value)) {\n        data.set.add(value);\n      } else {\n        data.hash[value] = true;\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a new array joining `array` with `other`.\n     *\n     * @private\n     * @param {Array} array The array to join.\n     * @param {Array} other The other array to join.\n     * @returns {Array} Returns the new concatenated array.\n     */\n    function arrayConcat(array, other) {\n      var index = -1,\n          length = array.length,\n          othIndex = -1,\n          othLength = other.length,\n          result = Array(length + othLength);\n\n      while (++index < length) {\n        result[index] = array[index];\n      }\n      while (++othIndex < othLength) {\n        result[index++] = other[othIndex];\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayCopy(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEach` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEach(array, iteratee) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (iteratee(array[index], index, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEachRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEachRight(array, iteratee) {\n      var length = array.length;\n\n      while (length--) {\n        if (iteratee(array[length], length, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.every` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     */\n    function arrayEvery(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (!predicate(array[index], index, array)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseExtremum` for arrays which invokes `iteratee`\n     * with one argument: (value).\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function arrayExtremum(array, iteratee, comparator, exValue) {\n      var index = -1,\n          length = array.length,\n          computed = exValue,\n          result = computed;\n\n      while (++index < length) {\n        var value = array[index],\n            current = +iteratee(value);\n\n        if (comparator(current, computed)) {\n          computed = current;\n          result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.filter` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function arrayFilter(array, predicate) {\n      var index = -1,\n          length = array.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.map` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function arrayMap(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = iteratee(array[index], index, array);\n      }\n      return result;\n    }\n\n    /**\n     * Appends the elements of `values` to `array`.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to append.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayPush(array, values) {\n      var index = -1,\n          length = values.length,\n          offset = array.length;\n\n      while (++index < length) {\n        array[offset + index] = values[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.reduce` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the first element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduce(array, iteratee, accumulator, initFromArray) {\n      var index = -1,\n          length = array.length;\n\n      if (initFromArray && length) {\n        accumulator = array[++index];\n      }\n      while (++index < length) {\n        accumulator = iteratee(accumulator, array[index], index, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.reduceRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the last element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n      var length = array.length;\n      if (initFromArray && length) {\n        accumulator = array[--length];\n      }\n      while (length--) {\n        accumulator = iteratee(accumulator, array[length], length, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.some` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function arraySome(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (predicate(array[index], index, array)) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `_.sum` for arrays without support for callback\n     * shorthands and `this` binding..\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function arraySum(array, iteratee) {\n      var length = array.length,\n          result = 0;\n\n      while (length--) {\n        result += +iteratee(array[length]) || 0;\n      }\n      return result;\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assign` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : objectValue;\n    }\n\n    /**\n     * Used by `_.template` to customize its `_.assign` use.\n     *\n     * **Note:** This function is like `assignDefaults` except that it ignores\n     * inherited property values when checking if a property is `undefined`.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @param {string} key The key associated with the object and source values.\n     * @param {Object} object The destination object.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignOwnDefaults(objectValue, sourceValue, key, object) {\n      return (objectValue === undefined || !hasOwnProperty.call(object, key))\n        ? sourceValue\n        : objectValue;\n    }\n\n    /**\n     * A specialized version of `_.assign` for customizing assigned values without\n     * support for argument juggling, multiple sources, and `this` binding `customizer`\n     * functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     */\n    function assignWith(object, source, customizer) {\n      var index = -1,\n          props = keys(source),\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key],\n            result = customizer(value, source[key], key, object, source);\n\n        if ((result === result ? (result !== value) : (value === value)) ||\n            (value === undefined && !(key in object))) {\n          object[key] = result;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for argument juggling,\n     * multiple sources, and `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return source == null\n        ? object\n        : baseCopy(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.at` without support for string collections\n     * and individual key arguments.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {number[]|string[]} props The property names or indexes of elements to pick.\n     * @returns {Array} Returns the new array of picked elements.\n     */\n    function baseAt(collection, props) {\n      var index = -1,\n          isNil = collection == null,\n          isArr = !isNil && isArrayLike(collection),\n          length = isArr ? collection.length : 0,\n          propsLength = props.length,\n          result = Array(propsLength);\n\n      while(++index < propsLength) {\n        var key = props[index];\n        if (isArr) {\n          result[index] = isIndex(key, length) ? collection[key] : undefined;\n        } else {\n          result[index] = isNil ? undefined : collection[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property names to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @returns {Object} Returns `object`.\n     */\n    function baseCopy(source, props, object) {\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n        object[key] = source[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.callback` which supports specifying the\n     * number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function baseCallback(func, thisArg, argCount) {\n      var type = typeof func;\n      if (type == 'function') {\n        return thisArg === undefined\n          ? func\n          : bindCallback(func, thisArg, argCount);\n      }\n      if (func == null) {\n        return identity;\n      }\n      if (type == 'object') {\n        return baseMatches(func);\n      }\n      return thisArg === undefined\n        ? property(func)\n        : baseMatchesProperty(func, thisArg);\n    }\n\n    /**\n     * The base implementation of `_.clone` without support for argument juggling\n     * and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The object `value` belongs to.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return arrayCopy(value, result);\n        }\n      } else {\n        var tag = objToString.call(value),\n            isFunc = tag == funcTag;\n\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return baseAssign(result, value);\n          }\n        } else {\n          return cloneableTags[tag]\n            ? initCloneByTag(value, tag, isDeep)\n            : (object ? value : {});\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == value) {\n          return stackB[length];\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate it with its clone.\n      stackA.push(value);\n      stackB.push(result);\n\n      // Recursively populate clone (susceptible to call stack limits).\n      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(prototype) {\n        if (isObject(prototype)) {\n          object.prototype = prototype;\n          var result = new object;\n          object.prototype = undefined;\n        }\n        return result || {};\n      };\n    }());\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts an index\n     * of where to slice the arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Object} args The arguments provide to `func`.\n     * @returns {number} Returns the timer id.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of `_.difference` which accepts a single array\n     * of values to exclude.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values) {\n      var length = array ? array.length : 0,\n          result = [];\n\n      if (!length) {\n        return result;\n      }\n      var index = -1,\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          cache = (isCommon && values.length >= LARGE_ARRAY_SIZE) ? createCache(values) : null,\n          valuesLength = values.length;\n\n      if (cache) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n        values = cache;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index];\n\n        if (isCommon && value === value) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === value) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (indexOf(values, value, 0) < 0) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * Gets the extremum value of `collection` invoking `iteratee` for each value\n     * in `collection` to generate the criterion by which the value is ranked.\n     * The `iteratee` is invoked with three arguments: (value, index|key, collection).\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(collection, iteratee, comparator, exValue) {\n      var computed = exValue,\n          result = computed;\n\n      baseEach(collection, function(value, index, collection) {\n        var current = +iteratee(value, index, collection);\n        if (comparator(current, computed) || (current === exValue && current === result)) {\n          computed = current;\n          result = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : (end >>> 0);\n      start >>>= 0;\n\n      while (start < length) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n     * without support for callback shorthands and `this` binding, which iterates\n     * over `collection` using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @param {boolean} [retKey] Specify returning the key of the found element\n     *  instead of the element itself.\n     * @returns {*} Returns the found element or its key, else `undefined`.\n     */\n    function baseFind(collection, predicate, eachFunc, retKey) {\n      var result;\n      eachFunc(collection, function(value, key, collection) {\n        if (predicate(value, key, collection)) {\n          result = retKey ? key : value;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with added support for restricting\n     * flattening and specifying the start index.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, isDeep, isStrict, result) {\n      result || (result = []);\n\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index];\n        if (isObjectLike(value) && isArrayLike(value) &&\n            (isStrict || isArray(value) || isArguments(value))) {\n          if (isDeep) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, isDeep, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n     * each property. Iteratee functions may exit iteration early by explicitly\n     * returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forIn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForIn(object, iteratee) {\n      return baseFor(object, iteratee, keysIn);\n    }\n\n    /**\n     * The base implementation of `_.forOwn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from those provided.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the new array of filtered property names.\n     */\n    function baseFunctions(object, props) {\n      var index = -1,\n          length = props.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var key = props[index];\n        if (isFunction(object[key])) {\n          result[++resIndex] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `get` without support for string paths\n     * and default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path of the property to get.\n     * @param {string} [pathKey] The key representation of path.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path, pathKey) {\n      if (object == null) {\n        return;\n      }\n      if (pathKey !== undefined && pathKey in toObject(object)) {\n        path = [pathKey];\n      }\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[path[index++]];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` without support for `this` binding\n     * `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = objToString.call(object);\n        if (objTag == argsTag) {\n          objTag = objectTag;\n        } else if (objTag != objectTag) {\n          objIsArr = isTypedArray(object);\n        }\n      }\n      if (!othIsArr) {\n        othTag = objToString.call(other);\n        if (othTag == argsTag) {\n          othTag = objectTag;\n        } else if (othTag != objectTag) {\n          othIsArr = isTypedArray(other);\n        }\n      }\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !(objIsArr || objIsObj)) {\n        return equalByTag(object, other, objTag);\n      }\n      if (!isLoose) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      // For more information on detecting circular references see https://es5.github.io/#JO.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == object) {\n          return stackB[length] == other;\n        }\n      }\n      // Add `object` and `other` to the stack of traversed objects.\n      stackA.push(object);\n      stackB.push(other);\n\n      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\n      stackA.pop();\n      stackB.pop();\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} matchData The propery names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = toObject(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var result = customizer ? customizer(objValue, srcValue, key) : undefined;\n          if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which does not clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        var key = matchData[0][0],\n            value = matchData[0][1];\n\n        return function(object) {\n          if (object == null) {\n            return false;\n          }\n          return object[key] === value && (value !== undefined || (key in toObject(object)));\n        };\n      }\n      return function(object) {\n        return baseIsMatch(object, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which does not clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to compare.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      var isArr = isArray(path),\n          isCommon = isKey(path) && isStrictComparable(srcValue),\n          pathKey = (path + '');\n\n      path = toPath(path);\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        var key = pathKey;\n        object = toObject(object);\n        if ((isArr || !isCommon) && !(key in object)) {\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          if (object == null) {\n            return false;\n          }\n          key = last(path);\n          object = toObject(object);\n        }\n        return object[key] === srcValue\n          ? (srcValue !== undefined || (key in object))\n          : baseIsEqual(srcValue, object[key], undefined, true);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for argument juggling,\n     * multiple sources, and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {Object} Returns `object`.\n     */\n    function baseMerge(object, source, customizer, stackA, stackB) {\n      if (!isObject(object)) {\n        return object;\n      }\n      var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),\n          props = isSrcArr ? undefined : keys(source);\n\n      arrayEach(props || source, function(srcValue, key) {\n        if (props) {\n          key = srcValue;\n          srcValue = source[key];\n        }\n        if (isObjectLike(srcValue)) {\n          stackA || (stackA = []);\n          stackB || (stackB = []);\n          baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n        }\n        else {\n          var value = object[key],\n              result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n              isCommon = result === undefined;\n\n          if (isCommon) {\n            result = srcValue;\n          }\n          if ((result !== undefined || (isSrcArr && !(key in object))) &&\n              (isCommon || (result === result ? (result !== value) : (value === value)))) {\n            object[key] = result;\n          }\n        }\n      });\n      return object;\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n      var length = stackA.length,\n          srcValue = source[key];\n\n      while (length--) {\n        if (stackA[length] == srcValue) {\n          object[key] = stackB[length];\n          return;\n        }\n      }\n      var value = object[key],\n          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n          isCommon = result === undefined;\n\n      if (isCommon) {\n        result = srcValue;\n        if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {\n          result = isArray(value)\n            ? value\n            : (isArrayLike(value) ? arrayCopy(value) : []);\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          result = isArguments(value)\n            ? toPlainObject(value)\n            : (isPlainObject(value) ? value : {});\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate\n      // it with its merged value.\n      stackA.push(srcValue);\n      stackB.push(result);\n\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n      } else if (result === result ? (result !== value) : (value === value)) {\n        object[key] = result;\n      }\n    }\n\n    /**\n     * The base implementation of `_.property` without support for deep paths.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function baseProperty(key) {\n      return function(object) {\n        return object == null ? undefined : object[key];\n      };\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function basePropertyDeep(path) {\n      var pathKey = (path + '');\n      path = toPath(path);\n      return function(object) {\n        return baseGet(object, path, pathKey);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * index arguments and capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0;\n      while (length--) {\n        var index = indexes[length];\n        if (index != previous && isIndex(index)) {\n          var previous = index;\n          splice.call(array, index, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for argument juggling\n     * and returning floating-point numbers.\n     *\n     * @private\n     * @param {number} min The minimum possible value.\n     * @param {number} max The maximum possible value.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(min, max) {\n      return min + nativeFloor(nativeRandom() * (max - min + 1));\n    }\n\n    /**\n     * The base implementation of `_.reduce` and `_.reduceRight` without support\n     * for callback shorthands and `this` binding, which iterates over `collection`\n     * using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} accumulator The initial value.\n     * @param {boolean} initFromCollection Specify using the first or last element\n     *  of `collection` as the initial value.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @returns {*} Returns the accumulated value.\n     */\n    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n      eachFunc(collection, function(value, index, collection) {\n        accumulator = initFromCollection\n          ? (initFromCollection = false, value)\n          : iteratee(accumulator, value, index, collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortBy` which uses `comparer` to define\n     * the sort order of `array` and replaces criteria objects with their\n     * corresponding values.\n     *\n     * @private\n     * @param {Array} array The array to sort.\n     * @param {Function} comparer The function to define sort order.\n     * @returns {Array} Returns `array`.\n     */\n    function baseSortBy(array, comparer) {\n      var length = array.length;\n\n      array.sort(comparer);\n      while (length--) {\n        array[length] = array[length].value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.sortByOrder` without param guards.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseSortByOrder(collection, iteratees, orders) {\n      var callback = getCallback(),\n          index = -1;\n\n      iteratees = arrayMap(iteratees, function(iteratee) { return callback(iteratee); });\n\n      var result = baseMap(collection, function(value) {\n        var criteria = arrayMap(iteratees, function(iteratee) { return iteratee(value); });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.sum` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function baseSum(collection, iteratee) {\n      var result = 0;\n      baseEach(collection, function(value, index, collection) {\n        result += +iteratee(value, index, collection) || 0;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.uniq` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The function invoked per iteration.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     */\n    function baseUniq(array, iteratee) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array.length,\n          isCommon = indexOf == baseIndexOf,\n          isLarge = isCommon && length >= LARGE_ARRAY_SIZE,\n          seen = isLarge ? createCache() : null,\n          result = [];\n\n      if (seen) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n      } else {\n        isLarge = false;\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value, index, array) : value;\n\n        if (isCommon && value === value) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (indexOf(seen, computed, 0) < 0) {\n          if (iteratee || isLarge) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.values` and `_.valuesIn` which creates an\n     * array of `object` property values corresponding to the property names\n     * of `props`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} props The property names to get values for.\n     * @returns {Object} Returns the array of property values.\n     */\n    function baseValues(object, props) {\n      var index = -1,\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = object[props[index]];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,\n     * and `_.takeWhile` without support for callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to peform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      var index = -1,\n          length = actions.length;\n\n      while (++index < length) {\n        var action = actions[index];\n        result = action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }\n      return result;\n    }\n\n    /**\n     * Performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return binaryIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * This function is like `binaryIndex` except that it invokes `iteratee` for\n     * `value` and each element of `array` to compute their sort ranking. The\n     * iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsUndef = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            isDef = computed !== undefined,\n            isReflexive = computed === computed;\n\n        if (valIsNaN) {\n          var setLow = isReflexive || retHighest;\n        } else if (valIsNull) {\n          setLow = isReflexive && isDef && (retHighest || computed != null);\n        } else if (valIsUndef) {\n          setLow = isReflexive && (retHighest || isDef);\n        } else if (computed == null) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * A specialized version of `baseCallback` which only supports `this` binding\n     * and specifying the number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function bindCallback(func, thisArg, argCount) {\n      if (typeof func != 'function') {\n        return identity;\n      }\n      if (thisArg === undefined) {\n        return func;\n      }\n      switch (argCount) {\n        case 1: return function(value) {\n          return func.call(thisArg, value);\n        };\n        case 3: return function(value, index, collection) {\n          return func.call(thisArg, value, index, collection);\n        };\n        case 4: return function(accumulator, value, index, collection) {\n          return func.call(thisArg, accumulator, value, index, collection);\n        };\n        case 5: return function(value, other, key, object, source) {\n          return func.call(thisArg, value, other, key, object, source);\n        };\n      }\n      return function() {\n        return func.apply(thisArg, arguments);\n      };\n    }\n\n    /**\n     * Creates a clone of the given array buffer.\n     *\n     * @private\n     * @param {ArrayBuffer} buffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function bufferClone(buffer) {\n      var result = new ArrayBuffer(buffer.byteLength),\n          view = new Uint8Array(result);\n\n      view.set(new Uint8Array(buffer));\n      return result;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders) {\n      var holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          leftIndex = -1,\n          leftLength = partials.length,\n          result = Array(leftLength + argsLength);\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        result[holders[argsIndex]] = args[argsIndex];\n      }\n      while (argsLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders) {\n      var holdersIndex = -1,\n          holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          rightIndex = -1,\n          rightLength = partials.length,\n          result = Array(argsLength + rightLength);\n\n      while (++argsIndex < argsLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        result[offset + holders[holdersIndex]] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * Creates a `_.countBy`, `_.groupBy`, `_.indexBy`, or `_.partition` function.\n     *\n     * @private\n     * @param {Function} setter The function to set keys and values of the accumulator object.\n     * @param {Function} [initializer] The function to initialize the accumulator object.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee, thisArg) {\n        var result = initializer ? initializer() : {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        if (isArray(collection)) {\n          var index = -1,\n              length = collection.length;\n\n          while (++index < length) {\n            var value = collection[index];\n            setter(result, value, iteratee(value, index, collection), collection);\n          }\n        } else {\n          baseEach(collection, function(value, key, collection) {\n            setter(result, value, iteratee(value, key, collection), collection);\n          });\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a `_.assign`, `_.defaults`, or `_.merge` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return restParam(function(object, sources) {\n        var index = -1,\n            length = object == null ? 0 : sources.length,\n            customizer = length > 2 ? sources[length - 2] : undefined,\n            guard = length > 2 ? sources[2] : undefined,\n            thisArg = length > 1 ? sources[length - 1] : undefined;\n\n        if (typeof customizer == 'function') {\n          customizer = bindCallback(customizer, thisArg, 5);\n          length -= 2;\n        } else {\n          customizer = typeof thisArg == 'function' ? thisArg : undefined;\n          length -= (customizer ? 1 : 0);\n        }\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        var length = collection ? getLength(collection) : 0;\n        if (!isLength(length)) {\n          return eachFunc(collection, iteratee);\n        }\n        var index = fromRight ? length : -1,\n            iterable = toObject(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var iterable = toObject(object),\n            props = keysFunc(object),\n            length = props.length,\n            index = fromRight ? length : -1;\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var key = props[index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createBindWrapper(func, thisArg) {\n      var Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(thisArg, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `Set` cache object to optimize linear searches of large arrays.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n     */\n    function createCache(values) {\n      return (nativeCreate && Set) ? new SetCache(values) : null;\n    }\n\n    /**\n     * Creates a function that produces compound words out of the words in a\n     * given string.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        var index = -1,\n            array = words(deburr(string)),\n            length = array.length,\n            result = '';\n\n        while (++index < length) {\n          result = callback(result, array[index], index);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtorWrapper(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors.\n        // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a `_.curry` or `_.curryRight` function.\n     *\n     * @private\n     * @param {boolean} flag The curry bit flag.\n     * @returns {Function} Returns the new curry function.\n     */\n    function createCurry(flag) {\n      function curryFunc(func, arity, guard) {\n        if (guard && isIterateeCall(func, arity, guard)) {\n          arity = undefined;\n        }\n        var result = createWrapper(func, flag, undefined, undefined, undefined, undefined, undefined, arity);\n        result.placeholder = curryFunc.placeholder;\n        return result;\n      }\n      return curryFunc;\n    }\n\n    /**\n     * Creates a `_.defaults` or `_.defaultsDeep` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Function} Returns the new defaults function.\n     */\n    function createDefaults(assigner, customizer) {\n      return restParam(function(args) {\n        var object = args[0];\n        if (object == null) {\n          return object;\n        }\n        args.push(customizer);\n        return assigner.apply(undefined, args);\n      });\n    }\n\n    /**\n     * Creates a `_.max` or `_.min` function.\n     *\n     * @private\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {Function} Returns the new extremum function.\n     */\n    function createExtremum(comparator, exValue) {\n      return function(collection, iteratee, thisArg) {\n        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n          iteratee = undefined;\n        }\n        iteratee = getCallback(iteratee, thisArg, 3);\n        if (iteratee.length == 1) {\n          collection = isArray(collection) ? collection : toIterable(collection);\n          var result = arrayExtremum(collection, iteratee, comparator, exValue);\n          if (!(collection.length && result === exValue)) {\n            return result;\n          }\n        }\n        return baseExtremum(collection, iteratee, comparator, exValue);\n      };\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(eachFunc, fromRight) {\n      return function(collection, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        if (isArray(collection)) {\n          var index = baseFindIndex(collection, predicate, fromRight);\n          return index > -1 ? collection[index] : undefined;\n        }\n        return baseFind(collection, predicate, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a `_.findIndex` or `_.findLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindIndex(fromRight) {\n      return function(array, predicate, thisArg) {\n        if (!(array && array.length)) {\n          return -1;\n        }\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFindIndex(array, predicate, fromRight);\n      };\n    }\n\n    /**\n     * Creates a `_.findKey` or `_.findLastKey` function.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindKey(objectFunc) {\n      return function(object, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFind(object, predicate, objectFunc, true);\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return function() {\n        var wrapper,\n            length = arguments.length,\n            index = fromRight ? length : -1,\n            leftIndex = 0,\n            funcs = Array(length);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var func = funcs[leftIndex++] = arguments[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (!wrapper && LodashWrapper.prototype.thru && getFuncName(func) == 'wrapper') {\n            wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? -1 : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      };\n    }\n\n    /**\n     * Creates a function for `_.forEach` or `_.forEachRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForEach(arrayFunc, eachFunc) {\n      return function(collection, iteratee, thisArg) {\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee)\n          : eachFunc(collection, bindCallback(iteratee, thisArg, 3));\n      };\n    }\n\n    /**\n     * Creates a function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForIn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee, keysIn);\n      };\n    }\n\n    /**\n     * Creates a function for `_.forOwn` or `_.forOwnRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForOwn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee);\n      };\n    }\n\n    /**\n     * Creates a function for `_.mapKeys` or `_.mapValues`.\n     *\n     * @private\n     * @param {boolean} [isMapKeys] Specify mapping keys instead of values.\n     * @returns {Function} Returns the new map function.\n     */\n    function createObjectMapper(isMapKeys) {\n      return function(object, iteratee, thisArg) {\n        var result = {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        baseForOwn(object, function(value, key, object) {\n          var mapped = iteratee(value, key, object);\n          key = isMapKeys ? mapped : key;\n          value = isMapKeys ? value : mapped;\n          result[key] = value;\n        });\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function for `_.padLeft` or `_.padRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify padding from the right.\n     * @returns {Function} Returns the new pad function.\n     */\n    function createPadDir(fromRight) {\n      return function(string, length, chars) {\n        string = baseToString(string);\n        return (fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string);\n      };\n    }\n\n    /**\n     * Creates a `_.partial` or `_.partialRight` function.\n     *\n     * @private\n     * @param {boolean} flag The partial bit flag.\n     * @returns {Function} Returns the new partial function.\n     */\n    function createPartial(flag) {\n      var partialFunc = restParam(function(func, partials) {\n        var holders = replaceHolders(partials, partialFunc.placeholder);\n        return createWrapper(func, flag, undefined, partials, holders);\n      });\n      return partialFunc;\n    }\n\n    /**\n     * Creates a function for `_.reduce` or `_.reduceRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createReduce(arrayFunc, eachFunc) {\n      return function(collection, iteratee, accumulator, thisArg) {\n        var initFromArray = arguments.length < 3;\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee, accumulator, initFromArray)\n          : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with optional `this`\n     * binding of, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurry = bitmask & CURRY_FLAG,\n          isCurryBound = bitmask & CURRY_BOUND_FLAG,\n          isCurryRight = bitmask & CURRY_RIGHT_FLAG,\n          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it to other functions.\n        var length = arguments.length,\n            index = length,\n            args = Array(length);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight);\n        }\n        if (isCurry || isCurryRight) {\n          var placeholder = wrapper.placeholder,\n              argsHolders = replaceHolders(args, placeholder);\n\n          length -= argsHolders.length;\n          if (length < arity) {\n            var newArgPos = argPos ? arrayCopy(argPos) : undefined,\n                newArity = nativeMax(arity - length, 0),\n                newsHolders = isCurry ? argsHolders : undefined,\n                newHoldersRight = isCurry ? undefined : argsHolders,\n                newPartials = isCurry ? args : undefined,\n                newPartialsRight = isCurry ? undefined : args;\n\n            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n            if (!isCurryBound) {\n              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n            }\n            var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\n                result = createHybridWrapper.apply(undefined, newData);\n\n            if (isLaziable(func)) {\n              setData(result, newData);\n            }\n            result.placeholder = placeholder;\n            return result;\n          }\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        if (argPos) {\n          args = reorder(args, argPos);\n        }\n        if (isAry && ary < args.length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtorWrapper(func);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates the padding required for `string` based on the given `length`.\n     * The `chars` string is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {string} string The string to create padding for.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the pad for `string`.\n     */\n    function createPadding(string, length, chars) {\n      var strLength = string.length;\n      length = +length;\n\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return '';\n      }\n      var padLength = length - strLength;\n      chars = chars == null ? ' ' : (chars + '');\n      return repeat(chars, nativeCeil(padLength / chars.length)).slice(0, padLength);\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the optional `this`\n     * binding of `thisArg` and the `partials` prepended to those provided to\n     * the wrapper.\n     *\n     * @private\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to the new function.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createPartialWrapper(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it `func`.\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength);\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.ceil`, `_.floor`, or `_.round` function.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        precision = precision === undefined ? 0 : (+precision || 0);\n        if (precision) {\n          precision = pow(10, precision);\n          return func(number * precision) / precision;\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a `_.sortedIndex` or `_.sortedLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {Function} Returns the new index function.\n     */\n    function createSortedIndex(retHighest) {\n      return function(array, value, iteratee, thisArg) {\n        var callback = getCallback(iteratee);\n        return (iteratee == null && callback === baseCallback)\n          ? binaryIndex(array, value, retHighest)\n          : binaryIndexBy(array, value, callback(iteratee, thisArg, 1), retHighest);\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      length -= (holders ? holders.length : 0);\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func),\n          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\n      if (data) {\n        mergeData(newData, data);\n        bitmask = newData[1];\n        arity = newData[9];\n      }\n      newData[9] = arity == null\n        ? (isBindKey ? 0 : func.length)\n        : (nativeMax(arity - length, 0) || 0);\n\n      if (bitmask == BIND_FLAG) {\n        var result = createBindWrapper(newData[0], newData[2]);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n        result = createPartialWrapper.apply(undefined, newData);\n      } else {\n        result = createHybridWrapper.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setter(result, newData);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing arrays.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var index = -1,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n        return false;\n      }\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index],\n            result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;\n\n        if (result !== undefined) {\n          if (result) {\n            continue;\n          }\n          return false;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (isLoose) {\n          if (!arraySome(other, function(othValue) {\n                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n              })) {\n            return false;\n          }\n        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag) {\n      switch (tag) {\n        case boolTag:\n        case dateTag:\n          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n          return +object == +other;\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case numberTag:\n          // Treat `NaN` vs. `NaN` as equal.\n          return (object != +object)\n            ? other != +other\n            : object == +other;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings primitives and string\n          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n          return object == (other + '');\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isLoose) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      var skipCtor = isLoose;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key],\n            result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;\n\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n          return false;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (!skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Gets the appropriate \"callback\" function. If the `_.callback` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseCallback` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getCallback(func, thisArg, argCount) {\n      var result = lodash.callback || callback;\n      result = result === callback ? baseCallback : result;\n      return argCount ? result(func, thisArg, argCount) : result;\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = func.name,\n          array = realNames[result],\n          length = array ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseIndexOf` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function|number} Returns the chosen function or its result.\n     */\n    function getIndexOf(collection, target, fromIndex) {\n      var result = lodash.indexOf || indexOf;\n      result = result === indexOf ? baseIndexOf : result;\n      return collection ? result(collection, target, fromIndex) : result;\n    }\n\n    /**\n     * Gets the \"length\" property value of `object`.\n     *\n     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n     * that affects Safari on at least iOS 8.1-8.3 ARM64.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {*} Returns the \"length\" value.\n     */\n    var getLength = baseProperty('length');\n\n    /**\n     * Gets the propery names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = pairs(object),\n          length = result.length;\n\n      while (length--) {\n        result[length][2] = isStrictComparable(result[length][1]);\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = object == null ? undefined : object[key];\n      return isNative(value) ? value : undefined;\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add array properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      var Ctor = object.constructor;\n      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n        Ctor = Object;\n      }\n      return new Ctor;\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return bufferClone(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          var buffer = object.buffer;\n          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          var result = new Ctor(object.source, reFlags.exec(object));\n          result.lastIndex = object.lastIndex;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the method at `path` on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function invokePath(object, path, args) {\n      if (object != null && !isKey(path, object)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        path = last(path);\n      }\n      var func = object == null ? object : object[path];\n      return func == null ? undefined : func.apply(object, args);\n    }\n\n    /**\n     * Checks if `value` is array-like.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(getLength(value));\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return value > -1 && value % 1 == 0 && value < length;\n    }\n\n    /**\n     * Checks if the provided arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n          ? (isArrayLike(object) && isIndex(index, object.length))\n          : (type == 'string' && index in object)) {\n        var other = object[index];\n        return value === value ? (value === other) : (other !== other);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      var type = typeof value;\n      if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n        return true;\n      }\n      if (isArray(value)) {\n        return false;\n      }\n      var result = !reIsDeepProp.test(value);\n      return result || (object != null && value in toObject(object));\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func);\n      if (!(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      var other = lodash[funcName];\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     */\n    function isLength(value) {\n      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers required to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n     * augment function arguments, making the order in which they are executed important,\n     * preventing the merging of metadata. However, we make an exception for a safe\n     * common case where curried functions have `_.ary` and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < ARY_FLAG;\n\n      var isCombo =\n        (srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG) ||\n        (srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8]) ||\n        (srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG);\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = arrayCopy(value);\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function mergeDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : merge(objectValue, sourceValue, mergeDefaults);\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties specified\n     * by `props`.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property names to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByArray(object, props) {\n      object = toObject(object);\n\n      var index = -1,\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index];\n        if (key in object) {\n          result[key] = object[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties `predicate`\n     * returns truthy for.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByCallback(object, predicate) {\n      var result = {};\n      baseForIn(object, function(value, key, object) {\n        if (predicate(value, key, object)) {\n          result[key] = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = arrayCopy(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity function\n     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = (function() {\n      var count = 0,\n          lastCalled = 0;\n\n      return function(key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n        return baseSetData(key, value);\n      };\n    }());\n\n    /**\n     * A fallback implementation of `Object.keys` which creates an array of the\n     * own enumerable property names of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function shimKeys(object) {\n      var props = keysIn(object),\n          propsLength = props.length,\n          length = propsLength && object.length;\n\n      var allowIndexes = !!length && isLength(length) &&\n        (isArray(object) || isArguments(object));\n\n      var index = -1,\n          result = [];\n\n      while (++index < propsLength) {\n        var key = props[index];\n        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to an array-like object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array|Object} Returns the array-like object.\n     */\n    function toIterable(value) {\n      if (value == null) {\n        return [];\n      }\n      if (!isArrayLike(value)) {\n        return values(value);\n      }\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to an object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Object} Returns the object.\n     */\n    function toObject(value) {\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to property path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array} Returns the property path array.\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return value;\n      }\n      var result = [];\n      baseToString(value).replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      return wrapper instanceof LazyWrapper\n        ? wrapper.clone()\n        : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `collection` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new array containing chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if (guard ? isIterateeCall(array, size, guard) : size == null) {\n        size = 1;\n      } else {\n        size = nativeMax(nativeFloor(size) || 1, 1);\n      }\n      var index = 0,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[++resIndex] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of unique `array` values not included in the other\n     * provided arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The arrays of values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.difference([1, 2, 3], [4, 2]);\n     * // => [1, 3]\n     */\n    var difference = restParam(function(array, values) {\n      return (isObjectLike(array) && isArrayLike(array))\n        ? baseDifference(array, baseFlatten(values, false, true))\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that match the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [1]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active', false), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active', false), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8], '*', 1, 2);\n     * // => [4, '*', 8]\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(chr) {\n     *   return chr.user == 'barney';\n     * });\n     * // => 0\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findIndex(users, 'active', false);\n     * // => 0\n     *\n     * // using the `_.property` callback shorthand\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    var findIndex = createFindIndex();\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(chr) {\n     *   return chr.user == 'pebbles';\n     * });\n     * // => 2\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastIndex(users, 'active', false);\n     * // => 2\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    var findLastIndex = createFindIndex(true);\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias head\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.first([1, 2, 3]);\n     * // => 1\n     *\n     * _.first([]);\n     * // => undefined\n     */\n    function first(array) {\n      return array ? array[0] : undefined;\n    }\n\n    /**\n     * Flattens a nested array. If `isDeep` is `true` the array is recursively\n     * flattened, otherwise it is only flattened a single level.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, [4]]\n     *\n     * // using `isDeep`\n     * _.flatten([1, [2, 3, [4]]], true);\n     * // => [1, 2, 3, 4]\n     */\n    function flatten(array, isDeep, guard) {\n      var length = array ? array.length : 0;\n      if (guard && isIterateeCall(array, isDeep, guard)) {\n        isDeep = false;\n      }\n      return length ? baseFlatten(array, isDeep) : [];\n    }\n\n    /**\n     * Recursively flattens a nested array.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to recursively flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, 4]\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, true) : [];\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `array`. If `array` is sorted providing `true` for `fromIndex`\n     * performs a faster binary search.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n     *  to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // using `fromIndex`\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     *\n     * // performing a binary search\n     * _.indexOf([1, 1, 2, 2], 2, true);\n     * // => 2\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      if (typeof fromIndex == 'number') {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n      } else if (fromIndex) {\n        var index = binaryIndex(array, value);\n        if (index < length &&\n            (value === value ? (value === array[index]) : (array[index] !== array[index]))) {\n          return index;\n        }\n        return -1;\n      }\n      return baseIndexOf(array, value, fromIndex || 0);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      return dropRight(array, 1);\n    }\n\n    /**\n     * Creates an array of unique values that are included in all of the provided\n     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of shared values.\n     * @example\n     * _.intersection([1, 2], [4, 2], [2, 1]);\n     * // => [2]\n     */\n    var intersection = restParam(function(arrays) {\n      var othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(length),\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          result = [];\n\n      while (othIndex--) {\n        var value = arrays[othIndex] = isArrayLike(value = arrays[othIndex]) ? value : [];\n        caches[othIndex] = (isCommon && value.length >= 120) ? createCache(othIndex && value) : null;\n      }\n      var array = arrays[0],\n          index = -1,\n          length = array ? array.length : 0,\n          seen = caches[0];\n\n      outer:\n      while (++index < length) {\n        value = array[index];\n        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {\n          var othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if ((cache ? cacheIndexOf(cache, value) : indexOf(arrays[othIndex], value, 0)) < 0) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(value);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    });\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n     *  or `true` to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // using `fromIndex`\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     *\n     * // performing a binary search\n     * _.lastIndexOf([1, 1, 2, 2], 2, true);\n     * // => 3\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (typeof fromIndex == 'number') {\n        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n      } else if (fromIndex) {\n        index = binaryIndex(array, value, true) - 1;\n        var other = array[index];\n        if (value === value ? (value === other) : (other !== other)) {\n          return index;\n        }\n        return -1;\n      }\n      if (value !== value) {\n        return indexOfNaN(array, index, true);\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Removes all provided values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     *\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    function pull() {\n      var args = arguments,\n          array = args[0];\n\n      if (!(array && array.length)) {\n        return array;\n      }\n      var index = 0,\n          indexOf = getIndexOf(),\n          length = args.length;\n\n      while (++index < length) {\n        var fromIndex = 0,\n            value = args[index];\n\n        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to the given indexes and returns\n     * an array of the removed elements. Indexes may be specified as an array of\n     * indexes or as individual arguments.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [5, 10, 15, 20];\n     * var evens = _.pullAt(array, 1, 3);\n     *\n     * console.log(array);\n     * // => [5, 15]\n     *\n     * console.log(evens);\n     * // => [10, 20]\n     */\n    var pullAt = restParam(function(array, indexes) {\n      indexes = baseFlatten(indexes);\n\n      var result = baseAt(array, indexes);\n      basePullAt(array, indexes.sort(baseCompareAscending));\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate, thisArg) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getCallback(predicate, thisArg, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias tail\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.rest([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function rest(array) {\n      return drop(array, 1);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of `Array#slice` to support node\n     * lists in IE < 9 and to ensure dense arrays are returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value` should\n     * be inserted into `array` in order to maintain its sort order. If an iteratee\n     * function is provided it is invoked for `value` and each element of `array`\n     * to compute their sort ranking. The iteratee is bound to `thisArg` and\n     * invoked with one argument; (value).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     *\n     * _.sortedIndex([4, 4, 5, 5], 5);\n     * // => 2\n     *\n     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n     *\n     * // using an iteratee function\n     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n     *   return this.data[word];\n     * }, dict);\n     * // => 1\n     *\n     * // using the `_.property` callback shorthand\n     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n     * // => 1\n     */\n    var sortedIndex = createSortedIndex();\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 4, 5, 5], 5);\n     * // => 4\n     */\n    var sortedLastIndex = createSortedIndex(true);\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`\n     * and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [2, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active', false), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [1, 2]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active', false), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all of the provided arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([1, 2], [4, 2], [2, 1]);\n     * // => [1, 2, 4]\n     */\n    var union = restParam(function(arrays) {\n      return baseUniq(baseFlatten(arrays, false, true));\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurence of each element\n     * is kept. Providing `true` for `isSorted` performs a faster search algorithm\n     * for sorted arrays. If an iteratee function is provided it is invoked for\n     * each element in the array to generate the criterion by which uniqueness\n     * is computed. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, array).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias unique\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {boolean} [isSorted] Specify the array is sorted.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     *\n     * // using `isSorted`\n     * _.uniq([1, 1, 2], true);\n     * // => [1, 2]\n     *\n     * // using an iteratee function\n     * _.uniq([1, 2.5, 1.5, 2], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => [1, 2.5]\n     *\n     * // using the `_.property` callback shorthand\n     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniq(array, isSorted, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (isSorted != null && typeof isSorted != 'boolean') {\n        thisArg = iteratee;\n        iteratee = isIterateeCall(array, isSorted, thisArg) ? undefined : isSorted;\n        isSorted = false;\n      }\n      var callback = getCallback();\n      if (!(iteratee == null && callback === baseCallback)) {\n        iteratee = callback(iteratee, thisArg, 3);\n      }\n      return (isSorted && getIndexOf() == baseIndexOf)\n        ? sortedUniq(array, iteratee)\n        : baseUniq(array, iteratee);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['fred', 'barney'], [30, 40], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var index = -1,\n          length = 0;\n\n      array = arrayFilter(array, function(group) {\n        if (isArrayLike(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = arrayMap(array, baseProperty(index));\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts an iteratee to specify\n     * how regrouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee] The function to combine regrouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      iteratee = bindCallback(iteratee, thisArg, 4);\n      return arrayMap(result, function(group) {\n        return arrayReduce(group, iteratee, undefined, true);\n      });\n    }\n\n    /**\n     * Creates an array excluding all provided values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to filter.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.without([1, 2, 1, 3], 1, 2);\n     * // => [3]\n     */\n    var without = restParam(function(array, values) {\n      return isArrayLike(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the provided arrays.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of values.\n     * @example\n     *\n     * _.xor([1, 2], [4, 2]);\n     * // => [1, 4]\n     */\n    function xor() {\n      var index = -1,\n          length = arguments.length;\n\n      while (++index < length) {\n        var array = arguments[index];\n        if (isArrayLike(array)) {\n          var result = result\n            ? arrayPush(baseDifference(result, array), baseDifference(array, result))\n            : array;\n        }\n      }\n      return result ? baseUniq(result) : [];\n    }\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the first\n     * elements of the given arrays, the second of which contains the second elements\n     * of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    var zip = restParam(unzip);\n\n    /**\n     * The inverse of `_.pairs`; this method returns an object composed from arrays\n     * of property names and values. Provide either a single two dimensional array,\n     * e.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names\n     * and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @alias object\n     * @category Array\n     * @param {Array} props The property names.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject([['fred', 30], ['barney', 40]]);\n     * // => { 'fred': 30, 'barney': 40 }\n     *\n     * _.zipObject(['fred', 'barney'], [30, 40]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function zipObject(props, values) {\n      var index = -1,\n          length = props ? props.length : 0,\n          result = {};\n\n      if (length && !values && !isArray(props[0])) {\n        values = [];\n      }\n      while (++index < length) {\n        var key = props[index];\n        if (values) {\n          result[key] = values[index];\n        } else if (key) {\n          result[key[0]] = key[1];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an iteratee to specify\n     * how grouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee] The function to combine grouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], _.add);\n     * // => [111, 222]\n     */\n    var zipWith = restParam(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 2 ? arrays[length - 2] : undefined,\n          thisArg = length > 1 ? arrays[length - 1] : undefined;\n\n      if (length > 2 && typeof iteratee == 'function') {\n        length -= 2;\n      } else {\n        iteratee = (length > 1 && typeof thisArg == 'function') ? (--length, thisArg) : undefined;\n        thisArg = undefined;\n      }\n      arrays.length = length;\n      return unzipWith(arrays, iteratee, thisArg);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object that wraps `value` with explicit method\n     * chaining enabled.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _.chain(users)\n     *   .sortBy('age')\n     *   .map(function(chr) {\n     *     return chr.user + ' is ' + chr.age;\n     *   })\n     *   .first()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor is\n     * bound to `thisArg` and invoked with one argument; (value). The purpose of\n     * this method is to \"tap into\" a method chain in order to perform operations\n     * on intermediate results within the chain.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor, thisArg) {\n      interceptor.call(thisArg, value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor, thisArg) {\n      return interceptor.call(thisArg, value);\n    }\n\n    /**\n     * Enables explicit method chaining on the wrapper object.\n     *\n     * @name chain\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // without explicit chaining\n     * _(users).first();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // with explicit chaining\n     * _(users).chain()\n     *   .first()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chained sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Creates a new array joining a wrapped array with any additional arrays\n     * and/or values.\n     *\n     * @name concat\n     * @memberOf _\n     * @category Chain\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var wrapped = _(array).concat(2, [3], [[4]]);\n     *\n     * console.log(wrapped.value());\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    var wrapperConcat = restParam(function(values) {\n      values = baseFlatten(values);\n      return this.thru(function(array) {\n        return arrayConcat(isArray(array) ? array : [toObject(array)], values);\n      });\n    });\n\n    /**\n     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).map(function(value) {\n     *   return Math.pow(value, 2);\n     * });\n     *\n     * var other = [3, 4];\n     * var otherWrapped = wrapped.plant(other);\n     *\n     * otherWrapped.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * Reverses the wrapped array so the first element becomes the last, the\n     * second element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new reversed `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n\n      var interceptor = function(value) {\n        return (wrapped && wrapped.__dir__ < 0) ? value : value.reverse();\n      };\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(interceptor);\n    }\n\n    /**\n     * Produces the result of coercing the unwrapped value to a string.\n     *\n     * @name toString\n     * @memberOf _\n     * @category Chain\n     * @returns {string} Returns the coerced string value.\n     * @example\n     *\n     * _([1, 2, 3]).toString();\n     * // => '1,2,3'\n     */\n    function wrapperToString() {\n      return (this.value() + '');\n    }\n\n    /**\n     * Executes the chained sequence to extract the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @alias run, toJSON, valueOf\n     * @category Chain\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements corresponding to the given keys, or indexes,\n     * of `collection`. Keys may be specified as individual arguments or as arrays\n     * of keys.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(number|number[]|string|string[])} [props] The property names\n     *  or indexes of elements to pick, specified individually or in arrays.\n     * @returns {Array} Returns the new array of picked elements.\n     * @example\n     *\n     * _.at(['a', 'b', 'c'], [0, 2]);\n     * // => ['a', 'c']\n     *\n     * _.at(['barney', 'fred', 'pebbles'], 0, 2);\n     * // => ['barney', 'pebbles']\n     */\n    var at = restParam(function(collection, props) {\n      return baseAt(collection, baseFlatten(props));\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the number of times the key was returned by `iteratee`.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * The predicate is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias all\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': false },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.every(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias select\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.filter([4, 5, 6], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 6]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.filter(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.filter(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function filter(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias detect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.result(_.find(users, function(chr) {\n     *   return chr.age < 40;\n     * }), 'user');\n     * // => 'barney'\n     *\n     * // using the `_.matches` callback shorthand\n     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.result(_.find(users, 'active', false), 'user');\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.result(_.find(users, 'active'), 'user');\n     * // => 'barney'\n     */\n    var find = createFind(baseEach);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(baseEachRight, true);\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning the first element that has equivalent property\n     * values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');\n     * // => 'barney'\n     *\n     * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');\n     * // => 'fred'\n     */\n    function findWhere(collection, source) {\n      return find(collection, baseMatches(source));\n    }\n\n    /**\n     * Iterates over elements of `collection` invoking `iteratee` for each element.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection). Iteratee functions may exit iteration early\n     * by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n     * may be used for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @alias each\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEach(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from left to right and returns the array\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n     *   console.log(n, key);\n     * });\n     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n     */\n    var forEach = createForEach(arrayEach, baseEach);\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEachRight(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from right to left and returns the array\n     */\n    var forEachRight = createForEach(arrayEachRight, baseEachRight);\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is an array of the elements responsible for generating the key.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * // using the `_.property` callback shorthand\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @alias contains, include\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} target The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.includes('pebbles', 'eb');\n     * // => true\n     */\n    function includes(collection, target, fromIndex, guard) {\n      var length = collection ? getLength(collection) : 0;\n      if (!isLength(length)) {\n        collection = values(collection);\n        length = collection.length;\n      }\n      if (typeof fromIndex != 'number' || (guard && isIterateeCall(target, fromIndex, guard))) {\n        fromIndex = 0;\n      } else {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n      }\n      return (typeof collection == 'string' || !isArray(collection) && isString(collection))\n        ? (fromIndex <= length && collection.indexOf(target, fromIndex) > -1)\n        : (!!length && getIndexOf(collection, target, fromIndex) > -1);\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the last element responsible for generating the key. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var keyData = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.indexBy(keyData, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return String.fromCharCode(object.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return this.fromCharCode(object.code);\n     * }, String);\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     */\n    var indexBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `methodName` is a function it is\n     * invoked for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invoke([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invoke = restParam(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          isProp = isKey(path),\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n        result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` through\n     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`,\n     * `drop`, `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`,\n     * `parseInt`, `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`,\n     * `trimLeft`, `trimRight`, `trunc`, `random`, `range`, `sample`, `some`,\n     * `sum`, `uniq`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @alias collect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function timesThree(n) {\n     *   return n * 3;\n     * }\n     *\n     * _.map([1, 2], timesThree);\n     * // => [3, 6]\n     *\n     * _.map({ 'a': 1, 'b': 2 }, timesThree);\n     * // => [3, 6] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee, thisArg) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return func(collection, iteratee);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, while the second of which\n     * contains elements `predicate` returns falsey for. The predicate is bound\n     * to `thisArg` and invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * _.partition([1, 2, 3], function(n) {\n     *   return n % 2;\n     * });\n     * // => [[1, 3], [2]]\n     *\n     * _.partition([1.2, 2.3, 3.4], function(n) {\n     *   return this.floor(n) % 2;\n     * }, Math);\n     * // => [[1.2, 3.4], [2.3]]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * var mapper = function(array) {\n     *   return _.pluck(array, 'user');\n     * };\n     *\n     * // using the `_.matches` callback shorthand\n     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);\n     * // => [['pebbles'], ['barney', 'fred']]\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.map(_.partition(users, 'active', false), mapper);\n     * // => [['barney', 'pebbles'], ['fred']]\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(_.partition(users, 'active'), mapper);\n     * // => [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Gets the property value of `path` from all elements in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|string} path The path of the property to pluck.\n     * @returns {Array} Returns the property values.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.pluck(users, 'user');\n     * // => ['barney', 'fred']\n     *\n     * var userIndex = _.indexBy(users, 'user');\n     * _.pluck(userIndex, 'age');\n     * // => [36, 40] (iteration order is not guaranteed)\n     */\n    function pluck(collection, path) {\n      return map(collection, property(path));\n    }\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` through `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not provided the first element of `collection` is used as the initial\n     * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `sortByAll`,\n     * and `sortByOrder`\n     *\n     * @static\n     * @memberOf _\n     * @alias foldl, inject\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.reduce([1, 2], function(total, n) {\n     *   return total + n;\n     * });\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     *   return result;\n     * }, {});\n     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\n     */\n    var reduce = createReduce(arrayReduce, baseEach);\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias foldr\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    var reduceRight = createReduce(arrayReduceRight, baseEachRight);\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.reject([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [1, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.reject(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.reject(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function reject(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, function(value, index, collection) {\n        return !predicate(value, index, collection);\n      });\n    }\n\n    /**\n     * Gets a random element or `n` random elements from a collection.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to sample.\n     * @param {number} [n] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {*} Returns the random sample(s).\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     *\n     * _.sample([1, 2, 3, 4], 2);\n     * // => [3, 1]\n     */\n    function sample(collection, n, guard) {\n      if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n        collection = toIterable(collection);\n        var length = collection.length;\n        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n      }\n      var index = -1,\n          result = toArray(collection),\n          length = result.length,\n          lastIndex = length - 1;\n\n      n = nativeMin(n < 0 ? 0 : (+n || 0), length);\n      while (++index < n) {\n        var rand = baseRandom(index, lastIndex),\n            value = result[rand];\n\n        result[rand] = result[index];\n        result[index] = value;\n      }\n      result.length = n;\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      return sample(collection, POSITIVE_INFINITY);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the size of `collection`.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      var length = collection ? getLength(collection) : 0;\n      return isLength(length) ? length : keys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * The function returns as soon as it finds a passing value and does not iterate\n     * over the entire collection. The predicate is bound to `thisArg` and invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias any\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.some(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection through `iteratee`. This method performs\n     * a stable sort, that is, it preserves the original sort order of equal elements.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return Math.sin(n);\n     * });\n     * // => [3, 1, 2]\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return this.sin(n);\n     * }, Math);\n     * // => [3, 1, 2]\n     *\n     * var users = [\n     *   { 'user': 'fred' },\n     *   { 'user': 'pebbles' },\n     *   { 'user': 'barney' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.sortBy(users, 'user'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function sortBy(collection, iteratee, thisArg) {\n      if (collection == null) {\n        return [];\n      }\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n      var index = -1;\n      iteratee = getCallback(iteratee, thisArg, 3);\n\n      var result = baseMap(collection, function(value, key, collection) {\n        return { 'criteria': iteratee(value, key, collection), 'index': ++index, 'value': value };\n      });\n      return baseSortBy(result, compareAscending);\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it can sort by multiple iteratees\n     * or property names.\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(Function|Function[]|Object|Object[]|string|string[])} iteratees\n     *  The iteratees to sort by, specified as individual values or arrays of values.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n     * // => [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n     *\n     * _.map(_.sortByAll(users, 'user', function(chr) {\n     *   return Math.floor(chr.age / 10);\n     * }), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    var sortByAll = restParam(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var guard = iteratees[2];\n      if (guard && isIterateeCall(iteratees[0], iteratees[1], guard)) {\n        iteratees.length = 1;\n      }\n      return baseSortByOrder(collection, baseFlatten(iteratees), []);\n    });\n\n    /**\n     * This method is like `_.sortByAll` except that it allows specifying the\n     * sort orders of the iteratees to sort by. If `orders` is unspecified, all\n     * values are sorted in ascending order. Otherwise, a value is sorted in\n     * ascending order if its corresponding order is \"asc\", and descending if \"desc\".\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // sort by `user` in ascending order and by `age` in descending order\n     * _.map(_.sortByOrder(users, ['user', 'age'], ['asc', 'desc']), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    function sortByOrder(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (guard && isIterateeCall(iteratees, orders, guard)) {\n        orders = undefined;\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseSortByOrder(collection, iteratees, orders);\n    }\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning an array of all elements that have equivalent\n     * property values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n     *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n     * // => ['fred']\n     */\n    function where(collection, source) {\n      return filter(collection, baseMatches(source));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the number of milliseconds that have elapsed since the Unix epoch\n     * (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @category Date\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => logs the number of milliseconds it took for the deferred function to be invoked\n     */\n    var now = nativeNow || function() {\n      return new Date().getTime();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it is called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => logs 'done saving!' after the two async saves have completed\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      n = nativeIsFinite(n = +n) ? n : 0;\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that accepts up to `n` arguments ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      if (guard && isIterateeCall(func, n, guard)) {\n        n = undefined;\n      }\n      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);\n      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it is called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery('#add').on('click', _.before(5, addContactToList));\n     * // => allows adding up to 4 contacts to the list\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and prepends any additional `_.bind` arguments to those provided to the\n     * bound function.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind` this method does not set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var greet = function(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * };\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // using placeholders\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = restParam(function(func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bind.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method. Method names may be specified as individual arguments or as arrays\n     * of method names. If no method names are provided all enumerable function\n     * properties, own and inherited, of `object` are bound.\n     *\n     * **Note:** This method does not set the \"length\" property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} [methodNames] The object method names to bind,\n     *  specified as individual method names or arrays of method names.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view);\n     * jQuery('#docs').on('click', view.onClick);\n     * // => logs 'clicked docs' when the element is clicked\n     */\n    var bindAll = restParam(function(object, methodNames) {\n      methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);\n\n      var index = -1,\n          length = methodNames.length;\n\n      while (++index < length) {\n        var key = methodNames[index];\n        object[key] = createWrapper(object[key], BIND_FLAG, object);\n      }\n      return object;\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` and prepends\n     * any additional `_.bindKey` arguments to those provided to the bound function.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist.\n     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object the method belongs to.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // using placeholders\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = restParam(function(object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bindKey.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts one or more arguments of `func` that when\n     * called either invokes `func` returning its result, if all `func` arguments\n     * have been provided, or returns a function that accepts one or more of the\n     * remaining `func` arguments, and so on. The arity of `func` may be specified\n     * if `func.length` is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    var curry = createCurry(CURRY_FLAG);\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    var curryRight = createCurry(CURRY_RIGHT_FLAG);\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed invocations. Provide an options object to indicate that `func`\n     * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n     * Subsequent calls to the debounced function return the result of the last\n     * `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=false] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n     *  delayed before it is invoked.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // avoid costly calculations while the window size is in flux\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // ensure `batchLog` is invoked once after 1 second of debounced calls\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', _.debounce(batchLog, 250, {\n     *   'maxWait': 1000\n     * }));\n     *\n     * // cancel a debounced call\n     * var todoChanges = _.debounce(batchLog, 1000);\n     * Object.observe(models.todo, todoChanges);\n     *\n     * Object.observe(models, function(changes) {\n     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n     *     todoChanges.cancel();\n     *   }\n     * }, ['delete']);\n     *\n     * // ...at some point `models.todo` is changed\n     * models.todo.completed = true;\n     *\n     * // ...before 1 second has passed `models.todo` is deleted\n     * // which cancels the debounced `todoChanges` call\n     * delete models.todo;\n     */\n    function debounce(func, wait, options) {\n      var args,\n          maxTimeoutId,\n          result,\n          stamp,\n          thisArg,\n          timeoutId,\n          trailingCall,\n          lastCalled = 0,\n          maxWait = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = wait < 0 ? 0 : (+wait || 0);\n      if (options === true) {\n        var leading = true;\n        trailing = false;\n      } else if (isObject(options)) {\n        leading = !!options.leading;\n        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function cancel() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        if (maxTimeoutId) {\n          clearTimeout(maxTimeoutId);\n        }\n        lastCalled = 0;\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n      }\n\n      function complete(isCalled, id) {\n        if (id) {\n          clearTimeout(id);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n        if (isCalled) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = undefined;\n          }\n        }\n      }\n\n      function delayed() {\n        var remaining = wait - (now() - stamp);\n        if (remaining <= 0 || remaining > wait) {\n          complete(trailingCall, maxTimeoutId);\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      }\n\n      function maxDelayed() {\n        complete(trailing, timeoutId);\n      }\n\n      function debounced() {\n        args = arguments;\n        stamp = now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n          var remaining = maxWait - (stamp - lastCalled),\n              isCalled = remaining <= 0 || remaining > maxWait;\n\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          }\n          else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        }\n        else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = undefined;\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // logs 'deferred' after one or more milliseconds\n     */\n    var defer = restParam(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => logs 'later' after one second\n     */\n    var delay = restParam(function(func, wait, args) {\n      return baseDelay(func, wait, args);\n    });\n\n    /**\n     * Creates a function that returns the result of invoking the provided\n     * functions with the `this` binding of the created function, where each\n     * successive invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow(_.add, square);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the provided functions from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias backflow, compose\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight(square, _.add);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is coerced to a string and used as the\n     * cache key. The `func` is invoked with the `this` binding of the memoized\n     * function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoizing function.\n     * @example\n     *\n     * var upperCase = _.memoize(function(string) {\n     *   return string.toUpperCase();\n     * });\n     *\n     * upperCase('fred');\n     * // => 'FRED'\n     *\n     * // modifying the result cache\n     * upperCase.cache.set('fred', 'BARNEY');\n     * upperCase('fred');\n     * // => 'BARNEY'\n     *\n     * // replacing `_.memoize.Cache`\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'barney' };\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'fred' }\n     *\n     * _.memoize.Cache = WeakMap;\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'barney' }\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result);\n        return result;\n      };\n      memoized.cache = new memoize.Cache;\n      return memoized;\n    }\n\n    /**\n     * Creates a function that runs each argument through a corresponding\n     * transform function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms] The functions to transform\n     * arguments, specified as individual functions or arrays of functions.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var modded = _.modArgs(function(x, y) {\n     *   return [x, y];\n     * }, square, doubled);\n     *\n     * modded(1, 2);\n     * // => [1, 4]\n     *\n     * modded(5, 10);\n     * // => [25, 20]\n     */\n    var modArgs = restParam(function(func, transforms) {\n      transforms = baseFlatten(transforms);\n      if (typeof func != 'function' || !arrayEvery(transforms, baseIsFunction)) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = transforms.length;\n      return restParam(function(args) {\n        var index = nativeMin(args.length, length);\n        while (index--) {\n          args[index] = transforms[index](args[index]);\n        }\n        return func.apply(this, args);\n      });\n    });\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        return !predicate.apply(this, arguments);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first call. The `func` is invoked\n     * with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` invokes `createApplication` once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with `partial` arguments prepended\n     * to those provided to the new function. This method is like `_.bind` except\n     * it does **not** alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // using placeholders\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = createPartial(PARTIAL_FLAG);\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to those provided to the new function.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // using placeholders\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = createPartial(PARTIAL_RIGHT_FLAG);\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified indexes where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, 2, 0, 1);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     *\n     * var map = _.rearg(_.map, [1, 0]);\n     * map(function(n) {\n     *   return n * 3;\n     * }, [1, 2, 3]);\n     * // => [3, 6, 9]\n     */\n    var rearg = restParam(function(func, indexes) {\n      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes));\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as an array.\n     *\n     * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.restParam(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function restParam(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            rest = Array(length);\n\n        while (++index < length) {\n          rest[index] = args[start + index];\n        }\n        switch (start) {\n          case 0: return func.call(this, rest);\n          case 1: return func.call(this, args[0], rest);\n          case 2: return func.call(this, args[0], args[1], rest);\n        }\n        var otherArgs = Array(start + 1);\n        index = -1;\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = rest;\n        return func.apply(this, otherArgs);\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the created\n     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n     *\n     * **Note:** This method is based on the [spread operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * // with a Promise\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function(array) {\n        return func.apply(this, array);\n      };\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed invocations. Provide an options object to indicate\n     * that `func` should be invoked on the leading and/or trailing edge of the\n     * `wait` timeout. Subsequent calls to the throttled function return the\n     * result of the last `func` call.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the throttled function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=true] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // avoid excessively updating the position while scrolling\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n     *   'trailing': false\n     * }));\n     *\n     * // cancel a trailing throttled call\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (options === false) {\n        leading = false;\n      } else if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, { 'leading': leading, 'maxWait': +wait, 'trailing': trailing });\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Any additional arguments provided to the function are\n     * appended to those provided to the wrapper function. The wrapper is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return createWrapper(wrapper, PARTIAL_FLAG, undefined, [value], []);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n     * otherwise they are assigned by reference. If `customizer` is provided it is\n     * invoked to produce the cloned values. If `customizer` returns `undefined`\n     * cloning is handled by the method instead. The `customizer` is bound to\n     * `thisArg` and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var shallow = _.clone(users);\n     * shallow[0] === users[0];\n     * // => true\n     *\n     * var deep = _.clone(users, true);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.clone(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 0\n     */\n    function clone(value, isDeep, customizer, thisArg) {\n      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n        isDeep = false;\n      }\n      else if (typeof isDeep == 'function') {\n        thisArg = customizer;\n        customizer = isDeep;\n        isDeep = false;\n      }\n      return typeof customizer == 'function'\n        ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, isDeep);\n    }\n\n    /**\n     * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n     * to produce the cloned values. If `customizer` returns `undefined` cloning\n     * is handled by the method instead. The `customizer` is bound to `thisArg`\n     * and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var deep = _.cloneDeep(users);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.cloneDeep(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 20\n     */\n    function cloneDeep(value, customizer, thisArg) {\n      return typeof customizer == 'function'\n        ? baseClone(value, true, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, true);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    function gt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    function gte(value, other) {\n      return value >= other;\n    }\n\n    /**\n     * Checks if `value` is classified as an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      return isObjectLike(value) && isArrayLike(value) &&\n        hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(function() { return arguments; }());\n     * // => false\n     */\n    var isArray = nativeIsArray || function(value) {\n      return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n    };\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false || (isObjectLike(value) && objToString.call(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    function isDate(value) {\n      return isObjectLike(value) && objToString.call(value) == dateTag;\n    }\n\n    /**\n     * Checks if `value` is a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is empty. A value is considered empty unless it is an\n     * `arguments` object, array, string, or jQuery-like collection with a length\n     * greater than `0` or an object with own enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Array|Object|string} value The value to inspect.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) && (isArray(value) || isString(value) || isArguments(value) ||\n          (isObjectLike(value) && isFunction(value.splice)))) {\n        return !value.length;\n      }\n      return !keys(value).length;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent. If `customizer` is provided it is invoked to compare values.\n     * If `customizer` returns `undefined` comparisons are handled by the method\n     * instead. The `customizer` is bound to `thisArg` and invoked with three\n     * arguments: (value, other [, index|key]).\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. Functions and DOM nodes\n     * are **not** supported. Provide a customizer function to extend support\n     * for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @alias eq\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * object == other;\n     * // => false\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * // using a customizer callback\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqual(array, other, function(value, other) {\n     *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n     *     return true;\n     *   }\n     * });\n     * // => true\n     */\n    function isEqual(value, other, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return  result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on [`Number.isFinite`](http://ecma-international.org/ecma-262/6.0/#sec-number.isfinite).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(10);\n     * // => true\n     *\n     * _.isFinite('10');\n     * // => false\n     *\n     * _.isFinite(true);\n     * // => false\n     *\n     * _.isFinite(Object(10));\n     * // => false\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in older versions of Chrome and Safari which return 'function' for regexes\n      // and Safari 8 equivalents which return 'object' for typed array constructors.\n      return isObject(value) && objToString.call(value) == funcTag;\n    }\n\n    /**\n     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(1);\n     * // => false\n     */\n    function isObject(value) {\n      // Avoid a V8 JIT bug in Chrome 19-20.\n      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n      var type = typeof value;\n      return !!value && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Performs a deep comparison between `object` and `source` to determine if\n     * `object` contains equivalent property values. If `customizer` is provided\n     * it is invoked to compare values. If `customizer` returns `undefined`\n     * comparisons are handled by the method instead. The `customizer` is bound\n     * to `thisArg` and invoked with three arguments: (value, other, index|key).\n     *\n     * **Note:** This method supports comparing properties of arrays, booleans,\n     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n     * and DOM nodes are **not** supported. Provide a customizer function to extend\n     * support for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.isMatch(object, { 'age': 40 });\n     * // => true\n     *\n     * _.isMatch(object, { 'age': 36 });\n     * // => false\n     *\n     * // using a customizer callback\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatch(object, source, function(value, other) {\n     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n     * });\n     * // => true\n     */\n    function isMatch(object, source, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      return baseIsMatch(object, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n     * which returns `true` for `undefined` and other non-numeric values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (value == null) {\n        return false;\n      }\n      if (isFunction(value)) {\n        return reIsNative.test(fnToString.call(value));\n      }\n      return isObjectLike(value) && reIsHostCtor.test(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n     * as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isNumber(8.4);\n     * // => true\n     *\n     * _.isNumber(NaN);\n     * // => true\n     *\n     * _.isNumber('8.4');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * **Note:** This method assumes objects created by the `Object` constructor\n     * have no inherited enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      var Ctor;\n\n      // Exit early for non `Object` objects.\n      if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isArguments(value)) ||\n          (!hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n        return false;\n      }\n      // IE < 9 iterates inherited properties before own properties. If the first\n      // iterated property is an object's own property then there are no inherited\n      // enumerable properties.\n      var result;\n      // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n      baseForIn(value, function(subValue, key) {\n        result = key;\n      });\n      return result === undefined || hasOwnProperty.call(value, result);\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    function isRegExp(value) {\n      return isObject(value) && objToString.call(value) == regexpTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    function isTypedArray(value) {\n      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    function lt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    function lte(value, other) {\n      return value <= other;\n    }\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * (function() {\n     *   return _.toArray(arguments).slice(1);\n     * }(1, 2, 3));\n     * // => [2, 3]\n     */\n    function toArray(value) {\n      var length = value ? getLength(value) : 0;\n      if (!isLength(length)) {\n        return values(value);\n      }\n      if (!length) {\n        return [];\n      }\n      return arrayCopy(value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable\n     * properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return baseCopy(value, keysIn(value));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Recursively merges own enumerable properties of the source object(s), that\n     * don't resolve to `undefined` into the destination object. Subsequent sources\n     * overwrite property assignments of previous sources. If `customizer` is\n     * provided it is invoked to produce the merged values of the destination and\n     * source properties. If `customizer` returns `undefined` merging is handled\n     * by the method instead. The `customizer` is bound to `thisArg` and invoked\n     * with five arguments: (objectValue, sourceValue, key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var users = {\n     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n     * };\n     *\n     * var ages = {\n     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n     * };\n     *\n     * _.merge(users, ages);\n     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n     *\n     * // using a customizer callback\n     * var object = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var other = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.merge(object, other, function(a, b) {\n     *   if (_.isArray(a)) {\n     *     return a.concat(b);\n     *   }\n     * });\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n     */\n    var merge = createAssigner(baseMerge);\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object. Subsequent sources overwrite property assignments of previous sources.\n     * If `customizer` is provided it is invoked to produce the assigned values.\n     * The `customizer` is bound to `thisArg` and invoked with five arguments:\n     * (objectValue, sourceValue, key, object, source).\n     *\n     * **Note:** This method mutates `object` and is based on\n     * [`Object.assign`](http://ecma-international.org/ecma-262/6.0/#sec-object.assign).\n     *\n     * @static\n     * @memberOf _\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using a customizer callback\n     * var defaults = _.partialRight(_.assign, function(value, other) {\n     *   return _.isUndefined(value) ? other : value;\n     * });\n     *\n     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var assign = createAssigner(function(object, source, customizer) {\n      return customizer\n        ? assignWith(object, source, customizer)\n        : baseAssign(object, source);\n    });\n\n    /**\n     * Creates an object that inherits from the given `prototype` object. If a\n     * `properties` object is provided its own enumerable properties are assigned\n     * to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties, guard) {\n      var result = baseCreate(prototype);\n      if (guard && isIterateeCall(prototype, properties, guard)) {\n        properties = undefined;\n      }\n      return properties ? baseAssign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object for all destination properties that resolve to `undefined`. Once a\n     * property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var defaults = createDefaults(assign, assignDefaults);\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n     *\n     */\n    var defaultsDeep = createDefaults(merge, mergeDefaults);\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    var findKey = createFindKey(baseForOwn);\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => returns `pebbles` assuming `_.findKey` returns `barney`\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    var findLastKey = createFindKey(baseForOwnRight);\n\n    /**\n     * Iterates over own and inherited enumerable properties of an object invoking\n     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n     */\n    var forIn = createForIn(baseFor);\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n     */\n    var forInRight = createForIn(baseForRight);\n\n    /**\n     * Iterates over own enumerable properties of an object invoking `iteratee`\n     * for each property. The `iteratee` is bound to `thisArg` and invoked with\n     * three arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a' and 'b' (iteration order is not guaranteed)\n     */\n    var forOwn = createForOwn(baseForOwn);\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'\n     */\n    var forOwnRight = createForOwn(baseForOwnRight);\n\n    /**\n     * Creates an array of function property names from all enumerable properties,\n     * own and inherited, of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @alias methods\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the new array of property names.\n     * @example\n     *\n     * _.functions(_);\n     * // => ['after', 'ary', 'assign', ...]\n     */\n    function functions(object) {\n      return baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the property value at `path` of `object`. If the resolved value is\n     * `undefined` the `defaultValue` is used in its place.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, toPath(path), path + '');\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` is a direct property, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': { 'c': 3 } } };\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b.c');\n     * // => true\n     *\n     * _.has(object, ['a', 'b', 'c']);\n     * // => true\n     */\n    function has(object, path) {\n      if (object == null) {\n        return false;\n      }\n      var result = hasOwnProperty.call(object, path);\n      if (!result && !isKey(path)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        if (object == null) {\n          return false;\n        }\n        path = last(path);\n        result = hasOwnProperty.call(object, path);\n      }\n      return result || (isLength(object.length) && isIndex(path, object.length) &&\n        (isArray(object) || isArguments(object)));\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite property\n     * assignments of previous values unless `multiValue` is `true`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {boolean} [multiValue] Allow multiple values per key.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     *\n     * // with `multiValue`\n     * _.invert(object, true);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function invert(object, multiValue, guard) {\n      if (guard && isIterateeCall(object, multiValue, guard)) {\n        multiValue = undefined;\n      }\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (multiValue) {\n          if (hasOwnProperty.call(result, value)) {\n            result[value].push(key);\n          } else {\n            result[value] = [key];\n          }\n        }\n        else {\n          result[value] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    var keys = !nativeKeys ? shimKeys : function(object) {\n      var Ctor = object == null ? undefined : object.constructor;\n      if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n          (typeof object != 'function' && isArrayLike(object))) {\n        return shimKeys(object);\n      }\n      return isObject(object) ? nativeKeys(object) : [];\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      if (object == null) {\n        return [];\n      }\n      if (!isObject(object)) {\n        object = Object(object);\n      }\n      var length = object.length;\n      length = (length && isLength(length) &&\n        (isArray(object) || isArguments(object)) && length) || 0;\n\n      var Ctor = object.constructor,\n          index = -1,\n          isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n          result = Array(length),\n          skipIndexes = length > 0;\n\n      while (++index < length) {\n        result[index] = (index + '');\n      }\n      for (var key in object) {\n        if (!(skipIndexes && isIndex(key, length)) &&\n            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * property of `object` through `iteratee`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    var mapKeys = createObjectMapper(true);\n\n    /**\n     * Creates an object with the same keys as `object` and values generated by\n     * running each own enumerable property of `object` through `iteratee`. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, key, object).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapValues({ 'a': 1, 'b': 2 }, function(n) {\n     *   return n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // using the `_.property` callback shorthand\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    var mapValues = createObjectMapper();\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable properties of `object` that are not omitted.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to omit, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.omit(object, 'age');\n     * // => { 'user': 'fred' }\n     *\n     * _.omit(object, _.isNumber);\n     * // => { 'user': 'fred' }\n     */\n    var omit = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      if (typeof props[0] != 'function') {\n        var props = arrayMap(baseFlatten(props), String);\n        return pickByArray(object, baseDifference(keysIn(object), props));\n      }\n      var predicate = bindCallback(props[0], props[1], 3);\n      return pickByCallback(object, function(value, key, object) {\n        return !predicate(value, key, object);\n      });\n    });\n\n    /**\n     * Creates a two dimensional array of the key-value pairs for `object`,\n     * e.g. `[[key1, value1], [key2, value2]]`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the new array of key-value pairs.\n     * @example\n     *\n     * _.pairs({ 'barney': 36, 'fred': 40 });\n     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n     */\n    function pairs(object) {\n      object = toObject(object);\n\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var key = props[index];\n        result[index] = [key, object[key]];\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties. Property\n     * names may be specified as individual arguments or as arrays of property\n     * names. If `predicate` is provided it is invoked for each property of `object`\n     * picking the properties `predicate` returns truthy for. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to pick, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.pick(object, 'user');\n     * // => { 'user': 'fred' }\n     *\n     * _.pick(object, _.isString);\n     * // => { 'user': 'fred' }\n     */\n    var pick = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      return typeof props[0] == 'function'\n        ? pickByCallback(object, bindCallback(props[0], props[1], 3))\n        : pickByArray(object, baseFlatten(props));\n    });\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a function\n     * it is invoked with the `this` binding of its parent object and its result\n     * is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a.b.c', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a.b.c', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      var result = object == null ? undefined : object[path];\n      if (result === undefined) {\n        if (object != null && !isKey(path, object)) {\n          path = toPath(path);\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          result = object == null ? undefined : object[last(path)];\n        }\n        result = result === undefined ? defaultValue : result;\n      }\n      return isFunction(result) ? result.call(object) : result;\n    }\n\n    /**\n     * Sets the property value of `path` on `object`. If a portion of `path`\n     * does not exist it is created.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to augment.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, 'x[0].y.z', 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      if (object == null) {\n        return object;\n      }\n      var pathKey = (path + '');\n      path = (object[pathKey] != null || isKey(path, object)) ? [pathKey] : toPath(path);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = path[index];\n        if (isObject(nested)) {\n          if (index == lastIndex) {\n            nested[key] = value;\n          } else if (nested[key] == null) {\n            nested[key] = isIndex(path[index + 1]) ? [] : {};\n          }\n        }\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own enumerable\n     * properties through `iteratee`, with each invocation potentially mutating\n     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n     * with four arguments: (accumulator, value, key, object). Iteratee functions\n     * may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     */\n    function transform(object, iteratee, accumulator, thisArg) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getCallback(iteratee, thisArg, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = baseCreate(isFunction(Ctor) ? Ctor.prototype : undefined);\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Creates an array of the own enumerable property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property values\n     * of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Checks if `n` is between `start` and up to but not including, `end`. If\n     * `end` is not specified it is set to `start` with `start` then set to `0`.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} n The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `n` is in the range, else `false`.\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     */\n    function inRange(value, start, end) {\n      start = +start || 0;\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      return value >= nativeMin(start, end) && value < nativeMax(start, end);\n    }\n\n    /**\n     * Produces a random number between `min` and `max` (inclusive). If only one\n     * argument is provided a number between `0` and the given number is returned.\n     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n     * number is returned instead of an integer.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} [min=0] The minimum possible value.\n     * @param {number} [max=1] The maximum possible value.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(min, max, floating) {\n      if (floating && isIterateeCall(min, max, floating)) {\n        max = floating = undefined;\n      }\n      var noMin = min == null,\n          noMax = max == null;\n\n      if (floating == null) {\n        if (noMax && typeof min == 'boolean') {\n          floating = min;\n          min = 1;\n        }\n        else if (typeof max == 'boolean') {\n          floating = max;\n          noMax = true;\n        }\n      }\n      if (noMin && noMax) {\n        max = 1;\n        noMax = false;\n      }\n      min = +min || 0;\n      if (noMax) {\n        max = min;\n        min = 0;\n      } else {\n        max = +max || 0;\n      }\n      if (floating || min % 1 || max % 1) {\n        var rand = nativeRandom();\n        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);\n      }\n      return baseRandom(min, max);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__foo_bar__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);\n    });\n\n    /**\n     * Capitalizes the first character of `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('fred');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      string = baseToString(string);\n      return string && (string.charAt(0).toUpperCase() + string.slice(1));\n    }\n\n    /**\n     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = baseToString(string);\n      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search from.\n     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = baseToString(string);\n      target = (target + '');\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : nativeMin(position < 0 ? 0 : (+position || 0), length);\n\n      position -= target.length;\n      return position >= 0 && string.indexOf(target, position) == position;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\", in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional characters\n     * use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value.\n     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in Internet Explorer < 9, they can break out\n     * of attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n     * for more details.\n     *\n     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n     * to reduce XSS vectors.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      // Reset `lastIndex` because in IE < 9 `String#replace` does not.\n      string = baseToString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n     * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n     */\n    function escapeRegExp(string) {\n      string = baseToString(string);\n      return (string && reHasRegExpChars.test(string))\n        ? string.replace(reRegExpChars, escapeRegExpChar)\n        : (string || '(?:)');\n    }\n\n    /**\n     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__foo_bar__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = baseToString(string);\n      length = +length;\n\n      var strLength = string.length;\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return string;\n      }\n      var mid = (length - strLength) / 2,\n          leftLength = nativeFloor(mid),\n          rightLength = nativeCeil(mid);\n\n      chars = createPadding('', rightLength, chars);\n      return chars.slice(0, leftLength) + string + chars;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padLeft('abc', 6);\n     * // => '   abc'\n     *\n     * _.padLeft('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padLeft('abc', 3);\n     * // => 'abc'\n     */\n    var padLeft = createPadDir();\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padRight('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padRight('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padRight('abc', 3);\n     * // => 'abc'\n     */\n    var padRight = createPadDir(true);\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n     * in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)\n     * of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.\n      // Chrome fails to trim leading <BOM> whitespace characters.\n      // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n      if (guard ? isIterateeCall(string, radix, guard) : radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      string = trim(string);\n      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=0] The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n) {\n      var result = '';\n      string = baseToString(string);\n      n = +n;\n      if (n < 1 || !string || !nativeIsFinite(n)) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        string += string;\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--foo-bar');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__foo_bar__');\n     * // => 'Foo Bar'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = baseToString(string);\n      position = position == null\n        ? 0\n        : nativeMin(position < 0 ? 0 : (+position || 0), string.length);\n\n      return string.lastIndexOf(target, position) == position;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is provided it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options] The options object.\n     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n     * @param {Object} [options.imports] An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n     * @param {string} [options.variable] The data object variable name.\n     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // using the \"interpolate\" delimiter to create a compiled template\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // using the HTML \"escape\" delimiter to escape data property values\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the internal `print` function in \"evaluate\" delimiters\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // using custom template delimiters\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // using backslashes to treat delimiters as plain text\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // using the `imports` option to import `jQuery` as `jq`\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the `sourceURL` option to specify a custom sourceURL for the template\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n     *\n     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // using the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and a stack trace\n     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, otherOptions) {\n      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n        options = otherOptions = undefined;\n      }\n      string = baseToString(string);\n      options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n\n      var imports = assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products requires returning the `match`\n        // string in order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);\n      }\n      chars = (chars + '');\n      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimLeft('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimLeft('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimLeft(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string));\n      }\n      return string.slice(charsLeftIndex(string, (chars + '')));\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimRight('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimRight('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimRight(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(0, trimmedRightIndex(string) + 1);\n      }\n      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object|number} [options] The options object or maximum string length.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.trunc('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', 24);\n     * // => 'hi-diddly-ho there, n...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function trunc(string, options, guard) {\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (options != null) {\n        if (isObject(options)) {\n          var separator = 'separator' in options ? options.separator : separator;\n          length = 'length' in options ? (+options.length || 0) : length;\n          omission = 'omission' in options ? baseToString(options.omission) : omission;\n        } else {\n          length = +options || 0;\n        }\n      }\n      string = baseToString(string);\n      if (length >= string.length) {\n        return string;\n      }\n      var end = length - omission.length;\n      if (end < 1) {\n        return omission;\n      }\n      var result = string.slice(0, end);\n      if (separator == null) {\n        return result + omission;\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              newEnd,\n              substring = string.slice(0, end);\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            newEnd = match.index;\n          }\n          result = result.slice(0, newEnd == null ? end : newEnd);\n        }\n      } else if (string.indexOf(separator, end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n     * corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n     * entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = baseToString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      if (guard && isIterateeCall(string, pattern, guard)) {\n        pattern = undefined;\n      }\n      string = baseToString(string);\n      return string.match(pattern || reWords) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function} func The function to attempt.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // avoid throwing errors for invalid selectors\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = restParam(function(func, args) {\n      try {\n        return func.apply(undefined, args);\n      } catch(e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and arguments of the created function. If `func` is a property name the\n     * created callback returns the property value for a given element. If `func`\n     * is an object the created callback returns `true` for elements that contain\n     * the equivalent object properties, otherwise it returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias iteratee\n     * @category Utility\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // wrap to create custom callback shorthands\n     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n     *   if (!match) {\n     *     return callback(func, thisArg);\n     *   }\n     *   return function(object) {\n     *     return match[2] == 'gt'\n     *       ? object[match[1]] > match[3]\n     *       : object[match[1]] < match[3];\n     *   };\n     * });\n     *\n     * _.filter(users, 'age__gt36');\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     */\n    function callback(func, thisArg, guard) {\n      if (guard && isIterateeCall(func, thisArg, guard)) {\n        thisArg = undefined;\n      }\n      return isObjectLike(func)\n        ? matches(func)\n        : baseCallback(func, thisArg);\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var getter = _.constant(object);\n     *\n     * getter() === object;\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * This method returns the first argument provided to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.identity(object) === object;\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that performs a deep comparison between a given object\n     * and `source`, returning `true` if the given object has equivalent property\n     * values, else `false`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that compares the property value of `path` on a given\n     * object to `value`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * _.find(users, _.matchesProperty('user', 'fred'));\n     * // => { 'user': 'fred' }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, true));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` on a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.invoke(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    var method = restParam(function(path, args) {\n      return function(object) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path on `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = restParam(function(object, args) {\n      return function(path) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable function properties of a source object to the\n     * destination object. If `object` is a function then methods are added to\n     * its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.chain=true] Specify whether the functions added\n     *  are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      if (options == null) {\n        var isObj = isObject(source),\n            props = isObj ? keys(source) : undefined,\n            methodNames = (props && props.length) ? baseFunctions(source, props) : undefined;\n\n        if (!(methodNames ? methodNames.length : isObj)) {\n          methodNames = false;\n          options = source;\n          source = object;\n          object = this;\n        }\n      }\n      if (!methodNames) {\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = true,\n          index = -1,\n          isFunc = isFunction(object),\n          length = methodNames.length;\n\n      if (options === false) {\n        chain = false;\n      } else if (isObject(options) && 'chain' in options) {\n        chain = options.chain;\n      }\n      while (++index < length) {\n        var methodName = methodNames[index],\n            func = source[methodName];\n\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = (function(func) {\n            return function() {\n              var chainAll = this.__chain__;\n              if (chain || chainAll) {\n                var result = object(this.__wrapped__),\n                    actions = result.__actions__ = arrayCopy(this.__actions__);\n\n                actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n                result.__chain__ = chainAll;\n                return result;\n              }\n              return func.apply(object, arrayPush([this.value()], arguments));\n            };\n          }(func));\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      root._ = oldDash;\n      return this;\n    }\n\n    /**\n     * A no-operation function that returns `undefined` regardless of the\n     * arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.noop(object) === undefined;\n     * // => true\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that returns the property value at `path` on a\n     * given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': 2 } } },\n     *   { 'a': { 'b': { 'c': 1 } } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the property value at a given path on `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return baseGet(object, toPath(path), path + '');\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. If `end` is not specified it is\n     * set to `start` with `start` then set to `0`. If `end` is less than `start`\n     * a zero-length range is created unless a negative `step` is specified.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the new array of numbers.\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    function range(start, end, step) {\n      if (step && isIterateeCall(start, end, step)) {\n        end = step = undefined;\n      }\n      start = +start || 0;\n      step = step == null ? 1 : (+step || 0);\n\n      if (end == null) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.\n      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the iteratee function `n` times, returning an array of the results\n     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n     * one argument; (index).\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n     * // => [3, 6, 4]\n     *\n     * _.times(3, function(n) {\n     *   mage.castSpell(n);\n     * });\n     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2`\n     *\n     * _.times(3, function(n) {\n     *   this.cast(n);\n     * }, mage);\n     * // => also invokes `mage.castSpell(n)` three times\n     */\n    function times(n, iteratee, thisArg) {\n      n = nativeFloor(n);\n\n      // Exit early to avoid a JSC JIT bug in Safari 8\n      // where `Array(0)` is treated as `Array(1)`.\n      if (n < 1 || !nativeIsFinite(n)) {\n        return [];\n      }\n      var index = -1,\n          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n\n      iteratee = bindCallback(iteratee, thisArg, 1);\n      while (++index < n) {\n        if (index < MAX_ARRAY_LENGTH) {\n          result[index] = iteratee(index);\n        } else {\n          iteratee(index);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {string} [prefix] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return baseToString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} augend The first number to add.\n     * @param {number} addend The second number to add.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    function add(augend, addend) {\n      return (+augend || 0) + (+addend || 0);\n    }\n\n    /**\n     * Calculates `n` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Calculates `n` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Gets the maximum value of `collection`. If `collection` is empty or falsey\n     * `-Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => -Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.max(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.max(users, 'age');\n     * // => { 'user': 'fred', 'age': 40 }\n     */\n    var max = createExtremum(gt, NEGATIVE_INFINITY);\n\n    /**\n     * Gets the minimum value of `collection`. If `collection` is empty or falsey\n     * `Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.min(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.min(users, 'age');\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var min = createExtremum(lt, POSITIVE_INFINITY);\n\n    /**\n     * Calculates `n` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Gets the sum of the values in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 6]);\n     * // => 10\n     *\n     * _.sum({ 'a': 4, 'b': 6 });\n     * // => 10\n     *\n     * var objects = [\n     *   { 'n': 4 },\n     *   { 'n': 6 }\n     * ];\n     *\n     * _.sum(objects, function(object) {\n     *   return object.n;\n     * });\n     * // => 10\n     *\n     * // using the `_.property` callback shorthand\n     * _.sum(objects, 'n');\n     * // => 10\n     */\n    function sum(collection, iteratee, thisArg) {\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return iteratee.length == 1\n        ? arraySum(isArray(collection) ? collection : toIterable(collection), iteratee)\n        : baseSum(collection, iteratee);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    // Add functions to the `Map` cache.\n    MapCache.prototype['delete'] = mapDelete;\n    MapCache.prototype.get = mapGet;\n    MapCache.prototype.has = mapHas;\n    MapCache.prototype.set = mapSet;\n\n    // Add functions to the `Set` cache.\n    SetCache.prototype.push = cachePush;\n\n    // Assign cache to `_.memoize`.\n    memoize.Cache = MapCache;\n\n    // Add functions that return wrapped values when chaining.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.callback = callback;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.functions = functions;\n    lodash.groupBy = groupBy;\n    lodash.indexBy = indexBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.invert = invert;\n    lodash.invoke = invoke;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.modArgs = modArgs;\n    lodash.negate = negate;\n    lodash.omit = omit;\n    lodash.once = once;\n    lodash.pairs = pairs;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pluck = pluck;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.restParam = restParam;\n    lodash.set = set;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortByAll = sortByAll;\n    lodash.sortByOrder = sortByOrder;\n    lodash.spread = spread;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.times = times;\n    lodash.toArray = toArray;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.union = union;\n    lodash.uniq = uniq;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.where = where;\n    lodash.without = without;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.backflow = flowRight;\n    lodash.collect = map;\n    lodash.compose = flowRight;\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.extend = assign;\n    lodash.iteratee = callback;\n    lodash.methods = functions;\n    lodash.object = zipObject;\n    lodash.select = filter;\n    lodash.tail = rest;\n    lodash.unique = uniq;\n\n    // Add functions to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions that return unwrapped values when chaining.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.deburr = deburr;\n    lodash.endsWith = endsWith;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.findWhere = findWhere;\n    lodash.first = first;\n    lodash.floor = floor;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isBoolean = isBoolean;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isMatch = isMatch;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isString = isString;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.min = min;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padLeft = padLeft;\n    lodash.padRight = padRight;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.sum = sum;\n    lodash.template = template;\n    lodash.trim = trim;\n    lodash.trimLeft = trimLeft;\n    lodash.trimRight = trimRight;\n    lodash.trunc = trunc;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.words = words;\n\n    // Add aliases.\n    lodash.all = every;\n    lodash.any = some;\n    lodash.contains = includes;\n    lodash.eq = isEqual;\n    lodash.detect = find;\n    lodash.foldl = reduce;\n    lodash.foldr = reduceRight;\n    lodash.head = first;\n    lodash.include = includes;\n    lodash.inject = reduce;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!lodash.prototype[methodName]) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), false);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions capable of returning wrapped and unwrapped values when chaining.\n    lodash.sample = sample;\n\n    lodash.prototype.sample = function(n) {\n      if (!this.__chain__ && n == null) {\n        return sample(this.value());\n      }\n      return this.thru(function(value) {\n        return sample(value, n);\n      });\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type string\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__;\n        if (filtered && !index) {\n          return new LazyWrapper(this);\n        }\n        n = n == null ? 1 : nativeMax(nativeFloor(n) || 0, 0);\n\n        var result = this.clone();\n        if (filtered) {\n          result.__takeCount__ = nativeMin(result.__takeCount__, n);\n        } else {\n          result.__views__.push({ 'size': n, 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type != LAZY_MAP_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {\n        var result = this.clone();\n        result.__iteratees__.push({ 'iteratee': getCallback(iteratee, thisArg, 1), 'type': type });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.first` and `_.last`.\n    arrayEach(['first', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n    arrayEach(['initial', 'rest'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.pluck` and `_.where`.\n    arrayEach(['pluck', 'where'], function(methodName, index) {\n      var operationName = index ? 'filter' : 'map',\n          createCallback = index ? baseMatches : property;\n\n      LazyWrapper.prototype[methodName] = function(value) {\n        return this[operationName](createCallback(value));\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.reject = function(predicate, thisArg) {\n      predicate = getCallback(predicate, thisArg, 1);\n      return this.filter(function(value) {\n        return !predicate(value);\n      });\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = start == null ? 0 : (+start || 0);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = (+end || 0);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate, thisArg) {\n      return this.reverse().takeWhile(predicate, thisArg).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(POSITIVE_INFINITY);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|map|reject)|While$/.test(methodName),\n          retUnwrapped = /^(?:first|last)$/.test(methodName),\n          lodashFunc = lodash[retUnwrapped ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName];\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var args = retUnwrapped ? [1] : arguments,\n            chainAll = this.__chain__,\n            value = this.__wrapped__,\n            isHybrid = !!this.__actions__.length,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var interceptor = function(value) {\n          return (retUnwrapped && chainAll)\n            ? lodashFunc(value, 1)[0]\n            : lodashFunc.apply(undefined, arrayPush([value], args));\n        };\n\n        var action = { 'func': thru, 'args': [interceptor], 'thisArg': undefined },\n            onlyLazy = isLazy && !isHybrid;\n\n        if (retUnwrapped && !chainAll) {\n          if (onlyLazy) {\n            value = value.clone();\n            value.__actions__.push(action);\n            return func.call(value);\n          }\n          return lodashFunc.call(undefined, this.value())[0];\n        }\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push(action);\n          return new LodashWrapper(result, chainAll);\n        }\n        return this.thru(interceptor);\n      };\n    });\n\n    // Add `Array` and `String` methods to `lodash.prototype`.\n    arrayEach(['join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'], function(methodName) {\n      var func = (/^(?:replace|split)$/.test(methodName) ? stringProto : arrayProto)[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:join|pop|replace|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          return func.apply(this.value(), args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(value, args);\n        });\n      };\n    });\n\n    // Map minified function names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name,\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{ 'name': 'wrapper', 'func': undefined }];\n\n    // Add functions to the lazy wrapper.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chaining functions to the `lodash` wrapper.\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.concat = wrapperConcat;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toString = wrapperToString;\n    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add function aliases to the `lodash` wrapper.\n    lodash.prototype.collect = lodash.prototype.map;\n    lodash.prototype.head = lodash.prototype.first;\n    lodash.prototype.select = lodash.prototype.filter;\n    lodash.prototype.tail = lodash.prototype.rest;\n\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose lodash to the global object when an AMD loader is present to avoid\n    // errors in cases where lodash is loaded by a script tag and not intended\n    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n    // more details.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n    // Export for Node.js or RingoJS.\n    if (moduleExports) {\n      (freeModule.exports = _)._ = _;\n    }\n    // Export for Rhino with CommonJS support.\n    else {\n      freeExports._ = _;\n    }\n  }\n  else {\n    // Export for a browser or Rhino.\n    root._ = _;\n  }\n}.call(this));\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],54:[function(require,module,exports){\n/*\nCopyright (c) 2012-2014 Chris Pettitt\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\nmodule.exports = {\n  graphlib: require(\"./lib/graphlib\"),\n\n  layout: require(\"./lib/layout\"),\n  debug: require(\"./lib/debug\"),\n  util: {\n    time: require(\"./lib/util\").time,\n    notime: require(\"./lib/util\").notime\n  },\n  version: require(\"./lib/version\")\n};\n\n},{\"./lib/debug\":59,\"./lib/graphlib\":60,\"./lib/layout\":62,\"./lib/util\":82,\"./lib/version\":83}],55:[function(require,module,exports){\n\"use strict\";\n\nvar _ = require(\"./lodash\"),\n    greedyFAS = require(\"./greedy-fas\");\n\nmodule.exports = {\n  run: run,\n  undo: undo\n};\n\nfunction run(g) {\n  var fas = (g.graph().acyclicer === \"greedy\"\n                ? greedyFAS(g, weightFn(g))\n                : dfsFAS(g));\n  _.each(fas, function(e) {\n    var label = g.edge(e);\n    g.removeEdge(e);\n    label.forwardName = e.name;\n    label.reversed = true;\n    g.setEdge(e.w, e.v, label, _.uniqueId(\"rev\"));\n  });\n\n  function weightFn(g) {\n    return function(e) {\n      return g.edge(e).weight;\n    };\n  }\n}\n\nfunction dfsFAS(g) {\n  var fas = [],\n      stack = {},\n      visited = {};\n\n  function dfs(v) {\n    if (_.has(visited, v)) {\n      return;\n    }\n    visited[v] = true;\n    stack[v] = true;\n    _.each(g.outEdges(v), function(e) {\n      if (_.has(stack, e.w)) {\n        fas.push(e);\n      } else {\n        dfs(e.w);\n      }\n    });\n    delete stack[v];\n  }\n\n  _.each(g.nodes(), dfs);\n  return fas;\n}\n\nfunction undo(g) {\n  _.each(g.edges(), function(e) {\n    var label = g.edge(e);\n    if (label.reversed) {\n      g.removeEdge(e);\n\n      var forwardName = label.forwardName;\n      delete label.reversed;\n      delete label.forwardName;\n      g.setEdge(e.w, e.v, label, forwardName);\n    }\n  });\n}\n\n},{\"./greedy-fas\":61,\"./lodash\":63}],56:[function(require,module,exports){\nvar _ = require(\"./lodash\"),\n    util = require(\"./util\");\n\nmodule.exports = addBorderSegments;\n\nfunction addBorderSegments(g) {\n  function dfs(v) {\n    var children = g.children(v),\n        node = g.node(v);\n    if (children.length) {\n      _.each(children, dfs);\n    }\n\n    if (_.has(node, \"minRank\")) {\n      node.borderLeft = [];\n      node.borderRight = [];\n      for (var rank = node.minRank, maxRank = node.maxRank + 1;\n           rank < maxRank;\n           ++rank) {\n        addBorderNode(g, \"borderLeft\", \"_bl\", v, node, rank);\n        addBorderNode(g, \"borderRight\", \"_br\", v, node, rank);\n      }\n    }\n  }\n\n  _.each(g.children(), dfs);\n}\n\nfunction addBorderNode(g, prop, prefix, sg, sgNode, rank) {\n  var label = { width: 0, height: 0, rank: rank, borderType: prop },\n      prev = sgNode[prop][rank - 1],\n      curr = util.addDummyNode(g, \"border\", label, prefix);\n  sgNode[prop][rank] = curr;\n  g.setParent(curr, sg);\n  if (prev) {\n    g.setEdge(prev, curr, { weight: 1 });\n  }\n}\n\n},{\"./lodash\":63,\"./util\":82}],57:[function(require,module,exports){\n\"use strict\";\n\nvar _ = require(\"./lodash\");\n\nmodule.exports = {\n  adjust: adjust,\n  undo: undo\n};\n\nfunction adjust(g) {\n  var rankDir = g.graph().rankdir.toLowerCase();\n  if (rankDir === \"lr\" || rankDir === \"rl\") {\n    swapWidthHeight(g);\n  }\n}\n\nfunction undo(g) {\n  var rankDir = g.graph().rankdir.toLowerCase();\n  if (rankDir === \"bt\" || rankDir === \"rl\") {\n    reverseY(g);\n  }\n\n  if (rankDir === \"lr\" || rankDir === \"rl\") {\n    swapXY(g);\n    swapWidthHeight(g);\n  }\n}\n\nfunction swapWidthHeight(g) {\n  _.each(g.nodes(), function(v) { swapWidthHeightOne(g.node(v)); });\n  _.each(g.edges(), function(e) { swapWidthHeightOne(g.edge(e)); });\n}\n\nfunction swapWidthHeightOne(attrs) {\n  var w = attrs.width;\n  attrs.width = attrs.height;\n  attrs.height = w;\n}\n\nfunction reverseY(g) {\n  _.each(g.nodes(), function(v) { reverseYOne(g.node(v)); });\n\n  _.each(g.edges(), function(e) {\n    var edge = g.edge(e);\n    _.each(edge.points, reverseYOne);\n    if (_.has(edge, \"y\")) {\n      reverseYOne(edge);\n    }\n  });\n}\n\nfunction reverseYOne(attrs) {\n  attrs.y = -attrs.y;\n}\n\nfunction swapXY(g) {\n  _.each(g.nodes(), function(v) { swapXYOne(g.node(v)); });\n\n  _.each(g.edges(), function(e) {\n    var edge = g.edge(e);\n    _.each(edge.points, swapXYOne);\n    if (_.has(edge, \"x\")) {\n      swapXYOne(edge);\n    }\n  });\n}\n\nfunction swapXYOne(attrs) {\n  var x = attrs.x;\n  attrs.x = attrs.y;\n  attrs.y = x;\n}\n\n},{\"./lodash\":63}],58:[function(require,module,exports){\n/*\n * Simple doubly linked list implementation derived from Cormen, et al.,\n * \"Introduction to Algorithms\".\n */\n\nmodule.exports = List;\n\nfunction List() {\n  var sentinel = {};\n  sentinel._next = sentinel._prev = sentinel;\n  this._sentinel = sentinel;\n}\n\nList.prototype.dequeue = function() {\n  var sentinel = this._sentinel,\n      entry = sentinel._prev;\n  if (entry !== sentinel) {\n    unlink(entry);\n    return entry;\n  }\n};\n\nList.prototype.enqueue = function(entry) {\n  var sentinel = this._sentinel;\n  if (entry._prev && entry._next) {\n    unlink(entry);\n  }\n  entry._next = sentinel._next;\n  sentinel._next._prev = entry;\n  sentinel._next = entry;\n  entry._prev = sentinel;\n};\n\nList.prototype.toString = function() {\n  var strs = [],\n      sentinel = this._sentinel,\n      curr = sentinel._prev;\n  while (curr !== sentinel) {\n    strs.push(JSON.stringify(curr, filterOutLinks));\n    curr = curr._prev;\n  }\n  return \"[\" + strs.join(\", \") + \"]\";\n};\n\nfunction unlink(entry) {\n  entry._prev._next = entry._next;\n  entry._next._prev = entry._prev;\n  delete entry._next;\n  delete entry._prev;\n}\n\nfunction filterOutLinks(k, v) {\n  if (k !== \"_next\" && k !== \"_prev\") {\n    return v;\n  }\n}\n\n},{}],59:[function(require,module,exports){\nvar _ = require(\"./lodash\"),\n    util = require(\"./util\"),\n    Graph = require(\"./graphlib\").Graph;\n\nmodule.exports = {\n  debugOrdering: debugOrdering\n};\n\n/* istanbul ignore next */\nfunction debugOrdering(g) {\n  var layerMatrix = util.buildLayerMatrix(g);\n\n  var h = new Graph({ compound: true, multigraph: true }).setGraph({});\n\n  _.each(g.nodes(), function(v) {\n    h.setNode(v, { label: v });\n    h.setParent(v, \"layer\" + g.node(v).rank);\n  });\n\n  _.each(g.edges(), function(e) {\n    h.setEdge(e.v, e.w, {}, e.name);\n  });\n\n  _.each(layerMatrix, function(layer, i) {\n    var layerV = \"layer\" + i;\n    h.setNode(layerV, { rank: \"same\" });\n    _.reduce(layer, function(u, v) {\n      h.setEdge(u, v, { style: \"invis\" });\n      return v;\n    });\n  });\n\n  return h;\n}\n\n},{\"./graphlib\":60,\"./lodash\":63,\"./util\":82}],60:[function(require,module,exports){\n/* global window */\n\nvar graphlib;\n\nif (typeof require === \"function\") {\n  try {\n    graphlib = require(\"graphlib\");\n  } catch (e) {}\n}\n\nif (!graphlib) {\n  graphlib = window.graphlib;\n}\n\nmodule.exports = graphlib;\n\n},{\"graphlib\":84}],61:[function(require,module,exports){\nvar _ = require(\"./lodash\"),\n    Graph = require(\"./graphlib\").Graph,\n    List = require(\"./data/list\");\n\n/*\n * A greedy heuristic for finding a feedback arc set for a graph. A feedback\n * arc set is a set of edges that can be removed to make a graph acyclic.\n * The algorithm comes from: P. Eades, X. Lin, and W. F. Smyth, \"A fast and\n * effective heuristic for the feedback arc set problem.\" This implementation\n * adjusts that from the paper to allow for weighted edges.\n */\nmodule.exports = greedyFAS;\n\nvar DEFAULT_WEIGHT_FN = _.constant(1);\n\nfunction greedyFAS(g, weightFn) {\n  if (g.nodeCount() <= 1) {\n    return [];\n  }\n  var state = buildState(g, weightFn || DEFAULT_WEIGHT_FN);\n  var results = doGreedyFAS(state.graph, state.buckets, state.zeroIdx);\n\n  // Expand multi-edges\n  return _.flatten(_.map(results, function(e) {\n    return g.outEdges(e.v, e.w);\n  }), true);\n}\n\nfunction doGreedyFAS(g, buckets, zeroIdx) {\n  var results = [],\n      sources = buckets[buckets.length - 1],\n      sinks = buckets[0];\n\n  var entry;\n  while (g.nodeCount()) {\n    while ((entry = sinks.dequeue()))   { removeNode(g, buckets, zeroIdx, entry); }\n    while ((entry = sources.dequeue())) { removeNode(g, buckets, zeroIdx, entry); }\n    if (g.nodeCount()) {\n      for (var i = buckets.length - 2; i > 0; --i) {\n        entry = buckets[i].dequeue();\n        if (entry) {\n          results = results.concat(removeNode(g, buckets, zeroIdx, entry, true));\n          break;\n        }\n      }\n    }\n  }\n\n  return results;\n}\n\nfunction removeNode(g, buckets, zeroIdx, entry, collectPredecessors) {\n  var results = collectPredecessors ? [] : undefined;\n\n  _.each(g.inEdges(entry.v), function(edge) {\n    var weight = g.edge(edge),\n        uEntry = g.node(edge.v);\n\n    if (collectPredecessors) {\n      results.push({ v: edge.v, w: edge.w });\n    }\n\n    uEntry.out -= weight;\n    assignBucket(buckets, zeroIdx, uEntry);\n  });\n\n  _.each(g.outEdges(entry.v), function(edge) {\n    var weight = g.edge(edge),\n        w = edge.w,\n        wEntry = g.node(w);\n    wEntry[\"in\"] -= weight;\n    assignBucket(buckets, zeroIdx, wEntry);\n  });\n\n  g.removeNode(entry.v);\n\n  return results;\n}\n\nfunction buildState(g, weightFn) {\n  var fasGraph = new Graph(),\n      maxIn = 0,\n      maxOut = 0;\n\n  _.each(g.nodes(), function(v) {\n    fasGraph.setNode(v, { v: v, \"in\": 0, out: 0 });\n  });\n\n  // Aggregate weights on nodes, but also sum the weights across multi-edges\n  // into a single edge for the fasGraph.\n  _.each(g.edges(), function(e) {\n    var prevWeight = fasGraph.edge(e.v, e.w) || 0,\n        weight = weightFn(e),\n        edgeWeight = prevWeight + weight;\n    fasGraph.setEdge(e.v, e.w, edgeWeight);\n    maxOut = Math.max(maxOut, fasGraph.node(e.v).out += weight);\n    maxIn  = Math.max(maxIn,  fasGraph.node(e.w)[\"in\"]  += weight);\n  });\n\n  var buckets = _.range(maxOut + maxIn + 3).map(function() { return new List(); });\n  var zeroIdx = maxIn + 1;\n\n  _.each(fasGraph.nodes(), function(v) {\n    assignBucket(buckets, zeroIdx, fasGraph.node(v));\n  });\n\n  return { graph: fasGraph, buckets: buckets, zeroIdx: zeroIdx };\n}\n\nfunction assignBucket(buckets, zeroIdx, entry) {\n  if (!entry.out) {\n    buckets[0].enqueue(entry);\n  } else if (!entry[\"in\"]) {\n    buckets[buckets.length - 1].enqueue(entry);\n  } else {\n    buckets[entry.out - entry[\"in\"] + zeroIdx].enqueue(entry);\n  }\n}\n\n},{\"./data/list\":58,\"./graphlib\":60,\"./lodash\":63}],62:[function(require,module,exports){\n\"use strict\";\n\nvar _ = require(\"./lodash\"),\n    acyclic = require(\"./acyclic\"),\n    normalize = require(\"./normalize\"),\n    rank = require(\"./rank\"),\n    normalizeRanks = require(\"./util\").normalizeRanks,\n    parentDummyChains = require(\"./parent-dummy-chains\"),\n    removeEmptyRanks = require(\"./util\").removeEmptyRanks,\n    nestingGraph = require(\"./nesting-graph\"),\n    addBorderSegments = require(\"./add-border-segments\"),\n    coordinateSystem = require(\"./coordinate-system\"),\n    order = require(\"./order\"),\n    position = require(\"./position\"),\n    util = require(\"./util\"),\n    Graph = require(\"./graphlib\").Graph;\n\nmodule.exports = layout;\n\nfunction layout(g, opts) {\n  var time = opts && opts.debugTiming ? util.time : util.notime;\n  time(\"layout\", function() {\n    var layoutGraph = time(\"  buildLayoutGraph\",\n                               function() { return buildLayoutGraph(g); });\n    time(\"  runLayout\",        function() { runLayout(layoutGraph, time); });\n    time(\"  updateInputGraph\", function() { updateInputGraph(g, layoutGraph); });\n  });\n}\n\nfunction runLayout(g, time) {\n  time(\"    makeSpaceForEdgeLabels\", function() { makeSpaceForEdgeLabels(g); });\n  time(\"    removeSelfEdges\",        function() { removeSelfEdges(g); });\n  time(\"    acyclic\",                function() { acyclic.run(g); });\n  time(\"    nestingGraph.run\",       function() { nestingGraph.run(g); });\n  time(\"    rank\",                   function() { rank(util.asNonCompoundGraph(g)); });\n  time(\"    injectEdgeLabelProxies\", function() { injectEdgeLabelProxies(g); });\n  time(\"    removeEmptyRanks\",       function() { removeEmptyRanks(g); });\n  time(\"    nestingGraph.cleanup\",   function() { nestingGraph.cleanup(g); });\n  time(\"    normalizeRanks\",         function() { normalizeRanks(g); });\n  time(\"    assignRankMinMax\",       function() { assignRankMinMax(g); });\n  time(\"    removeEdgeLabelProxies\", function() { removeEdgeLabelProxies(g); });\n  time(\"    normalize.run\",          function() { normalize.run(g); });\n  time(\"    parentDummyChains\",      function() { parentDummyChains(g); });\n  time(\"    addBorderSegments\",      function() { addBorderSegments(g); });\n  time(\"    order\",                  function() { order(g); });\n  time(\"    insertSelfEdges\",        function() { insertSelfEdges(g); });\n  time(\"    adjustCoordinateSystem\", function() { coordinateSystem.adjust(g); });\n  time(\"    position\",               function() { position(g); });\n  time(\"    positionSelfEdges\",      function() { positionSelfEdges(g); });\n  time(\"    removeBorderNodes\",      function() { removeBorderNodes(g); });\n  time(\"    normalize.undo\",         function() { normalize.undo(g); });\n  time(\"    fixupEdgeLabelCoords\",   function() { fixupEdgeLabelCoords(g); });\n  time(\"    undoCoordinateSystem\",   function() { coordinateSystem.undo(g); });\n  time(\"    translateGraph\",         function() { translateGraph(g); });\n  time(\"    assignNodeIntersects\",   function() { assignNodeIntersects(g); });\n  time(\"    reversePoints\",          function() { reversePointsForReversedEdges(g); });\n  time(\"    acyclic.undo\",           function() { acyclic.undo(g); });\n}\n\n/*\n * Copies final layout information from the layout graph back to the input\n * graph. This process only copies whitelisted attributes from the layout graph\n * to the input graph, so it serves as a good place to determine what\n * attributes can influence layout.\n */\nfunction updateInputGraph(inputGraph, layoutGraph) {\n  _.each(inputGraph.nodes(), function(v) {\n    var inputLabel = inputGraph.node(v),\n        layoutLabel = layoutGraph.node(v);\n\n    if (inputLabel) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n\n      if (layoutGraph.children(v).length) {\n        inputLabel.width = layoutLabel.width;\n        inputLabel.height = layoutLabel.height;\n      }\n    }\n  });\n\n  _.each(inputGraph.edges(), function(e) {\n    var inputLabel = inputGraph.edge(e),\n        layoutLabel = layoutGraph.edge(e);\n\n    inputLabel.points = layoutLabel.points;\n    if (_.has(layoutLabel, \"x\")) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n    }\n  });\n\n  inputGraph.graph().width = layoutGraph.graph().width;\n  inputGraph.graph().height = layoutGraph.graph().height;\n}\n\nvar graphNumAttrs = [\"nodesep\", \"edgesep\", \"ranksep\", \"marginx\", \"marginy\"],\n    graphDefaults = { ranksep: 50, edgesep: 20, nodesep: 50, rankdir: \"tb\" },\n    graphAttrs = [\"acyclicer\", \"ranker\", \"rankdir\", \"align\"],\n    nodeNumAttrs = [\"width\", \"height\"],\n    nodeDefaults = { width: 0, height: 0 },\n    edgeNumAttrs = [\"minlen\", \"weight\", \"width\", \"height\", \"labeloffset\"],\n    edgeDefaults = {\n      minlen: 1, weight: 1, width: 0, height: 0,\n      labeloffset: 10, labelpos: \"r\"\n    },\n    edgeAttrs = [\"labelpos\"];\n\n/*\n * Constructs a new graph from the input graph, which can be used for layout.\n * This process copies only whitelisted attributes from the input graph to the\n * layout graph. Thus this function serves as a good place to determine what\n * attributes can influence layout.\n */\nfunction buildLayoutGraph(inputGraph) {\n  var g = new Graph({ multigraph: true, compound: true }),\n      graph = canonicalize(inputGraph.graph());\n\n  g.setGraph(_.merge({},\n    graphDefaults,\n    selectNumberAttrs(graph, graphNumAttrs),\n    _.pick(graph, graphAttrs)));\n\n  _.each(inputGraph.nodes(), function(v) {\n    var node = canonicalize(inputGraph.node(v));\n    g.setNode(v, _.defaults(selectNumberAttrs(node, nodeNumAttrs), nodeDefaults));\n    g.setParent(v, inputGraph.parent(v));\n  });\n\n  _.each(inputGraph.edges(), function(e) {\n    var edge = canonicalize(inputGraph.edge(e));\n    g.setEdge(e, _.merge({},\n      edgeDefaults,\n      selectNumberAttrs(edge, edgeNumAttrs),\n      _.pick(edge, edgeAttrs)));\n  });\n\n  return g;\n}\n\n/*\n * This idea comes from the Gansner paper: to account for edge labels in our\n * layout we split each rank in half by doubling minlen and halving ranksep.\n * Then we can place labels at these mid-points between nodes.\n *\n * We also add some minimal padding to the width to push the label for the edge\n * away from the edge itself a bit.\n */\nfunction makeSpaceForEdgeLabels(g) {\n  var graph = g.graph();\n  graph.ranksep /= 2;\n  _.each(g.edges(), function(e) {\n    var edge = g.edge(e);\n    edge.minlen *= 2;\n    if (edge.labelpos.toLowerCase() !== \"c\") {\n      if (graph.rankdir === \"TB\" || graph.rankdir === \"BT\") {\n        edge.width += edge.labeloffset;\n      } else {\n        edge.height += edge.labeloffset;\n      }\n    }\n  });\n}\n\n/*\n * Creates temporary dummy nodes that capture the rank in which each edge's\n * label is going to, if it has one of non-zero width and height. We do this\n * so that we can safely remove empty ranks while preserving balance for the\n * label's position.\n */\nfunction injectEdgeLabelProxies(g) {\n  _.each(g.edges(), function(e) {\n    var edge = g.edge(e);\n    if (edge.width && edge.height) {\n      var v = g.node(e.v),\n          w = g.node(e.w),\n          label = { rank: (w.rank - v.rank) / 2 + v.rank, e: e };\n      util.addDummyNode(g, \"edge-proxy\", label, \"_ep\");\n    }\n  });\n}\n\nfunction assignRankMinMax(g) {\n  var maxRank = 0;\n  _.each(g.nodes(), function(v) {\n    var node = g.node(v);\n    if (node.borderTop) {\n      node.minRank = g.node(node.borderTop).rank;\n      node.maxRank = g.node(node.borderBottom).rank;\n      maxRank = _.max(maxRank, node.maxRank);\n    }\n  });\n  g.graph().maxRank = maxRank;\n}\n\nfunction removeEdgeLabelProxies(g) {\n  _.each(g.nodes(), function(v) {\n    var node = g.node(v);\n    if (node.dummy === \"edge-proxy\") {\n      g.edge(node.e).labelRank = node.rank;\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction translateGraph(g) {\n  var minX = Number.POSITIVE_INFINITY,\n      maxX = 0,\n      minY = Number.POSITIVE_INFINITY,\n      maxY = 0,\n      graphLabel = g.graph(),\n      marginX = graphLabel.marginx || 0,\n      marginY = graphLabel.marginy || 0;\n\n  function getExtremes(attrs) {\n    var x = attrs.x,\n        y = attrs.y,\n        w = attrs.width,\n        h = attrs.height;\n    minX = Math.min(minX, x - w / 2);\n    maxX = Math.max(maxX, x + w / 2);\n    minY = Math.min(minY, y - h / 2);\n    maxY = Math.max(maxY, y + h / 2);\n  }\n\n  _.each(g.nodes(), function(v) { getExtremes(g.node(v)); });\n  _.each(g.edges(), function(e) {\n    var edge = g.edge(e);\n    if (_.has(edge, \"x\")) {\n      getExtremes(edge);\n    }\n  });\n\n  minX -= marginX;\n  minY -= marginY;\n\n  _.each(g.nodes(), function(v) {\n    var node = g.node(v);\n    node.x -= minX;\n    node.y -= minY;\n  });\n\n  _.each(g.edges(), function(e) {\n    var edge = g.edge(e);\n    _.each(edge.points, function(p) {\n      p.x -= minX;\n      p.y -= minY;\n    });\n    if (_.has(edge, \"x\")) { edge.x -= minX; }\n    if (_.has(edge, \"y\")) { edge.y -= minY; }\n  });\n\n  graphLabel.width = maxX - minX + marginX;\n  graphLabel.height = maxY - minY + marginY;\n}\n\nfunction assignNodeIntersects(g) {\n  _.each(g.edges(), function(e) {\n    var edge = g.edge(e),\n        nodeV = g.node(e.v),\n        nodeW = g.node(e.w),\n        p1, p2;\n    if (!edge.points) {\n      edge.points = [];\n      p1 = nodeW;\n      p2 = nodeV;\n    } else {\n      p1 = edge.points[0];\n      p2 = edge.points[edge.points.length - 1];\n    }\n    edge.points.unshift(util.intersectRect(nodeV, p1));\n    edge.points.push(util.intersectRect(nodeW, p2));\n  });\n}\n\nfunction fixupEdgeLabelCoords(g) {\n  _.each(g.edges(), function(e) {\n    var edge = g.edge(e);\n    if (_.has(edge, \"x\")) {\n      if (edge.labelpos === \"l\" || edge.labelpos === \"r\") {\n        edge.width -= edge.labeloffset;\n      }\n      switch (edge.labelpos) {\n        case \"l\": edge.x -= edge.width / 2 + edge.labeloffset; break;\n        case \"r\": edge.x += edge.width / 2 + edge.labeloffset; break;\n      }\n    }\n  });\n}\n\nfunction reversePointsForReversedEdges(g) {\n  _.each(g.edges(), function(e) {\n    var edge = g.edge(e);\n    if (edge.reversed) {\n      edge.points.reverse();\n    }\n  });\n}\n\nfunction removeBorderNodes(g) {\n  _.each(g.nodes(), function(v) {\n    if (g.children(v).length) {\n      var node = g.node(v),\n          t = g.node(node.borderTop),\n          b = g.node(node.borderBottom),\n          l = g.node(_.last(node.borderLeft)),\n          r = g.node(_.last(node.borderRight));\n\n      node.width = Math.abs(r.x - l.x);\n      node.height = Math.abs(b.y - t.y);\n      node.x = l.x + node.width / 2;\n      node.y = t.y + node.height / 2;\n    }\n  });\n\n  _.each(g.nodes(), function(v) {\n    if (g.node(v).dummy === \"border\") {\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction removeSelfEdges(g) {\n  _.each(g.edges(), function(e) {\n    if (e.v === e.w) {\n      var node = g.node(e.v);\n      if (!node.selfEdges) {\n        node.selfEdges = [];\n      }\n      node.selfEdges.push({ e: e, label: g.edge(e) });\n      g.removeEdge(e);\n    }\n  });\n}\n\nfunction insertSelfEdges(g) {\n  var layers = util.buildLayerMatrix(g);\n  _.each(layers, function(layer) {\n    var orderShift = 0;\n    _.each(layer, function(v, i) {\n      var node = g.node(v);\n      node.order = i + orderShift;\n      _.each(node.selfEdges, function(selfEdge) {\n        util.addDummyNode(g, \"selfedge\", {\n          width: selfEdge.label.width,\n          height: selfEdge.label.height,\n          rank: node.rank,\n          order: i + (++orderShift),\n          e: selfEdge.e,\n          label: selfEdge.label\n        }, \"_se\");\n      });\n      delete node.selfEdges;\n    });\n  });\n}\n\nfunction positionSelfEdges(g) {\n  _.each(g.nodes(), function(v) {\n    var node = g.node(v);\n    if (node.dummy === \"selfedge\") {\n      var selfNode = g.node(node.e.v),\n          x = selfNode.x + selfNode.width / 2,\n          y = selfNode.y,\n          dx = node.x - x,\n          dy = selfNode.height / 2;\n      g.setEdge(node.e, node.label);\n      g.removeNode(v);\n      node.label.points = [\n        { x: x + 2 * dx / 3, y: y - dy },\n        { x: x + 5 * dx / 6, y: y - dy },\n        { x: x +     dx    , y: y },\n        { x: x + 5 * dx / 6, y: y + dy },\n        { x: x + 2 * dx / 3, y: y + dy },\n      ];\n      node.label.x = node.x;\n      node.label.y = node.y;\n    }\n  });\n}\n\nfunction selectNumberAttrs(obj, attrs) {\n  return _.mapValues(_.pick(obj, attrs), Number);\n}\n\nfunction canonicalize(attrs) {\n  var newAttrs = {};\n  _.each(attrs, function(v, k) {\n    newAttrs[k.toLowerCase()] = v;\n  });\n  return newAttrs;\n}\n\n},{\"./acyclic\":55,\"./add-border-segments\":56,\"./coordinate-system\":57,\"./graphlib\":60,\"./lodash\":63,\"./nesting-graph\":64,\"./normalize\":65,\"./order\":70,\"./parent-dummy-chains\":75,\"./position\":77,\"./rank\":79,\"./util\":82}],63:[function(require,module,exports){\nmodule.exports=require(51)\n},{\"/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/lodash.js\":51,\"lodash\":104}],64:[function(require,module,exports){\nvar _ = require(\"./lodash\"),\n    util = require(\"./util\");\n\nmodule.exports = {\n  run: run,\n  cleanup: cleanup\n};\n\n/*\n * A nesting graph creates dummy nodes for the tops and bottoms of subgraphs,\n * adds appropriate edges to ensure that all cluster nodes are placed between\n * these boundries, and ensures that the graph is connected.\n *\n * In addition we ensure, through the use of the minlen property, that nodes\n * and subgraph border nodes to not end up on the same rank.\n *\n * Preconditions:\n *\n *    1. Input graph is a DAG\n *    2. Nodes in the input graph has a minlen attribute\n *\n * Postconditions:\n *\n *    1. Input graph is connected.\n *    2. Dummy nodes are added for the tops and bottoms of subgraphs.\n *    3. The minlen attribute for nodes is adjusted to ensure nodes do not\n *       get placed on the same rank as subgraph border nodes.\n *\n * The nesting graph idea comes from Sander, \"Layout of Compound Directed\n * Graphs.\"\n */\nfunction run(g) {\n  var root = util.addDummyNode(g, \"root\", {}, \"_root\"),\n      depths = treeDepths(g),\n      height = _.max(depths) - 1,\n      nodeSep = 2 * height + 1;\n\n  g.graph().nestingRoot = root;\n\n  // Multiply minlen by nodeSep to align nodes on non-border ranks.\n  _.each(g.edges(), function(e) { g.edge(e).minlen *= nodeSep; });\n\n  // Calculate a weight that is sufficient to keep subgraphs vertically compact\n  var weight = sumWeights(g) + 1;\n\n  // Create border nodes and link them up\n  _.each(g.children(), function(child) {\n    dfs(g, root, nodeSep, weight, height, depths, child);\n  });\n\n  // Save the multiplier for node layers for later removal of empty border\n  // layers.\n  g.graph().nodeRankFactor = nodeSep;\n}\n\nfunction dfs(g, root, nodeSep, weight, height, depths, v) {\n  var children = g.children(v);\n  if (!children.length) {\n    if (v !== root) {\n      g.setEdge(root, v, { weight: 0, minlen: nodeSep });\n    }\n    return;\n  }\n\n  var top = util.addBorderNode(g, \"_bt\"),\n      bottom = util.addBorderNode(g, \"_bb\"),\n      label = g.node(v);\n\n  g.setParent(top, v);\n  label.borderTop = top;\n  g.setParent(bottom, v);\n  label.borderBottom = bottom;\n\n  _.each(children, function(child) {\n    dfs(g, root, nodeSep, weight, height, depths, child);\n\n    var childNode = g.node(child),\n        childTop = childNode.borderTop ? childNode.borderTop : child,\n        childBottom = childNode.borderBottom ? childNode.borderBottom : child,\n        thisWeight = childNode.borderTop ? weight : 2 * weight,\n        minlen = childTop !== childBottom ? 1 : height - depths[v] + 1;\n\n    g.setEdge(top, childTop, {\n      weight: thisWeight,\n      minlen: minlen,\n      nestingEdge: true\n    });\n\n    g.setEdge(childBottom, bottom, {\n      weight: thisWeight,\n      minlen: minlen,\n      nestingEdge: true\n    });\n  });\n\n  if (!g.parent(v)) {\n    g.setEdge(root, top, { weight: 0, minlen: height + depths[v] });\n  }\n}\n\nfunction treeDepths(g) {\n  var depths = {};\n  function dfs(v, depth) {\n    var children = g.children(v);\n    if (children && children.length) {\n      _.each(children, function(child) {\n        dfs(child, depth + 1);\n      });\n    }\n    depths[v] = depth;\n  }\n  _.each(g.children(), function(v) { dfs(v, 1); });\n  return depths;\n}\n\nfunction sumWeights(g) {\n  return _.reduce(g.edges(), function(acc, e) {\n    return acc + g.edge(e).weight;\n  }, 0);\n}\n\nfunction cleanup(g) {\n  var graphLabel = g.graph();\n  g.removeNode(graphLabel.nestingRoot);\n  delete graphLabel.nestingRoot;\n  _.each(g.edges(), function(e) {\n    var edge = g.edge(e);\n    if (edge.nestingEdge) {\n      g.removeEdge(e);\n    }\n  });\n}\n\n},{\"./lodash\":63,\"./util\":82}],65:[function(require,module,exports){\n\"use strict\";\n\nvar _ = require(\"./lodash\"),\n    util = require(\"./util\");\n\nmodule.exports = {\n  run: run,\n  undo: undo\n};\n\n/*\n * Breaks any long edges in the graph into short segments that span 1 layer\n * each. This operation is undoable with the denormalize function.\n *\n * Pre-conditions:\n *\n *    1. The input graph is a DAG.\n *    2. Each node in the graph has a \"rank\" property.\n *\n * Post-condition:\n *\n *    1. All edges in the graph have a length of 1.\n *    2. Dummy nodes are added where edges have been split into segments.\n *    3. The graph is augmented with a \"dummyChains\" attribute which contains\n *       the first dummy in each chain of dummy nodes produced.\n */\nfunction run(g) {\n  g.graph().dummyChains = [];\n  _.each(g.edges(), function(edge) { normalizeEdge(g, edge); });\n}\n\nfunction normalizeEdge(g, e) {\n  var v = e.v,\n      vRank = g.node(v).rank,\n      w = e.w,\n      wRank = g.node(w).rank,\n      name = e.name,\n      edgeLabel = g.edge(e),\n      labelRank = edgeLabel.labelRank;\n\n  if (wRank === vRank + 1) return;\n\n  g.removeEdge(e);\n\n  var dummy, attrs, i;\n  for (i = 0, ++vRank; vRank < wRank; ++i, ++vRank) {\n    edgeLabel.points = [];\n    attrs = {\n      width: 0, height: 0,\n      edgeLabel: edgeLabel, edgeObj: e,\n      rank: vRank\n    };\n    dummy = util.addDummyNode(g, \"edge\", attrs, \"_d\");\n    if (vRank === labelRank) {\n      attrs.width = edgeLabel.width;\n      attrs.height = edgeLabel.height;\n      attrs.dummy = \"edge-label\";\n      attrs.labelpos = edgeLabel.labelpos;\n    }\n    g.setEdge(v, dummy, { weight: edgeLabel.weight }, name);\n    if (i === 0) {\n      g.graph().dummyChains.push(dummy);\n    }\n    v = dummy;\n  }\n\n  g.setEdge(v, w, { weight: edgeLabel.weight }, name);\n}\n\nfunction undo(g) {\n  _.each(g.graph().dummyChains, function(v) {\n    var node = g.node(v),\n        origLabel = node.edgeLabel,\n        w;\n    g.setEdge(node.edgeObj, origLabel);\n    while (node.dummy) {\n      w = g.successors(v)[0];\n      g.removeNode(v);\n      origLabel.points.push({ x: node.x, y: node.y });\n      if (node.dummy === \"edge-label\") {\n        origLabel.x = node.x;\n        origLabel.y = node.y;\n        origLabel.width = node.width;\n        origLabel.height = node.height;\n      }\n      v = w;\n      node = g.node(v);\n    }\n  });\n}\n\n},{\"./lodash\":63,\"./util\":82}],66:[function(require,module,exports){\nvar _ = require(\"../lodash\");\n\nmodule.exports = addSubgraphConstraints;\n\nfunction addSubgraphConstraints(g, cg, vs) {\n  var prev = {},\n      rootPrev;\n\n  _.each(vs, function(v) {\n    var child = g.parent(v),\n        parent,\n        prevChild;\n    while (child) {\n      parent = g.parent(child);\n      if (parent) {\n        prevChild = prev[parent];\n        prev[parent] = child;\n      } else {\n        prevChild = rootPrev;\n        rootPrev = child;\n      }\n      if (prevChild && prevChild !== child) {\n        cg.setEdge(prevChild, child);\n        return;\n      }\n      child = parent;\n    }\n  });\n\n  /*\n  function dfs(v) {\n    var children = v ? g.children(v) : g.children();\n    if (children.length) {\n      var min = Number.POSITIVE_INFINITY,\n          subgraphs = [];\n      _.each(children, function(child) {\n        var childMin = dfs(child);\n        if (g.children(child).length) {\n          subgraphs.push({ v: child, order: childMin });\n        }\n        min = Math.min(min, childMin);\n      });\n      _.reduce(_.sortBy(subgraphs, \"order\"), function(prev, curr) {\n        cg.setEdge(prev.v, curr.v);\n        return curr;\n      });\n      return min;\n    }\n    return g.node(v).order;\n  }\n  dfs(undefined);\n  */\n}\n\n},{\"../lodash\":63}],67:[function(require,module,exports){\nvar _ = require(\"../lodash\");\n\nmodule.exports = barycenter;\n\nfunction barycenter(g, movable) {\n  return _.map(movable, function(v) {\n    var inV = g.inEdges(v);\n    if (!inV.length) {\n      return { v: v };\n    } else {\n      var result = _.reduce(inV, function(acc, e) {\n        var edge = g.edge(e),\n            nodeU = g.node(e.v);\n        return {\n          sum: acc.sum + (edge.weight * nodeU.order),\n          weight: acc.weight + edge.weight\n        };\n      }, { sum: 0, weight: 0 });\n\n      return {\n        v: v,\n        barycenter: result.sum / result.weight,\n        weight: result.weight\n      };\n    }\n  });\n}\n\n\n},{\"../lodash\":63}],68:[function(require,module,exports){\nvar _ = require(\"../lodash\"),\n    Graph = require(\"../graphlib\").Graph;\n\nmodule.exports = buildLayerGraph;\n\n/*\n * Constructs a graph that can be used to sort a layer of nodes. The graph will\n * contain all base and subgraph nodes from the request layer in their original\n * hierarchy and any edges that are incident on these nodes and are of the type\n * requested by the \"relationship\" parameter.\n *\n * Nodes from the requested rank that do not have parents are assigned a root\n * node in the output graph, which is set in the root graph attribute. This\n * makes it easy to walk the hierarchy of movable nodes during ordering.\n *\n * Pre-conditions:\n *\n *    1. Input graph is a DAG\n *    2. Base nodes in the input graph have a rank attribute\n *    3. Subgraph nodes in the input graph has minRank and maxRank attributes\n *    4. Edges have an assigned weight\n *\n * Post-conditions:\n *\n *    1. Output graph has all nodes in the movable rank with preserved\n *       hierarchy.\n *    2. Root nodes in the movable layer are made children of the node\n *       indicated by the root attribute of the graph.\n *    3. Non-movable nodes incident on movable nodes, selected by the\n *       relationship parameter, are included in the graph (without hierarchy).\n *    4. Edges incident on movable nodes, selected by the relationship\n *       parameter, are added to the output graph.\n *    5. The weights for copied edges are aggregated as need, since the output\n *       graph is not a multi-graph.\n */\nfunction buildLayerGraph(g, rank, relationship) {\n  var root = createRootNode(g),\n      result = new Graph({ compound: true }).setGraph({ root: root })\n                  .setDefaultNodeLabel(function(v) { return g.node(v); });\n\n  _.each(g.nodes(), function(v) {\n    var node = g.node(v),\n        parent = g.parent(v);\n\n    if (node.rank === rank || node.minRank <= rank && rank <= node.maxRank) {\n      result.setNode(v);\n      result.setParent(v, parent || root);\n\n      // This assumes we have only short edges!\n      _.each(g[relationship](v), function(e) {\n        var u = e.v === v ? e.w : e.v,\n            edge = result.edge(u, v),\n            weight = !_.isUndefined(edge) ? edge.weight : 0;\n        result.setEdge(u, v, { weight: g.edge(e).weight + weight });\n      });\n\n      if (_.has(node, \"minRank\")) {\n        result.setNode(v, {\n          borderLeft: node.borderLeft[rank],\n          borderRight: node.borderRight[rank]\n        });\n      }\n    }\n  });\n\n  return result;\n}\n\nfunction createRootNode(g) {\n  var v;\n  while (g.hasNode((v = _.uniqueId(\"_root\"))));\n  return v;\n}\n\n},{\"../graphlib\":60,\"../lodash\":63}],69:[function(require,module,exports){\n\"use strict\";\n\nvar _ = require(\"../lodash\");\n\nmodule.exports = crossCount;\n\n/*\n * A function that takes a layering (an array of layers, each with an array of\n * ordererd nodes) and a graph and returns a weighted crossing count.\n *\n * Pre-conditions:\n *\n *    1. Input graph must be simple (not a multigraph), directed, and include\n *       only simple edges.\n *    2. Edges in the input graph must have assigned weights.\n *\n * Post-conditions:\n *\n *    1. The graph and layering matrix are left unchanged.\n *\n * This algorithm is derived from Barth, et al., \"Bilayer Cross Counting.\"\n */\nfunction crossCount(g, layering) {\n  var cc = 0;\n  for (var i = 1; i < layering.length; ++i) {\n    cc += twoLayerCrossCount(g, layering[i-1], layering[i]);\n  }\n  return cc;\n}\n\nfunction twoLayerCrossCount(g, northLayer, southLayer) {\n  // Sort all of the edges between the north and south layers by their position\n  // in the north layer and then the south. Map these edges to the position of\n  // their head in the south layer.\n  var southPos = _.zipObject(southLayer,\n                             _.map(southLayer, function (v, i) { return i; }));\n  var southEntries = _.flatten(_.map(northLayer, function(v) {\n    return _.chain(g.outEdges(v))\n            .map(function(e) {\n              return { pos: southPos[e.w], weight: g.edge(e).weight };\n            })\n            .sortBy(\"pos\")\n            .value();\n  }), true);\n\n  // Build the accumulator tree\n  var firstIndex = 1;\n  while (firstIndex < southLayer.length) firstIndex <<= 1;\n  var treeSize = 2 * firstIndex - 1;\n  firstIndex -= 1;\n  var tree = _.map(new Array(treeSize), function() { return 0; });\n\n  // Calculate the weighted crossings\n  var cc = 0;\n  _.each(southEntries.forEach(function(entry) {\n    var index = entry.pos + firstIndex;\n    tree[index] += entry.weight;\n    var weightSum = 0;\n    while (index > 0) {\n      if (index % 2) {\n        weightSum += tree[index + 1];\n      }\n      index = (index - 1) >> 1;\n      tree[index] += entry.weight;\n    }\n    cc += entry.weight * weightSum;\n  }));\n\n  return cc;\n}\n\n},{\"../lodash\":63}],70:[function(require,module,exports){\n\"use strict\";\n\nvar _ = require(\"../lodash\"),\n    initOrder = require(\"./init-order\"),\n    crossCount = require(\"./cross-count\"),\n    sortSubgraph = require(\"./sort-subgraph\"),\n    buildLayerGraph = require(\"./build-layer-graph\"),\n    addSubgraphConstraints = require(\"./add-subgraph-constraints\"),\n    Graph = require(\"../graphlib\").Graph,\n    util = require(\"../util\");\n\nmodule.exports = order;\n\n/*\n * Applies heuristics to minimize edge crossings in the graph and sets the best\n * order solution as an order attribute on each node.\n *\n * Pre-conditions:\n *\n *    1. Graph must be DAG\n *    2. Graph nodes must be objects with a \"rank\" attribute\n *    3. Graph edges must have the \"weight\" attribute\n *\n * Post-conditions:\n *\n *    1. Graph nodes will have an \"order\" attribute based on the results of the\n *       algorithm.\n */\nfunction order(g) {\n  var maxRank = util.maxRank(g),\n      downLayerGraphs = buildLayerGraphs(g, _.range(1, maxRank + 1), \"inEdges\"),\n      upLayerGraphs = buildLayerGraphs(g, _.range(maxRank - 1, -1, -1), \"outEdges\");\n\n  var layering = initOrder(g);\n  assignOrder(g, layering);\n\n  var bestCC = Number.POSITIVE_INFINITY,\n      best;\n\n  for (var i = 0, lastBest = 0; lastBest < 4; ++i, ++lastBest) {\n    sweepLayerGraphs(i % 2 ? downLayerGraphs : upLayerGraphs, i % 4 >= 2);\n\n    layering = util.buildLayerMatrix(g);\n    var cc = crossCount(g, layering);\n    if (cc < bestCC) {\n      lastBest = 0;\n      best = _.cloneDeep(layering);\n      bestCC = cc;\n    }\n  }\n\n  assignOrder(g, best);\n}\n\nfunction buildLayerGraphs(g, ranks, relationship) {\n  return _.map(ranks, function(rank) {\n    return buildLayerGraph(g, rank, relationship);\n  });\n}\n\nfunction sweepLayerGraphs(layerGraphs, biasRight) {\n  var cg = new Graph();\n  _.each(layerGraphs, function(lg) {\n    var root = lg.graph().root;\n    var sorted = sortSubgraph(lg, root, cg, biasRight);\n    _.each(sorted.vs, function(v, i) {\n      lg.node(v).order = i;\n    });\n    addSubgraphConstraints(lg, cg, sorted.vs);\n  });\n}\n\nfunction assignOrder(g, layering) {\n  _.each(layering, function(layer) {\n    _.each(layer, function(v, i) {\n      g.node(v).order = i;\n    });\n  });\n}\n\n},{\"../graphlib\":60,\"../lodash\":63,\"../util\":82,\"./add-subgraph-constraints\":66,\"./build-layer-graph\":68,\"./cross-count\":69,\"./init-order\":71,\"./sort-subgraph\":73}],71:[function(require,module,exports){\n\"use strict\";\n\nvar _ = require(\"../lodash\");\n\nmodule.exports = initOrder;\n\n/*\n * Assigns an initial order value for each node by performing a DFS search\n * starting from nodes in the first rank. Nodes are assigned an order in their\n * rank as they are first visited.\n *\n * This approach comes from Gansner, et al., \"A Technique for Drawing Directed\n * Graphs.\"\n *\n * Returns a layering matrix with an array per layer and each layer sorted by\n * the order of its nodes.\n */\nfunction initOrder(g) {\n  var visited = {},\n      simpleNodes = _.filter(g.nodes(), function(v) {\n        return !g.children(v).length;\n      }),\n      maxRank = _.max(_.map(simpleNodes, function(v) { return g.node(v).rank; })),\n      layers = _.map(_.range(maxRank + 1), function() { return []; });\n\n  function dfs(v) {\n    if (_.has(visited, v)) return;\n    visited[v] = true;\n    var node = g.node(v);\n    layers[node.rank].push(v);\n    _.each(g.successors(v), dfs);\n  }\n\n  var orderedVs = _.sortBy(simpleNodes, function(v) { return g.node(v).rank; });\n  _.each(orderedVs, dfs);\n\n  return layers;\n}\n\n},{\"../lodash\":63}],72:[function(require,module,exports){\n\"use strict\";\n\nvar _ = require(\"../lodash\");\n\nmodule.exports = resolveConflicts;\n\n/*\n * Given a list of entries of the form {v, barycenter, weight} and a\n * constraint graph this function will resolve any conflicts between the\n * constraint graph and the barycenters for the entries. If the barycenters for\n * an entry would violate a constraint in the constraint graph then we coalesce\n * the nodes in the conflict into a new node that respects the contraint and\n * aggregates barycenter and weight information.\n *\n * This implementation is based on the description in Forster, \"A Fast and\n * Simple Hueristic for Constrained Two-Level Crossing Reduction,\" thought it\n * differs in some specific details.\n *\n * Pre-conditions:\n *\n *    1. Each entry has the form {v, barycenter, weight}, or if the node has\n *       no barycenter, then {v}.\n *\n * Returns:\n *\n *    A new list of entries of the form {vs, i, barycenter, weight}. The list\n *    `vs` may either be a singleton or it may be an aggregation of nodes\n *    ordered such that they do not violate constraints from the constraint\n *    graph. The property `i` is the lowest original index of any of the\n *    elements in `vs`.\n */\nfunction resolveConflicts(entries, cg) {\n  var mappedEntries = {};\n  _.each(entries, function(entry, i) {\n    var tmp = mappedEntries[entry.v] = {\n      indegree: 0,\n      \"in\": [],\n      out: [],\n      vs: [entry.v],\n      i: i\n    };\n    if (!_.isUndefined(entry.barycenter)) {\n      tmp.barycenter = entry.barycenter;\n      tmp.weight = entry.weight;\n    }\n  });\n\n  _.each(cg.edges(), function(e) {\n    var entryV = mappedEntries[e.v],\n        entryW = mappedEntries[e.w];\n    if (!_.isUndefined(entryV) && !_.isUndefined(entryW)) {\n      entryW.indegree++;\n      entryV.out.push(mappedEntries[e.w]);\n    }\n  });\n\n  var sourceSet = _.filter(mappedEntries, function(entry) {\n    return !entry.indegree;\n  });\n\n  return doResolveConflicts(sourceSet);\n}\n\nfunction doResolveConflicts(sourceSet) {\n  var entries = [];\n\n  function handleIn(vEntry) {\n    return function(uEntry) {\n      if (uEntry.merged) {\n        return;\n      }\n      if (_.isUndefined(uEntry.barycenter) ||\n          _.isUndefined(vEntry.barycenter) ||\n          uEntry.barycenter >= vEntry.barycenter) {\n        mergeEntries(vEntry, uEntry);\n      }\n    };\n  }\n\n  function handleOut(vEntry) {\n    return function(wEntry) {\n      wEntry[\"in\"].push(vEntry);\n      if (--wEntry.indegree === 0) {\n        sourceSet.push(wEntry);\n      }\n    };\n  }\n\n  while (sourceSet.length) {\n    var entry = sourceSet.pop();\n    entries.push(entry);\n    _.each(entry[\"in\"].reverse(), handleIn(entry));\n    _.each(entry.out, handleOut(entry));\n  }\n\n  return _.chain(entries)\n          .filter(function(entry) { return !entry.merged; })\n          .map(function(entry) {\n            return _.pick(entry, [\"vs\", \"i\", \"barycenter\", \"weight\"]);\n          })\n          .value();\n}\n\nfunction mergeEntries(target, source) {\n  var sum = 0,\n      weight = 0;\n\n  if (target.weight) {\n    sum += target.barycenter * target.weight;\n    weight += target.weight;\n  }\n\n  if (source.weight) {\n    sum += source.barycenter * source.weight;\n    weight += source.weight;\n  }\n\n  target.vs = source.vs.concat(target.vs);\n  target.barycenter = sum / weight;\n  target.weight = weight;\n  target.i = Math.min(source.i, target.i);\n  source.merged = true;\n}\n\n},{\"../lodash\":63}],73:[function(require,module,exports){\nvar _ = require(\"../lodash\"),\n    barycenter = require(\"./barycenter\"),\n    resolveConflicts = require(\"./resolve-conflicts\"),\n    sort = require(\"./sort\");\n\nmodule.exports = sortSubgraph;\n\nfunction sortSubgraph(g, v, cg, biasRight) {\n  var movable = g.children(v),\n      node = g.node(v),\n      bl = node ? node.borderLeft : undefined,\n      br = node ? node.borderRight: undefined,\n      subgraphs = {};\n\n  if (bl) {\n    movable = _.filter(movable, function(w) {\n      return w !== bl && w !== br;\n    });\n  }\n\n  var barycenters = barycenter(g, movable);\n  _.each(barycenters, function(entry) {\n    if (g.children(entry.v).length) {\n      var subgraphResult = sortSubgraph(g, entry.v, cg, biasRight);\n      subgraphs[entry.v] = subgraphResult;\n      if (_.has(subgraphResult, \"barycenter\")) {\n        mergeBarycenters(entry, subgraphResult);\n      }\n    }\n  });\n\n  var entries = resolveConflicts(barycenters, cg);\n  expandSubgraphs(entries, subgraphs);\n\n  var result = sort(entries, biasRight);\n\n  if (bl) {\n    result.vs = _.flatten([bl, result.vs, br], true);\n    if (g.predecessors(bl).length) {\n      var blPred = g.node(g.predecessors(bl)[0]),\n          brPred = g.node(g.predecessors(br)[0]);\n      if (!_.has(result, \"barycenter\")) {\n        result.barycenter = 0;\n        result.weight = 0;\n      }\n      result.barycenter = (result.barycenter * result.weight +\n                           blPred.order + brPred.order) / (result.weight + 2);\n      result.weight += 2;\n    }\n  }\n\n  return result;\n}\n\nfunction expandSubgraphs(entries, subgraphs) {\n  _.each(entries, function(entry) {\n    entry.vs = _.flatten(entry.vs.map(function(v) {\n      if (subgraphs[v]) {\n        return subgraphs[v].vs;\n      }\n      return v;\n    }), true);\n  });\n}\n\nfunction mergeBarycenters(target, other) {\n  if (!_.isUndefined(target.barycenter)) {\n    target.barycenter = (target.barycenter * target.weight +\n                         other.barycenter * other.weight) /\n                        (target.weight + other.weight);\n    target.weight += other.weight;\n  } else {\n    target.barycenter = other.barycenter;\n    target.weight = other.weight;\n  }\n}\n\n},{\"../lodash\":63,\"./barycenter\":67,\"./resolve-conflicts\":72,\"./sort\":74}],74:[function(require,module,exports){\nvar _ = require(\"../lodash\"),\n    util = require(\"../util\");\n\nmodule.exports = sort;\n\nfunction sort(entries, biasRight) {\n  var parts = util.partition(entries, function(entry) {\n    return _.has(entry, \"barycenter\");\n  });\n  var sortable = parts.lhs,\n      unsortable = _.sortBy(parts.rhs, function(entry) { return -entry.i; }),\n      vs = [],\n      sum = 0,\n      weight = 0,\n      vsIndex = 0;\n\n  sortable.sort(compareWithBias(!!biasRight));\n\n  vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n\n  _.each(sortable, function (entry) {\n    vsIndex += entry.vs.length;\n    vs.push(entry.vs);\n    sum += entry.barycenter * entry.weight;\n    weight += entry.weight;\n    vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n  });\n\n  var result = { vs: _.flatten(vs, true) };\n  if (weight) {\n    result.barycenter = sum / weight;\n    result.weight = weight;\n  }\n  return result;\n}\n\nfunction consumeUnsortable(vs, unsortable, index) {\n  var last;\n  while (unsortable.length && (last = _.last(unsortable)).i <= index) {\n    unsortable.pop();\n    vs.push(last.vs);\n    index++;\n  }\n  return index;\n}\n\nfunction compareWithBias(bias) {\n  return function(entryV, entryW) {\n    if (entryV.barycenter < entryW.barycenter) {\n      return -1;\n    } else if (entryV.barycenter > entryW.barycenter) {\n      return 1;\n    }\n\n    return !bias ? entryV.i - entryW.i : entryW.i - entryV.i;\n  };\n}\n\n},{\"../lodash\":63,\"../util\":82}],75:[function(require,module,exports){\nvar _ = require(\"./lodash\");\n\nmodule.exports = parentDummyChains;\n\nfunction parentDummyChains(g) {\n  var postorderNums = postorder(g);\n\n  _.each(g.graph().dummyChains, function(v) {\n    var node = g.node(v),\n        edgeObj = node.edgeObj,\n        pathData = findPath(g, postorderNums, edgeObj.v, edgeObj.w),\n        path = pathData.path,\n        lca = pathData.lca,\n        pathIdx = 0,\n        pathV = path[pathIdx],\n        ascending = true;\n\n    while (v !== edgeObj.w) {\n      node = g.node(v);\n\n      if (ascending) {\n        while ((pathV = path[pathIdx]) !== lca &&\n               g.node(pathV).maxRank < node.rank) {\n          pathIdx++;\n        }\n\n        if (pathV === lca) {\n          ascending = false;\n        }\n      }\n\n      if (!ascending) {\n        while (pathIdx < path.length - 1 &&\n               g.node(pathV = path[pathIdx + 1]).minRank <= node.rank) {\n          pathIdx++;\n        }\n        pathV = path[pathIdx];\n      }\n\n      g.setParent(v, pathV);\n      v = g.successors(v)[0];\n    }\n  });\n}\n\n// Find a path from v to w through the lowest common ancestor (LCA). Return the\n// full path and the LCA.\nfunction findPath(g, postorderNums, v, w) {\n  var vPath = [],\n      wPath = [],\n      low = Math.min(postorderNums[v].low, postorderNums[w].low),\n      lim = Math.max(postorderNums[v].lim, postorderNums[w].lim),\n      parent,\n      lca;\n\n  // Traverse up from v to find the LCA\n  parent = v;\n  do {\n    parent = g.parent(parent);\n    vPath.push(parent);\n  } while (parent &&\n           (postorderNums[parent].low > low || lim > postorderNums[parent].lim));\n  lca = parent;\n\n  // Traverse from w to LCA\n  parent = w;\n  while ((parent = g.parent(parent)) !== lca) {\n    wPath.push(parent);\n  }\n\n  return { path: vPath.concat(wPath.reverse()), lca: lca };\n}\n\nfunction postorder(g) {\n  var result = {},\n      lim = 0;\n\n  function dfs(v) {\n    var low = lim;\n    _.each(g.children(v), dfs);\n    result[v] = { low: low, lim: lim++ };\n  }\n  _.each(g.children(), dfs);\n\n  return result;\n}\n\n},{\"./lodash\":63}],76:[function(require,module,exports){\n\"use strict\";\n\nvar _ = require(\"../lodash\"),\n    Graph = require(\"../graphlib\").Graph,\n    util = require(\"../util\");\n\n/*\n * This module provides coordinate assignment based on Brandes and Köpf, \"Fast\n * and Simple Horizontal Coordinate Assignment.\"\n */\n\nmodule.exports = {\n  positionX: positionX,\n  findType1Conflicts: findType1Conflicts,\n  findType2Conflicts: findType2Conflicts,\n  addConflict: addConflict,\n  hasConflict: hasConflict,\n  verticalAlignment: verticalAlignment,\n  horizontalCompaction: horizontalCompaction,\n  alignCoordinates: alignCoordinates,\n  findSmallestWidthAlignment: findSmallestWidthAlignment,\n  balance: balance\n};\n\n/*\n * Marks all edges in the graph with a type-1 conflict with the \"type1Conflict\"\n * property. A type-1 conflict is one where a non-inner segment crosses an\n * inner segment. An inner segment is an edge with both incident nodes marked\n * with the \"dummy\" property.\n *\n * This algorithm scans layer by layer, starting with the second, for type-1\n * conflicts between the current layer and the previous layer. For each layer\n * it scans the nodes from left to right until it reaches one that is incident\n * on an inner segment. It then scans predecessors to determine if they have\n * edges that cross that inner segment. At the end a final scan is done for all\n * nodes on the current rank to see if they cross the last visited inner\n * segment.\n *\n * This algorithm (safely) assumes that a dummy node will only be incident on a\n * single node in the layers being scanned.\n */\nfunction findType1Conflicts(g, layering) {\n  var conflicts = {};\n\n  function visitLayer(prevLayer, layer) {\n    var\n      // last visited node in the previous layer that is incident on an inner\n      // segment.\n      k0 = 0,\n      // Tracks the last node in this layer scanned for crossings with a type-1\n      // segment.\n      scanPos = 0,\n      prevLayerLength = prevLayer.length,\n      lastNode = _.last(layer);\n\n    _.each(layer, function(v, i) {\n      var w = findOtherInnerSegmentNode(g, v),\n          k1 = w ? g.node(w).order : prevLayerLength;\n\n      if (w || v === lastNode) {\n        _.each(layer.slice(scanPos, i +1), function(scanNode) {\n          _.each(g.predecessors(scanNode), function(u) {\n            var uLabel = g.node(u),\n                uPos = uLabel.order;\n            if ((uPos < k0 || k1 < uPos) &&\n                !(uLabel.dummy && g.node(scanNode).dummy)) {\n              addConflict(conflicts, u, scanNode);\n            }\n          });\n        });\n        scanPos = i + 1;\n        k0 = k1;\n      }\n    });\n\n    return layer;\n  }\n\n  _.reduce(layering, visitLayer);\n  return conflicts;\n}\n\nfunction findType2Conflicts(g, layering) {\n  var conflicts = {};\n\n  function scan(south, southPos, southEnd, prevNorthBorder, nextNorthBorder) {\n    var v;\n    _.each(_.range(southPos, southEnd), function(i) {\n      v = south[i];\n      if (g.node(v).dummy) {\n        _.each(g.predecessors(v), function(u) {\n          var uNode = g.node(u);\n          if (uNode.dummy &&\n              (uNode.order < prevNorthBorder || uNode.order > nextNorthBorder)) {\n            addConflict(conflicts, u, v);\n          }\n        });\n      }\n    });\n  }\n\n\n  function visitLayer(north, south) {\n    var prevNorthPos = -1,\n        nextNorthPos,\n        southPos = 0;\n\n    _.each(south, function(v, southLookahead) {\n      if (g.node(v).dummy === \"border\") {\n        var predecessors = g.predecessors(v);\n        if (predecessors.length) {\n          nextNorthPos = g.node(predecessors[0]).order;\n          scan(south, southPos, southLookahead, prevNorthPos, nextNorthPos);\n          southPos = southLookahead;\n          prevNorthPos = nextNorthPos;\n        }\n      }\n      scan(south, southPos, south.length, nextNorthPos, north.length);\n    });\n\n    return south;\n  }\n\n  _.reduce(layering, visitLayer);\n  return conflicts;\n}\n\nfunction findOtherInnerSegmentNode(g, v) {\n  if (g.node(v).dummy) {\n    return _.find(g.predecessors(v), function(u) {\n      return g.node(u).dummy;\n    });\n  }\n}\n\nfunction addConflict(conflicts, v, w) {\n  if (v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n\n  var conflictsV = conflicts[v];\n  if (!conflictsV) {\n    conflicts[v] = conflictsV = {};\n  }\n  conflictsV[w] = true;\n}\n\nfunction hasConflict(conflicts, v, w) {\n  if (v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  return _.has(conflicts[v], w);\n}\n\n/*\n * Try to align nodes into vertical \"blocks\" where possible. This algorithm\n * attempts to align a node with one of its median neighbors. If the edge\n * connecting a neighbor is a type-1 conflict then we ignore that possibility.\n * If a previous node has already formed a block with a node after the node\n * we're trying to form a block with, we also ignore that possibility - our\n * blocks would be split in that scenario.\n */\nfunction verticalAlignment(g, layering, conflicts, neighborFn) {\n  var root = {},\n      align = {},\n      pos = {};\n\n  // We cache the position here based on the layering because the graph and\n  // layering may be out of sync. The layering matrix is manipulated to\n  // generate different extreme alignments.\n  _.each(layering, function(layer) {\n    _.each(layer, function(v, order) {\n      root[v] = v;\n      align[v] = v;\n      pos[v] = order;\n    });\n  });\n\n  _.each(layering, function(layer) {\n    var prevIdx = -1;\n    _.each(layer, function(v) {\n      var ws = neighborFn(v);\n      if (ws.length) {\n        ws = _.sortBy(ws, function(w) { return pos[w]; });\n        var mp = (ws.length - 1) / 2;\n        for (var i = Math.floor(mp), il = Math.ceil(mp); i <= il; ++i) {\n          var w = ws[i];\n          if (align[v] === v &&\n              prevIdx < pos[w] &&\n              !hasConflict(conflicts, v, w)) {\n            align[w] = v;\n            align[v] = root[v] = root[w];\n            prevIdx = pos[w];\n          }\n        }\n      }\n    });\n  });\n\n  return { root: root, align: align };\n}\n\nfunction horizontalCompaction(g, layering, root, align, reverseSep) {\n  // This portion of the algorithm differs from BK due to a number of problems.\n  // Instead of their algorithm we construct a new block graph and do two\n  // sweeps. The first sweep places blocks with the smallest possible\n  // coordinates. The second sweep removes unused space by moving blocks to the\n  // greatest coordinates without violating separation.\n  var xs = {},\n      blockG = buildBlockGraph(g, layering, root, reverseSep);\n\n  // First pass, assign smallest coordinates via DFS\n  var visited = {};\n  function pass1(v) {\n    if (!_.has(visited, v)) {\n      visited[v] = true;\n      xs[v] = _.reduce(blockG.inEdges(v), function(max, e) {\n        pass1(e.v);\n        return Math.max(max, xs[e.v] + blockG.edge(e));\n      }, 0);\n    }\n  }\n  _.each(blockG.nodes(), pass1);\n\n  var borderType = reverseSep ? \"borderLeft\" : \"borderRight\";\n  function pass2(v) {\n    if (visited[v] !== 2) {\n      visited[v]++;\n      var node = g.node(v);\n      var min = _.reduce(blockG.outEdges(v), function(min, e) {\n        pass2(e.w);\n        return Math.min(min, xs[e.w] - blockG.edge(e));\n      }, Number.POSITIVE_INFINITY);\n      if (min !== Number.POSITIVE_INFINITY && node.borderType !== borderType) {\n        xs[v] = Math.max(xs[v], min);\n      }\n    }\n  }\n  _.each(blockG.nodes(), pass2);\n\n  // Assign x coordinates to all nodes\n  _.each(align, function(v) {\n    xs[v] = xs[root[v]];\n  });\n\n  return xs;\n}\n\n\nfunction buildBlockGraph(g, layering, root, reverseSep) {\n  var blockGraph = new Graph(),\n      graphLabel = g.graph(),\n      sepFn = sep(graphLabel.nodesep, graphLabel.edgesep, reverseSep);\n\n  _.each(layering, function(layer) {\n    var u;\n    _.each(layer, function(v) {\n      var vRoot = root[v];\n      blockGraph.setNode(vRoot);\n      if (u) {\n        var uRoot = root[u],\n            prevMax = blockGraph.edge(uRoot, vRoot);\n        blockGraph.setEdge(uRoot, vRoot, Math.max(sepFn(g, v, u), prevMax || 0));\n      }\n      u = v;\n    });\n  });\n\n  return blockGraph;\n}\n\n/*\n * Returns the alignment that has the smallest width of the given alignments.\n */\nfunction findSmallestWidthAlignment(g, xss) {\n  return _.min(xss, function(xs) {\n    var min = _.min(xs, function(x, v) { return x - width(g, v) / 2; }),\n        max = _.max(xs, function(x, v) { return x + width(g, v) / 2; });\n    return max - min;\n  });\n}\n\n/*\n * Align the coordinates of each of the layout alignments such that\n * left-biased alignments have their minimum coordinate at the same point as\n * the minimum coordinate of the smallest width alignment and right-biased\n * alignments have their maximum coordinate at the same point as the maximum\n * coordinate of the smallest width alignment.\n */\nfunction alignCoordinates(xss, alignTo) {\n  var alignToMin = _.min(alignTo),\n      alignToMax = _.max(alignTo);\n\n  _.each([\"u\", \"d\"], function(vert) {\n    _.each([\"l\", \"r\"], function(horiz) {\n      var alignment = vert + horiz,\n          xs = xss[alignment],\n          delta;\n      if (xs === alignTo) return;\n\n      delta = horiz === \"l\" ? alignToMin - _.min(xs) : alignToMax - _.max(xs);\n\n      if (delta) {\n        xss[alignment] = _.mapValues(xs, function(x) { return x + delta; });\n      }\n    });\n  });\n}\n\nfunction balance(xss, align) {\n  return _.mapValues(xss.ul, function(ignore, v) {\n    if (align) {\n      return xss[align.toLowerCase()][v];\n    } else {\n      var xs = _.sortBy(_.pluck(xss, v));\n      return (xs[1] + xs[2]) / 2;\n    }\n  });\n}\n\nfunction positionX(g) {\n  var layering = util.buildLayerMatrix(g),\n      conflicts = _.merge(findType1Conflicts(g, layering),\n                          findType2Conflicts(g, layering));\n\n  var xss = {},\n      adjustedLayering;\n  _.each([\"u\", \"d\"], function(vert) {\n    adjustedLayering = vert === \"u\" ? layering : _.values(layering).reverse();\n    _.each([\"l\", \"r\"], function(horiz) {\n      if (horiz === \"r\") {\n        adjustedLayering = _.map(adjustedLayering, function(inner) {\n          return _.values(inner).reverse();\n        });\n      }\n\n      var neighborFn = _.bind(vert === \"u\" ? g.predecessors : g.successors, g);\n      var align = verticalAlignment(g, adjustedLayering, conflicts, neighborFn);\n      var xs = horizontalCompaction(g, adjustedLayering,\n                                    align.root, align.align,\n                                    horiz === \"r\");\n      if (horiz === \"r\") {\n        xs = _.mapValues(xs, function(x) { return -x; });\n      }\n      xss[vert + horiz] = xs;\n    });\n  });\n\n  var smallestWidth = findSmallestWidthAlignment(g, xss);\n  alignCoordinates(xss, smallestWidth);\n  return balance(xss, g.graph().align);\n}\n\nfunction sep(nodeSep, edgeSep, reverseSep) {\n  return function(g, v, w) {\n    var vLabel = g.node(v),\n        wLabel = g.node(w),\n        sum = 0,\n        delta;\n\n    sum += vLabel.width / 2;\n    if (_.has(vLabel, \"labelpos\")) {\n      switch (vLabel.labelpos.toLowerCase()) {\n        case \"l\": delta = -vLabel.width / 2; break;\n        case \"r\": delta = vLabel.width / 2; break;\n      }\n    }\n    if (delta) {\n      sum += reverseSep ? delta : -delta;\n    }\n    delta = 0;\n\n    sum += (vLabel.dummy ? edgeSep : nodeSep) / 2;\n    sum += (wLabel.dummy ? edgeSep : nodeSep) / 2;\n\n    sum += wLabel.width / 2;\n    if (_.has(wLabel, \"labelpos\")) {\n      switch (wLabel.labelpos.toLowerCase()) {\n        case \"l\": delta = wLabel.width / 2; break;\n        case \"r\": delta = -wLabel.width / 2; break;\n      }\n    }\n    if (delta) {\n      sum += reverseSep ? delta : -delta;\n    }\n    delta = 0;\n\n    return sum;\n  };\n}\n\nfunction width(g, v) {\n  return g.node(v).width;\n}\n\n},{\"../graphlib\":60,\"../lodash\":63,\"../util\":82}],77:[function(require,module,exports){\n\"use strict\";\n\nvar _ = require(\"../lodash\"),\n    util = require(\"../util\"),\n    positionX = require(\"./bk\").positionX;\n\nmodule.exports = position;\n\nfunction position(g) {\n  g = util.asNonCompoundGraph(g);\n\n  positionY(g);\n  _.each(positionX(g), function(x, v) {\n    g.node(v).x = x;\n  });\n}\n\nfunction positionY(g) {\n  var layering = util.buildLayerMatrix(g),\n      rankSep = g.graph().ranksep,\n      prevY = 0;\n  _.each(layering, function(layer) {\n    var maxHeight = _.max(_.map(layer, function(v) { return g.node(v).height; }));\n    _.each(layer, function(v) {\n      g.node(v).y = prevY + maxHeight / 2;\n    });\n    prevY += maxHeight + rankSep;\n  });\n}\n\n\n},{\"../lodash\":63,\"../util\":82,\"./bk\":76}],78:[function(require,module,exports){\n\"use strict\";\n\nvar _ = require(\"../lodash\"),\n    Graph = require(\"../graphlib\").Graph,\n    slack = require(\"./util\").slack;\n\nmodule.exports = feasibleTree;\n\n/*\n * Constructs a spanning tree with tight edges and adjusted the input node's\n * ranks to achieve this. A tight edge is one that is has a length that matches\n * its \"minlen\" attribute.\n *\n * The basic structure for this function is derived from Gansner, et al., \"A\n * Technique for Drawing Directed Graphs.\"\n *\n * Pre-conditions:\n *\n *    1. Graph must be a DAG.\n *    2. Graph must be connected.\n *    3. Graph must have at least one node.\n *    5. Graph nodes must have been previously assigned a \"rank\" property that\n *       respects the \"minlen\" property of incident edges.\n *    6. Graph edges must have a \"minlen\" property.\n *\n * Post-conditions:\n *\n *    - Graph nodes will have their rank adjusted to ensure that all edges are\n *      tight.\n *\n * Returns a tree (undirected graph) that is constructed using only \"tight\"\n * edges.\n */\nfunction feasibleTree(g) {\n  var t = new Graph({ directed: false });\n\n  // Choose arbitrary node from which to start our tree\n  var start = g.nodes()[0],\n      size = g.nodeCount();\n  t.setNode(start, {});\n\n  var edge, delta;\n  while (tightTree(t, g) < size) {\n    edge = findMinSlackEdge(t, g);\n    delta = t.hasNode(edge.v) ? slack(g, edge) : -slack(g, edge);\n    shiftRanks(t, g, delta);\n  }\n\n  return t;\n}\n\n/*\n * Finds a maximal tree of tight edges and returns the number of nodes in the\n * tree.\n */\nfunction tightTree(t, g) {\n  function dfs(v) {\n    _.each(g.nodeEdges(v), function(e) {\n      var edgeV = e.v,\n          w = (v === edgeV) ? e.w : edgeV;\n      if (!t.hasNode(w) && !slack(g, e)) {\n        t.setNode(w, {});\n        t.setEdge(v, w, {});\n        dfs(w);\n      }\n    });\n  }\n\n  _.each(t.nodes(), dfs);\n  return t.nodeCount();\n}\n\n/*\n * Finds the edge with the smallest slack that is incident on tree and returns\n * it.\n */\nfunction findMinSlackEdge(t, g) {\n  return _.min(g.edges(), function(e) {\n    if (t.hasNode(e.v) !== t.hasNode(e.w)) {\n      return slack(g, e);\n    }\n  });\n}\n\nfunction shiftRanks(t, g, delta) {\n  _.each(t.nodes(), function(v) {\n    g.node(v).rank += delta;\n  });\n}\n\n},{\"../graphlib\":60,\"../lodash\":63,\"./util\":81}],79:[function(require,module,exports){\n\"use strict\";\n\nvar rankUtil = require(\"./util\"),\n    longestPath = rankUtil.longestPath,\n    feasibleTree = require(\"./feasible-tree\"),\n    networkSimplex = require(\"./network-simplex\");\n\nmodule.exports = rank;\n\n/*\n * Assigns a rank to each node in the input graph that respects the \"minlen\"\n * constraint specified on edges between nodes.\n *\n * This basic structure is derived from Gansner, et al., \"A Technique for\n * Drawing Directed Graphs.\"\n *\n * Pre-conditions:\n *\n *    1. Graph must be a connected DAG\n *    2. Graph nodes must be objects\n *    3. Graph edges must have \"weight\" and \"minlen\" attributes\n *\n * Post-conditions:\n *\n *    1. Graph nodes will have a \"rank\" attribute based on the results of the\n *       algorithm. Ranks can start at any index (including negative), we'll\n *       fix them up later.\n */\nfunction rank(g) {\n  switch(g.graph().ranker) {\n    case \"network-simplex\": networkSimplexRanker(g); break;\n    case \"tight-tree\": tightTreeRanker(g); break;\n    case \"longest-path\": longestPathRanker(g); break;\n    default: networkSimplexRanker(g);\n  }\n}\n\n// A fast and simple ranker, but results are far from optimal.\nvar longestPathRanker = longestPath;\n\nfunction tightTreeRanker(g) {\n  longestPath(g);\n  feasibleTree(g);\n}\n\nfunction networkSimplexRanker(g) {\n  networkSimplex(g);\n}\n\n},{\"./feasible-tree\":78,\"./network-simplex\":80,\"./util\":81}],80:[function(require,module,exports){\n\"use strict\";\n\nvar _ = require(\"../lodash\"),\n    feasibleTree = require(\"./feasible-tree\"),\n    slack = require(\"./util\").slack,\n    initRank = require(\"./util\").longestPath,\n    preorder = require(\"../graphlib\").alg.preorder,\n    postorder = require(\"../graphlib\").alg.postorder,\n    simplify = require(\"../util\").simplify;\n\nmodule.exports = networkSimplex;\n\n// Expose some internals for testing purposes\nnetworkSimplex.initLowLimValues = initLowLimValues;\nnetworkSimplex.initCutValues = initCutValues;\nnetworkSimplex.calcCutValue = calcCutValue;\nnetworkSimplex.leaveEdge = leaveEdge;\nnetworkSimplex.enterEdge = enterEdge;\nnetworkSimplex.exchangeEdges = exchangeEdges;\n\n/*\n * The network simplex algorithm assigns ranks to each node in the input graph\n * and iteratively improves the ranking to reduce the length of edges.\n *\n * Preconditions:\n *\n *    1. The input graph must be a DAG.\n *    2. All nodes in the graph must have an object value.\n *    3. All edges in the graph must have \"minlen\" and \"weight\" attributes.\n *\n * Postconditions:\n *\n *    1. All nodes in the graph will have an assigned \"rank\" attribute that has\n *       been optimized by the network simplex algorithm. Ranks start at 0.\n *\n *\n * A rough sketch of the algorithm is as follows:\n *\n *    1. Assign initial ranks to each node. We use the longest path algorithm,\n *       which assigns ranks to the lowest position possible. In general this\n *       leads to very wide bottom ranks and unnecessarily long edges.\n *    2. Construct a feasible tight tree. A tight tree is one such that all\n *       edges in the tree have no slack (difference between length of edge\n *       and minlen for the edge). This by itself greatly improves the assigned\n *       rankings by shorting edges.\n *    3. Iteratively find edges that have negative cut values. Generally a\n *       negative cut value indicates that the edge could be removed and a new\n *       tree edge could be added to produce a more compact graph.\n *\n * Much of the algorithms here are derived from Gansner, et al., \"A Technique\n * for Drawing Directed Graphs.\" The structure of the file roughly follows the\n * structure of the overall algorithm.\n */\nfunction networkSimplex(g) {\n  g = simplify(g);\n  initRank(g);\n  var t = feasibleTree(g);\n  initLowLimValues(t);\n  initCutValues(t, g);\n\n  var e, f;\n  while ((e = leaveEdge(t))) {\n    f = enterEdge(t, g, e);\n    exchangeEdges(t, g, e, f);\n  }\n}\n\n/*\n * Initializes cut values for all edges in the tree.\n */\nfunction initCutValues(t, g) {\n  var vs = postorder(t, t.nodes());\n  vs = vs.slice(0, vs.length - 1);\n  _.each(vs, function(v) {\n    assignCutValue(t, g, v);\n  });\n}\n\nfunction assignCutValue(t, g, child) {\n  var childLab = t.node(child),\n      parent = childLab.parent;\n  t.edge(child, parent).cutvalue = calcCutValue(t, g, child);\n}\n\n/*\n * Given the tight tree, its graph, and a child in the graph calculate and\n * return the cut value for the edge between the child and its parent.\n */\nfunction calcCutValue(t, g, child) {\n  var childLab = t.node(child),\n      parent = childLab.parent,\n      // True if the child is on the tail end of the edge in the directed graph\n      childIsTail = true,\n      // The graph's view of the tree edge we're inspecting\n      graphEdge = g.edge(child, parent),\n      // The accumulated cut value for the edge between this node and its parent\n      cutValue = 0;\n\n  if (!graphEdge) {\n    childIsTail = false;\n    graphEdge = g.edge(parent, child);\n  }\n\n  cutValue = graphEdge.weight;\n\n  _.each(g.nodeEdges(child), function(e) {\n    var isOutEdge = e.v === child,\n        other = isOutEdge ? e.w : e.v;\n\n    if (other !== parent) {\n      var pointsToHead = isOutEdge === childIsTail,\n          otherWeight = g.edge(e).weight;\n\n      cutValue += pointsToHead ? otherWeight : -otherWeight;\n      if (isTreeEdge(t, child, other)) {\n        var otherCutValue = t.edge(child, other).cutvalue;\n        cutValue += pointsToHead ? -otherCutValue : otherCutValue;\n      }\n    }\n  });\n\n  return cutValue;\n}\n\nfunction initLowLimValues(tree, root) {\n  if (arguments.length < 2) {\n    root = tree.nodes()[0];\n  }\n  dfsAssignLowLim(tree, {}, 1, root);\n}\n\nfunction dfsAssignLowLim(tree, visited, nextLim, v, parent) {\n  var low = nextLim,\n      label = tree.node(v);\n\n  visited[v] = true;\n  _.each(tree.neighbors(v), function(w) {\n    if (!_.has(visited, w)) {\n      nextLim = dfsAssignLowLim(tree, visited, nextLim, w, v);\n    }\n  });\n\n  label.low = low;\n  label.lim = nextLim++;\n  if (parent) {\n    label.parent = parent;\n  } else {\n    // TODO should be able to remove this when we incrementally update low lim\n    delete label.parent;\n  }\n\n  return nextLim;\n}\n\nfunction leaveEdge(tree) {\n  return _.find(tree.edges(), function(e) {\n    return tree.edge(e).cutvalue < 0;\n  });\n}\n\nfunction enterEdge(t, g, edge) {\n  var v = edge.v,\n      w = edge.w;\n\n  // For the rest of this function we assume that v is the tail and w is the\n  // head, so if we don't have this edge in the graph we should flip it to\n  // match the correct orientation.\n  if (!g.hasEdge(v, w)) {\n    v = edge.w;\n    w = edge.v;\n  }\n\n  var vLabel = t.node(v),\n      wLabel = t.node(w),\n      tailLabel = vLabel,\n      flip = false;\n\n  // If the root is in the tail of the edge then we need to flip the logic that\n  // checks for the head and tail nodes in the candidates function below.\n  if (vLabel.lim > wLabel.lim) {\n    tailLabel = wLabel;\n    flip = true;\n  }\n\n  var candidates = _.filter(g.edges(), function(edge) {\n    return flip === isDescendant(t, t.node(edge.v), tailLabel) &&\n           flip !== isDescendant(t, t.node(edge.w), tailLabel);\n  });\n\n  return _.min(candidates, function(edge) { return slack(g, edge); });\n}\n\nfunction exchangeEdges(t, g, e, f) {\n  var v = e.v,\n      w = e.w;\n  t.removeEdge(v, w);\n  t.setEdge(f.v, f.w, {});\n  initLowLimValues(t);\n  initCutValues(t, g);\n  updateRanks(t, g);\n}\n\nfunction updateRanks(t, g) {\n  var root = _.find(t.nodes(), function(v) { return !g.node(v).parent; }),\n      vs = preorder(t, root);\n  vs = vs.slice(1);\n  _.each(vs, function(v) {\n    var parent = t.node(v).parent,\n        edge = g.edge(v, parent),\n        flipped = false;\n\n    if (!edge) {\n      edge = g.edge(parent, v);\n      flipped = true;\n    }\n\n    g.node(v).rank = g.node(parent).rank + (flipped ? edge.minlen : -edge.minlen);\n  });\n}\n\n/*\n * Returns true if the edge is in the tree.\n */\nfunction isTreeEdge(tree, u, v) {\n  return tree.hasEdge(u, v);\n}\n\n/*\n * Returns true if the specified node is descendant of the root node per the\n * assigned low and lim attributes in the tree.\n */\nfunction isDescendant(tree, vLabel, rootLabel) {\n  return rootLabel.low <= vLabel.lim && vLabel.lim <= rootLabel.lim;\n}\n\n},{\"../graphlib\":60,\"../lodash\":63,\"../util\":82,\"./feasible-tree\":78,\"./util\":81}],81:[function(require,module,exports){\n\"use strict\";\n\nvar _ = require(\"../lodash\");\n\nmodule.exports = {\n  longestPath: longestPath,\n  slack: slack\n};\n\n/*\n * Initializes ranks for the input graph using the longest path algorithm. This\n * algorithm scales well and is fast in practice, it yields rather poor\n * solutions. Nodes are pushed to the lowest layer possible, leaving the bottom\n * ranks wide and leaving edges longer than necessary. However, due to its\n * speed, this algorithm is good for getting an initial ranking that can be fed\n * into other algorithms.\n *\n * This algorithm does not normalize layers because it will be used by other\n * algorithms in most cases. If using this algorithm directly, be sure to\n * run normalize at the end.\n *\n * Pre-conditions:\n *\n *    1. Input graph is a DAG.\n *    2. Input graph node labels can be assigned properties.\n *\n * Post-conditions:\n *\n *    1. Each node will be assign an (unnormalized) \"rank\" property.\n */\nfunction longestPath(g) {\n  var visited = {};\n\n  function dfs(v) {\n    var label = g.node(v);\n    if (_.has(visited, v)) {\n      return label.rank;\n    }\n    visited[v] = true;\n\n    var rank = _.min(_.map(g.outEdges(v), function(e) {\n      return dfs(e.w) - g.edge(e).minlen;\n    }));\n\n    if (rank === Number.POSITIVE_INFINITY) {\n      rank = 0;\n    }\n\n    return (label.rank = rank);\n  }\n\n  _.each(g.sources(), dfs);\n}\n\n/*\n * Returns the amount of slack for the given edge. The slack is defined as the\n * difference between the length of the edge and its minimum length.\n */\nfunction slack(g, e) {\n  return g.node(e.w).rank - g.node(e.v).rank - g.edge(e).minlen;\n}\n\n},{\"../lodash\":63}],82:[function(require,module,exports){\n\"use strict\";\n\nvar _ = require(\"./lodash\"),\n    Graph = require(\"./graphlib\").Graph;\n\nmodule.exports = {\n  addDummyNode: addDummyNode,\n  simplify: simplify,\n  asNonCompoundGraph: asNonCompoundGraph,\n  successorWeights: successorWeights,\n  predecessorWeights: predecessorWeights,\n  intersectRect: intersectRect,\n  buildLayerMatrix: buildLayerMatrix,\n  normalizeRanks: normalizeRanks,\n  removeEmptyRanks: removeEmptyRanks,\n  addBorderNode: addBorderNode,\n  maxRank: maxRank,\n  partition: partition,\n  time: time,\n  notime: notime\n};\n\n/*\n * Adds a dummy node to the graph and return v.\n */\nfunction addDummyNode(g, type, attrs, name) {\n  var v;\n  do {\n    v = _.uniqueId(name);\n  } while (g.hasNode(v));\n\n  attrs.dummy = type;\n  g.setNode(v, attrs);\n  return v;\n}\n\n/*\n * Returns a new graph with only simple edges. Handles aggregation of data\n * associated with multi-edges.\n */\nfunction simplify(g) {\n  var simplified = new Graph().setGraph(g.graph());\n  _.each(g.nodes(), function(v) { simplified.setNode(v, g.node(v)); });\n  _.each(g.edges(), function(e) {\n    var simpleLabel = simplified.edge(e.v, e.w) || { weight: 0, minlen: 1 },\n        label = g.edge(e);\n    simplified.setEdge(e.v, e.w, {\n      weight: simpleLabel.weight + label.weight,\n      minlen: Math.max(simpleLabel.minlen, label.minlen)\n    });\n  });\n  return simplified;\n}\n\nfunction asNonCompoundGraph(g) {\n  var simplified = new Graph({ multigraph: g.isMultigraph() }).setGraph(g.graph());\n  _.each(g.nodes(), function(v) {\n    if (!g.children(v).length) {\n      simplified.setNode(v, g.node(v));\n    }\n  });\n  _.each(g.edges(), function(e) {\n    simplified.setEdge(e, g.edge(e));\n  });\n  return simplified;\n}\n\nfunction successorWeights(g) {\n  var weightMap = _.map(g.nodes(), function(v) {\n    var sucs = {};\n    _.each(g.outEdges(v), function(e) {\n      sucs[e.w] = (sucs[e.w] || 0) + g.edge(e).weight;\n    });\n    return sucs;\n  });\n  return _.zipObject(g.nodes(), weightMap);\n}\n\nfunction predecessorWeights(g) {\n  var weightMap = _.map(g.nodes(), function(v) {\n    var preds = {};\n    _.each(g.inEdges(v), function(e) {\n      preds[e.v] = (preds[e.v] || 0) + g.edge(e).weight;\n    });\n    return preds;\n  });\n  return _.zipObject(g.nodes(), weightMap);\n}\n\n/*\n * Finds where a line starting at point ({x, y}) would intersect a rectangle\n * ({x, y, width, height}) if it were pointing at the rectangle's center.\n */\nfunction intersectRect(rect, point) {\n  var x = rect.x;\n  var y = rect.y;\n\n  // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = rect.width / 2;\n  var h = rect.height / 2;\n\n  if (!dx && !dy) {\n    throw new Error(\"Not possible to find intersection inside of the rectangle\");\n  }\n\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = h * dx / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = w * dy / dx;\n  }\n\n  return { x: x + sx, y: y + sy };\n}\n\n/*\n * Given a DAG with each node assigned \"rank\" and \"order\" properties, this\n * function will produce a matrix with the ids of each node.\n */\nfunction buildLayerMatrix(g) {\n  var layering = _.map(_.range(maxRank(g) + 1), function() { return []; });\n  _.each(g.nodes(), function(v) {\n    var node = g.node(v),\n        rank = node.rank;\n    if (!_.isUndefined(rank)) {\n      layering[rank][node.order] = v;\n    }\n  });\n  return layering;\n}\n\n/*\n * Adjusts the ranks for all nodes in the graph such that all nodes v have\n * rank(v) >= 0 and at least one node w has rank(w) = 0.\n */\nfunction normalizeRanks(g) {\n  var min = _.min(_.map(g.nodes(), function(v) { return g.node(v).rank; }));\n  _.each(g.nodes(), function(v) {\n    var node = g.node(v);\n    if (_.has(node, \"rank\")) {\n      node.rank -= min;\n    }\n  });\n}\n\nfunction removeEmptyRanks(g) {\n  // Ranks may not start at 0, so we need to offset them\n  var offset = _.min(_.map(g.nodes(), function(v) { return g.node(v).rank; }));\n\n  var layers = [];\n  _.each(g.nodes(), function(v) {\n    var rank = g.node(v).rank - offset;\n    if (!layers[rank]) {\n      layers[rank] = [];\n    }\n    layers[rank].push(v);\n  });\n\n  var delta = 0,\n      nodeRankFactor = g.graph().nodeRankFactor;\n  _.each(layers, function(vs, i) {\n    if (_.isUndefined(vs) && i % nodeRankFactor !== 0) {\n      --delta;\n    } else if (delta) {\n      _.each(vs, function(v) { g.node(v).rank += delta; });\n    }\n  });\n}\n\nfunction addBorderNode(g, prefix, rank, order) {\n  var node = {\n    width: 0,\n    height: 0\n  };\n  if (arguments.length >= 4) {\n    node.rank = rank;\n    node.order = order;\n  }\n  return addDummyNode(g, \"border\", node, prefix);\n}\n\nfunction maxRank(g) {\n  return _.max(_.map(g.nodes(), function(v) {\n    var rank = g.node(v).rank;\n    if (!_.isUndefined(rank)) {\n      return rank;\n    }\n  }));\n}\n\n/*\n * Partition a collection into two groups: `lhs` and `rhs`. If the supplied\n * function returns true for an entry it goes into `lhs`. Otherwise it goes\n * into `rhs.\n */\nfunction partition(collection, fn) {\n  var result = { lhs: [], rhs: [] };\n  _.each(collection, function(value) {\n    if (fn(value)) {\n      result.lhs.push(value);\n    } else {\n      result.rhs.push(value);\n    }\n  });\n  return result;\n}\n\n/*\n * Returns a new function that wraps `fn` with a timer. The wrapper logs the\n * time it takes to execute the function.\n */\nfunction time(name, fn) {\n  var start = _.now();\n  try {\n    return fn();\n  } finally {\n    console.log(name + \" time: \" + (_.now() - start) + \"ms\");\n  }\n}\n\nfunction notime(name, fn) {\n  return fn();\n}\n\n},{\"./graphlib\":60,\"./lodash\":63}],83:[function(require,module,exports){\nmodule.exports = \"0.7.4\";\n\n},{}],84:[function(require,module,exports){\nmodule.exports=require(33)\n},{\"./lib\":100,\"./lib/alg\":91,\"./lib/json\":101,\"/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/index.js\":33}],85:[function(require,module,exports){\nmodule.exports=require(34)\n},{\"../lodash\":102,\"/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/alg/components.js\":34}],86:[function(require,module,exports){\nmodule.exports=require(35)\n},{\"../lodash\":102,\"/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/alg/dfs.js\":35}],87:[function(require,module,exports){\nmodule.exports=require(36)\n},{\"../lodash\":102,\"./dijkstra\":88,\"/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/alg/dijkstra-all.js\":36}],88:[function(require,module,exports){\nmodule.exports=require(37)\n},{\"../data/priority-queue\":98,\"../lodash\":102,\"/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/alg/dijkstra.js\":37}],89:[function(require,module,exports){\nmodule.exports=require(38)\n},{\"../lodash\":102,\"./tarjan\":96,\"/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/alg/find-cycles.js\":38}],90:[function(require,module,exports){\nmodule.exports=require(39)\n},{\"../lodash\":102,\"/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/alg/floyd-warshall.js\":39}],91:[function(require,module,exports){\nmodule.exports=require(40)\n},{\"./components\":85,\"./dijkstra\":88,\"./dijkstra-all\":87,\"./find-cycles\":89,\"./floyd-warshall\":90,\"./is-acyclic\":92,\"./postorder\":93,\"./preorder\":94,\"./prim\":95,\"./tarjan\":96,\"./topsort\":97,\"/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/alg/index.js\":40}],92:[function(require,module,exports){\nmodule.exports=require(41)\n},{\"./topsort\":97,\"/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/alg/is-acyclic.js\":41}],93:[function(require,module,exports){\nmodule.exports=require(42)\n},{\"./dfs\":86,\"/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/alg/postorder.js\":42}],94:[function(require,module,exports){\nmodule.exports=require(43)\n},{\"./dfs\":86,\"/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/alg/preorder.js\":43}],95:[function(require,module,exports){\nmodule.exports=require(44)\n},{\"../data/priority-queue\":98,\"../graph\":99,\"../lodash\":102,\"/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/alg/prim.js\":44}],96:[function(require,module,exports){\nmodule.exports=require(45)\n},{\"../lodash\":102,\"/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/alg/tarjan.js\":45}],97:[function(require,module,exports){\nmodule.exports=require(46)\n},{\"../lodash\":102,\"/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/alg/topsort.js\":46}],98:[function(require,module,exports){\nmodule.exports=require(47)\n},{\"../lodash\":102,\"/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/data/priority-queue.js\":47}],99:[function(require,module,exports){\nmodule.exports=require(48)\n},{\"./lodash\":102,\"/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/graph.js\":48}],100:[function(require,module,exports){\nmodule.exports=require(49)\n},{\"./graph\":99,\"./version\":103,\"/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/index.js\":49}],101:[function(require,module,exports){\nmodule.exports=require(50)\n},{\"./graph\":99,\"./lodash\":102,\"/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/json.js\":50}],102:[function(require,module,exports){\nmodule.exports=require(51)\n},{\"/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/lodash.js\":51,\"lodash\":104}],103:[function(require,module,exports){\nmodule.exports=require(52)\n},{\"/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/graphlib/lib/version.js\":52}],104:[function(require,module,exports){\nmodule.exports=require(53)\n},{\"/Users/knuts/source/GitHub/mermaid/mermaid/node_modules/dagre-d3/node_modules/lodash/index.js\":53}],105:[function(require,module,exports){\n//! moment.js\n//! version : 2.11.1\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, function () { 'use strict';\n\n    var hookCallback;\n\n    function utils_hooks__hooks () {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback (callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return Object.prototype.toString.call(input) === '[object Array]';\n    }\n\n    function isDate(input) {\n        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n    }\n\n    function map(arr, fn) {\n        var res = [], i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function create_utc__createUTC (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty           : false,\n            unusedTokens    : [],\n            unusedInput     : [],\n            overflow        : -2,\n            charsLeftOver   : 0,\n            nullInput       : false,\n            invalidMonth    : null,\n            invalidFormat   : false,\n            userInvalidated : false,\n            iso             : false\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    function valid__isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m);\n            m._isValid = !isNaN(m._d.getTime()) &&\n                flags.overflow < 0 &&\n                !flags.empty &&\n                !flags.invalidMonth &&\n                !flags.invalidWeekday &&\n                !flags.nullInput &&\n                !flags.invalidFormat &&\n                !flags.userInvalidated;\n\n            if (m._strict) {\n                m._isValid = m._isValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n        }\n        return m._isValid;\n    }\n\n    function valid__createInvalid (flags) {\n        var m = create_utc__createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        }\n        else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = utils_hooks__hooks.momentProperties = [];\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i in momentProperties) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    var updateInProgress = false;\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            utils_hooks__hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment (obj) {\n        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n    }\n\n    function absFloor (number) {\n        if (number < 0) {\n            return Math.ceil(number);\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if ((dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    function Locale() {\n    }\n\n    // internal storage for locale config files\n    var locales = {};\n    var globalLocale;\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0, j, next, locale, split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return null;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (!locales[name] && (typeof module !== 'undefined') &&\n                module && module.exports) {\n            try {\n                oldLocale = globalLocale._abbr;\n                require('./locale/' + name);\n                // because defineLocale currently also sets the global locale, we\n                // want to undo that for lazy loaded locales\n                locale_locales__getSetGlobalLocale(oldLocale);\n            } catch (e) { }\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function locale_locales__getSetGlobalLocale (key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = locale_locales__getLocale(key);\n            }\n            else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale (name, values) {\n        if (values !== null) {\n            values.abbr = name;\n            locales[name] = locales[name] || new Locale();\n            locales[name].set(values);\n\n            // backwards compat for now: also set the locale\n            locale_locales__getSetGlobalLocale(name);\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    // returns locale data\n    function locale_locales__getLocale (key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias (unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    function isFunction(input) {\n        return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n    }\n\n    function makeGetSet (unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                get_set__set(this, unit, value);\n                utils_hooks__hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get_set__get(this, unit);\n            }\n        };\n    }\n\n    function get_set__get (mom, unit) {\n        return mom.isValid() ?\n            mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n    }\n\n    function get_set__set (mom, unit, value) {\n        if (mom.isValid()) {\n            mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n        }\n    }\n\n    // MOMENTS\n\n    function getSet (units, value) {\n        var unit;\n        if (typeof units === 'object') {\n            for (unit in units) {\n                this.set(unit, units[unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n    }\n\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\n    var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\n    var formatFunctions = {};\n\n    var formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken (token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(func.apply(this, arguments), token);\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '';\n            for (i = 0; i < length; i++) {\n                output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var match1         = /\\d/;            //       0 - 9\n    var match2         = /\\d\\d/;          //      00 - 99\n    var match3         = /\\d{3}/;         //     000 - 999\n    var match4         = /\\d{4}/;         //    0000 - 9999\n    var match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n    var match1to2      = /\\d\\d?/;         //       0 - 99\n    var match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\n    var match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n    var match1to3      = /\\d{1,3}/;       //       0 - 999\n    var match1to4      = /\\d{1,4}/;       //       0 - 9999\n    var match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\n    var matchUnsigned  = /\\d+/;           //       0 - inf\n    var matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\n    var matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n    var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n    var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n    // any word (or two) characters or numbers including two/three word month in arabic.\n    // includes scottish gaelic two word and hyphenated months\n    var matchWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\n\n\n    var regexes = {};\n\n    function addRegexToken (token, regex, strictRegex) {\n        regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n            return (isStrict && strictRegex) ? strictRegex : regex;\n        };\n    }\n\n    function getParseRegexForToken (token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n            return p1 || p2 || p3 || p4;\n        }));\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken (token, callback) {\n        var i, func = callback;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (typeof callback === 'number') {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        for (i = 0; i < token.length; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken (token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0;\n    var MONTH = 1;\n    var DATE = 2;\n    var HOUR = 3;\n    var MINUTE = 4;\n    var SECOND = 5;\n    var MILLISECOND = 6;\n    var WEEK = 7;\n    var WEEKDAY = 8;\n\n    function daysInMonth(year, month) {\n        return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PARSING\n\n    addRegexToken('M',    match1to2);\n    addRegexToken('MM',   match1to2, match2);\n    addRegexToken('MMM',  function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?/;\n    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n    function localeMonths (m, format) {\n        return isArray(this._months) ? this._months[m.month()] :\n            this._months[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n    function localeMonthsShort (m, format) {\n        return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n            this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n    }\n\n    function localeMonthsParse (monthName, format, strict) {\n        var i, mom, regex;\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = create_utc__createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth (mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        // TODO: Move this out of here!\n        if (typeof value === 'string') {\n            value = mom.localeData().monthsParse(value);\n            // TODO: Another silent failure?\n            if (typeof value !== 'number') {\n                return mom;\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth (value) {\n        if (value != null) {\n            setMonth(this, value);\n            utils_hooks__hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get_set__get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth () {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    var defaultMonthsShortRegex = matchWord;\n    function monthsShortRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            return this._monthsShortStrictRegex && isStrict ?\n                this._monthsShortStrictRegex : this._monthsShortRegex;\n        }\n    }\n\n    var defaultMonthsRegex = matchWord;\n    function monthsRegex (isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            return this._monthsStrictRegex && isStrict ?\n                this._monthsStrictRegex : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse () {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [], longPieces = [], mixedPieces = [],\n            i, mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = create_utc__createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')$', 'i');\n        this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')$', 'i');\n    }\n\n    function checkOverflow (m) {\n        var overflow;\n        var a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                -1;\n\n            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    function warn(msg) {\n        if (utils_hooks__hooks.suppressDeprecationWarnings === false &&\n                (typeof console !==  'undefined') && console.warn) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (firstTime) {\n                warn(msg + '\\nArguments: ' + Array.prototype.slice.call(arguments).join(', ') + '\\n' + (new Error()).stack);\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    utils_hooks__hooks.suppressDeprecationWarnings = false;\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?/;\n    var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?/;\n\n    var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\n    var isoDates = [\n        ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n        ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n        ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n        ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n        ['YYYY-DDD', /\\d{4}-\\d{3}/],\n        ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n        ['YYYYYYMMDD', /[+-]\\d{10}/],\n        ['YYYYMMDD', /\\d{8}/],\n        // YYYYMM is NOT allowed by the standard\n        ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n        ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n        ['YYYYDDD', /\\d{7}/]\n    ];\n\n    // iso time formats and regexes\n    var isoTimes = [\n        ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n        ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n        ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n        ['HH:mm', /\\d\\d:\\d\\d/],\n        ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n        ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n        ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n        ['HHmm', /\\d\\d\\d\\d/],\n        ['HH', /\\d\\d/]\n    ];\n\n    var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n    // date from iso format\n    function configFromISO(config) {\n        var i, l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime, dateFormat, timeFormat, tzFormat;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimes.length; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from iso format or fallback\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n            utils_hooks__hooks.createFromInputFallback(config);\n        }\n    }\n\n    utils_hooks__hooks.createFromInputFallback = deprecate(\n        'moment construction falls back to js Date. This is ' +\n        'discouraged and will be removed in upcoming major ' +\n        'release. Please refer to ' +\n        'https://github.com/moment/moment/issues/1407 for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    function createDate (y, m, d, h, M, s, ms) {\n        //can't just apply() to create a date:\n        //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply\n        var date = new Date(y, m, d, h, M, s, ms);\n\n        //the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n            date.setFullYear(y);\n        }\n        return date;\n    }\n\n    function createUTCDate (y) {\n        var date = new Date(Date.UTC.apply(null, arguments));\n\n        //the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n            date.setUTCFullYear(y);\n        }\n        return date;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? '' + y : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY',   4],       0, 'year');\n    addFormatToken(0, ['YYYYY',  5],       0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PARSING\n\n    addRegexToken('Y',      matchSigned);\n    addRegexToken('YY',     match1to2, match2);\n    addRegexToken('YYYY',   match1to4, match4);\n    addRegexToken('YYYYY',  match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] = input.length === 2 ? utils_hooks__hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = utils_hooks__hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    // HOOKS\n\n    utils_hooks__hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', false);\n\n    function getIsLeapYear () {\n        return isLeapYear(this.year());\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear, resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek, resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(utils_hooks__hooks.now());\n        if (config._useUTC) {\n            return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray (config) {\n        var i, date, input = [], currentDate, yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (config._dayOfYear > daysInYear(yearToUse)) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (config._a[HOUR] === 24 &&\n                config._a[MINUTE] === 0 &&\n                config._a[SECOND] === 0 &&\n                config._a[MILLISECOND] === 0) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(local__createLocal(), 1, 4).year);\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            weekYear = defaults(w.gg, config._a[YEAR], weekOfYear(local__createLocal(), dow, doy).year);\n            week = defaults(w.w, 1);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from begining of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to begining of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // constant that refers to the ISO standard\n    utils_hooks__hooks.ISO_8601 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === utils_hooks__hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i, parsedInput, tokens, token, skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0;\n\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n            // console.log('token', token, 'parsedInput', parsedInput,\n            //         'regex', getParseRegexForToken(token, config));\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                }\n                else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            }\n            else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (getParsingFlags(config).bigHour === true &&\n                config._a[HOUR] <= 12 &&\n                config._a[HOUR] > 0) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n\n    function meridiemFixWrap (locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n\n            scoreToBeat,\n            i,\n            currentScore;\n\n        if (config._f.length === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (!valid__isValid(tempConfig)) {\n                continue;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempConfig;\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i);\n        config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n            return obj && parseInt(obj, 10);\n        });\n\n        configFromArray(config);\n    }\n\n    function createFromConfig (config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig (config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || locale_locales__getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return valid__createInvalid({nullInput: true});\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        } else if (isDate(input)) {\n            config._d = input;\n        } else {\n            configFromInput(config);\n        }\n\n        if (!valid__isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (input === undefined) {\n            config._d = new Date(utils_hooks__hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(+input);\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (typeof(input) === 'object') {\n            configFromObject(config);\n        } else if (typeof(input) === 'number') {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            utils_hooks__hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC (input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (typeof(locale) === 'boolean') {\n            strict = locale;\n            locale = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function local__createLocal (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n         'moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548',\n         function () {\n             var other = local__createLocal.apply(null, arguments);\n             if (this.isValid() && other.isValid()) {\n                 return other < this ? this : other;\n             } else {\n                 return valid__createInvalid();\n             }\n         }\n     );\n\n    var prototypeMax = deprecate(\n        'moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548',\n        function () {\n            var other = local__createLocal.apply(null, arguments);\n            if (this.isValid() && other.isValid()) {\n                return other > this ? this : other;\n            } else {\n                return valid__createInvalid();\n            }\n        }\n    );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return local__createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +(new Date());\n    };\n\n    function Duration (duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 36e5; // 1000 * 60 * 60\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n\n        this._data = {};\n\n        this._locale = locale_locales__getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration (obj) {\n        return obj instanceof Duration;\n    }\n\n    // FORMATTING\n\n    function offset (token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset();\n            var sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z',  matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = ((string || '').match(matcher) || []);\n        var chunk   = matches[matches.length - 1] || [];\n        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff = (isMoment(input) || isDate(input) ? +input : +local__createLocal(input)) - (+res);\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(+res._d + diff);\n            utils_hooks__hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return local__createLocal(input).local();\n        }\n    }\n\n    function getDateOffset (m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    utils_hooks__hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset (input, keepLocalTime) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n            } else if (Math.abs(input) < 16) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    add_subtract__addSubtract(this, create__createDuration(input - offset, 'm'), 1, false);\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    utils_hooks__hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone (input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC (keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal (keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset () {\n        if (this._tzm) {\n            this.utcOffset(this._tzm);\n        } else if (typeof this._i === 'string') {\n            this.utcOffset(offsetFromString(matchOffset, this._i));\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset (input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? local__createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime () {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted () {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {};\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            var other = c._isUTC ? create_utc__createUTC(c._a) : local__createLocal(c._a);\n            this._isDSTShifted = this.isValid() &&\n                compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal () {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset () {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc () {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /(\\-)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)\\.?(\\d{3})?)?/;\n\n    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n    var isoRegex = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/;\n\n    function create__createDuration (input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms : input._milliseconds,\n                d  : input._days,\n                M  : input._months\n            };\n        } else if (typeof input === 'number') {\n            duration = {};\n            if (key) {\n                duration[key] = input;\n            } else {\n                duration.milliseconds = input;\n            }\n        } else if (!!(match = aspNetRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y  : 0,\n                d  : toInt(match[DATE])        * sign,\n                h  : toInt(match[HOUR])        * sign,\n                m  : toInt(match[MINUTE])      * sign,\n                s  : toInt(match[SECOND])      * sign,\n                ms : toInt(match[MILLISECOND]) * sign\n            };\n        } else if (!!(match = isoRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y : parseIso(match[2], sign),\n                M : parseIso(match[3], sign),\n                d : parseIso(match[4], sign),\n                h : parseIso(match[5], sign),\n                m : parseIso(match[6], sign),\n                s : parseIso(match[7], sign),\n                w : parseIso(match[8], sign)\n            };\n        } else if (duration == null) {// checks for null or undefined\n            duration = {};\n        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n            diffRes = momentsDifference(local__createLocal(duration.from), local__createLocal(duration.to));\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        return ret;\n    }\n\n    create__createDuration.fn = Duration.prototype;\n\n    function parseIso (inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {milliseconds: 0, months: 0};\n\n        res.months = other.month() - base.month() +\n            (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return {milliseconds: 0, months: 0};\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period).');\n                tmp = val; val = period; period = tmp;\n            }\n\n            val = typeof val === 'string' ? +val : val;\n            dur = create__createDuration(val, period);\n            add_subtract__addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function add_subtract__addSubtract (mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = duration._days,\n            months = duration._months;\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (milliseconds) {\n            mom._d.setTime(+mom._d + milliseconds * isAdding);\n        }\n        if (days) {\n            get_set__set(mom, 'Date', get_set__get(mom, 'Date') + days * isAdding);\n        }\n        if (months) {\n            setMonth(mom, get_set__get(mom, 'Month') + months * isAdding);\n        }\n        if (updateOffset) {\n            utils_hooks__hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add_subtract__add      = createAdder(1, 'add');\n    var add_subtract__subtract = createAdder(-1, 'subtract');\n\n    function moment_calendar__calendar (time, formats) {\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || local__createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            diff = this.diff(sod, 'days', true),\n            format = diff < -6 ? 'sameElse' :\n                diff < -1 ? 'lastWeek' :\n                diff < 0 ? 'lastDay' :\n                diff < 1 ? 'sameDay' :\n                diff < 2 ? 'nextDay' :\n                diff < 7 ? 'nextWeek' : 'sameElse';\n\n        var output = formats && (isFunction(formats[format]) ? formats[format]() : formats[format]);\n\n        return this.format(output || this.localeData().calendar(format, this, local__createLocal(now)));\n    }\n\n    function clone () {\n        return new Moment(this);\n    }\n\n    function isAfter (input, units) {\n        var localInput = isMoment(input) ? input : local__createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n        if (units === 'millisecond') {\n            return +this > +localInput;\n        } else {\n            return +localInput < +this.clone().startOf(units);\n        }\n    }\n\n    function isBefore (input, units) {\n        var localInput = isMoment(input) ? input : local__createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n        if (units === 'millisecond') {\n            return +this < +localInput;\n        } else {\n            return +this.clone().endOf(units) < +localInput;\n        }\n    }\n\n    function isBetween (from, to, units) {\n        return this.isAfter(from, units) && this.isBefore(to, units);\n    }\n\n    function isSame (input, units) {\n        var localInput = isMoment(input) ? input : local__createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units || 'millisecond');\n        if (units === 'millisecond') {\n            return +this === +localInput;\n        } else {\n            inputMs = +localInput;\n            return +(this.clone().startOf(units)) <= inputMs && inputMs <= +(this.clone().endOf(units));\n        }\n    }\n\n    function isSameOrAfter (input, units) {\n        return this.isSame(input, units) || this.isAfter(input,units);\n    }\n\n    function isSameOrBefore (input, units) {\n        return this.isSame(input, units) || this.isBefore(input,units);\n    }\n\n    function diff (input, units, asFloat) {\n        var that,\n            zoneDelta,\n            delta, output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        if (units === 'year' || units === 'month' || units === 'quarter') {\n            output = monthDiff(this, that);\n            if (units === 'quarter') {\n                output = output / 3;\n            } else if (units === 'year') {\n                output = output / 12;\n            }\n        } else {\n            delta = this - that;\n            output = units === 'second' ? delta / 1e3 : // 1000\n                units === 'minute' ? delta / 6e4 : // 1000 * 60\n                units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60\n                units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n                units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n                delta;\n        }\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff (a, b) {\n        // difference in months\n        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2, adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        return -(wholeMonthDiff + adjust);\n    }\n\n    utils_hooks__hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n\n    function toString () {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function moment_format__toISOString () {\n        var m = this.clone().utc();\n        if (0 < m.year() && m.year() <= 9999) {\n            if (isFunction(Date.prototype.toISOString)) {\n                // native implementation is ~50x faster, use it when we can\n                return this.toDate().toISOString();\n            } else {\n                return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n            }\n        } else {\n            return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n        }\n    }\n\n    function format (inputString) {\n        var output = formatMoment(this, inputString || utils_hooks__hooks.defaultFormat);\n        return this.localeData().postformat(output);\n    }\n\n    function from (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 local__createLocal(time).isValid())) {\n            return create__createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow (withoutSuffix) {\n        return this.from(local__createLocal(), withoutSuffix);\n    }\n\n    function to (time, withoutSuffix) {\n        if (this.isValid() &&\n                ((isMoment(time) && time.isValid()) ||\n                 local__createLocal(time).isValid())) {\n            return create__createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow (withoutSuffix) {\n        return this.to(local__createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale (key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = locale_locales__getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData () {\n        return this._locale;\n    }\n\n    function startOf (units) {\n        units = normalizeUnits(units);\n        // the following switch intentionally omits break keywords\n        // to utilize falling through the cases.\n        switch (units) {\n        case 'year':\n            this.month(0);\n            /* falls through */\n        case 'quarter':\n        case 'month':\n            this.date(1);\n            /* falls through */\n        case 'week':\n        case 'isoWeek':\n        case 'day':\n            this.hours(0);\n            /* falls through */\n        case 'hour':\n            this.minutes(0);\n            /* falls through */\n        case 'minute':\n            this.seconds(0);\n            /* falls through */\n        case 'second':\n            this.milliseconds(0);\n        }\n\n        // weeks are a special case\n        if (units === 'week') {\n            this.weekday(0);\n        }\n        if (units === 'isoWeek') {\n            this.isoWeekday(1);\n        }\n\n        // quarters are also special\n        if (units === 'quarter') {\n            this.month(Math.floor(this.month() / 3) * 3);\n        }\n\n        return this;\n    }\n\n    function endOf (units) {\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond') {\n            return this;\n        }\n        return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n    }\n\n    function to_type__valueOf () {\n        return +this._d - ((this._offset || 0) * 60000);\n    }\n\n    function unix () {\n        return Math.floor(+this / 1000);\n    }\n\n    function toDate () {\n        return this._offset ? new Date(+this) : this._d;\n    }\n\n    function toArray () {\n        var m = this;\n        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n    }\n\n    function toObject () {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds()\n        };\n    }\n\n    function toJSON () {\n        // JSON.stringify(new Date(NaN)) === 'null'\n        return this.isValid() ? this.toISOString() : 'null';\n    }\n\n    function moment_valid__isValid () {\n        return valid__isValid(this);\n    }\n\n    function parsingFlags () {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt () {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict\n        };\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken (token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg',     'weekYear');\n    addWeekYearFormatToken('ggggg',    'weekYear');\n    addWeekYearFormatToken('GGGG',  'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PARSING\n\n    addRegexToken('G',      matchSigned);\n    addRegexToken('g',      matchSigned);\n    addRegexToken('GG',     match1to2, match2);\n    addRegexToken('gg',     match1to2, match2);\n    addRegexToken('GGGG',   match1to4, match4);\n    addRegexToken('gggg',   match1to4, match4);\n    addRegexToken('GGGGG',  match1to6, match6);\n    addRegexToken('ggggg',  match1to6, match6);\n\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n        week[token.substr(0, 2)] = toInt(input);\n    });\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = utils_hooks__hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input,\n                this.week(),\n                this.weekday(),\n                this.localeData()._week.dow,\n                this.localeData()._week.doy);\n    }\n\n    function getSetISOWeekYear (input) {\n        return getSetWeekYearHelper.call(this,\n                input, this.isoWeek(), this.isoWeekday(), 1, 4);\n    }\n\n    function getISOWeeksInYear () {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getWeeksInYear () {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        // console.log(\"got\", weekYear, week, weekday, \"set\", date.toISOString());\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter (input) {\n        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PARSING\n\n    addRegexToken('w',  match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W',  match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n        week[token.substr(0, 1)] = toInt(input);\n    });\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek (mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 1st is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek () {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear () {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek (input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek (input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PARSING\n\n    addRegexToken('D',  match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        return isStrict ? locale._ordinalParse : locale._ordinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0], 10);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PARSING\n\n    addRegexToken('d',    match1to2);\n    addRegexToken('e',    match1to2);\n    addRegexToken('E',    match1to2);\n    addRegexToken('dd',   matchWord);\n    addRegexToken('ddd',  matchWord);\n    addRegexToken('dddd', matchWord);\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    // LOCALES\n\n    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n    function localeWeekdays (m, format) {\n        return isArray(this._weekdays) ? this._weekdays[m.day()] :\n            this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n    }\n\n    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n    function localeWeekdaysShort (m) {\n        return this._weekdaysShort[m.day()];\n    }\n\n    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n    function localeWeekdaysMin (m) {\n        return this._weekdaysMin[m.day()];\n    }\n\n    function localeWeekdaysParse (weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = local__createLocal([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');\n                this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');\n                this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');\n            }\n            if (!this._weekdaysParse[i]) {\n                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek (input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n        return input == null ? this.day() || 7 : this.day(this.day() % 7 ? input : input - 7);\n    }\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PARSING\n\n    addRegexToken('DDD',  match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear (input) {\n        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2);\n    });\n\n    function meridiem (token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PARSING\n\n    function matchMeridiem (isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a',  matchMeridiem);\n    addRegexToken('A',  matchMeridiem);\n    addRegexToken('H',  match1to2);\n    addRegexToken('h',  match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4;\n        var pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM (input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return ((input + '').toLowerCase().charAt(0) === 'p');\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n    function localeMeridiem (hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n\n    // MOMENTS\n\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour he wants. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    var getSetHour = makeGetSet('Hours', true);\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PARSING\n\n    addRegexToken('m',  match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PARSING\n\n    addRegexToken('s',  match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PARSING\n\n    addRegexToken('S',    match1to3, match1);\n    addRegexToken('SS',   match1to3, match2);\n    addRegexToken('SSS',  match1to3, match3);\n\n    var token;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n    // MOMENTS\n\n    var getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z',  0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr () {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName () {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var momentPrototype__proto = Moment.prototype;\n\n    momentPrototype__proto.add               = add_subtract__add;\n    momentPrototype__proto.calendar          = moment_calendar__calendar;\n    momentPrototype__proto.clone             = clone;\n    momentPrototype__proto.diff              = diff;\n    momentPrototype__proto.endOf             = endOf;\n    momentPrototype__proto.format            = format;\n    momentPrototype__proto.from              = from;\n    momentPrototype__proto.fromNow           = fromNow;\n    momentPrototype__proto.to                = to;\n    momentPrototype__proto.toNow             = toNow;\n    momentPrototype__proto.get               = getSet;\n    momentPrototype__proto.invalidAt         = invalidAt;\n    momentPrototype__proto.isAfter           = isAfter;\n    momentPrototype__proto.isBefore          = isBefore;\n    momentPrototype__proto.isBetween         = isBetween;\n    momentPrototype__proto.isSame            = isSame;\n    momentPrototype__proto.isSameOrAfter     = isSameOrAfter;\n    momentPrototype__proto.isSameOrBefore    = isSameOrBefore;\n    momentPrototype__proto.isValid           = moment_valid__isValid;\n    momentPrototype__proto.lang              = lang;\n    momentPrototype__proto.locale            = locale;\n    momentPrototype__proto.localeData        = localeData;\n    momentPrototype__proto.max               = prototypeMax;\n    momentPrototype__proto.min               = prototypeMin;\n    momentPrototype__proto.parsingFlags      = parsingFlags;\n    momentPrototype__proto.set               = getSet;\n    momentPrototype__proto.startOf           = startOf;\n    momentPrototype__proto.subtract          = add_subtract__subtract;\n    momentPrototype__proto.toArray           = toArray;\n    momentPrototype__proto.toObject          = toObject;\n    momentPrototype__proto.toDate            = toDate;\n    momentPrototype__proto.toISOString       = moment_format__toISOString;\n    momentPrototype__proto.toJSON            = toJSON;\n    momentPrototype__proto.toString          = toString;\n    momentPrototype__proto.unix              = unix;\n    momentPrototype__proto.valueOf           = to_type__valueOf;\n    momentPrototype__proto.creationData      = creationData;\n\n    // Year\n    momentPrototype__proto.year       = getSetYear;\n    momentPrototype__proto.isLeapYear = getIsLeapYear;\n\n    // Week Year\n    momentPrototype__proto.weekYear    = getSetWeekYear;\n    momentPrototype__proto.isoWeekYear = getSetISOWeekYear;\n\n    // Quarter\n    momentPrototype__proto.quarter = momentPrototype__proto.quarters = getSetQuarter;\n\n    // Month\n    momentPrototype__proto.month       = getSetMonth;\n    momentPrototype__proto.daysInMonth = getDaysInMonth;\n\n    // Week\n    momentPrototype__proto.week           = momentPrototype__proto.weeks        = getSetWeek;\n    momentPrototype__proto.isoWeek        = momentPrototype__proto.isoWeeks     = getSetISOWeek;\n    momentPrototype__proto.weeksInYear    = getWeeksInYear;\n    momentPrototype__proto.isoWeeksInYear = getISOWeeksInYear;\n\n    // Day\n    momentPrototype__proto.date       = getSetDayOfMonth;\n    momentPrototype__proto.day        = momentPrototype__proto.days             = getSetDayOfWeek;\n    momentPrototype__proto.weekday    = getSetLocaleDayOfWeek;\n    momentPrototype__proto.isoWeekday = getSetISODayOfWeek;\n    momentPrototype__proto.dayOfYear  = getSetDayOfYear;\n\n    // Hour\n    momentPrototype__proto.hour = momentPrototype__proto.hours = getSetHour;\n\n    // Minute\n    momentPrototype__proto.minute = momentPrototype__proto.minutes = getSetMinute;\n\n    // Second\n    momentPrototype__proto.second = momentPrototype__proto.seconds = getSetSecond;\n\n    // Millisecond\n    momentPrototype__proto.millisecond = momentPrototype__proto.milliseconds = getSetMillisecond;\n\n    // Offset\n    momentPrototype__proto.utcOffset            = getSetOffset;\n    momentPrototype__proto.utc                  = setOffsetToUTC;\n    momentPrototype__proto.local                = setOffsetToLocal;\n    momentPrototype__proto.parseZone            = setOffsetToParsedOffset;\n    momentPrototype__proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    momentPrototype__proto.isDST                = isDaylightSavingTime;\n    momentPrototype__proto.isDSTShifted         = isDaylightSavingTimeShifted;\n    momentPrototype__proto.isLocal              = isLocal;\n    momentPrototype__proto.isUtcOffset          = isUtcOffset;\n    momentPrototype__proto.isUtc                = isUtc;\n    momentPrototype__proto.isUTC                = isUtc;\n\n    // Timezone\n    momentPrototype__proto.zoneAbbr = getZoneAbbr;\n    momentPrototype__proto.zoneName = getZoneName;\n\n    // Deprecations\n    momentPrototype__proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n    momentPrototype__proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n    momentPrototype__proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n    momentPrototype__proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. https://github.com/moment/moment/issues/1779', getSetZone);\n\n    var momentPrototype = momentPrototype__proto;\n\n    function moment__createUnix (input) {\n        return local__createLocal(input * 1000);\n    }\n\n    function moment__createInZone () {\n        return local__createLocal.apply(null, arguments).parseZone();\n    }\n\n    var defaultCalendar = {\n        sameDay : '[Today at] LT',\n        nextDay : '[Tomorrow at] LT',\n        nextWeek : 'dddd [at] LT',\n        lastDay : '[Yesterday at] LT',\n        lastWeek : '[Last] dddd [at] LT',\n        sameElse : 'L'\n    };\n\n    function locale_calendar__calendar (key, mom, now) {\n        var output = this._calendar[key];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    var defaultLongDateFormat = {\n        LTS  : 'h:mm:ss A',\n        LT   : 'h:mm A',\n        L    : 'MM/DD/YYYY',\n        LL   : 'MMMM D, YYYY',\n        LLL  : 'MMMM D, YYYY h:mm A',\n        LLLL : 'dddd, MMMM D, YYYY h:mm A'\n    };\n\n    function longDateFormat (key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n            return val.slice(1);\n        });\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate () {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d';\n    var defaultOrdinalParse = /\\d{1,2}/;\n\n    function ordinal (number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    function preParsePostFormat (string) {\n        return string;\n    }\n\n    var defaultRelativeTime = {\n        future : 'in %s',\n        past   : '%s ago',\n        s  : 'a few seconds',\n        m  : 'a minute',\n        mm : '%d minutes',\n        h  : 'an hour',\n        hh : '%d hours',\n        d  : 'a day',\n        dd : '%d days',\n        M  : 'a month',\n        MM : '%d months',\n        y  : 'a year',\n        yy : '%d years'\n    };\n\n    function relative__relativeTime (number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return (isFunction(output)) ?\n            output(number, withoutSuffix, string, isFuture) :\n            output.replace(/%d/i, number);\n    }\n\n    function pastFuture (diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    function locale_set__set (config) {\n        var prop, i;\n        for (i in config) {\n            prop = config[i];\n            if (isFunction(prop)) {\n                this[i] = prop;\n            } else {\n                this['_' + i] = prop;\n            }\n        }\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _ordinalParseLenient.\n        this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + (/\\d{1,2}/).source);\n    }\n\n    var prototype__proto = Locale.prototype;\n\n    prototype__proto._calendar       = defaultCalendar;\n    prototype__proto.calendar        = locale_calendar__calendar;\n    prototype__proto._longDateFormat = defaultLongDateFormat;\n    prototype__proto.longDateFormat  = longDateFormat;\n    prototype__proto._invalidDate    = defaultInvalidDate;\n    prototype__proto.invalidDate     = invalidDate;\n    prototype__proto._ordinal        = defaultOrdinal;\n    prototype__proto.ordinal         = ordinal;\n    prototype__proto._ordinalParse   = defaultOrdinalParse;\n    prototype__proto.preparse        = preParsePostFormat;\n    prototype__proto.postformat      = preParsePostFormat;\n    prototype__proto._relativeTime   = defaultRelativeTime;\n    prototype__proto.relativeTime    = relative__relativeTime;\n    prototype__proto.pastFuture      = pastFuture;\n    prototype__proto.set             = locale_set__set;\n\n    // Month\n    prototype__proto.months            =        localeMonths;\n    prototype__proto._months           = defaultLocaleMonths;\n    prototype__proto.monthsShort       =        localeMonthsShort;\n    prototype__proto._monthsShort      = defaultLocaleMonthsShort;\n    prototype__proto.monthsParse       =        localeMonthsParse;\n    prototype__proto._monthsRegex      = defaultMonthsRegex;\n    prototype__proto.monthsRegex       = monthsRegex;\n    prototype__proto._monthsShortRegex = defaultMonthsShortRegex;\n    prototype__proto.monthsShortRegex  = monthsShortRegex;\n\n    // Week\n    prototype__proto.week = localeWeek;\n    prototype__proto._week = defaultLocaleWeek;\n    prototype__proto.firstDayOfYear = localeFirstDayOfYear;\n    prototype__proto.firstDayOfWeek = localeFirstDayOfWeek;\n\n    // Day of Week\n    prototype__proto.weekdays       =        localeWeekdays;\n    prototype__proto._weekdays      = defaultLocaleWeekdays;\n    prototype__proto.weekdaysMin    =        localeWeekdaysMin;\n    prototype__proto._weekdaysMin   = defaultLocaleWeekdaysMin;\n    prototype__proto.weekdaysShort  =        localeWeekdaysShort;\n    prototype__proto._weekdaysShort = defaultLocaleWeekdaysShort;\n    prototype__proto.weekdaysParse  =        localeWeekdaysParse;\n\n    // Hours\n    prototype__proto.isPM = localeIsPM;\n    prototype__proto._meridiemParse = defaultLocaleMeridiemParse;\n    prototype__proto.meridiem = localeMeridiem;\n\n    function lists__get (format, index, field, setter) {\n        var locale = locale_locales__getLocale();\n        var utc = create_utc__createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function list (format, index, field, count, setter) {\n        if (typeof format === 'number') {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return lists__get(format, index, field, setter);\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < count; i++) {\n            out[i] = lists__get(format, i, field, setter);\n        }\n        return out;\n    }\n\n    function lists__listMonths (format, index) {\n        return list(format, index, 'months', 12, 'month');\n    }\n\n    function lists__listMonthsShort (format, index) {\n        return list(format, index, 'monthsShort', 12, 'month');\n    }\n\n    function lists__listWeekdays (format, index) {\n        return list(format, index, 'weekdays', 7, 'day');\n    }\n\n    function lists__listWeekdaysShort (format, index) {\n        return list(format, index, 'weekdaysShort', 7, 'day');\n    }\n\n    function lists__listWeekdaysMin (format, index) {\n        return list(format, index, 'weekdaysMin', 7, 'day');\n    }\n\n    locale_locales__getSetGlobalLocale('en', {\n        ordinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    // Side effect imports\n    utils_hooks__hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', locale_locales__getSetGlobalLocale);\n    utils_hooks__hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', locale_locales__getLocale);\n\n    var mathAbs = Math.abs;\n\n    function duration_abs__abs () {\n        var data           = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days         = mathAbs(this._days);\n        this._months       = mathAbs(this._months);\n\n        data.milliseconds  = mathAbs(data.milliseconds);\n        data.seconds       = mathAbs(data.seconds);\n        data.minutes       = mathAbs(data.minutes);\n        data.hours         = mathAbs(data.hours);\n        data.months        = mathAbs(data.months);\n        data.years         = mathAbs(data.years);\n\n        return this;\n    }\n\n    function duration_add_subtract__addSubtract (duration, input, value, direction) {\n        var other = create__createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days         += direction * other._days;\n        duration._months       += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function duration_add_subtract__add (input, value) {\n        return duration_add_subtract__addSubtract(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function duration_add_subtract__subtract (input, value) {\n        return duration_add_subtract__addSubtract(this, input, value, -1);\n    }\n\n    function absCeil (number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble () {\n        var milliseconds = this._milliseconds;\n        var days         = this._days;\n        var months       = this._months;\n        var data         = this._data;\n        var seconds, minutes, hours, years, monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0))) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds           = absFloor(milliseconds / 1000);\n        data.seconds      = seconds % 60;\n\n        minutes           = absFloor(seconds / 60);\n        data.minutes      = minutes % 60;\n\n        hours             = absFloor(minutes / 60);\n        data.hours        = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days   = days;\n        data.months = months;\n        data.years  = years;\n\n        return this;\n    }\n\n    function daysToMonths (days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return days * 4800 / 146097;\n    }\n\n    function monthsToDays (months) {\n        // the reverse of daysToMonths\n        return months * 146097 / 4800;\n    }\n\n    function as (units) {\n        var days;\n        var months;\n        var milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'year') {\n            days   = this._days   + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            return units === 'month' ? months : months / 12;\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week'   : return days / 7     + milliseconds / 6048e5;\n                case 'day'    : return days         + milliseconds / 864e5;\n                case 'hour'   : return days * 24    + milliseconds / 36e5;\n                case 'minute' : return days * 1440  + milliseconds / 6e4;\n                case 'second' : return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n                default: throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function duration_as__valueOf () {\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs (alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms');\n    var asSeconds      = makeAs('s');\n    var asMinutes      = makeAs('m');\n    var asHours        = makeAs('h');\n    var asDays         = makeAs('d');\n    var asWeeks        = makeAs('w');\n    var asMonths       = makeAs('M');\n    var asYears        = makeAs('y');\n\n    function duration_get__get (units) {\n        units = normalizeUnits(units);\n        return this[units + 's']();\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this._data[name];\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds');\n    var seconds      = makeGetter('seconds');\n    var minutes      = makeGetter('minutes');\n    var hours        = makeGetter('hours');\n    var days         = makeGetter('days');\n    var months       = makeGetter('months');\n    var years        = makeGetter('years');\n\n    function weeks () {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round;\n    var thresholds = {\n        s: 45,  // seconds to minute\n        m: 45,  // minutes to hour\n        h: 22,  // hours to day\n        d: 26,  // days to month\n        M: 11   // months to year\n    };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function duration_humanize__relativeTime (posNegDuration, withoutSuffix, locale) {\n        var duration = create__createDuration(posNegDuration).abs();\n        var seconds  = round(duration.as('s'));\n        var minutes  = round(duration.as('m'));\n        var hours    = round(duration.as('h'));\n        var days     = round(duration.as('d'));\n        var months   = round(duration.as('M'));\n        var years    = round(duration.as('y'));\n\n        var a = seconds < thresholds.s && ['s', seconds]  ||\n                minutes <= 1           && ['m']           ||\n                minutes < thresholds.m && ['mm', minutes] ||\n                hours   <= 1           && ['h']           ||\n                hours   < thresholds.h && ['hh', hours]   ||\n                days    <= 1           && ['d']           ||\n                days    < thresholds.d && ['dd', days]    ||\n                months  <= 1           && ['M']           ||\n                months  < thresholds.M && ['MM', months]  ||\n                years   <= 1           && ['y']           || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function duration_humanize__getSetRelativeTimeThreshold (threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        return true;\n    }\n\n    function humanize (withSuffix) {\n        var locale = this.localeData();\n        var output = duration_humanize__relativeTime(this, !withSuffix, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var iso_string__abs = Math.abs;\n\n    function iso_string__toISOString() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        var seconds = iso_string__abs(this._milliseconds) / 1000;\n        var days         = iso_string__abs(this._days);\n        var months       = iso_string__abs(this._months);\n        var minutes, hours, years;\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes           = absFloor(seconds / 60);\n        hours             = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years  = absFloor(months / 12);\n        months %= 12;\n\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        var Y = years;\n        var M = months;\n        var D = days;\n        var h = hours;\n        var m = minutes;\n        var s = seconds;\n        var total = this.asSeconds();\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        return (total < 0 ? '-' : '') +\n            'P' +\n            (Y ? Y + 'Y' : '') +\n            (M ? M + 'M' : '') +\n            (D ? D + 'D' : '') +\n            ((h || m || s) ? 'T' : '') +\n            (h ? h + 'H' : '') +\n            (m ? m + 'M' : '') +\n            (s ? s + 'S' : '');\n    }\n\n    var duration_prototype__proto = Duration.prototype;\n\n    duration_prototype__proto.abs            = duration_abs__abs;\n    duration_prototype__proto.add            = duration_add_subtract__add;\n    duration_prototype__proto.subtract       = duration_add_subtract__subtract;\n    duration_prototype__proto.as             = as;\n    duration_prototype__proto.asMilliseconds = asMilliseconds;\n    duration_prototype__proto.asSeconds      = asSeconds;\n    duration_prototype__proto.asMinutes      = asMinutes;\n    duration_prototype__proto.asHours        = asHours;\n    duration_prototype__proto.asDays         = asDays;\n    duration_prototype__proto.asWeeks        = asWeeks;\n    duration_prototype__proto.asMonths       = asMonths;\n    duration_prototype__proto.asYears        = asYears;\n    duration_prototype__proto.valueOf        = duration_as__valueOf;\n    duration_prototype__proto._bubble        = bubble;\n    duration_prototype__proto.get            = duration_get__get;\n    duration_prototype__proto.milliseconds   = milliseconds;\n    duration_prototype__proto.seconds        = seconds;\n    duration_prototype__proto.minutes        = minutes;\n    duration_prototype__proto.hours          = hours;\n    duration_prototype__proto.days           = days;\n    duration_prototype__proto.weeks          = weeks;\n    duration_prototype__proto.months         = months;\n    duration_prototype__proto.years          = years;\n    duration_prototype__proto.humanize       = humanize;\n    duration_prototype__proto.toISOString    = iso_string__toISOString;\n    duration_prototype__proto.toString       = iso_string__toISOString;\n    duration_prototype__proto.toJSON         = iso_string__toISOString;\n    duration_prototype__proto.locale         = locale;\n    duration_prototype__proto.localeData     = localeData;\n\n    // Deprecations\n    duration_prototype__proto.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', iso_string__toISOString);\n    duration_prototype__proto.lang = lang;\n\n    // Side effect imports\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input, 10) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    // Side effect imports\n\n\n    utils_hooks__hooks.version = '2.11.1';\n\n    setHookCallback(local__createLocal);\n\n    utils_hooks__hooks.fn                    = momentPrototype;\n    utils_hooks__hooks.min                   = min;\n    utils_hooks__hooks.max                   = max;\n    utils_hooks__hooks.now                   = now;\n    utils_hooks__hooks.utc                   = create_utc__createUTC;\n    utils_hooks__hooks.unix                  = moment__createUnix;\n    utils_hooks__hooks.months                = lists__listMonths;\n    utils_hooks__hooks.isDate                = isDate;\n    utils_hooks__hooks.locale                = locale_locales__getSetGlobalLocale;\n    utils_hooks__hooks.invalid               = valid__createInvalid;\n    utils_hooks__hooks.duration              = create__createDuration;\n    utils_hooks__hooks.isMoment              = isMoment;\n    utils_hooks__hooks.weekdays              = lists__listWeekdays;\n    utils_hooks__hooks.parseZone             = moment__createInZone;\n    utils_hooks__hooks.localeData            = locale_locales__getLocale;\n    utils_hooks__hooks.isDuration            = isDuration;\n    utils_hooks__hooks.monthsShort           = lists__listMonthsShort;\n    utils_hooks__hooks.weekdaysMin           = lists__listWeekdaysMin;\n    utils_hooks__hooks.defineLocale          = defineLocale;\n    utils_hooks__hooks.weekdaysShort         = lists__listWeekdaysShort;\n    utils_hooks__hooks.normalizeUnits        = normalizeUnits;\n    utils_hooks__hooks.relativeTimeThreshold = duration_humanize__getSetRelativeTimeThreshold;\n    utils_hooks__hooks.prototype             = momentPrototype;\n\n    var _moment = utils_hooks__hooks;\n\n    return _moment;\n\n}));\n},{}],106:[function(require,module,exports){\nmodule.exports={\n  \"name\": \"mermaid\",\n  \"version\": \"0.5.8\",\n  \"description\": \"Markdownish syntax for generating flowcharts, sequence diagrams, class diagrams and gantt charts.\",\n  \"main\": \"src/mermaid.js\",\n  \"keywords\": [\n    \"diagram\",\n    \"markdown\",\n    \"flowchart\",\n    \"sequence diagram\",\n    \"gantt\"\n  ],\n  \"bin\": {\n    \"mermaid\": \"./bin/mermaid.js\"\n  },\n  \"scripts\": {\n    \"live\": \"live-server ./test/examples\",\n    \"lint\": \"node node_modules/eslint/bin/eslint.js src\",\n    \"jison\": \"gulp jison_legacy\",\n    \"karma\": \"node node_modules/karma/bin/karma start karma.conf.js --single-run\",\n    \"watch\": \"source  ./scripts/watch.sh\",\n    \"doc\": \"rm -r build;rm -r dist/www;gulp vartree;cp dist/www/all.html ../mermaid-pages/index.html;cp dist/mermaid.js ../mermaid-pages/javascripts/lib;cp dist/mermaid.forest.css ../mermaid-pages/stylesheets\",\n    \"tape\": \"node node_modules/tape/bin/tape test/cli_test-*.js\",\n    \"jasmine\": \"npm run jison &&node node_modules/jasmine-es6/bin/jasmine.js\",\n    \"pretest\": \"npm run jison\",\n    \"test\": \"npm run dist && npm run karma && npm run tape\",\n    \"dist-slim-mermaid\": \"node node_modules/browserify/bin/cmd.js src/mermaid.js  -t babelify  -s mermaid    -o dist/mermaid.slim.js    -x d3   && cat dist/mermaid.slim.js    | node node_modules/uglifyjs/bin/uglifyjs -mc > dist/mermaid.slim.min.js\",\n    \"dist-slim-mermaidAPI\": \"node node_modules/browserify/bin/cmd.js src/mermaidAPI.js -t babelify -s mermaidAPI -o dist/mermaidAPI.slim.js -x d3 && cat dist/mermaidAPI.slim.js | node node_modules/uglifyjs/bin/uglifyjs -mc > dist/mermaidAPI.slim.min.js\",\n    \"dist-mermaid\": \"node node_modules/browserify/bin/cmd.js src/mermaid.js  -t babelify  -s mermaid    -o dist/mermaid.js         && cat dist/mermaid.js         | node node_modules/uglifyjs/bin/uglifyjs -mc > dist/mermaid.min.js\",\n    \"dist-mermaidAPI\": \"node node_modules/browserify/bin/cmd.js src/mermaidAPI.js -t babelify -s mermaidAPI -o dist/mermaidAPI.js      && cat dist/mermaidAPI.js      | node node_modules/uglifyjs/bin/uglifyjs -mc > dist/mermaidAPI.min.js\",\n    \"dist\": \"npm run dist-slim-mermaid && npm run dist-slim-mermaidAPI && npm run dist-mermaid && npm run dist-mermaidAPI\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/knsv/mermaid\"\n  },\n  \"author\": \"Knut Sveidqvist\",\n  \"license\": \"MIT\",\n  \"dependencies\": {\n    \"chalk\": \"^0.5.1\",\n    \"d3\": \"3.5.6\",\n    \"dagre\": \"^0.7.4\",\n    \"dagre-d3\": \"0.4.10\",\n    \"he\": \"^0.5.0\",\n    \"minimist\": \"^1.1.0\",\n    \"mkdirp\": \"^0.5.0\",\n    \"moment\": \"^2.9.0\",\n    \"semver\": \"^4.1.1\",\n    \"which\": \"^1.0.8\"\n  },\n  \"devDependencies\": {\n    \"async\": \"^0.9.0\",\n    \"babel-eslint\": \"^4.1.3\",\n    \"babelify\": \"^6.4.0\",\n    \"browserify\": \"~6.2.0\",\n    \"clone\": \"^0.2.0\",\n    \"codeclimate-test-reporter\": \"0.0.4\",\n    \"dateformat\": \"^1.0.11\",\n    \"dox\": \"^0.8.0\",\n    \"eslint\": \"^1.6.0\",\n    \"eslint-watch\": \"^2.1.2\",\n    \"event-stream\": \"^3.2.0\",\n    \"foundation\": \"^4.2.1-1\",\n    \"front-matter\": \"^0.2.0\",\n    \"gulp\": \"~3.9.0\",\n    \"gulp-bower\": \"0.0.10\",\n    \"gulp-browserify\": \"^0.5.0\",\n    \"gulp-bump\": \"^0.1.11\",\n    \"gulp-concat\": \"~2.4.1\",\n    \"gulp-data\": \"^1.1.1\",\n    \"gulp-dox\": \"^0.1.6\",\n    \"gulp-ext-replace\": \"^0.2.0\",\n    \"gulp-filelog\": \"^0.4.1\",\n    \"gulp-front-matter\": \"^1.2.3\",\n    \"gulp-hogan\": \"^1.1.0\",\n    \"gulp-if\": \"^1.2.5\",\n    \"gulp-insert\": \"^0.4.0\",\n    \"gulp-istanbul\": \"^0.4.0\",\n    \"gulp-jasmine\": \"~2.1.0\",\n    \"gulp-jasmine-browser\": \"^0.2.3\",\n    \"gulp-jison\": \"~1.2.0\",\n    \"gulp-jshint\": \"^1.9.0\",\n    \"gulp-less\": \"^3.0.1\",\n    \"gulp-livereload\": \"^3.8.0\",\n    \"gulp-marked\": \"^1.0.0\",\n    \"gulp-mdvars\": \"^2.0.0\",\n    \"gulp-qunit\": \"~1.2.1\",\n    \"gulp-rename\": \"~1.2.0\",\n    \"gulp-shell\": \"^0.2.10\",\n    \"gulp-tag-version\": \"^1.2.1\",\n    \"gulp-uglify\": \"~1.0.1\",\n    \"gulp-util\": \"^3.0.7\",\n    \"gulp-vartree\": \"^2.0.1\",\n    \"hogan.js\": \"^3.0.2\",\n    \"jasmine\": \"2.3.2\",\n    \"jasmine-es6\": \"0.0.18\",\n    \"jison\": \"zaach/jison\",\n    \"jsdom\": \"^7.0.2\",\n    \"jshint-stylish\": \"^2.0.1\",\n    \"karma\": \"^0.13.15\",\n    \"karma-babel-preprocessor\": \"^6.0.1\",\n    \"karma-browserify\": \"^4.4.0\",\n    \"karma-jasmine\": \"^0.3.6\",\n    \"karma-phantomjs-launcher\": \"^0.2.1\",\n    \"live-server\": \"^0.9.0\",\n    \"map-stream\": \"0.0.6\",\n    \"marked\": \"^0.3.2\",\n    \"mock-browser\": \"^0.91.34\",\n    \"path\": \"^0.4.9\",\n    \"phantomjs\": \"^1.9.18\",\n    \"proxyquire\": \"^1.7.3\",\n    \"proxyquire-universal\": \"^1.0.8\",\n    \"proxyquireify\": \"^3.0.0\",\n    \"require-dir\": \"^0.3.0\",\n    \"rewire\": \"^2.1.3\",\n    \"rimraf\": \"^2.2.8\",\n    \"tape\": \"^3.0.3\",\n    \"testdom\": \"^2.0.0\",\n    \"uglifyjs\": \"^2.4.10\",\n    \"vinyl-source-stream\": \"^1.1.0\",\n    \"watchify\": \"^3.6.1\"\n  }\n}\n\n},{}],107:[function(require,module,exports){\n/* global window */\n//log.debug('Setting up d3');\n'use strict';\n\nvar d3;\n\nif (require) {\n    try {\n        d3 = require('d3');\n    } catch (e) {\n        //log.debug('Exception ... but ok');\n        //log.debug(e);\n    }\n}\n\n//log.debug(d3);\n\nif (!d3) {\n    //if(typeof window !== 'undefined')\n    d3 = window.d3;\n}\n\n//if(typeof window === 'undefined'){\n//    window = {};\n//    window.d3 = d3;\n//}\n//log.debug('window');\n//log.debug(window);\nmodule.exports = d3;\n/* jshint ignore:start */\n/*\n\n D3 Text Wrap\n By Vijith Assar\n http://www.vijithassar.com\n http://www.github.com/vijithassar\n @vijithassar\n\n Detailed instructions at http://www.github.com/vijithassar/d3textwrap\n\n */\n\n(function () {\n\n    // set this variable to a string value to always force a particular\n    // wrap method for development purposes, for example to check tspan\n    // rendering using a foreignobject-enabled browser. set to 'tspan' to\n    // use tspans and 'foreignobject' to use foreignobject\n    var force_wrap_method = false; // by default no wrap method is forced\n    force_wrap_method = 'tspans'; // uncomment this statement to force tspans\n    // force_wrap_method = 'foreignobjects'; // uncomment this statement to force foreignobjects\n\n    // exit immediately if something in this location\n    // has already been defined; the plugin will defer to whatever\n    // else you're doing in your code\n    if (d3.selection.prototype.textwrap) {\n        return false;\n    }\n\n    // double check the force_wrap_method flag\n    // and reset if someone screwed up the above\n    // settings\n    if (typeof force_wrap_method == 'undefined') {\n        var force_wrap_method = false;\n    }\n\n    // create the plugin method twice, both for regular use\n    // and again for use inside the enter() selection\n    d3.selection.prototype.textwrap = d3.selection.enter.prototype.textwrap = function (bounds, padding) {\n\n        // default value of padding is zero if it's undefined\n        var padding = parseInt(padding) || 0;\n\n        // save callee into a variable so we can continue to refer to it\n        // as the function scope changes\n        var selection = this;\n\n        // create a variable to store desired return values in\n        var return_value;\n\n        // extract wrap boundaries from any d3-selected rect and return them\n        // in a format that matches the simpler object argument option\n        var extract_bounds = function extract_bounds(bounds) {\n            // discard the nested array wrappers added by d3\n            var bounding_rect = bounds[0][0];\n            // sanitize the svg element name so we can test against it\n            var element_type = bounding_rect.tagName.toString();\n            // if it's not a rect, exit\n            if (element_type !== 'rect') {\n                return false;\n                // if it's a rect, proceed to extracting the position attributes\n            } else {\n                    var bounds_extracted = {};\n                    bounds_extracted.x = d3.select(bounding_rect).attr('x') || 0;\n                    bounds_extracted.y = d3.select(bounding_rect).attr('y') || 0;\n                    bounds_extracted.width = d3.select(bounding_rect).attr('width') || 0;\n                    bounds_extracted.height = d3.select(bounding_rect).attr('height') || 0;\n                    // also pass along the getter function\n                    bounds_extracted.attr = bounds.attr;\n                }\n            return bounds_extracted;\n        };\n\n        // double check the input argument for the wrapping\n        // boundaries to make sure it actually contains all\n        // the information we'll need in order to wrap successfully\n        var verify_bounds = function verify_bounds(bounds) {\n            // quickly add a simple getter method so you can use either\n            // bounds.x or bounds.attr('x') as your notation,\n            // the latter being a common convention among D3\n            // developers\n            if (!bounds.attr) {\n                bounds.attr = function (property) {\n                    if (this[property]) {\n                        return this[property];\n                    }\n                };\n            }\n            // if it's an associative array, make sure it has all the\n            // necessary properties represented directly\n            if (typeof bounds == 'object' && typeof bounds.x !== 'undefined' && typeof bounds.y !== 'undefined' && typeof bounds.width !== 'undefined' && typeof bounds.height !== 'undefined'\n            // if that's the case, then the bounds are fine\n            ) {\n                    // return the lightly modified bounds\n                    return bounds;\n                    // if it's a numerically indexed array, assume it's a\n                    // d3-selected rect and try to extract the positions\n                } else if (\n                // first try to make sure it's an array using Array.isArray\n                typeof Array.isArray == 'function' && Array.isArray(bounds) ||\n                // but since Array.isArray isn't always supported, fall\n                // back to casting to the object to string when it's not\n                Object.prototype.toString.call(bounds) === '[object Array]') {\n                    // once you're sure it's an array, extract the boundaries\n                    // from the rect\n                    var extracted_bounds = extract_bounds(bounds);\n                    return extracted_bounds;\n                } else {\n                    // but if the bounds are neither an object nor a numerical\n                    // array, then the bounds argument is invalid and you'll\n                    // need to fix it\n                    return false;\n                }\n        };\n\n        var apply_padding = function apply_padding(bounds, padding) {\n            var padded_bounds = bounds;\n            if (padding !== 0) {\n                padded_bounds.x = parseInt(padded_bounds.x) + padding;\n                padded_bounds.y = parseInt(padded_bounds.y) + padding;\n                padded_bounds.width -= padding * 2;\n                padded_bounds.height -= padding * 2;\n            }\n            return padded_bounds;\n        };\n\n        // verify bounds\n        var verified_bounds = verify_bounds(bounds);\n\n        // modify bounds if a padding value is provided\n        if (padding) {\n            verified_bounds = apply_padding(verified_bounds, padding);\n        }\n\n        // check that we have the necessary conditions for this function to operate properly\n        if (\n        // selection it's operating on cannot be not empty\n        selection.length == 0 ||\n        // d3 must be available\n        !d3 ||\n        // desired wrapping bounds must be provided as an input argument\n        !bounds ||\n        // input bounds must validate\n        !verified_bounds) {\n            // try to return the calling selection if possible\n            // so as not to interfere with methods downstream in the\n            // chain\n            if (selection) {\n                return selection;\n                // if all else fails, just return false. if you hit this point then you're\n                // almost certainly trying to call the textwrap() method on something that\n                // doesn't make sense!\n            } else {\n                    return false;\n                }\n            // if we've validated everything then we can finally proceed\n            // to the meat of this operation\n        } else {\n\n                // reassign the verified bounds as the set we want\n                // to work with from here on; this ensures that we're\n                // using the same data structure for our bounds regardless\n                // of whether the input argument was a simple object or\n                // a d3 selection\n                bounds = verified_bounds;\n\n                // wrap using html and foreignObjects if they are supported\n                var wrap_with_foreignobjects = function wrap_with_foreignobjects(item) {\n                    // establish variables to quickly reference target nodes later\n                    var parent = d3.select(item[0].parentNode);\n                    var text_node = parent.select('text');\n                    var styled_line_height = text_node.style('line-height');\n                    // extract our desired content from the single text element\n                    var text_to_wrap = text_node.text();\n                    // remove the text node and replace with a foreign object\n                    text_node.remove();\n                    var foreign_object = parent.append('foreignObject');\n                    // add foreign object and set dimensions, position, etc\n                    foreign_object.attr('requiredFeatures', 'http://www.w3.org/TR/SVG11/feature#Extensibility').attr('x', bounds.x).attr('y', bounds.y).attr('width', bounds.width).attr('height', bounds.height);\n                    // insert an HTML div\n                    var wrap_div = foreign_object.append('xhtml:div')\n                    // this class is currently hardcoded\n                    // probably not necessary but easy to\n                    // override using .classed() and for now\n                    // it's nice to avoid a litany of input\n                    // arguments\n                    .attr('class', 'wrapped');\n                    // set div to same dimensions as foreign object\n                    wrap_div.style('height', bounds.height).style('width', bounds.width)\n                    // insert text content\n                    .html(text_to_wrap);\n                    if (styled_line_height) {\n                        wrap_div.style('line-height', styled_line_height);\n                    }\n                    return_value = parent.select('foreignObject');\n                };\n\n                // wrap with tspans if foreignObject is undefined\n                var wrap_with_tspans = function wrap_with_tspans(item) {\n                    // operate on the first text item in the selection\n                    var text_node = item[0];\n                    var parent = text_node.parentNode;\n                    var text_node_selected = d3.select(text_node);\n                    // measure initial size of the text node as rendered\n                    var text_node_height = text_node.getBBox().height;\n                    var text_node_width = text_node.getBBox().width;\n                    // figure out the line height, either from rendered height\n                    // of the font or attached styling\n                    var line_height;\n                    var rendered_line_height = text_node_height;\n                    var styled_line_height = text_node_selected.style('line-height');\n                    if (styled_line_height && parseInt(styled_line_height)) {\n                        line_height = parseInt(styled_line_height.replace('px', ''));\n                    } else {\n                        line_height = rendered_line_height;\n                    }\n                    // only fire the rest of this if the text content\n                    // overflows the desired dimensions\n                    if (text_node_width > bounds.width) {\n                        // store whatever is inside the text node\n                        // in a variable and then zero out the\n                        // initial content; we'll reinsert in a moment\n                        // using tspan elements.\n                        var text_to_wrap = text_node_selected.text();\n                        text_node_selected.text('');\n                        if (text_to_wrap) {\n                            // keep track of whether we are splitting by spaces\n                            // so we know whether to reinsert those spaces later\n                            var break_delimiter;\n                            // split at spaces to create an array of individual words\n                            var text_to_wrap_array;\n                            if (text_to_wrap.indexOf(' ') !== -1) {\n                                var break_delimiter = ' ';\n                                text_to_wrap_array = text_to_wrap.split(' ');\n                            } else {\n                                // if there are no spaces, figure out the split\n                                // points by comparing rendered text width against\n                                // bounds and translating that into character position\n                                // cuts\n                                break_delimiter = '';\n                                var string_length = text_to_wrap.length;\n                                var number_of_substrings = Math.ceil(text_node_width / bounds.width);\n                                var splice_interval = Math.floor(string_length / number_of_substrings);\n                                if (!(splice_interval * number_of_substrings >= string_length)) {\n                                    number_of_substrings++;\n                                }\n                                var text_to_wrap_array = [];\n                                var substring;\n                                var start_position;\n                                for (var i = 0; i < number_of_substrings; i++) {\n                                    start_position = i * splice_interval;\n                                    substring = text_to_wrap.substr(start_position, splice_interval);\n                                    text_to_wrap_array.push(substring);\n                                }\n                            }\n\n                            // new array where we'll store the words re-assembled into\n                            // substrings that have been tested against the desired\n                            // maximum wrapping width\n                            var substrings = [];\n                            // computed text length is arguably incorrectly reported for\n                            // all tspans after the first one, in that they will include\n                            // the width of previous separate tspans. to compensate we need\n                            // to manually track the computed text length of all those\n                            // previous tspans and substrings, and then use that to offset\n                            // the miscalculation. this then gives us the actual correct\n                            // position we want to use in rendering the text in the SVG.\n                            var total_offset = 0;\n                            // object for storing the results of text length computations later\n                            var temp = {};\n                            // loop through the words and test the computed text length\n                            // of the string against the maximum desired wrapping width\n                            for (var i = 0; i < text_to_wrap_array.length; i++) {\n                                var word = text_to_wrap_array[i];\n                                var previous_string = text_node_selected.text();\n                                var previous_width = text_node.getComputedTextLength();\n                                // initialize the current word as the first word\n                                // or append to the previous string if one exists\n                                var new_string;\n                                if (previous_string) {\n                                    new_string = previous_string + break_delimiter + word;\n                                } else {\n                                    new_string = word;\n                                }\n                                // add the newest substring back to the text node and\n                                // measure the length\n                                text_node_selected.text(new_string);\n                                var new_width = text_node.getComputedTextLength();\n                                // adjust the length by the offset we've tracked\n                                // due to the misreported length discussed above\n                                var test_width = new_width - total_offset;\n                                // if our latest version of the string is too\n                                // big for the bounds, use the previous\n                                // version of the string (without the newest word\n                                // added) and use the latest word to restart the\n                                // process with a new tspan\n                                if (new_width > bounds.width) {\n                                    if (previous_string && previous_string !== '') {\n                                        total_offset = total_offset + previous_width;\n                                        temp = { string: previous_string, width: previous_width, offset: total_offset };\n                                        substrings.push(temp);\n                                        text_node_selected.text('');\n                                        text_node_selected.text(word);\n                                        // Handle case where there is just one more word to be wrapped\n                                        if (i == text_to_wrap_array.length - 1) {\n                                            new_string = word;\n                                            text_node_selected.text(new_string);\n                                            new_width = text_node.getComputedTextLength();\n                                        }\n                                    }\n                                }\n                                // if we're up to the last word in the array,\n                                // get the computed length as is without\n                                // appending anything further to it\n                                if (i == text_to_wrap_array.length - 1) {\n                                    text_node_selected.text('');\n                                    var final_string = new_string;\n                                    if (final_string && final_string !== '') {\n                                        if (new_width - total_offset > 0) {\n                                            new_width = new_width - total_offset;\n                                        }\n                                        temp = { string: final_string, width: new_width, offset: total_offset };\n                                        substrings.push(temp);\n                                    }\n                                }\n                            }\n\n                            // append each substring as a tspan\n                            var current_tspan;\n                            var tspan_count;\n                            // double check that the text content has been removed\n                            // before we start appending tspans\n                            text_node_selected.text('');\n                            for (var i = 0; i < substrings.length; i++) {\n                                var substring = substrings[i].string;\n                                if (i > 0) {\n                                    var previous_substring = substrings[i - 1];\n                                }\n                                // only append if we're sure it won't make the tspans\n                                // overflow the bounds.\n                                if (i * line_height < bounds.height - line_height * 1.5) {\n                                    current_tspan = text_node_selected.append('tspan').text(substring);\n                                    // vertical shift to all tspans after the first one\n                                    current_tspan.attr('dy', function (d) {\n                                        if (i > 0) {\n                                            return line_height;\n                                        }\n                                    });\n                                    // shift left from default position, which\n                                    // is probably based on the full length of the\n                                    // text string until we make this adjustment\n                                    current_tspan.attr('x', function () {\n                                        var x_offset = bounds.x;\n                                        if (padding) {\n                                            x_offset += padding;\n                                        }\n                                        return x_offset;\n                                    });\n                                    //                                    .attr('dx', function() {\n                                    //                                        if(i == 0) {\n                                    //                                            var render_offset = 0;\n                                    //                                        } else if(i > 0) {\n                                    //                                            render_offset = substrings[i - 1].width;\n                                    //                                            render_offset = render_offset * -1;\n                                    //                                        }\n                                    //                                        return render_offset;\n                                    //                                    });\n                                }\n                            }\n                        }\n                    }\n                    // position the overall text node, whether wrapped or not\n                    text_node_selected.attr('y', function () {\n                        var y_offset = bounds.y;\n                        // shift by line-height to move the baseline into\n                        // the bounds – otherwise the text baseline would be\n                        // at the top of the bounds\n                        if (line_height) {\n                            y_offset += line_height;\n                        }\n                        // shift by padding, if it's there\n                        if (padding) {\n                            y_offset += padding;\n                        }\n                        return y_offset;\n                    });\n                    // shift to the right by the padding value\n                    text_node_selected.attr('x', function () {\n                        var x_offset = bounds.x;\n                        if (padding) {\n                            x_offset += padding;\n                        }\n                        return x_offset;\n                    });\n\n                    // assign our modified text node with tspans\n                    // to the return value\n                    return_value = d3.select(parent).selectAll('text');\n                };\n\n                // variable used to hold the functions that let us\n                // switch between the wrap methods\n                var wrap_method;\n\n                // if a wrap method if being forced, assign that\n                // function\n                if (force_wrap_method) {\n                    if (force_wrap_method == 'foreignobjects') {\n                        wrap_method = wrap_with_foreignobjects;\n                    } else if (force_wrap_method == 'tspans') {\n                        wrap_method = wrap_with_tspans;\n                    }\n                }\n\n                // if no wrap method is being forced, then instead\n                // test for browser support of foreignobject and\n                // use whichever wrap method makes sense accordingly\n                if (!force_wrap_method) {\n                    if (typeof SVGForeignObjectElement !== 'undefined') {\n                        wrap_method = wrap_with_foreignobjects;\n                    } else {\n                        wrap_method = wrap_with_tspans;\n                    }\n                }\n\n                // run the desired wrap function for each item\n                // in the d3 selection that called .textwrap()\n                for (var i = 0; i < selection.length; i++) {\n                    var item = selection[i];\n                    wrap_method(item);\n                }\n\n                // return the modified nodes so we can chain other\n                // methods to them.\n                return return_value;\n            }\n    };\n})();\n/* jshint ignore:end */\n\n},{\"d3\":4}],108:[function(require,module,exports){\n'use strict';\n\nvar Logger = require('../../logger');\nvar log = new Logger.Log();\n\nvar relations = [];\n\nvar classes;\nvar idCache;\nclasses = {};\n\n// Functions to be run after graph rendering\nvar funs = [];\n/**\n * Function called by parser when a node definition has been found.\n * @param id\n * @param text\n * @param type\n * @param style\n */\nexports.addClass = function (id) {\n    if (typeof classes[id] === 'undefined') {\n        classes[id] = {\n            id: id,\n            methods: [],\n            members: []\n        };\n    }\n};\n\nexports.clear = function () {\n    relations = [];\n    classes = {};\n};\n\nmodule.exports.getClass = function (id) {\n    return classes[id];\n};\nmodule.exports.getClasses = function () {\n    return classes;\n};\n\nmodule.exports.getRelations = function () {\n    return relations;\n};\n\nexports.addRelation = function (relation) {\n    log.warn('Adding relation: ' + JSON.stringify(relation));\n    exports.addClass(relation.id1);\n    exports.addClass(relation.id2);\n\n    relations.push(relation);\n};\n\nexports.addMembers = function (className, MembersArr) {\n    var theClass = classes[className];\n    if (typeof MembersArr === 'string') {\n        if (MembersArr.substr(-1) === ')') {\n            theClass.methods.push(MembersArr);\n        } else {\n            theClass.members.push(MembersArr);\n        }\n    }\n};\n\nexports.cleanupLabel = function (label) {\n\n    if (label.substring(0, 1) === ':') {\n        return label.substr(2).trim();\n    } else {\n        return label.trim();\n    }\n};\n\nexports.lineType = {\n    LINE: 0,\n    DOTTED_LINE: 1\n};\n\nexports.relationType = {\n    AGGREGATION: 0,\n    EXTENSION: 1,\n    COMPOSITION: 2,\n    DEPENDENCY: 3\n};\n\n},{\"../../logger\":126}],109:[function(require,module,exports){\n/**\n * Created by knut on 14-11-23.\n */\n\n'use strict';\n\nvar cd = require('./parser/classDiagram').parser;\nvar cDDb = require('./classDb');\ncd.yy = cDDb;\nvar d3 = require('../../d3');\nvar Logger = require('../../logger');\nvar dagre = require('dagre');\nvar log = new Logger.Log();\n\nvar idCache;\nidCache = {};\n\nvar classCnt = 0;\nvar conf = {\n    dividerMargin: 10,\n    padding: 5,\n    textHeight: 14\n};\n\n// Todo optimize\nvar getGraphId = function getGraphId(label) {\n    var keys = Object.keys(idCache);\n\n    var i;\n    for (i = 0; i < keys.length; i++) {\n        if (idCache[keys[i]].label === label) {\n            return keys[i];\n        }\n    }\n\n    return undefined;\n};\n\n/**\n * Setup arrow head and define the marker. The result is appended to the svg.\n */\nvar insertMarkers = function insertMarkers(elem) {\n    elem.append('defs').append('marker').attr('id', 'extensionStart').attr('class', 'extension').attr('refX', 0).attr('refY', 7).attr('markerWidth', 190).attr('markerHeight', 240).attr('orient', 'auto').append('path').attr('d', 'M 1,7 L18,13 V 1 Z');\n\n    elem.append('defs').append('marker').attr('id', 'extensionEnd').attr('refX', 19).attr('refY', 7).attr('markerWidth', 20).attr('markerHeight', 28).attr('orient', 'auto').append('path').attr('d', 'M 1,1 V 13 L18,7 Z'); //this is actual shape for arrowhead\n\n    elem.append('defs').append('marker').attr('id', 'compositionStart').attr('class', 'extension').attr('refX', 0).attr('refY', 7).attr('markerWidth', 190).attr('markerHeight', 240).attr('orient', 'auto').append('path').attr('d', 'M 18,7 L9,13 L1,7 L9,1 Z');\n\n    elem.append('defs').append('marker').attr('id', 'compositionEnd').attr('refX', 19).attr('refY', 7).attr('markerWidth', 20).attr('markerHeight', 28).attr('orient', 'auto').append('path').attr('d', 'M 18,7 L9,13 L1,7 L9,1 Z');\n\n    elem.append('defs').append('marker').attr('id', 'aggregationStart').attr('class', 'extension').attr('refX', 0).attr('refY', 7).attr('markerWidth', 190).attr('markerHeight', 240).attr('orient', 'auto').append('path').attr('d', 'M 18,7 L9,13 L1,7 L9,1 Z');\n\n    elem.append('defs').append('marker').attr('id', 'aggregationEnd').attr('refX', 19).attr('refY', 7).attr('markerWidth', 20).attr('markerHeight', 28).attr('orient', 'auto').append('path').attr('d', 'M 18,7 L9,13 L1,7 L9,1 Z');\n\n    elem.append('defs').append('marker').attr('id', 'dependencyStart').attr('class', 'extension').attr('refX', 0).attr('refY', 7).attr('markerWidth', 190).attr('markerHeight', 240).attr('orient', 'auto').append('path').attr('d', 'M 5,7 L9,13 L1,7 L9,1 Z');\n\n    elem.append('defs').append('marker').attr('id', 'dependencyEnd').attr('refX', 19).attr('refY', 7).attr('markerWidth', 20).attr('markerHeight', 28).attr('orient', 'auto').append('path').attr('d', 'M 18,7 L9,13 L14,7 L9,1 Z');\n};\n\nvar edgeCount = 0;\nvar drawEdge = function drawEdge(elem, path, relation) {\n    var getRelationType = function getRelationType(type) {\n        switch (type) {\n            case cDDb.relationType.AGGREGATION:\n                return 'aggregation';\n            case cDDb.relationType.EXTENSION:\n                return 'extension';\n            case cDDb.relationType.COMPOSITION:\n                return 'composition';\n            case cDDb.relationType.DEPENDENCY:\n                return 'dependency';\n        }\n    };\n\n    //The data for our line\n    var lineData = path.points;\n\n    //This is the accessor function we talked about above\n    var lineFunction = d3.svg.line().x(function (d) {\n        return d.x;\n    }).y(function (d) {\n        return d.y;\n    })\n    //.interpolate('cardinal');\n    .interpolate('basis');\n\n    var svgPath = elem.append('path').attr('d', lineFunction(lineData)).attr('id', 'edge' + edgeCount).attr('class', 'relation');\n    var url = '';\n    if (conf.arrowMarkerAbsolute) {\n        url = window.location.protocol + '//' + window.location.host + window.location.pathname + window.location.search;\n        url = url.replace(/\\(/g, '\\\\(');\n        url = url.replace(/\\)/g, '\\\\)');\n    }\n\n    //console.log(relation.relation.type1);\n    if (relation.relation.type1 !== 'none') {\n        svgPath.attr('marker-start', 'url(' + url + '#' + getRelationType(relation.relation.type1) + 'Start' + ')');\n    }\n    if (relation.relation.type2 !== 'none') {\n        svgPath.attr('marker-end', 'url(' + url + '#' + getRelationType(relation.relation.type2) + 'End' + ')');\n    }\n\n    //var bbox = svgPath[0][0].getBBox();\n    //var x = Math.floor(bbox.x + bbox.width/2.0);\n    //var y = Math.floor(bbox.y + bbox.height/2.0);\n    var x, y;\n    var l = path.points.length;\n    if (l % 2 !== 0) {\n        var p1 = path.points[Math.floor(l / 2)];\n        var p2 = path.points[Math.ceil(l / 2)];\n        x = (p1.x + p2.x) / 2;\n        y = (p1.y + p2.y) / 2;\n    } else {\n        var p = path.points[Math.floor(l / 2)];\n        x = p.x;\n        y = p.y;\n    }\n\n    if (typeof relation.title !== 'undefined') {\n        var g = elem.append('g').attr('class', 'classLabel');\n        var label = g.append('text').attr('class', 'label').attr('x', x).attr('y', y).attr('fill', 'red').attr('text-anchor', 'middle').text(relation.title);\n\n        window.label = label;\n        var bounds = label.node().getBBox();\n\n        g.insert('rect', ':first-child').attr('class', 'box').attr('x', bounds.x - conf.padding / 2).attr('y', bounds.y - conf.padding / 2).attr('width', bounds.width + 2 * conf.padding / 2).attr('height', bounds.height + 2 * conf.padding / 2);\n        //.append('textpath')\n        //.attr('xlink:href','#edge'+edgeCount)\n        //.attr('text-anchor','middle')\n        //.attr('startOffset','50%')\n    }\n\n    edgeCount++;\n};\n\nvar drawClass = function drawClass(elem, classDef) {\n    log.info('Rendering class ' + classDef);\n\n    var addTspan = function addTspan(textEl, txt, isFirst) {\n        var tSpan = textEl.append('tspan').attr('x', conf.padding).text(txt);\n        if (!isFirst) {\n            tSpan.attr('dy', conf.textHeight);\n        }\n    };\n\n    var id = 'classId' + classCnt;\n    var classInfo = {\n        id: id,\n        label: classDef.id,\n        width: 0,\n        height: 0\n    };\n\n    var g = elem.append('g').attr('id', id).attr('class', 'classGroup');\n    var title = g.append('text').attr('x', conf.padding).attr('y', conf.textHeight + conf.padding).text(classDef.id);\n\n    var titleHeight = title.node().getBBox().height;\n\n    var membersLine = g.append('line') // text label for the x axis\n    .attr('x1', 0).attr('y1', conf.padding + titleHeight + conf.dividerMargin / 2).attr('y2', conf.padding + titleHeight + conf.dividerMargin / 2);\n\n    var members = g.append('text') // text label for the x axis\n    .attr('x', conf.padding).attr('y', titleHeight + conf.dividerMargin + conf.textHeight).attr('fill', 'white').attr('class', 'classText');\n\n    var isFirst = true;\n\n    classDef.members.forEach(function (member) {\n        addTspan(members, member, isFirst);\n        isFirst = false;\n    });\n    //for (var member of classDef.members) {\n    //    addTspan(members, member, isFirst);\n    //    isFirst = false;\n    //}\n\n    var membersBox = members.node().getBBox();\n\n    var methodsLine = g.append('line') // text label for the x axis\n    .attr('x1', 0).attr('y1', conf.padding + titleHeight + 3 * conf.dividerMargin / 2 + membersBox.height).attr('y2', conf.padding + titleHeight + 3 * conf.dividerMargin / 2 + membersBox.height);\n\n    var methods = g.append('text') // text label for the x axis\n    .attr('x', conf.padding).attr('y', titleHeight + 2 * conf.dividerMargin + membersBox.height + conf.textHeight).attr('fill', 'white').attr('class', 'classText');\n\n    isFirst = true;\n\n    classDef.methods.forEach(function (method) {\n        addTspan(methods, method, isFirst);\n        isFirst = false;\n    });\n    //for (var method of classDef.methods) {\n    //    addTspan(methods, method, isFirst);\n    //    isFirst = false;\n    //}\n\n    var classBox = g.node().getBBox();\n    g.insert('rect', ':first-child').attr('x', 0).attr('y', 0).attr('width', classBox.width + 2 * conf.padding).attr('height', classBox.height + conf.padding + 0.5 * conf.dividerMargin);\n\n    membersLine.attr('x2', classBox.width + 2 * conf.padding);\n    methodsLine.attr('x2', classBox.width + 2 * conf.padding);\n\n    classInfo.width = classBox.width + 2 * conf.padding;\n    classInfo.height = classBox.height + conf.padding + 0.5 * conf.dividerMargin;\n\n    idCache[id] = classInfo;\n    classCnt++;\n    return classInfo;\n};\n\nmodule.exports.setConf = function (cnf) {\n    var keys = Object.keys(cnf);\n\n    keys.forEach(function (key) {\n        conf[key] = cnf[key];\n    });\n};\n/**\n * Draws a flowchart in the tag with id: id based on the graph definition in text.\n * @param text\n * @param id\n */\nmodule.exports.draw = function (text, id) {\n    cd.yy.clear();\n    cd.parse(text);\n\n    log.info('Rendering diagram ' + text);\n\n    //// Fetch the default direction, use TD if none was found\n    var diagram = d3.select('#' + id);\n    insertMarkers(diagram);\n    //var svg = diagram.append('svg');\n\n    // Layout graph, Create a new directed graph\n    var g = new dagre.graphlib.Graph({\n        multigraph: true\n    });\n\n    // Set an object for the graph label\n    g.setGraph({\n        isMultiGraph: true\n    });\n\n    // Default to assigning a new object as a label for each new edge.\n    g.setDefaultEdgeLabel(function () {\n        return {};\n    });\n\n    var classes = cDDb.getClasses();\n    var keys = Object.keys(classes);\n    var i;\n    for (i = 0; i < keys.length; i++) {\n        var classDef = classes[keys[i]];\n        var node = drawClass(diagram, classDef);\n        // Add nodes to the graph. The first argument is the node id. The second is\n        // metadata about the node. In this case we're going to add labels to each of\n        // our nodes.\n        g.setNode(node.id, node);\n        log.info('Org height: ' + node.height);\n        //g.setNode(\"swilliams\",  { label: \"Saul Williams\", width: 160, height: 100 });\n        //g.setNode(\"bpitt\",      { label: \"Brad Pitt\",     width: 108, height: 100 });\n        //g.setNode(\"hford\",      { label: \"Harrison Ford\", width: 168, height: 100 });\n        //g.setNode(\"lwilson\",    { label: \"Luke Wilson\",   width: 144, height: 100 });\n        //g.setNode(\"kbacon\",     { label: \"Kevin Bacon\",   width: 121, height: 100 });\n    }\n\n    var relations = cDDb.getRelations();\n    var i = 0;\n    relations.forEach(function (relation) {\n        i = i + 1;\n        log.info('tjoho' + getGraphId(relation.id1) + getGraphId(relation.id2) + JSON.stringify(relation));\n        g.setEdge(getGraphId(relation.id1), getGraphId(relation.id2), { relation: relation });\n    });\n    //for (var relation of relations) {\n    //    i = i + 1;\n    //    log.info('tjoho' + getGraphId(relation.id1) +  getGraphId(relation.id2) + JSON.stringify(relation));\n    //    g.setEdge(getGraphId(relation.id1), getGraphId(relation.id2), {relation: relation});\n    //}\n    dagre.layout(g);\n    g.nodes().forEach(function (v) {\n        if (typeof v !== 'undefined') {\n            log.debug('Node ' + v + ': ' + JSON.stringify(g.node(v)));\n            d3.select('#' + v).attr('transform', 'translate(' + (g.node(v).x - g.node(v).width / 2) + ',' + (g.node(v).y - g.node(v).height / 2) + ' )');\n            //d3.select('#' +v +' rect').attr('x',(g.node(v).x-(g.node(v).width/2)))\n            //.attr('y',(g.node(v).y-(g.node(v).height/2)));\n        }\n    });\n    g.edges().forEach(function (e) {\n        log.debug('Edge ' + e.v + ' -> ' + e.w + ': ' + JSON.stringify(g.edge(e)));\n        drawEdge(diagram, g.edge(e), g.edge(e).relation);\n    });\n\n    //\n    diagram.attr('height', '100%');\n    diagram.attr('width', '100%');\n    //\n    //\n    //\n    //\n    //if(conf.useMaxWidth) {\n    //    diagram.attr('height', '100%');\n    //    diagram.attr('width', '100%');\n    //    diagram.attr('style', 'max-width:' + (width) + 'px;');\n    //}else{\n    //    diagram.attr('height',height);\n    //    diagram.attr('width', width );\n    //}\n    //diagram.attr('viewBox', (box.startx-conf.diagramMarginX) + ' -' +conf.diagramMarginY + ' ' + width + ' ' + height);\n};\n\n},{\"../../d3\":107,\"../../logger\":126,\"./classDb\":108,\"./parser/classDiagram\":110,\"dagre\":54}],110:[function(require,module,exports){\n(function (process){\n/* parser generated by jison 0.4.15 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\n\"use strict\";\n\nvar classDiagram = (function () {\n    var o = function o(k, v, _o, l) {\n        for (_o = _o || {}, l = k.length; l--; _o[k[l]] = v);return _o;\n    },\n        $V0 = [1, 11],\n        $V1 = [1, 12],\n        $V2 = [1, 13],\n        $V3 = [1, 15],\n        $V4 = [1, 16],\n        $V5 = [1, 17],\n        $V6 = [6, 8],\n        $V7 = [1, 26],\n        $V8 = [1, 27],\n        $V9 = [1, 28],\n        $Va = [1, 29],\n        $Vb = [1, 30],\n        $Vc = [1, 31],\n        $Vd = [6, 8, 13, 17, 23, 26, 27, 28, 29, 30, 31],\n        $Ve = [6, 8, 13, 17, 23, 26, 27, 28, 29, 30, 31, 45, 46, 47],\n        $Vf = [23, 45, 46, 47],\n        $Vg = [23, 30, 31, 45, 46, 47],\n        $Vh = [23, 26, 27, 28, 29, 45, 46, 47],\n        $Vi = [6, 8, 13],\n        $Vj = [1, 46];\n    var parser = { trace: function trace() {},\n        yy: {},\n        symbols_: { \"error\": 2, \"mermaidDoc\": 3, \"graphConfig\": 4, \"CLASS_DIAGRAM\": 5, \"NEWLINE\": 6, \"statements\": 7, \"EOF\": 8, \"statement\": 9, \"className\": 10, \"alphaNumToken\": 11, \"relationStatement\": 12, \"LABEL\": 13, \"classStatement\": 14, \"methodStatement\": 15, \"CLASS\": 16, \"STRUCT_START\": 17, \"members\": 18, \"STRUCT_STOP\": 19, \"MEMBER\": 20, \"SEPARATOR\": 21, \"relation\": 22, \"STR\": 23, \"relationType\": 24, \"lineType\": 25, \"AGGREGATION\": 26, \"EXTENSION\": 27, \"COMPOSITION\": 28, \"DEPENDENCY\": 29, \"LINE\": 30, \"DOTTED_LINE\": 31, \"commentToken\": 32, \"textToken\": 33, \"graphCodeTokens\": 34, \"textNoTagsToken\": 35, \"TAGSTART\": 36, \"TAGEND\": 37, \"==\": 38, \"--\": 39, \"PCT\": 40, \"DEFAULT\": 41, \"SPACE\": 42, \"MINUS\": 43, \"keywords\": 44, \"UNICODE_TEXT\": 45, \"NUM\": 46, \"ALPHA\": 47, \"$accept\": 0, \"$end\": 1 },\n        terminals_: { 2: \"error\", 5: \"CLASS_DIAGRAM\", 6: \"NEWLINE\", 8: \"EOF\", 13: \"LABEL\", 16: \"CLASS\", 17: \"STRUCT_START\", 19: \"STRUCT_STOP\", 20: \"MEMBER\", 21: \"SEPARATOR\", 23: \"STR\", 26: \"AGGREGATION\", 27: \"EXTENSION\", 28: \"COMPOSITION\", 29: \"DEPENDENCY\", 30: \"LINE\", 31: \"DOTTED_LINE\", 34: \"graphCodeTokens\", 36: \"TAGSTART\", 37: \"TAGEND\", 38: \"==\", 39: \"--\", 40: \"PCT\", 41: \"DEFAULT\", 42: \"SPACE\", 43: \"MINUS\", 44: \"keywords\", 45: \"UNICODE_TEXT\", 46: \"NUM\", 47: \"ALPHA\" },\n        productions_: [0, [3, 1], [4, 4], [7, 1], [7, 3], [10, 2], [10, 1], [9, 1], [9, 2], [9, 1], [9, 1], [14, 2], [14, 5], [18, 1], [18, 2], [15, 1], [15, 2], [15, 1], [15, 1], [12, 3], [12, 4], [12, 4], [12, 5], [22, 3], [22, 2], [22, 2], [22, 1], [24, 1], [24, 1], [24, 1], [24, 1], [25, 1], [25, 1], [32, 1], [32, 1], [33, 1], [33, 1], [33, 1], [33, 1], [33, 1], [33, 1], [33, 1], [35, 1], [35, 1], [35, 1], [35, 1], [11, 1], [11, 1], [11, 1]],\n        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, /* action[1] */$$, /* vstack */_$ /* lstack */) {\n            /* this == yyval */\n\n            var $0 = $$.length - 1;\n            switch (yystate) {\n                case 5:\n                    this.$ = $$[$0 - 1] + $$[$0];\n                    break;\n                case 6:\n                    this.$ = $$[$0];\n                    break;\n                case 7:\n                    yy.addRelation($$[$0]);\n                    break;\n                case 8:\n                    $$[$0 - 1].title = yy.cleanupLabel($$[$0]);yy.addRelation($$[$0 - 1]);\n                    break;\n                case 12:\n                    /*console.log($$[$0-3],JSON.stringify($$[$0-1]));*/yy.addMembers($$[$0 - 3], $$[$0 - 1]);\n                    break;\n                case 13:\n                    this.$ = [$$[$0]];\n                    break;\n                case 14:\n                    $$[$0].push($$[$0 - 1]);this.$ = $$[$0];\n                    break;\n                case 15:\n                    /*console.log('Rel found',$$[$0]);*/\n                    break;\n                case 16:\n                    yy.addMembers($$[$0 - 1], yy.cleanupLabel($$[$0]));\n                    break;\n                case 17:\n                    console.warn('Member', $$[$0]);\n                    break;\n                case 18:\n                    /*console.log('sep found',$$[$0]);*/\n                    break;\n                case 19:\n                    this.$ = { 'id1': $$[$0 - 2], 'id2': $$[$0], relation: $$[$0 - 1], relationTitle1: 'none', relationTitle2: 'none' };\n                    break;\n                case 20:\n                    this.$ = { id1: $$[$0 - 3], id2: $$[$0], relation: $$[$0 - 1], relationTitle1: $$[$0 - 2], relationTitle2: 'none' };\n                    break;\n                case 21:\n                    this.$ = { id1: $$[$0 - 3], id2: $$[$0], relation: $$[$0 - 2], relationTitle1: 'none', relationTitle2: $$[$0 - 1] };\n                    break;\n                case 22:\n                    this.$ = { id1: $$[$0 - 4], id2: $$[$0], relation: $$[$0 - 2], relationTitle1: $$[$0 - 3], relationTitle2: $$[$0 - 1] };\n                    break;\n                case 23:\n                    this.$ = { type1: $$[$0 - 2], type2: $$[$0], lineType: $$[$0 - 1] };\n                    break;\n                case 24:\n                    this.$ = { type1: 'none', type2: $$[$0], lineType: $$[$0 - 1] };\n                    break;\n                case 25:\n                    this.$ = { type1: $$[$0 - 1], type2: 'none', lineType: $$[$0] };\n                    break;\n                case 26:\n                    this.$ = { type1: 'none', type2: 'none', lineType: $$[$0] };\n                    break;\n                case 27:\n                    this.$ = yy.relationType.AGGREGATION;\n                    break;\n                case 28:\n                    this.$ = yy.relationType.EXTENSION;\n                    break;\n                case 29:\n                    this.$ = yy.relationType.COMPOSITION;\n                    break;\n                case 30:\n                    this.$ = yy.relationType.DEPENDENCY;\n                    break;\n                case 31:\n                    this.$ = yy.lineType.LINE;\n                    break;\n                case 32:\n                    this.$ = yy.lineType.DOTTED_LINE;\n                    break;\n            }\n        },\n        table: [{ 3: 1, 4: 2, 5: [1, 3] }, { 1: [3] }, { 1: [2, 1] }, { 6: [1, 4] }, { 7: 5, 9: 6, 10: 10, 11: 14, 12: 7, 14: 8, 15: 9, 16: $V0, 20: $V1, 21: $V2, 45: $V3, 46: $V4, 47: $V5 }, { 8: [1, 18] }, { 6: [1, 19], 8: [2, 3] }, o($V6, [2, 7], { 13: [1, 20] }), o($V6, [2, 9]), o($V6, [2, 10]), o($V6, [2, 15], { 22: 21, 24: 24, 25: 25, 13: [1, 23], 23: [1, 22], 26: $V7, 27: $V8, 28: $V9, 29: $Va, 30: $Vb, 31: $Vc }), { 10: 32, 11: 14, 45: $V3, 46: $V4, 47: $V5 }, o($V6, [2, 17]), o($V6, [2, 18]), o($Vd, [2, 6], { 11: 14, 10: 33, 45: $V3, 46: $V4, 47: $V5 }), o($Ve, [2, 46]), o($Ve, [2, 47]), o($Ve, [2, 48]), { 1: [2, 2] }, { 7: 34, 9: 6, 10: 10, 11: 14, 12: 7, 14: 8, 15: 9, 16: $V0, 20: $V1, 21: $V2, 45: $V3, 46: $V4, 47: $V5 }, o($V6, [2, 8]), { 10: 35, 11: 14, 23: [1, 36], 45: $V3, 46: $V4, 47: $V5 }, { 22: 37, 24: 24, 25: 25, 26: $V7, 27: $V8, 28: $V9, 29: $Va, 30: $Vb, 31: $Vc }, o($V6, [2, 16]), { 25: 38, 30: $Vb, 31: $Vc }, o($Vf, [2, 26], { 24: 39, 26: $V7, 27: $V8, 28: $V9, 29: $Va }), o($Vg, [2, 27]), o($Vg, [2, 28]), o($Vg, [2, 29]), o($Vg, [2, 30]), o($Vh, [2, 31]), o($Vh, [2, 32]), o($V6, [2, 11], { 17: [1, 40] }), o($Vd, [2, 5]), { 8: [2, 4] }, o($Vi, [2, 19]), { 10: 41, 11: 14, 45: $V3, 46: $V4, 47: $V5 }, { 10: 42, 11: 14, 23: [1, 43], 45: $V3, 46: $V4, 47: $V5 }, o($Vf, [2, 25], { 24: 44, 26: $V7, 27: $V8, 28: $V9, 29: $Va }), o($Vf, [2, 24]), { 18: 45, 20: $Vj }, o($Vi, [2, 21]), o($Vi, [2, 20]), { 10: 47, 11: 14, 45: $V3, 46: $V4, 47: $V5 }, o($Vf, [2, 23]), { 19: [1, 48] }, { 18: 49, 19: [2, 13], 20: $Vj }, o($Vi, [2, 22]), o($V6, [2, 12]), { 19: [2, 14] }],\n        defaultActions: { 2: [2, 1], 18: [2, 2], 34: [2, 4], 49: [2, 14] },\n        parseError: function parseError(str, hash) {\n            if (hash.recoverable) {\n                this.trace(str);\n            } else {\n                var _parseError = function _parseError(msg, hash) {\n                    this.message = msg;\n                    this.hash = hash;\n                };\n\n                _parseError.prototype = new Error();\n\n                throw new _parseError(str, hash);\n            }\n        },\n        parse: function parse(input) {\n            var self = this,\n                stack = [0],\n                tstack = [],\n                vstack = [null],\n                lstack = [],\n                table = this.table,\n                yytext = '',\n                yylineno = 0,\n                yyleng = 0,\n                recovering = 0,\n                TERROR = 2,\n                EOF = 1;\n            var args = lstack.slice.call(arguments, 1);\n            var lexer = Object.create(this.lexer);\n            var sharedState = { yy: {} };\n            for (var k in this.yy) {\n                if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n                    sharedState.yy[k] = this.yy[k];\n                }\n            }\n            lexer.setInput(input, sharedState.yy);\n            sharedState.yy.lexer = lexer;\n            sharedState.yy.parser = this;\n            if (typeof lexer.yylloc == 'undefined') {\n                lexer.yylloc = {};\n            }\n            var yyloc = lexer.yylloc;\n            lstack.push(yyloc);\n            var ranges = lexer.options && lexer.options.ranges;\n            if (typeof sharedState.yy.parseError === 'function') {\n                this.parseError = sharedState.yy.parseError;\n            } else {\n                this.parseError = Object.getPrototypeOf(this).parseError;\n            }\n            function popStack(n) {\n                stack.length = stack.length - 2 * n;\n                vstack.length = vstack.length - n;\n                lstack.length = lstack.length - n;\n            }\n            _token_stack: var lex = function lex() {\n                var token;\n                token = lexer.lex() || EOF;\n                if (typeof token !== 'number') {\n                    token = self.symbols_[token] || token;\n                }\n                return token;\n            };\n            var symbol,\n                preErrorSymbol,\n                state,\n                action,\n                a,\n                r,\n                yyval = {},\n                p,\n                len,\n                newState,\n                expected;\n            while (true) {\n                state = stack[stack.length - 1];\n                if (this.defaultActions[state]) {\n                    action = this.defaultActions[state];\n                } else {\n                    if (symbol === null || typeof symbol == 'undefined') {\n                        symbol = lex();\n                    }\n                    action = table[state] && table[state][symbol];\n                }\n                if (typeof action === 'undefined' || !action.length || !action[0]) {\n                    var errStr = '';\n                    expected = [];\n                    for (p in table[state]) {\n                        if (this.terminals_[p] && p > TERROR) {\n                            expected.push('\\'' + this.terminals_[p] + '\\'');\n                        }\n                    }\n                    if (lexer.showPosition) {\n                        errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                    } else {\n                        errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                    }\n                    this.parseError(errStr, {\n                        text: lexer.match,\n                        token: this.terminals_[symbol] || symbol,\n                        line: lexer.yylineno,\n                        loc: yyloc,\n                        expected: expected\n                    });\n                }\n                if (action[0] instanceof Array && action.length > 1) {\n                    throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n                }\n                switch (action[0]) {\n                    case 1:\n                        stack.push(symbol);\n                        vstack.push(lexer.yytext);\n                        lstack.push(lexer.yylloc);\n                        stack.push(action[1]);\n                        symbol = null;\n                        if (!preErrorSymbol) {\n                            yyleng = lexer.yyleng;\n                            yytext = lexer.yytext;\n                            yylineno = lexer.yylineno;\n                            yyloc = lexer.yylloc;\n                            if (recovering > 0) {\n                                recovering--;\n                            }\n                        } else {\n                            symbol = preErrorSymbol;\n                            preErrorSymbol = null;\n                        }\n                        break;\n                    case 2:\n                        len = this.productions_[action[1]][1];\n                        yyval.$ = vstack[vstack.length - len];\n                        yyval._$ = {\n                            first_line: lstack[lstack.length - (len || 1)].first_line,\n                            last_line: lstack[lstack.length - 1].last_line,\n                            first_column: lstack[lstack.length - (len || 1)].first_column,\n                            last_column: lstack[lstack.length - 1].last_column\n                        };\n                        if (ranges) {\n                            yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\n                        }\n                        r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\n                        if (typeof r !== 'undefined') {\n                            return r;\n                        }\n                        if (len) {\n                            stack = stack.slice(0, -1 * len * 2);\n                            vstack = vstack.slice(0, -1 * len);\n                            lstack = lstack.slice(0, -1 * len);\n                        }\n                        stack.push(this.productions_[action[1]][0]);\n                        vstack.push(yyval.$);\n                        lstack.push(yyval._$);\n                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n                        stack.push(newState);\n                        break;\n                    case 3:\n                        return true;\n                }\n            }\n            return true;\n        } };\n\n    /* generated by jison-lex 0.3.4 */\n    var lexer = (function () {\n        var lexer = {\n\n            EOF: 1,\n\n            parseError: function parseError(str, hash) {\n                if (this.yy.parser) {\n                    this.yy.parser.parseError(str, hash);\n                } else {\n                    throw new Error(str);\n                }\n            },\n\n            // resets the lexer, sets new input\n            setInput: function setInput(input, yy) {\n                this.yy = yy || this.yy || {};\n                this._input = input;\n                this._more = this._backtrack = this.done = false;\n                this.yylineno = this.yyleng = 0;\n                this.yytext = this.matched = this.match = '';\n                this.conditionStack = ['INITIAL'];\n                this.yylloc = {\n                    first_line: 1,\n                    first_column: 0,\n                    last_line: 1,\n                    last_column: 0\n                };\n                if (this.options.ranges) {\n                    this.yylloc.range = [0, 0];\n                }\n                this.offset = 0;\n                return this;\n            },\n\n            // consumes and returns one char from the input\n            input: function input() {\n                var ch = this._input[0];\n                this.yytext += ch;\n                this.yyleng++;\n                this.offset++;\n                this.match += ch;\n                this.matched += ch;\n                var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n                if (lines) {\n                    this.yylineno++;\n                    this.yylloc.last_line++;\n                } else {\n                    this.yylloc.last_column++;\n                }\n                if (this.options.ranges) {\n                    this.yylloc.range[1]++;\n                }\n\n                this._input = this._input.slice(1);\n                return ch;\n            },\n\n            // unshifts one char (or a string) into the input\n            unput: function unput(ch) {\n                var len = ch.length;\n                var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n                this._input = ch + this._input;\n                this.yytext = this.yytext.substr(0, this.yytext.length - len);\n                //this.yyleng -= len;\n                this.offset -= len;\n                var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n                this.match = this.match.substr(0, this.match.length - 1);\n                this.matched = this.matched.substr(0, this.matched.length - 1);\n\n                if (lines.length - 1) {\n                    this.yylineno -= lines.length - 1;\n                }\n                var r = this.yylloc.range;\n\n                this.yylloc = {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.yylineno + 1,\n                    first_column: this.yylloc.first_column,\n                    last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n                };\n\n                if (this.options.ranges) {\n                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n                }\n                this.yyleng = this.yytext.length;\n                return this;\n            },\n\n            // When called from action, caches matched text and appends it on next action\n            more: function more() {\n                this._more = true;\n                return this;\n            },\n\n            // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\n            reject: function reject() {\n                if (this.options.backtrack_lexer) {\n                    this._backtrack = true;\n                } else {\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                        text: \"\",\n                        token: null,\n                        line: this.yylineno\n                    });\n                }\n                return this;\n            },\n\n            // retain first n characters of the match\n            less: function less(n) {\n                this.unput(this.match.slice(n));\n            },\n\n            // displays already matched input, i.e. for error messages\n            pastInput: function pastInput() {\n                var past = this.matched.substr(0, this.matched.length - this.match.length);\n                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\\n/g, \"\");\n            },\n\n            // displays upcoming input, i.e. for error messages\n            upcomingInput: function upcomingInput() {\n                var next = this.match;\n                if (next.length < 20) {\n                    next += this._input.substr(0, 20 - next.length);\n                }\n                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n            },\n\n            // displays the character position where the lexing error occurred, i.e. for error messages\n            showPosition: function showPosition() {\n                var pre = this.pastInput();\n                var c = new Array(pre.length + 1).join(\"-\");\n                return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n            },\n\n            // test the lexed token: return FALSE when not a match, otherwise return token\n            test_match: function test_match(match, indexed_rule) {\n                var token, lines, backup;\n\n                if (this.options.backtrack_lexer) {\n                    // save context\n                    backup = {\n                        yylineno: this.yylineno,\n                        yylloc: {\n                            first_line: this.yylloc.first_line,\n                            last_line: this.last_line,\n                            first_column: this.yylloc.first_column,\n                            last_column: this.yylloc.last_column\n                        },\n                        yytext: this.yytext,\n                        match: this.match,\n                        matches: this.matches,\n                        matched: this.matched,\n                        yyleng: this.yyleng,\n                        offset: this.offset,\n                        _more: this._more,\n                        _input: this._input,\n                        yy: this.yy,\n                        conditionStack: this.conditionStack.slice(0),\n                        done: this.done\n                    };\n                    if (this.options.ranges) {\n                        backup.yylloc.range = this.yylloc.range.slice(0);\n                    }\n                }\n\n                lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n                if (lines) {\n                    this.yylineno += lines.length;\n                }\n                this.yylloc = {\n                    first_line: this.yylloc.last_line,\n                    last_line: this.yylineno + 1,\n                    first_column: this.yylloc.last_column,\n                    last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\n                };\n                this.yytext += match[0];\n                this.match += match[0];\n                this.matches = match;\n                this.yyleng = this.yytext.length;\n                if (this.options.ranges) {\n                    this.yylloc.range = [this.offset, this.offset += this.yyleng];\n                }\n                this._more = false;\n                this._backtrack = false;\n                this._input = this._input.slice(match[0].length);\n                this.matched += match[0];\n                token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n                if (this.done && this._input) {\n                    this.done = false;\n                }\n                if (token) {\n                    return token;\n                } else if (this._backtrack) {\n                    // recover context\n                    for (var k in backup) {\n                        this[k] = backup[k];\n                    }\n                    return false; // rule action called reject() implying the next rule should be tested instead.\n                }\n                return false;\n            },\n\n            // return next match in input\n            next: function next() {\n                if (this.done) {\n                    return this.EOF;\n                }\n                if (!this._input) {\n                    this.done = true;\n                }\n\n                var token, match, tempMatch, index;\n                if (!this._more) {\n                    this.yytext = '';\n                    this.match = '';\n                }\n                var rules = this._currentRules();\n                for (var i = 0; i < rules.length; i++) {\n                    tempMatch = this._input.match(this.rules[rules[i]]);\n                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                        match = tempMatch;\n                        index = i;\n                        if (this.options.backtrack_lexer) {\n                            token = this.test_match(tempMatch, rules[i]);\n                            if (token !== false) {\n                                return token;\n                            } else if (this._backtrack) {\n                                match = false;\n                                continue; // rule action called reject() implying a rule MISmatch.\n                            } else {\n                                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                                    return false;\n                                }\n                        } else if (!this.options.flex) {\n                            break;\n                        }\n                    }\n                }\n                if (match) {\n                    token = this.test_match(match, rules[index]);\n                    if (token !== false) {\n                        return token;\n                    }\n                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                    return false;\n                }\n                if (this._input === \"\") {\n                    return this.EOF;\n                } else {\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                        text: \"\",\n                        token: null,\n                        line: this.yylineno\n                    });\n                }\n            },\n\n            // return next match that has a token\n            lex: function lex() {\n                var r = this.next();\n                if (r) {\n                    return r;\n                } else {\n                    return this.lex();\n                }\n            },\n\n            // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\n            begin: function begin(condition) {\n                this.conditionStack.push(condition);\n            },\n\n            // pop the previously active lexer condition state off the condition stack\n            popState: function popState() {\n                var n = this.conditionStack.length - 1;\n                if (n > 0) {\n                    return this.conditionStack.pop();\n                } else {\n                    return this.conditionStack[0];\n                }\n            },\n\n            // produce the lexer rule set which is active for the currently active lexer condition state\n            _currentRules: function _currentRules() {\n                if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n                    return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n                } else {\n                    return this.conditions[\"INITIAL\"].rules;\n                }\n            },\n\n            // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\n            topState: function topState(n) {\n                n = this.conditionStack.length - 1 - Math.abs(n || 0);\n                if (n >= 0) {\n                    return this.conditionStack[n];\n                } else {\n                    return \"INITIAL\";\n                }\n            },\n\n            // alias for begin(condition)\n            pushState: function pushState(condition) {\n                this.begin(condition);\n            },\n\n            // return the number of states currently on the stack\n            stateStackSize: function stateStackSize() {\n                return this.conditionStack.length;\n            },\n            options: {},\n            performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n                var YYSTATE = YY_START;\n                switch ($avoiding_name_collisions) {\n                    case 0:\n                        /* do nothing */\n                        break;\n                    case 1:\n                        return 6;\n                        break;\n                    case 2:\n                        /* skip whitespace */\n                        break;\n                    case 3:\n                        return 5;\n                        break;\n                    case 4:\n                        this.begin(\"struct\"); /*console.log('Starting struct');*/return 17;\n                        break;\n                    case 5:\n                        /*console.log('Ending struct');*/this.popState();return 19;\n                        break;\n                    case 6:\n                        /* nothing */\n                        break;\n                    case 7:\n                        /*console.log('lex-member: ' + yy_.yytext);*/return \"MEMBER\";\n                        break;\n                    case 8:\n                        return 16;\n                        break;\n                    case 9:\n                        this.begin(\"string\");\n                        break;\n                    case 10:\n                        this.popState();\n                        break;\n                    case 11:\n                        return \"STR\";\n                        break;\n                    case 12:\n                        return 27;\n                        break;\n                    case 13:\n                        return 27;\n                        break;\n                    case 14:\n                        return 29;\n                        break;\n                    case 15:\n                        return 29;\n                        break;\n                    case 16:\n                        return 28;\n                        break;\n                    case 17:\n                        return 26;\n                        break;\n                    case 18:\n                        return 30;\n                        break;\n                    case 19:\n                        return 31;\n                        break;\n                    case 20:\n                        return 13;\n                        break;\n                    case 21:\n                        return 43;\n                        break;\n                    case 22:\n                        return 'DOT';\n                        break;\n                    case 23:\n                        return 'PLUS';\n                        break;\n                    case 24:\n                        return 40;\n                        break;\n                    case 25:\n                        return 'EQUALS';\n                        break;\n                    case 26:\n                        return 'EQUALS';\n                        break;\n                    case 27:\n                        return 47;\n                        break;\n                    case 28:\n                        return 'PUNCTUATION';\n                        break;\n                    case 29:\n                        return 46;\n                        break;\n                    case 30:\n                        return 45;\n                        break;\n                    case 31:\n                        return 42;\n                        break;\n                    case 32:\n                        return 8;\n                        break;\n                }\n            },\n            rules: [/^(?:%%[^\\n]*)/, /^(?:\\n+)/, /^(?:\\s+)/, /^(?:classDiagram\\b)/, /^(?:[\\{])/, /^(?:\\})/, /^(?:[\\n])/, /^(?:[^\\{\\}\\n]*)/, /^(?:class\\b)/, /^(?:[\"])/, /^(?:[\"])/, /^(?:[^\"]*)/, /^(?:\\s*<\\|)/, /^(?:\\s*\\|>)/, /^(?:\\s*>)/, /^(?:\\s*<)/, /^(?:\\s*\\*)/, /^(?:\\s*o\\b)/, /^(?:--)/, /^(?:\\.\\.)/, /^(?::[^#\\n;]+)/, /^(?:-)/, /^(?:\\.)/, /^(?:\\+)/, /^(?:%)/, /^(?:=)/, /^(?:=)/, /^(?:[A-Za-z]+)/, /^(?:[!\"#$%&'*+,-.`?\\\\_\\/])/, /^(?:[0-9]+)/, /^(?:[\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6]|[\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377]|[\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5]|[\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA]|[\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE]|[\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA]|[\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0]|[\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977]|[\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2]|[\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A]|[\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39]|[\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8]|[\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C]|[\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C]|[\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99]|[\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0]|[\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D]|[\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3]|[\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10]|[\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1]|[\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81]|[\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3]|[\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6]|[\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A]|[\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081]|[\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D]|[\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0]|[\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310]|[\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C]|[\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711]|[\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7]|[\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C]|[\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16]|[\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF]|[\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC]|[\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D]|[\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D]|[\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3]|[\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F]|[\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128]|[\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184]|[\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3]|[\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6]|[\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE]|[\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C]|[\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D]|[\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC]|[\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B]|[\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788]|[\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805]|[\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB]|[\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28]|[\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5]|[\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4]|[\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E]|[\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D]|[\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36]|[\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D]|[\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC]|[\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF]|[\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC])/, /^(?:\\s)/, /^(?:$)/],\n            conditions: { \"string\": { \"rules\": [10, 11], \"inclusive\": false }, \"struct\": { \"rules\": [5, 6, 7], \"inclusive\": false }, \"INITIAL\": { \"rules\": [0, 1, 2, 3, 4, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], \"inclusive\": true } }\n        };\n        return lexer;\n    })();\n    parser.lexer = lexer;\n    function Parser() {\n        this.yy = {};\n    }\n    Parser.prototype = parser;parser.Parser = Parser;\n    return new Parser();\n})();\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\n    exports.parser = classDiagram;\n    exports.Parser = classDiagram.Parser;\n    exports.parse = function () {\n        return classDiagram.parse.apply(classDiagram, arguments);\n    };\n    exports.main = function commonjsMain(args) {\n        if (!args[1]) {\n            console.log('Usage: ' + args[0] + ' FILE');\n            process.exit(1);\n        }\n        var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n        return exports.parser.parse(source);\n    };\n    if (typeof module !== 'undefined' && require.main === module) {\n        exports.main(process.argv.slice(1));\n    }\n}\n\n}).call(this,require('_process'))\n},{\"_process\":3,\"fs\":1,\"path\":2}],111:[function(require,module,exports){\n(function (global){\n/**\n * Created by knut on 15-01-14.\n */\n'use strict';\n\nvar Logger = require('../../logger');\nvar log = new Logger.Log();\n\nvar message = '';\nvar info = false;\n\nexports.setMessage = function (txt) {\n    log.debug('Setting message to: ' + txt);\n    message = txt;\n};\n\nexports.getMessage = function () {\n    return message;\n};\n\nexports.setInfo = function (inf) {\n    info = inf;\n};\n\nexports.getInfo = function () {\n    return info;\n};\n\nexports.parseError = function (err, hash) {\n    global.mermaidAPI.parseError(err, hash);\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../logger\":126}],112:[function(require,module,exports){\n/**\n * Created by knut on 14-12-11.\n */\n'use strict';\n\nvar db = require('./exampleDb');\nvar exampleParser = require('./parser/example.js');\nvar d3 = require('../../d3');\nvar Logger = require('../../logger');\nvar log = new Logger.Log();\n\n/**\n * Draws a an info picture in the tag with id: id based on the graph definition in text.\n * @param text\n * @param id\n */\nexports.draw = function (txt, id, ver) {\n    var parser;\n    parser = exampleParser.parser;\n    parser.yy = db;\n    log.debug('Renering example diagram');\n    // Parse the graph definition\n    parser.parse(txt);\n\n    // Fetch the default direction, use TD if none was found\n    var svg = d3.select('#' + id);\n\n    var g = svg.append('g');\n\n    g.append('text') // text label for the x axis\n    .attr('x', 100).attr('y', 40).attr('class', 'version').attr('font-size', '32px').style('text-anchor', 'middle').text('mermaid ' + ver);\n\n    /*\n    var box = exports.bounds.getBounds();\n     var height = box.stopy-box.starty+2*conf.diagramMarginY;\n    var width  = box.stopx-box.startx+2*conf.diagramMarginX;*/\n\n    svg.attr('height', 100);\n    svg.attr('width', 400);\n    //svg.attr('viewBox', '0 0 300 150');\n};\n\n},{\"../../d3\":107,\"../../logger\":126,\"./exampleDb\":111,\"./parser/example.js\":113}],113:[function(require,module,exports){\n(function (process){\n/* parser generated by jison 0.4.15 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\n\"use strict\";\n\nvar example = (function () {\n    var o = function o(k, v, _o, l) {\n        for (_o = _o || {}, l = k.length; l--; _o[k[l]] = v);return _o;\n    },\n        $V0 = [6, 9, 10, 12];\n    var parser = { trace: function trace() {},\n        yy: {},\n        symbols_: { \"error\": 2, \"start\": 3, \"info\": 4, \"document\": 5, \"EOF\": 6, \"line\": 7, \"statement\": 8, \"NL\": 9, \"showInfo\": 10, \"message\": 11, \"say\": 12, \"TXT\": 13, \"$accept\": 0, \"$end\": 1 },\n        terminals_: { 2: \"error\", 4: \"info\", 6: \"EOF\", 9: \"NL\", 10: \"showInfo\", 12: \"say\", 13: \"TXT\" },\n        productions_: [0, [3, 3], [5, 0], [5, 2], [7, 1], [7, 1], [8, 1], [8, 1], [11, 2]],\n        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, /* action[1] */$$, /* vstack */_$ /* lstack */) {\n            /* this == yyval */\n\n            var $0 = $$.length - 1;\n            switch (yystate) {\n                case 1:\n                    return yy;\n                    break;\n                case 4:\n\n                    break;\n                case 6:\n                    yy.setInfo(true);\n                    break;\n                case 7:\n                    yy.setMessage($$[$0]);\n                    break;\n                case 8:\n                    this.$ = $$[$0 - 1].substring(1).trim().replace(/\\\\n/gm, \"\\n\");\n                    break;\n            }\n        },\n        table: [{ 3: 1, 4: [1, 2] }, { 1: [3] }, o($V0, [2, 2], { 5: 3 }), { 6: [1, 4], 7: 5, 8: 6, 9: [1, 7], 10: [1, 8], 11: 9, 12: [1, 10] }, { 1: [2, 1] }, o($V0, [2, 3]), o($V0, [2, 4]), o($V0, [2, 5]), o($V0, [2, 6]), o($V0, [2, 7]), { 13: [1, 11] }, o($V0, [2, 8])],\n        defaultActions: { 4: [2, 1] },\n        parseError: function parseError(str, hash) {\n            if (hash.recoverable) {\n                this.trace(str);\n            } else {\n                var _parseError = function _parseError(msg, hash) {\n                    this.message = msg;\n                    this.hash = hash;\n                };\n\n                _parseError.prototype = new Error();\n\n                throw new _parseError(str, hash);\n            }\n        },\n        parse: function parse(input) {\n            var self = this,\n                stack = [0],\n                tstack = [],\n                vstack = [null],\n                lstack = [],\n                table = this.table,\n                yytext = '',\n                yylineno = 0,\n                yyleng = 0,\n                recovering = 0,\n                TERROR = 2,\n                EOF = 1;\n            var args = lstack.slice.call(arguments, 1);\n            var lexer = Object.create(this.lexer);\n            var sharedState = { yy: {} };\n            for (var k in this.yy) {\n                if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n                    sharedState.yy[k] = this.yy[k];\n                }\n            }\n            lexer.setInput(input, sharedState.yy);\n            sharedState.yy.lexer = lexer;\n            sharedState.yy.parser = this;\n            if (typeof lexer.yylloc == 'undefined') {\n                lexer.yylloc = {};\n            }\n            var yyloc = lexer.yylloc;\n            lstack.push(yyloc);\n            var ranges = lexer.options && lexer.options.ranges;\n            if (typeof sharedState.yy.parseError === 'function') {\n                this.parseError = sharedState.yy.parseError;\n            } else {\n                this.parseError = Object.getPrototypeOf(this).parseError;\n            }\n            function popStack(n) {\n                stack.length = stack.length - 2 * n;\n                vstack.length = vstack.length - n;\n                lstack.length = lstack.length - n;\n            }\n            _token_stack: var lex = function lex() {\n                var token;\n                token = lexer.lex() || EOF;\n                if (typeof token !== 'number') {\n                    token = self.symbols_[token] || token;\n                }\n                return token;\n            };\n            var symbol,\n                preErrorSymbol,\n                state,\n                action,\n                a,\n                r,\n                yyval = {},\n                p,\n                len,\n                newState,\n                expected;\n            while (true) {\n                state = stack[stack.length - 1];\n                if (this.defaultActions[state]) {\n                    action = this.defaultActions[state];\n                } else {\n                    if (symbol === null || typeof symbol == 'undefined') {\n                        symbol = lex();\n                    }\n                    action = table[state] && table[state][symbol];\n                }\n                if (typeof action === 'undefined' || !action.length || !action[0]) {\n                    var errStr = '';\n                    expected = [];\n                    for (p in table[state]) {\n                        if (this.terminals_[p] && p > TERROR) {\n                            expected.push('\\'' + this.terminals_[p] + '\\'');\n                        }\n                    }\n                    if (lexer.showPosition) {\n                        errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                    } else {\n                        errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                    }\n                    this.parseError(errStr, {\n                        text: lexer.match,\n                        token: this.terminals_[symbol] || symbol,\n                        line: lexer.yylineno,\n                        loc: yyloc,\n                        expected: expected\n                    });\n                }\n                if (action[0] instanceof Array && action.length > 1) {\n                    throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n                }\n                switch (action[0]) {\n                    case 1:\n                        stack.push(symbol);\n                        vstack.push(lexer.yytext);\n                        lstack.push(lexer.yylloc);\n                        stack.push(action[1]);\n                        symbol = null;\n                        if (!preErrorSymbol) {\n                            yyleng = lexer.yyleng;\n                            yytext = lexer.yytext;\n                            yylineno = lexer.yylineno;\n                            yyloc = lexer.yylloc;\n                            if (recovering > 0) {\n                                recovering--;\n                            }\n                        } else {\n                            symbol = preErrorSymbol;\n                            preErrorSymbol = null;\n                        }\n                        break;\n                    case 2:\n                        len = this.productions_[action[1]][1];\n                        yyval.$ = vstack[vstack.length - len];\n                        yyval._$ = {\n                            first_line: lstack[lstack.length - (len || 1)].first_line,\n                            last_line: lstack[lstack.length - 1].last_line,\n                            first_column: lstack[lstack.length - (len || 1)].first_column,\n                            last_column: lstack[lstack.length - 1].last_column\n                        };\n                        if (ranges) {\n                            yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\n                        }\n                        r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\n                        if (typeof r !== 'undefined') {\n                            return r;\n                        }\n                        if (len) {\n                            stack = stack.slice(0, -1 * len * 2);\n                            vstack = vstack.slice(0, -1 * len);\n                            lstack = lstack.slice(0, -1 * len);\n                        }\n                        stack.push(this.productions_[action[1]][0]);\n                        vstack.push(yyval.$);\n                        lstack.push(yyval._$);\n                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n                        stack.push(newState);\n                        break;\n                    case 3:\n                        return true;\n                }\n            }\n            return true;\n        } };\n    /* generated by jison-lex 0.3.4 */\n    var lexer = (function () {\n        var lexer = {\n\n            EOF: 1,\n\n            parseError: function parseError(str, hash) {\n                if (this.yy.parser) {\n                    this.yy.parser.parseError(str, hash);\n                } else {\n                    throw new Error(str);\n                }\n            },\n\n            // resets the lexer, sets new input\n            setInput: function setInput(input, yy) {\n                this.yy = yy || this.yy || {};\n                this._input = input;\n                this._more = this._backtrack = this.done = false;\n                this.yylineno = this.yyleng = 0;\n                this.yytext = this.matched = this.match = '';\n                this.conditionStack = ['INITIAL'];\n                this.yylloc = {\n                    first_line: 1,\n                    first_column: 0,\n                    last_line: 1,\n                    last_column: 0\n                };\n                if (this.options.ranges) {\n                    this.yylloc.range = [0, 0];\n                }\n                this.offset = 0;\n                return this;\n            },\n\n            // consumes and returns one char from the input\n            input: function input() {\n                var ch = this._input[0];\n                this.yytext += ch;\n                this.yyleng++;\n                this.offset++;\n                this.match += ch;\n                this.matched += ch;\n                var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n                if (lines) {\n                    this.yylineno++;\n                    this.yylloc.last_line++;\n                } else {\n                    this.yylloc.last_column++;\n                }\n                if (this.options.ranges) {\n                    this.yylloc.range[1]++;\n                }\n\n                this._input = this._input.slice(1);\n                return ch;\n            },\n\n            // unshifts one char (or a string) into the input\n            unput: function unput(ch) {\n                var len = ch.length;\n                var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n                this._input = ch + this._input;\n                this.yytext = this.yytext.substr(0, this.yytext.length - len);\n                //this.yyleng -= len;\n                this.offset -= len;\n                var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n                this.match = this.match.substr(0, this.match.length - 1);\n                this.matched = this.matched.substr(0, this.matched.length - 1);\n\n                if (lines.length - 1) {\n                    this.yylineno -= lines.length - 1;\n                }\n                var r = this.yylloc.range;\n\n                this.yylloc = {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.yylineno + 1,\n                    first_column: this.yylloc.first_column,\n                    last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n                };\n\n                if (this.options.ranges) {\n                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n                }\n                this.yyleng = this.yytext.length;\n                return this;\n            },\n\n            // When called from action, caches matched text and appends it on next action\n            more: function more() {\n                this._more = true;\n                return this;\n            },\n\n            // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\n            reject: function reject() {\n                if (this.options.backtrack_lexer) {\n                    this._backtrack = true;\n                } else {\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                        text: \"\",\n                        token: null,\n                        line: this.yylineno\n                    });\n                }\n                return this;\n            },\n\n            // retain first n characters of the match\n            less: function less(n) {\n                this.unput(this.match.slice(n));\n            },\n\n            // displays already matched input, i.e. for error messages\n            pastInput: function pastInput() {\n                var past = this.matched.substr(0, this.matched.length - this.match.length);\n                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\\n/g, \"\");\n            },\n\n            // displays upcoming input, i.e. for error messages\n            upcomingInput: function upcomingInput() {\n                var next = this.match;\n                if (next.length < 20) {\n                    next += this._input.substr(0, 20 - next.length);\n                }\n                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n            },\n\n            // displays the character position where the lexing error occurred, i.e. for error messages\n            showPosition: function showPosition() {\n                var pre = this.pastInput();\n                var c = new Array(pre.length + 1).join(\"-\");\n                return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n            },\n\n            // test the lexed token: return FALSE when not a match, otherwise return token\n            test_match: function test_match(match, indexed_rule) {\n                var token, lines, backup;\n\n                if (this.options.backtrack_lexer) {\n                    // save context\n                    backup = {\n                        yylineno: this.yylineno,\n                        yylloc: {\n                            first_line: this.yylloc.first_line,\n                            last_line: this.last_line,\n                            first_column: this.yylloc.first_column,\n                            last_column: this.yylloc.last_column\n                        },\n                        yytext: this.yytext,\n                        match: this.match,\n                        matches: this.matches,\n                        matched: this.matched,\n                        yyleng: this.yyleng,\n                        offset: this.offset,\n                        _more: this._more,\n                        _input: this._input,\n                        yy: this.yy,\n                        conditionStack: this.conditionStack.slice(0),\n                        done: this.done\n                    };\n                    if (this.options.ranges) {\n                        backup.yylloc.range = this.yylloc.range.slice(0);\n                    }\n                }\n\n                lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n                if (lines) {\n                    this.yylineno += lines.length;\n                }\n                this.yylloc = {\n                    first_line: this.yylloc.last_line,\n                    last_line: this.yylineno + 1,\n                    first_column: this.yylloc.last_column,\n                    last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\n                };\n                this.yytext += match[0];\n                this.match += match[0];\n                this.matches = match;\n                this.yyleng = this.yytext.length;\n                if (this.options.ranges) {\n                    this.yylloc.range = [this.offset, this.offset += this.yyleng];\n                }\n                this._more = false;\n                this._backtrack = false;\n                this._input = this._input.slice(match[0].length);\n                this.matched += match[0];\n                token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n                if (this.done && this._input) {\n                    this.done = false;\n                }\n                if (token) {\n                    return token;\n                } else if (this._backtrack) {\n                    // recover context\n                    for (var k in backup) {\n                        this[k] = backup[k];\n                    }\n                    return false; // rule action called reject() implying the next rule should be tested instead.\n                }\n                return false;\n            },\n\n            // return next match in input\n            next: function next() {\n                if (this.done) {\n                    return this.EOF;\n                }\n                if (!this._input) {\n                    this.done = true;\n                }\n\n                var token, match, tempMatch, index;\n                if (!this._more) {\n                    this.yytext = '';\n                    this.match = '';\n                }\n                var rules = this._currentRules();\n                for (var i = 0; i < rules.length; i++) {\n                    tempMatch = this._input.match(this.rules[rules[i]]);\n                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                        match = tempMatch;\n                        index = i;\n                        if (this.options.backtrack_lexer) {\n                            token = this.test_match(tempMatch, rules[i]);\n                            if (token !== false) {\n                                return token;\n                            } else if (this._backtrack) {\n                                match = false;\n                                continue; // rule action called reject() implying a rule MISmatch.\n                            } else {\n                                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                                    return false;\n                                }\n                        } else if (!this.options.flex) {\n                            break;\n                        }\n                    }\n                }\n                if (match) {\n                    token = this.test_match(match, rules[index]);\n                    if (token !== false) {\n                        return token;\n                    }\n                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                    return false;\n                }\n                if (this._input === \"\") {\n                    return this.EOF;\n                } else {\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                        text: \"\",\n                        token: null,\n                        line: this.yylineno\n                    });\n                }\n            },\n\n            // return next match that has a token\n            lex: function lex() {\n                var r = this.next();\n                if (r) {\n                    return r;\n                } else {\n                    return this.lex();\n                }\n            },\n\n            // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\n            begin: function begin(condition) {\n                this.conditionStack.push(condition);\n            },\n\n            // pop the previously active lexer condition state off the condition stack\n            popState: function popState() {\n                var n = this.conditionStack.length - 1;\n                if (n > 0) {\n                    return this.conditionStack.pop();\n                } else {\n                    return this.conditionStack[0];\n                }\n            },\n\n            // produce the lexer rule set which is active for the currently active lexer condition state\n            _currentRules: function _currentRules() {\n                if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n                    return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n                } else {\n                    return this.conditions[\"INITIAL\"].rules;\n                }\n            },\n\n            // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\n            topState: function topState(n) {\n                n = this.conditionStack.length - 1 - Math.abs(n || 0);\n                if (n >= 0) {\n                    return this.conditionStack[n];\n                } else {\n                    return \"INITIAL\";\n                }\n            },\n\n            // alias for begin(condition)\n            pushState: function pushState(condition) {\n                this.begin(condition);\n            },\n\n            // return the number of states currently on the stack\n            stateStackSize: function stateStackSize() {\n                return this.conditionStack.length;\n            },\n            options: { \"case-insensitive\": true },\n            performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n                // Pre-lexer code can go here\n\n                var YYSTATE = YY_START;\n                switch ($avoiding_name_collisions) {\n                    case 0:\n                        return 9;\n                        break;\n                    case 1:\n                        return 10;\n                        break;\n                    case 2:\n                        return 4;\n                        break;\n                    case 3:\n                        return 12;\n                        break;\n                    case 4:\n                        return 13;\n                        break;\n                    case 5:\n                        return 6;\n                        break;\n                    case 6:\n                        return 'INVALID';\n                        break;\n                }\n            },\n            rules: [/^(?:[\\n]+)/i, /^(?:showInfo\\b)/i, /^(?:info\\b)/i, /^(?:say\\b)/i, /^(?::[^#\\n;]+)/i, /^(?:$)/i, /^(?:.)/i],\n            conditions: { \"INITIAL\": { \"rules\": [0, 1, 2, 3, 4, 5, 6], \"inclusive\": true } }\n        };\n        return lexer;\n    })();\n    parser.lexer = lexer;\n    function Parser() {\n        this.yy = {};\n    }\n    Parser.prototype = parser;parser.Parser = Parser;\n    return new Parser();\n})();\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\n    exports.parser = example;\n    exports.Parser = example.Parser;\n    exports.parse = function () {\n        return example.parse.apply(example, arguments);\n    };\n    exports.main = function commonjsMain(args) {\n        if (!args[1]) {\n            console.log('Usage: ' + args[0] + ' FILE');\n            process.exit(1);\n        }\n        var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n        return exports.parser.parse(source);\n    };\n    if (typeof module !== 'undefined' && require.main === module) {\n        exports.main(process.argv.slice(1));\n    }\n}\n\n}).call(this,require('_process'))\n},{\"_process\":3,\"fs\":1,\"path\":2}],114:[function(require,module,exports){\n/* global window */\n'use strict';\n\nvar Logger = require('../../logger');\nvar log = new Logger.Log();\n\nvar dagreD3;\n//log.debug('setting up dagre-d3');\nif (require) {\n  try {\n    dagreD3 = require('dagre-d3');\n    //log.debug('Got it (dagre-d3)');\n  } catch (e) {\n    log.debug('Could not load dagre-d3');\n  }\n}\n\nif (!dagreD3) {\n  dagreD3 = window.dagreD3;\n}\n\nmodule.exports = dagreD3;\n\n},{\"../../logger\":126,\"dagre-d3\":5}],115:[function(require,module,exports){\n/**\n * Created by knut on 14-12-11.\n */\n'use strict';\n\nvar graph = require('./graphDb');\nvar flow = require('./parser/flow');\nvar dot = require('./parser/dot');\nvar d3 = require('../../d3');\nvar dagreD3 = require('./dagre-d3');\nvar Logger = require('../../logger');\nvar log = new Logger.Log();\n\nvar conf = {};\nmodule.exports.setConf = function (cnf) {\n    var keys = Object.keys(cnf);\n    var i;\n    for (i = 0; i < keys.length; i++) {\n        conf[keys[i]] = cnf[keys[i]];\n    }\n};\n\n/**\n * Function that adds the vertices found in the graph definition to the graph to be rendered.\n * @param vert Object containing the vertices.\n * @param g The graph that is to be drawn.\n */\nexports.addVertices = function (vert, g) {\n    var keys = Object.keys(vert);\n\n    var styleFromStyleArr = function styleFromStyleArr(styleStr, arr) {\n        var i;\n        // Create a compound style definition from the style definitions found for the node in the graph definition\n        for (i = 0; i < arr.length; i++) {\n            if (typeof arr[i] !== 'undefined') {\n                styleStr = styleStr + arr[i] + ';';\n            }\n        }\n\n        return styleStr;\n    };\n\n    // Iterate through each item in the vertice object (containing all the vertices found) in the graph definition\n    keys.forEach(function (id) {\n        var vertice = vert[id];\n        var verticeText;\n\n        /**\n         * Variable for storing the classes for the vertice\n         * @type {string}\n         */\n        var classStr = '';\n\n        //log.debug(vertice.classes);\n\n        if (vertice.classes.length > 0) {\n            classStr = vertice.classes.join(' ');\n        }\n\n        /**\n         * Variable for storing the extracted style for the vertice\n         * @type {string}\n         */\n        var style = '';\n        // Create a compound style definition from the style definitions found for the node in the graph definition\n        style = styleFromStyleArr(style, vertice.styles);\n\n        // Use vertice id as text in the box if no text is provided by the graph definition\n        if (typeof vertice.text === 'undefined') {\n            verticeText = vertice.id;\n        } else {\n            verticeText = vertice.text;\n        }\n\n        var labelTypeStr = '';\n        if (conf.htmlLabels) {\n            labelTypeStr = 'html';\n            verticeText = verticeText.replace(/fa:fa[\\w\\-]+/g, function (s) {\n                return '<i class=\"fa ' + s.substring(3) + '\"></i>';\n            });\n        } else {\n            verticeText = verticeText.replace(/<br>/g, '\\n');\n            labelTypeStr = 'text';\n        }\n\n        var radious = 0;\n        var _shape = '';\n\n        // Set the shape based parameters\n        switch (vertice.type) {\n            case 'round':\n                radious = 5;\n                _shape = 'rect';\n                break;\n            case 'square':\n                _shape = 'rect';\n                break;\n            case 'diamond':\n                _shape = 'question';\n                break;\n            case 'odd':\n                _shape = 'rect_left_inv_arrow';\n                break;\n            case 'odd_right':\n                _shape = 'rect_left_inv_arrow';\n                break;\n            case 'circle':\n                _shape = 'circle';\n                break;\n            case 'ellipse':\n                _shape = 'ellipse';\n                break;\n            case 'group':\n                _shape = 'rect';\n                verticeText = '';\n                break;\n            default:\n                _shape = 'rect';\n        }\n        // Add the node\n        g.setNode(vertice.id, { labelType: labelTypeStr, shape: _shape, label: verticeText, rx: radious, ry: radious, 'class': classStr, style: style, id: vertice.id });\n    });\n};\n\n/**\n * Add edges to graph based on parsed graph defninition\n * @param {Object} edges The edges to add to the graph\n * @param {Object} g The graph object\n */\nexports.addEdges = function (edges, g) {\n    var cnt = 0;\n    var aHead;\n\n    var defaultStyle;\n    if (typeof edges.defaultStyle !== 'undefined') {\n        defaultStyle = edges.defaultStyle.toString().replace(/,/g, ';');\n    }\n\n    edges.forEach(function (edge) {\n        cnt++;\n\n        // Set link type for rendering\n        if (edge.type === 'arrow_open') {\n            aHead = 'none';\n        } else {\n            aHead = 'normal';\n        }\n\n        var style = '';\n\n        if (typeof edge.style !== 'undefined') {\n            edge.style.forEach(function (s) {\n                style = style + s + ';';\n            });\n        } else {\n            switch (edge.stroke) {\n                case 'normal':\n                    style = 'fill:none';\n                    if (typeof defaultStyle !== 'undefined') {\n                        style = defaultStyle;\n                    }\n                    break;\n                case 'dotted':\n                    style = 'stroke: #333; fill:none;stroke-width:2px;stroke-dasharray:3;';\n                    break;\n                case 'thick':\n                    style = 'stroke: #333; stroke-width: 3.5px;fill:none';\n                    break;\n            }\n        }\n\n        // Add the edge to the graph\n        if (typeof edge.text === 'undefined') {\n            if (typeof edge.style === 'undefined') {\n                g.setEdge(edge.start, edge.end, { style: style, arrowhead: aHead }, cnt);\n            } else {\n                g.setEdge(edge.start, edge.end, {\n                    style: style, arrowheadStyle: 'fill: #333', arrowhead: aHead\n                }, cnt);\n            }\n        }\n        // Edge with text\n        else {\n                var edgeText = edge.text.replace(/<br>/g, '\\n');\n                if (typeof edge.style === 'undefined') {\n                    if (conf.htmlLabels) {\n                        g.setEdge(edge.start, edge.end, { labelType: 'html', style: style, labelpos: 'c', label: '<span class=\"edgeLabel\">' + edge.text + '</span>', arrowheadStyle: 'fill: #333', arrowhead: aHead }, cnt);\n                    } else {\n                        g.setEdge(edge.start, edge.end, { labelType: 'text', style: 'stroke: #333; stroke-width: 1.5px;fill:none', labelpos: 'c', label: edgeText, arrowheadStyle: 'fill: #333', arrowhead: aHead }, cnt);\n                    }\n                } else {\n                    g.setEdge(edge.start, edge.end, {\n                        labelType: 'text', style: style, arrowheadStyle: 'fill: #333', label: edgeText, arrowhead: aHead\n                    }, cnt);\n                }\n            }\n    });\n};\n\n/**\n * Returns the all the styles from classDef statements in the graph definition.\n * @returns {object} classDef styles\n */\nexports.getClasses = function (text, isDot) {\n    var parser;\n    graph.clear();\n    if (isDot) {\n        parser = dot.parser;\n    } else {\n        parser = flow.parser;\n    }\n    parser.yy = graph;\n\n    // Parse the graph definition\n    parser.parse(text);\n\n    var classes = graph.getClasses();\n\n    // Add default class if undefined\n    if (typeof classes['default'] === 'undefined') {\n        classes['default'] = { id: 'default' };\n        //classes.default.styles = ['fill:#ffa','stroke:#666','stroke-width:3px'];\n        classes['default'].styles = [];\n        classes['default'].clusterStyles = ['rx:4px', 'fill: rgb(255, 255, 222)', 'rx: 4px', 'stroke: rgb(170, 170, 51)', 'stroke-width: 1px'];\n        classes['default'].nodeLabelStyles = ['fill:#000', 'stroke:none', 'font-weight:300', 'font-family:\"Helvetica Neue\",Helvetica,Arial,sans-serf', 'font-size:14px'];\n        classes['default'].edgeLabelStyles = ['fill:#000', 'stroke:none', 'font-weight:300', 'font-family:\"Helvetica Neue\",Helvetica,Arial,sans-serf', 'font-size:14px'];\n    }\n    return classes;\n};\n\n/**\n * Draws a flowchart in the tag with id: id based on the graph definition in text.\n * @param text\n * @param id\n */\nexports.draw = function (text, id, isDot) {\n    log.debug('Drawing flowchart');\n    var parser;\n    graph.clear();\n    if (isDot) {\n        parser = dot.parser;\n    } else {\n        parser = flow.parser;\n    }\n    parser.yy = graph;\n\n    // Parse the graph definition\n    try {\n\n        parser.parse(text);\n    } catch (err) {\n        log.debug('Parsing failed');\n    }\n\n    // Fetch the default direction, use TD if none was found\n    var dir;\n    dir = graph.getDirection();\n    if (typeof dir === 'undefined') {\n        dir = 'TD';\n    }\n\n    // Create the input mermaid.graph\n    var g = new dagreD3.graphlib.Graph({\n        multigraph: true,\n        compound: true\n    }).setGraph({\n        rankdir: dir,\n        marginx: 20,\n        marginy: 20\n\n    }).setDefaultEdgeLabel(function () {\n        return {};\n    });\n\n    var subG;\n    var subGraphs = graph.getSubGraphs();\n    var i = 0;\n    for (i = subGraphs.length - 1; i >= 0; i--) {\n        subG = subGraphs[i];\n        graph.addVertex(subG.id, subG.title, 'group', undefined);\n    }\n\n    // Fetch the verices/nodes and edges/links from the parsed graph definition\n    var vert = graph.getVertices();\n\n    //log.debug(vert);\n    var edges = graph.getEdges();\n\n    i = 0;\n    var j;\n    for (i = subGraphs.length - 1; i >= 0; i--) {\n        subG = subGraphs[i];\n\n        d3.selectAll('cluster').append('text');\n\n        for (j = 0; j < subG.nodes.length; j++) {\n            //log.debug('Setting node',subG.nodes[j],' to subgraph '+id);\n            g.setParent(subG.nodes[j], subG.id);\n        }\n    }\n    exports.addVertices(vert, g);\n    exports.addEdges(edges, g);\n\n    // Create the renderer\n    var render = new dagreD3.render();\n\n    // Add custom shape for rhombus type of boc (decision)\n    render.shapes().question = function (parent, bbox, node) {\n        var w = bbox.width,\n            h = bbox.height,\n            s = (w + h) * 0.8,\n            points = [{ x: s / 2, y: 0 }, { x: s, y: -s / 2 }, { x: s / 2, y: -s }, { x: 0, y: -s / 2 }];\n        var shapeSvg = parent.insert('polygon', ':first-child').attr('points', points.map(function (d) {\n            return d.x + ',' + d.y;\n        }).join(' ')).attr('rx', 5).attr('ry', 5).attr('transform', 'translate(' + -s / 2 + ',' + s * 2 / 4 + ')');\n        node.intersect = function (point) {\n            return dagreD3.intersect.polygon(node, points, point);\n        };\n        return shapeSvg;\n    };\n\n    // Add custom shape for box with inverted arrow on left side\n    render.shapes().rect_left_inv_arrow = function (parent, bbox, node) {\n        var w = bbox.width,\n            h = bbox.height,\n            points = [{ x: -h / 2, y: 0 }, { x: w, y: 0 }, { x: w, y: -h }, { x: -h / 2, y: -h }, { x: 0, y: -h / 2 }];\n        var shapeSvg = parent.insert('polygon', ':first-child').attr('points', points.map(function (d) {\n            return d.x + ',' + d.y;\n        }).join(' ')).attr('transform', 'translate(' + -w / 2 + ',' + h * 2 / 4 + ')');\n        node.intersect = function (point) {\n            return dagreD3.intersect.polygon(node, points, point);\n        };\n        return shapeSvg;\n    };\n\n    // Add custom shape for box with inverted arrow on right side\n    render.shapes().rect_right_inv_arrow = function (parent, bbox, node) {\n        var w = bbox.width,\n            h = bbox.height,\n            points = [{ x: 0, y: 0 }, { x: w + h / 2, y: 0 }, { x: w, y: -h / 2 }, { x: w + h / 2, y: -h }, { x: 0, y: -h }];\n        var shapeSvg = parent.insert('polygon', ':first-child').attr('points', points.map(function (d) {\n            return d.x + ',' + d.y;\n        }).join(' ')).attr('transform', 'translate(' + -w / 2 + ',' + h * 2 / 4 + ')');\n        node.intersect = function (point) {\n            return dagreD3.intersect.polygon(node, points, point);\n        };\n        return shapeSvg;\n    };\n\n    // Add our custom arrow - an empty arrowhead\n    render.arrows().none = function normal(parent, id, edge, type) {\n        var marker = parent.append('marker').attr('id', id).attr('viewBox', '0 0 10 10').attr('refX', 9).attr('refY', 5).attr('markerUnits', 'strokeWidth').attr('markerWidth', 8).attr('markerHeight', 6).attr('orient', 'auto');\n\n        var path = marker.append('path').attr('d', 'M 0 0 L 0 0 L 0 0 z');\n        dagreD3.util.applyStyle(path, edge[type + 'Style']);\n    };\n\n    // Set up an SVG group so that we can translate the final graph.\n    var svg = d3.select('#' + id);\n    //svgGroup = d3.select('#' + id + ' g');\n\n    // Run the renderer. This is what draws the final graph.\n    var element = d3.select('#' + id + ' g');\n    render(element, g);\n\n    //var tip = d3.tip().html(function(d) { return d; });\n    element.selectAll('g.node').attr('title', function () {\n        return graph.getTooltip(this.id);\n    });\n\n    /*\n     var xPos = document.querySelectorAll('.clusters rect')[0].x.baseVal.value;\n     var width = document.querySelectorAll('.clusters rect')[0].width.baseVal.value;\n        var cluster = d3.selectAll('.cluster');\n        var te = cluster.append('text');\n        te.attr('x', xPos+width/2);\n        te.attr('y', 12);\n        //te.stroke('black');\n        te.attr('id', 'apa12');\n        te.style('text-anchor', 'middle');\n        te.text('Title for cluster');\n    */\n    if (conf.useMaxWidth) {\n        // Center the graph\n        svg.attr('height', '100%');\n        svg.attr('width', conf.width);\n        //svg.attr('viewBox', svgb.getBBox().x + ' 0 '+ g.graph().width+' '+ g.graph().height);\n        svg.attr('viewBox', '0 0 ' + (g.graph().width + 20) + ' ' + (g.graph().height + 20));\n        svg.attr('style', 'max-width:' + (g.graph().width + 20) + 'px;');\n    } else {\n        // Center the graph\n        svg.attr('height', g.graph().height);\n        if (typeof conf.width === 'undefined') {\n            svg.attr('width', g.graph().width);\n        } else {\n            svg.attr('width', conf.width);\n        }\n        //svg.attr('viewBox', svgb.getBBox().x + ' 0 '+ g.graph().width+' '+ g.graph().height);\n        svg.attr('viewBox', '0 0 ' + (g.graph().width + 20) + ' ' + (g.graph().height + 20));\n    }\n\n    // Index nodes\n    graph.indexNodes('subGraph' + i);\n\n    for (i = 0; i < subGraphs.length; i++) {\n        subG = subGraphs[i];\n\n        if (subG.title !== 'undefined') {\n            var clusterRects = document.querySelectorAll('#' + id + ' #' + subG.id + ' rect');\n            //log.debug('looking up: #' + id + ' #' + subG.id)\n            var clusterEl = document.querySelectorAll('#' + id + ' #' + subG.id);\n\n            var xPos = clusterRects[0].x.baseVal.value;\n            var yPos = clusterRects[0].y.baseVal.value;\n            var width = clusterRects[0].width.baseVal.value;\n            var cluster = d3.select(clusterEl[0]);\n            var te = cluster.append('text');\n            te.attr('x', xPos + width / 2);\n            te.attr('y', yPos + 14);\n            te.attr('fill', 'black');\n            te.attr('stroke', 'none');\n            te.attr('id', id + 'Text');\n            te.style('text-anchor', 'middle');\n\n            if (typeof subG.title === 'undefined') {\n                te.text('Undef');\n            } else {\n                //te.text(subGraphs[subGraphs.length-i-1].title);\n                te.text(subG.title);\n            }\n        }\n    }\n};\n\n},{\"../../d3\":107,\"../../logger\":126,\"./dagre-d3\":114,\"./graphDb\":116,\"./parser/dot\":117,\"./parser/flow\":118}],116:[function(require,module,exports){\n(function (global){\n/**\n * Created by knut on 14-11-03.\n */\n'use strict';\n\nvar Logger = require('../../logger');\nvar log = new Logger.Log();\n\nvar d3 = require('../../d3');\nvar vertices = {};\nvar edges = [];\nvar classes = [];\nvar subGraphs = [];\nvar tooltips = {};\nvar subCount = 0;\nvar direction;\n// Functions to be run after graph rendering\nvar funs = [];\n/**\n * Function called by parser when a node definition has been found\n * @param id\n * @param text\n * @param type\n * @param style\n */\nexports.addVertex = function (id, text, type, style) {\n    var txt;\n\n    if (typeof id === 'undefined') {\n        return;\n    }\n    if (id.trim().length === 0) {\n        return;\n    }\n\n    if (typeof vertices[id] === 'undefined') {\n        vertices[id] = { id: id, styles: [], classes: [] };\n    }\n    if (typeof text !== 'undefined') {\n        txt = text.trim();\n\n        // strip quotes if string starts and exnds with a quote\n        if (txt[0] === '\"' && txt[txt.length - 1] === '\"') {\n            txt = txt.substring(1, txt.length - 1);\n        }\n\n        vertices[id].text = txt;\n    }\n    if (typeof type !== 'undefined') {\n        vertices[id].type = type;\n    }\n    if (typeof type !== 'undefined') {\n        vertices[id].type = type;\n    }\n    if (typeof style !== 'undefined') {\n        if (style !== null) {\n            style.forEach(function (s) {\n                vertices[id].styles.push(s);\n            });\n        }\n    }\n};\n\n/**\n * Function called by parser when a link/edge definition has been found\n * @param start\n * @param end\n * @param type\n * @param linktext\n */\nexports.addLink = function (start, end, type, linktext) {\n    log.debug('Got edge', start, end);\n    var edge = { start: start, end: end, type: undefined, text: '' };\n    linktext = type.text;\n\n    if (typeof linktext !== 'undefined') {\n        edge.text = linktext.trim();\n\n        // strip quotes if string starts and exnds with a quote\n        if (edge.text[0] === '\"' && edge.text[edge.text.length - 1] === '\"') {\n            edge.text = edge.text.substring(1, edge.text.length - 1);\n        }\n    }\n\n    if (typeof type !== 'undefined') {\n        edge.type = type.type;\n        edge.stroke = type.stroke;\n    }\n    edges.push(edge);\n};\n/**\n * Updates a link with a style\n * @param pos\n * @param style\n */\nexports.updateLink = function (pos, style) {\n    if (pos === 'default') {\n        edges.defaultStyle = style;\n    } else {\n        edges[pos].style = style;\n    }\n};\n\nexports.addClass = function (id, style) {\n    if (typeof classes[id] === 'undefined') {\n        classes[id] = { id: id, styles: [] };\n    }\n\n    if (typeof style !== 'undefined') {\n        if (style !== null) {\n            style.forEach(function (s) {\n                classes[id].styles.push(s);\n            });\n        }\n    }\n};\n\n/**\n * Called by parser when a graph definition is found, stores the direction of the chart.\n * @param dir\n */\nexports.setDirection = function (dir) {\n    direction = dir;\n};\n\n/**\n * Called by parser when a graph definition is found, stores the direction of the chart.\n * @param dir\n */\nexports.setClass = function (id, className) {\n    if (id.indexOf(',') > 0) {\n        id.split(',').forEach(function (id2) {\n            if (typeof vertices[id2] !== 'undefined') {\n                vertices[id2].classes.push(className);\n            }\n        });\n    } else {\n        if (typeof vertices[id] !== 'undefined') {\n            vertices[id].classes.push(className);\n        }\n    }\n};\n\nvar setTooltip = function setTooltip(id, tooltip) {\n    if (typeof tooltip !== 'undefined') {\n        tooltips[id] = tooltip;\n    }\n};\n\nvar setClickFun = function setClickFun(id, functionName) {\n    if (typeof functionName === 'undefined') {\n        return;\n    }\n    if (typeof vertices[id] !== 'undefined') {\n        funs.push(function (element) {\n            var elem = d3.select(element).select('#' + id);\n            if (elem !== null) {\n                elem.on('click', function () {\n                    eval(functionName + '(\\'' + id + '\\')'); // jshint ignore:line\n                });\n            }\n        });\n    }\n};\n\nvar setLink = function setLink(id, linkStr) {\n    if (typeof linkStr === 'undefined') {\n        return;\n    }\n    if (typeof vertices[id] !== 'undefined') {\n        funs.push(function (element) {\n            var elem = d3.select(element).select('#' + id);\n            if (elem !== null) {\n                elem.on('click', function () {\n                    window.open(linkStr, 'newTab'); // jshint ignore:line\n                });\n            }\n        });\n    }\n};\nexports.getTooltip = function (id) {\n    return tooltips[id];\n};\n\n/**\n * Called by parser when a graph definition is found, stores the direction of the chart.\n * @param dir\n */\nexports.setClickEvent = function (id, functionName, link, tooltip) {\n    if (id.indexOf(',') > 0) {\n        id.split(',').forEach(function (id2) {\n            setTooltip(id2, tooltip);\n            setClickFun(id2, functionName);\n            setLink(id2, link);\n        });\n    } else {\n        setTooltip(id, tooltip);\n        setClickFun(id, functionName);\n        setLink(id, link);\n    }\n};\n\nexports.bindFunctions = function (element) {\n    funs.forEach(function (fun) {\n        fun(element);\n    });\n};\nexports.getDirection = function () {\n    return direction;\n};\n/**\n * Retrieval function for fetching the found nodes after parsing has completed.\n * @returns {{}|*|vertices}\n */\nexports.getVertices = function () {\n    return vertices;\n};\n\n/**\n * Retrieval function for fetching the found links after parsing has completed.\n * @returns {{}|*|edges}\n */\nexports.getEdges = function () {\n    return edges;\n};\n\n/**\n * Retrieval function for fetching the found class definitions after parsing has completed.\n * @returns {{}|*|classes}\n */\nexports.getClasses = function () {\n    return classes;\n};\n\nvar setupToolTips = function setupToolTips(element) {\n\n    var tooltipElem = d3.select('.mermaidTooltip');\n    if (tooltipElem[0][0] === null) {\n        tooltipElem = d3.select('body').append('div').attr('class', 'mermaidTooltip').style('opacity', 0);\n    }\n\n    var svg = d3.select(element).select('svg');\n\n    var nodes = svg.selectAll('g.node');\n    nodes.on('mouseover', function () {\n        var el = d3.select(this);\n        var title = el.attr('title');\n        // Dont try to draw a tooltip if no data is provided\n        if (title === null) {\n            return;\n        }\n        var rect = this.getBoundingClientRect();\n\n        tooltipElem.transition().duration(200).style('opacity', '.9');\n        tooltipElem.html(el.attr('title')).style('left', rect.left + (rect.right - rect.left) / 2 + 'px').style('top', rect.top - 14 + document.body.scrollTop + 'px');\n        el.classed('hover', true);\n    }).on('mouseout', function () {\n        tooltipElem.transition().duration(500).style('opacity', 0);\n        var el = d3.select(this);\n        el.classed('hover', false);\n    });\n};\nfuns.push(setupToolTips);\n\n/**\n * Clears the internal graph db so that a new graph can be parsed.\n */\nexports.clear = function () {\n    vertices = {};\n    classes = {};\n    edges = [];\n    funs = [];\n    funs.push(setupToolTips);\n    subGraphs = [];\n    subCount = 0;\n    tooltips = [];\n};\n/**\n *\n * @returns {string}\n */\nexports.defaultStyle = function () {\n    return 'fill:#ffa;stroke: #f66; stroke-width: 3px; stroke-dasharray: 5, 5;fill:#ffa;stroke: #666;';\n};\n\n/**\n * Clears the internal graph db so that a new graph can be parsed.\n */\nexports.addSubGraph = function (list, title) {\n    function uniq(a) {\n        var prims = { 'boolean': {}, 'number': {}, 'string': {} },\n            objs = [];\n\n        return a.filter(function (item) {\n            var type = typeof item;\n            if (item === ' ') {\n                return false;\n            }\n            if (type in prims) return prims[type].hasOwnProperty(item) ? false : prims[type][item] = true;else return objs.indexOf(item) >= 0 ? false : objs.push(item);\n        });\n    }\n\n    var nodeList = [];\n\n    nodeList = uniq(nodeList.concat.apply(nodeList, list));\n\n    var subGraph = { id: 'subGraph' + subCount, nodes: nodeList, title: title };\n    //log.debug('subGraph:' + subGraph.title + subGraph.id);\n    //log.debug(subGraph.nodes);\n    subGraphs.push(subGraph);\n    subCount = subCount + 1;\n    return subGraph.id;\n};\n\nvar getPosForId = function getPosForId(id) {\n    var i;\n    for (i = 0; i < subGraphs.length; i++) {\n        if (subGraphs[i].id === id) {\n            //log.debug('Found pos for ',id,' ',i);\n            return i;\n        }\n    }\n    //log.debug('No pos found for ',id,' ',i);\n    return -1;\n};\nvar secCount = -1;\nvar posCrossRef = [];\nvar indexNodes = function indexNodes(id, pos) {\n    var nodes = subGraphs[pos].nodes;\n    secCount = secCount + 1;\n    if (secCount > 2000) {\n        return;\n    }\n    //var nPos = getPosForId(subGraphs[pos].id);\n    posCrossRef[secCount] = pos;\n    // Check if match\n    if (subGraphs[pos].id === id) {\n        return {\n            result: true,\n            count: 0\n        };\n    }\n\n    var count = 0;\n    var posCount = 1;\n    while (count < nodes.length) {\n        var childPos = getPosForId(nodes[count]);\n        // Ignore regular nodes (pos will be -1)\n        if (childPos >= 0) {\n            var res = indexNodes(id, childPos);\n            if (res.result) {\n                return {\n                    result: true,\n                    count: posCount + res.count\n                };\n            } else {\n                posCount = posCount + res.count;\n            }\n        }\n        count = count + 1;\n    }\n\n    return {\n        result: false,\n        count: posCount\n    };\n};\n\nexports.getDepthFirstPos = function (pos) {\n    return posCrossRef[pos];\n};\nexports.indexNodes = function () {\n    secCount = -1;\n    if (subGraphs.length > 0) {\n        indexNodes('none', subGraphs.length - 1, 0);\n    }\n};\n\nexports.getSubGraphs = function () {\n    return subGraphs;\n};\n\nexports.parseError = function (err, hash) {\n    global.mermaidAPI.parseError(err, hash);\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../d3\":107,\"../../logger\":126}],117:[function(require,module,exports){\n(function (process){\n/* parser generated by jison 0.4.15 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\n\"use strict\";\n\nvar dot = (function () {\n    var o = function o(k, v, _o, l) {\n        for (_o = _o || {}, l = k.length; l--; _o[k[l]] = v);return _o;\n    },\n        $V0 = [1, 5],\n        $V1 = [1, 6],\n        $V2 = [1, 12],\n        $V3 = [1, 13],\n        $V4 = [1, 14],\n        $V5 = [1, 15],\n        $V6 = [1, 16],\n        $V7 = [1, 17],\n        $V8 = [1, 18],\n        $V9 = [1, 19],\n        $Va = [1, 20],\n        $Vb = [1, 21],\n        $Vc = [1, 22],\n        $Vd = [8, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26],\n        $Ve = [1, 37],\n        $Vf = [1, 33],\n        $Vg = [1, 34],\n        $Vh = [1, 35],\n        $Vi = [1, 36],\n        $Vj = [8, 10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 32, 37, 39, 40, 45, 57, 58],\n        $Vk = [10, 28],\n        $Vl = [10, 28, 37, 57, 58],\n        $Vm = [2, 49],\n        $Vn = [1, 45],\n        $Vo = [1, 48],\n        $Vp = [1, 49],\n        $Vq = [1, 52],\n        $Vr = [2, 65],\n        $Vs = [1, 65],\n        $Vt = [1, 66],\n        $Vu = [1, 67],\n        $Vv = [1, 68],\n        $Vw = [1, 69],\n        $Vx = [1, 70],\n        $Vy = [1, 71],\n        $Vz = [1, 72],\n        $VA = [1, 73],\n        $VB = [8, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 47],\n        $VC = [10, 28, 37];\n    var parser = { trace: function trace() {},\n        yy: {},\n        symbols_: { \"error\": 2, \"expressions\": 3, \"graph\": 4, \"EOF\": 5, \"graphStatement\": 6, \"idStatement\": 7, \"{\": 8, \"stmt_list\": 9, \"}\": 10, \"strict\": 11, \"GRAPH\": 12, \"DIGRAPH\": 13, \"textNoTags\": 14, \"textNoTagsToken\": 15, \"ALPHA\": 16, \"NUM\": 17, \"COLON\": 18, \"PLUS\": 19, \"EQUALS\": 20, \"MULT\": 21, \"DOT\": 22, \"BRKT\": 23, \"SPACE\": 24, \"MINUS\": 25, \"keywords\": 26, \"stmt\": 27, \";\": 28, \"node_stmt\": 29, \"edge_stmt\": 30, \"attr_stmt\": 31, \"=\": 32, \"subgraph\": 33, \"attr_list\": 34, \"NODE\": 35, \"EDGE\": 36, \"[\": 37, \"a_list\": 38, \"]\": 39, \",\": 40, \"edgeRHS\": 41, \"node_id\": 42, \"edgeop\": 43, \"port\": 44, \":\": 45, \"compass_pt\": 46, \"SUBGRAPH\": 47, \"n\": 48, \"ne\": 49, \"e\": 50, \"se\": 51, \"s\": 52, \"sw\": 53, \"w\": 54, \"nw\": 55, \"c\": 56, \"ARROW_POINT\": 57, \"ARROW_OPEN\": 58, \"$accept\": 0, \"$end\": 1 },\n        terminals_: { 2: \"error\", 5: \"EOF\", 8: \"{\", 10: \"}\", 11: \"strict\", 12: \"GRAPH\", 13: \"DIGRAPH\", 16: \"ALPHA\", 17: \"NUM\", 18: \"COLON\", 19: \"PLUS\", 20: \"EQUALS\", 21: \"MULT\", 22: \"DOT\", 23: \"BRKT\", 24: \"SPACE\", 25: \"MINUS\", 26: \"keywords\", 28: \";\", 32: \"=\", 35: \"NODE\", 36: \"EDGE\", 37: \"[\", 39: \"]\", 40: \",\", 45: \":\", 47: \"SUBGRAPH\", 48: \"n\", 49: \"ne\", 50: \"e\", 51: \"se\", 52: \"s\", 53: \"sw\", 54: \"w\", 55: \"nw\", 56: \"c\", 57: \"ARROW_POINT\", 58: \"ARROW_OPEN\" },\n        productions_: [0, [3, 2], [4, 5], [4, 6], [4, 4], [6, 1], [6, 1], [7, 1], [14, 1], [14, 2], [15, 1], [15, 1], [15, 1], [15, 1], [15, 1], [15, 1], [15, 1], [15, 1], [15, 1], [15, 1], [15, 1], [9, 1], [9, 3], [27, 1], [27, 1], [27, 1], [27, 3], [27, 1], [31, 2], [31, 2], [31, 2], [34, 4], [34, 3], [34, 3], [34, 2], [38, 5], [38, 5], [38, 3], [30, 3], [30, 3], [30, 2], [30, 2], [41, 3], [41, 3], [41, 2], [41, 2], [29, 2], [29, 1], [42, 2], [42, 1], [44, 4], [44, 2], [44, 2], [33, 5], [33, 4], [33, 3], [46, 1], [46, 1], [46, 1], [46, 1], [46, 1], [46, 1], [46, 1], [46, 1], [46, 1], [46, 0], [43, 1], [43, 1]],\n        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, /* action[1] */$$, /* vstack */_$ /* lstack */) {\n            /* this == yyval */\n\n            var $0 = $$.length - 1;\n            switch (yystate) {\n                case 1:\n                    this.$ = $$[$0 - 1];\n                    break;\n                case 2:\n                    this.$ = $$[$0 - 4];\n                    break;\n                case 3:\n                    this.$ = $$[$0 - 5];\n                    break;\n                case 4:\n                    this.$ = $$[$0 - 3];\n                    break;\n                case 8:case 10:case 11:\n                    this.$ = $$[$0];\n                    break;\n                case 9:\n                    this.$ = $$[$0 - 1] + '' + $$[$0];\n                    break;\n                case 12:case 13:case 14:case 15:case 16:case 18:case 19:case 20:\n                    this.$ = $$[$0];\n                    break;\n                case 17:\n                    this.$ = '<br>';\n                    break;\n                case 39:\n                    this.$ = 'oy';\n                    break;\n                case 40:\n\n                    yy.addLink($$[$0 - 1], $$[$0].id, $$[$0].op);\n                    this.$ = 'oy';\n                    break;\n                case 42:\n\n                    yy.addLink($$[$0 - 1], $$[$0].id, $$[$0].op);\n                    this.$ = { op: $$[$0 - 2], id: $$[$0 - 1] };\n\n                    break;\n                case 44:\n\n                    this.$ = { op: $$[$0 - 1], id: $$[$0] };\n\n                    break;\n                case 48:\n                    yy.addVertex($$[$0 - 1]);this.$ = $$[$0 - 1];\n                    break;\n                case 49:\n                    yy.addVertex($$[$0]);this.$ = $$[$0];\n                    break;\n                case 66:\n                    this.$ = 'arrow';\n                    break;\n                case 67:\n                    this.$ = 'arrow_open';\n                    break;\n            }\n        },\n        table: [{ 3: 1, 4: 2, 6: 3, 11: [1, 4], 12: $V0, 13: $V1 }, { 1: [3] }, { 5: [1, 7] }, { 7: 8, 8: [1, 9], 14: 10, 15: 11, 16: $V2, 17: $V3, 18: $V4, 19: $V5, 20: $V6, 21: $V7, 22: $V8, 23: $V9, 24: $Va, 25: $Vb, 26: $Vc }, { 6: 23, 12: $V0, 13: $V1 }, o($Vd, [2, 5]), o($Vd, [2, 6]), { 1: [2, 1] }, { 8: [1, 24] }, { 7: 30, 8: $Ve, 9: 25, 12: $Vf, 14: 10, 15: 11, 16: $V2, 17: $V3, 18: $V4, 19: $V5, 20: $V6, 21: $V7, 22: $V8, 23: $V9, 24: $Va, 25: $Vb, 26: $Vc, 27: 26, 29: 27, 30: 28, 31: 29, 33: 31, 35: $Vg, 36: $Vh, 42: 32, 47: $Vi }, o([8, 10, 28, 32, 37, 39, 40, 45, 57, 58], [2, 7], { 15: 38, 16: $V2, 17: $V3, 18: $V4, 19: $V5, 20: $V6, 21: $V7, 22: $V8, 23: $V9, 24: $Va, 25: $Vb, 26: $Vc }), o($Vj, [2, 8]), o($Vj, [2, 10]), o($Vj, [2, 11]), o($Vj, [2, 12]), o($Vj, [2, 13]), o($Vj, [2, 14]), o($Vj, [2, 15]), o($Vj, [2, 16]), o($Vj, [2, 17]), o($Vj, [2, 18]), o($Vj, [2, 19]), o($Vj, [2, 20]), { 7: 39, 14: 10, 15: 11, 16: $V2, 17: $V3, 18: $V4, 19: $V5, 20: $V6, 21: $V7, 22: $V8, 23: $V9, 24: $Va, 25: $Vb, 26: $Vc }, { 7: 30, 8: $Ve, 9: 40, 12: $Vf, 14: 10, 15: 11, 16: $V2, 17: $V3, 18: $V4, 19: $V5, 20: $V6, 21: $V7, 22: $V8, 23: $V9, 24: $Va, 25: $Vb, 26: $Vc, 27: 26, 29: 27, 30: 28, 31: 29, 33: 31, 35: $Vg, 36: $Vh, 42: 32, 47: $Vi }, { 10: [1, 41] }, { 10: [2, 21], 28: [1, 42] }, o($Vk, [2, 23]), o($Vk, [2, 24]), o($Vk, [2, 25]), o($Vl, $Vm, { 44: 44, 32: [1, 43], 45: $Vn }), o($Vk, [2, 27], { 41: 46, 43: 47, 57: $Vo, 58: $Vp }), o($Vk, [2, 47], { 43: 47, 34: 50, 41: 51, 37: $Vq, 57: $Vo, 58: $Vp }), { 34: 53, 37: $Vq }, { 34: 54, 37: $Vq }, { 34: 55, 37: $Vq }, { 7: 56, 8: [1, 57], 14: 10, 15: 11, 16: $V2, 17: $V3, 18: $V4, 19: $V5, 20: $V6, 21: $V7, 22: $V8, 23: $V9, 24: $Va, 25: $Vb, 26: $Vc }, { 7: 30, 8: $Ve, 9: 58, 12: $Vf, 14: 10, 15: 11, 16: $V2, 17: $V3, 18: $V4, 19: $V5, 20: $V6, 21: $V7, 22: $V8, 23: $V9, 24: $Va, 25: $Vb, 26: $Vc, 27: 26, 29: 27, 30: 28, 31: 29, 33: 31, 35: $Vg, 36: $Vh, 42: 32, 47: $Vi }, o($Vj, [2, 9]), { 8: [1, 59] }, { 10: [1, 60] }, { 5: [2, 4] }, { 7: 30, 8: $Ve, 9: 61, 12: $Vf, 14: 10, 15: 11, 16: $V2, 17: $V3, 18: $V4, 19: $V5, 20: $V6, 21: $V7, 22: $V8, 23: $V9, 24: $Va, 25: $Vb, 26: $Vc, 27: 26, 29: 27, 30: 28, 31: 29, 33: 31, 35: $Vg, 36: $Vh, 42: 32, 47: $Vi }, { 7: 62, 14: 10, 15: 11, 16: $V2, 17: $V3, 18: $V4, 19: $V5, 20: $V6, 21: $V7, 22: $V8, 23: $V9, 24: $Va, 25: $Vb, 26: $Vc }, o($Vl, [2, 48]), o($Vl, $Vr, { 14: 10, 15: 11, 7: 63, 46: 64, 16: $V2, 17: $V3, 18: $V4, 19: $V5, 20: $V6, 21: $V7, 22: $V8, 23: $V9, 24: $Va, 25: $Vb, 26: $Vc, 48: $Vs, 49: $Vt, 50: $Vu, 51: $Vv, 52: $Vw, 53: $Vx, 54: $Vy, 55: $Vz, 56: $VA }), o($Vk, [2, 41], { 34: 74, 37: $Vq }), { 7: 77, 8: $Ve, 14: 10, 15: 11, 16: $V2, 17: $V3, 18: $V4, 19: $V5, 20: $V6, 21: $V7, 22: $V8, 23: $V9, 24: $Va, 25: $Vb, 26: $Vc, 33: 76, 42: 75, 47: $Vi }, o($VB, [2, 66]), o($VB, [2, 67]), o($Vk, [2, 46]), o($Vk, [2, 40], { 34: 78, 37: $Vq }), { 7: 81, 14: 10, 15: 11, 16: $V2, 17: $V3, 18: $V4, 19: $V5, 20: $V6, 21: $V7, 22: $V8, 23: $V9, 24: $Va, 25: $Vb, 26: $Vc, 38: 79, 39: [1, 80] }, o($Vk, [2, 28]), o($Vk, [2, 29]), o($Vk, [2, 30]), { 8: [1, 82] }, { 7: 30, 8: $Ve, 9: 83, 12: $Vf, 14: 10, 15: 11, 16: $V2, 17: $V3, 18: $V4, 19: $V5, 20: $V6, 21: $V7, 22: $V8, 23: $V9, 24: $Va, 25: $Vb, 26: $Vc, 27: 26, 29: 27, 30: 28, 31: 29, 33: 31, 35: $Vg, 36: $Vh, 42: 32, 47: $Vi }, { 10: [1, 84] }, { 7: 30, 8: $Ve, 9: 85, 12: $Vf, 14: 10, 15: 11, 16: $V2, 17: $V3, 18: $V4, 19: $V5, 20: $V6, 21: $V7, 22: $V8, 23: $V9, 24: $Va, 25: $Vb, 26: $Vc, 27: 26, 29: 27, 30: 28, 31: 29, 33: 31, 35: $Vg, 36: $Vh, 42: 32, 47: $Vi }, { 5: [2, 2] }, { 10: [2, 22] }, o($Vk, [2, 26]), o($Vl, [2, 51], { 45: [1, 86] }), o($Vl, [2, 52]), o($Vl, [2, 56]), o($Vl, [2, 57]), o($Vl, [2, 58]), o($Vl, [2, 59]), o($Vl, [2, 60]), o($Vl, [2, 61]), o($Vl, [2, 62]), o($Vl, [2, 63]), o($Vl, [2, 64]), o($Vk, [2, 38]), o($VC, [2, 44], { 43: 47, 41: 87, 57: $Vo, 58: $Vp }), o($VC, [2, 45], { 43: 47, 41: 88, 57: $Vo, 58: $Vp }), o($Vl, $Vm, { 44: 44, 45: $Vn }), o($Vk, [2, 39]), { 39: [1, 89] }, o($Vk, [2, 34], { 34: 90, 37: $Vq }), { 32: [1, 91] }, { 7: 30, 8: $Ve, 9: 92, 12: $Vf, 14: 10, 15: 11, 16: $V2, 17: $V3, 18: $V4, 19: $V5, 20: $V6, 21: $V7, 22: $V8, 23: $V9, 24: $Va, 25: $Vb, 26: $Vc, 27: 26, 29: 27, 30: 28, 31: 29, 33: 31, 35: $Vg, 36: $Vh, 42: 32, 47: $Vi }, { 10: [1, 93] }, o($Vl, [2, 55]), { 10: [1, 94] }, o($Vl, $Vr, { 46: 95, 48: $Vs, 49: $Vt, 50: $Vu, 51: $Vv, 52: $Vw, 53: $Vx, 54: $Vy, 55: $Vz, 56: $VA }), o($VC, [2, 42]), o($VC, [2, 43]), o($Vk, [2, 33], { 34: 96, 37: $Vq }), o($Vk, [2, 32]), { 7: 97, 14: 10, 15: 11, 16: $V2, 17: $V3, 18: $V4, 19: $V5, 20: $V6, 21: $V7, 22: $V8, 23: $V9, 24: $Va, 25: $Vb, 26: $Vc }, { 10: [1, 98] }, o($Vl, [2, 54]), { 5: [2, 3] }, o($Vl, [2, 50]), o($Vk, [2, 31]), { 28: [1, 99], 39: [2, 37], 40: [1, 100] }, o($Vl, [2, 53]), { 7: 81, 14: 10, 15: 11, 16: $V2, 17: $V3, 18: $V4, 19: $V5, 20: $V6, 21: $V7, 22: $V8, 23: $V9, 24: $Va, 25: $Vb, 26: $Vc, 38: 101 }, { 7: 81, 14: 10, 15: 11, 16: $V2, 17: $V3, 18: $V4, 19: $V5, 20: $V6, 21: $V7, 22: $V8, 23: $V9, 24: $Va, 25: $Vb, 26: $Vc, 38: 102 }, { 39: [2, 35] }, { 39: [2, 36] }],\n        defaultActions: { 7: [2, 1], 41: [2, 4], 60: [2, 2], 61: [2, 22], 94: [2, 3], 101: [2, 35], 102: [2, 36] },\n        parseError: function parseError(str, hash) {\n            if (hash.recoverable) {\n                this.trace(str);\n            } else {\n                var _parseError = function _parseError(msg, hash) {\n                    this.message = msg;\n                    this.hash = hash;\n                };\n\n                _parseError.prototype = new Error();\n\n                throw new _parseError(str, hash);\n            }\n        },\n        parse: function parse(input) {\n            var self = this,\n                stack = [0],\n                tstack = [],\n                vstack = [null],\n                lstack = [],\n                table = this.table,\n                yytext = '',\n                yylineno = 0,\n                yyleng = 0,\n                recovering = 0,\n                TERROR = 2,\n                EOF = 1;\n            var args = lstack.slice.call(arguments, 1);\n            var lexer = Object.create(this.lexer);\n            var sharedState = { yy: {} };\n            for (var k in this.yy) {\n                if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n                    sharedState.yy[k] = this.yy[k];\n                }\n            }\n            lexer.setInput(input, sharedState.yy);\n            sharedState.yy.lexer = lexer;\n            sharedState.yy.parser = this;\n            if (typeof lexer.yylloc == 'undefined') {\n                lexer.yylloc = {};\n            }\n            var yyloc = lexer.yylloc;\n            lstack.push(yyloc);\n            var ranges = lexer.options && lexer.options.ranges;\n            if (typeof sharedState.yy.parseError === 'function') {\n                this.parseError = sharedState.yy.parseError;\n            } else {\n                this.parseError = Object.getPrototypeOf(this).parseError;\n            }\n            function popStack(n) {\n                stack.length = stack.length - 2 * n;\n                vstack.length = vstack.length - n;\n                lstack.length = lstack.length - n;\n            }\n            _token_stack: var lex = function lex() {\n                var token;\n                token = lexer.lex() || EOF;\n                if (typeof token !== 'number') {\n                    token = self.symbols_[token] || token;\n                }\n                return token;\n            };\n            var symbol,\n                preErrorSymbol,\n                state,\n                action,\n                a,\n                r,\n                yyval = {},\n                p,\n                len,\n                newState,\n                expected;\n            while (true) {\n                state = stack[stack.length - 1];\n                if (this.defaultActions[state]) {\n                    action = this.defaultActions[state];\n                } else {\n                    if (symbol === null || typeof symbol == 'undefined') {\n                        symbol = lex();\n                    }\n                    action = table[state] && table[state][symbol];\n                }\n                if (typeof action === 'undefined' || !action.length || !action[0]) {\n                    var errStr = '';\n                    expected = [];\n                    for (p in table[state]) {\n                        if (this.terminals_[p] && p > TERROR) {\n                            expected.push('\\'' + this.terminals_[p] + '\\'');\n                        }\n                    }\n                    if (lexer.showPosition) {\n                        errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                    } else {\n                        errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                    }\n                    this.parseError(errStr, {\n                        text: lexer.match,\n                        token: this.terminals_[symbol] || symbol,\n                        line: lexer.yylineno,\n                        loc: yyloc,\n                        expected: expected\n                    });\n                }\n                if (action[0] instanceof Array && action.length > 1) {\n                    throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n                }\n                switch (action[0]) {\n                    case 1:\n                        stack.push(symbol);\n                        vstack.push(lexer.yytext);\n                        lstack.push(lexer.yylloc);\n                        stack.push(action[1]);\n                        symbol = null;\n                        if (!preErrorSymbol) {\n                            yyleng = lexer.yyleng;\n                            yytext = lexer.yytext;\n                            yylineno = lexer.yylineno;\n                            yyloc = lexer.yylloc;\n                            if (recovering > 0) {\n                                recovering--;\n                            }\n                        } else {\n                            symbol = preErrorSymbol;\n                            preErrorSymbol = null;\n                        }\n                        break;\n                    case 2:\n                        len = this.productions_[action[1]][1];\n                        yyval.$ = vstack[vstack.length - len];\n                        yyval._$ = {\n                            first_line: lstack[lstack.length - (len || 1)].first_line,\n                            last_line: lstack[lstack.length - 1].last_line,\n                            first_column: lstack[lstack.length - (len || 1)].first_column,\n                            last_column: lstack[lstack.length - 1].last_column\n                        };\n                        if (ranges) {\n                            yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\n                        }\n                        r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\n                        if (typeof r !== 'undefined') {\n                            return r;\n                        }\n                        if (len) {\n                            stack = stack.slice(0, -1 * len * 2);\n                            vstack = vstack.slice(0, -1 * len);\n                            lstack = lstack.slice(0, -1 * len);\n                        }\n                        stack.push(this.productions_[action[1]][0]);\n                        vstack.push(yyval.$);\n                        lstack.push(yyval._$);\n                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n                        stack.push(newState);\n                        break;\n                    case 3:\n                        return true;\n                }\n            }\n            return true;\n        } };\n\n    /* generated by jison-lex 0.3.4 */\n    var lexer = (function () {\n        var lexer = {\n\n            EOF: 1,\n\n            parseError: function parseError(str, hash) {\n                if (this.yy.parser) {\n                    this.yy.parser.parseError(str, hash);\n                } else {\n                    throw new Error(str);\n                }\n            },\n\n            // resets the lexer, sets new input\n            setInput: function setInput(input, yy) {\n                this.yy = yy || this.yy || {};\n                this._input = input;\n                this._more = this._backtrack = this.done = false;\n                this.yylineno = this.yyleng = 0;\n                this.yytext = this.matched = this.match = '';\n                this.conditionStack = ['INITIAL'];\n                this.yylloc = {\n                    first_line: 1,\n                    first_column: 0,\n                    last_line: 1,\n                    last_column: 0\n                };\n                if (this.options.ranges) {\n                    this.yylloc.range = [0, 0];\n                }\n                this.offset = 0;\n                return this;\n            },\n\n            // consumes and returns one char from the input\n            input: function input() {\n                var ch = this._input[0];\n                this.yytext += ch;\n                this.yyleng++;\n                this.offset++;\n                this.match += ch;\n                this.matched += ch;\n                var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n                if (lines) {\n                    this.yylineno++;\n                    this.yylloc.last_line++;\n                } else {\n                    this.yylloc.last_column++;\n                }\n                if (this.options.ranges) {\n                    this.yylloc.range[1]++;\n                }\n\n                this._input = this._input.slice(1);\n                return ch;\n            },\n\n            // unshifts one char (or a string) into the input\n            unput: function unput(ch) {\n                var len = ch.length;\n                var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n                this._input = ch + this._input;\n                this.yytext = this.yytext.substr(0, this.yytext.length - len);\n                //this.yyleng -= len;\n                this.offset -= len;\n                var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n                this.match = this.match.substr(0, this.match.length - 1);\n                this.matched = this.matched.substr(0, this.matched.length - 1);\n\n                if (lines.length - 1) {\n                    this.yylineno -= lines.length - 1;\n                }\n                var r = this.yylloc.range;\n\n                this.yylloc = {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.yylineno + 1,\n                    first_column: this.yylloc.first_column,\n                    last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n                };\n\n                if (this.options.ranges) {\n                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n                }\n                this.yyleng = this.yytext.length;\n                return this;\n            },\n\n            // When called from action, caches matched text and appends it on next action\n            more: function more() {\n                this._more = true;\n                return this;\n            },\n\n            // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\n            reject: function reject() {\n                if (this.options.backtrack_lexer) {\n                    this._backtrack = true;\n                } else {\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                        text: \"\",\n                        token: null,\n                        line: this.yylineno\n                    });\n                }\n                return this;\n            },\n\n            // retain first n characters of the match\n            less: function less(n) {\n                this.unput(this.match.slice(n));\n            },\n\n            // displays already matched input, i.e. for error messages\n            pastInput: function pastInput() {\n                var past = this.matched.substr(0, this.matched.length - this.match.length);\n                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\\n/g, \"\");\n            },\n\n            // displays upcoming input, i.e. for error messages\n            upcomingInput: function upcomingInput() {\n                var next = this.match;\n                if (next.length < 20) {\n                    next += this._input.substr(0, 20 - next.length);\n                }\n                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n            },\n\n            // displays the character position where the lexing error occurred, i.e. for error messages\n            showPosition: function showPosition() {\n                var pre = this.pastInput();\n                var c = new Array(pre.length + 1).join(\"-\");\n                return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n            },\n\n            // test the lexed token: return FALSE when not a match, otherwise return token\n            test_match: function test_match(match, indexed_rule) {\n                var token, lines, backup;\n\n                if (this.options.backtrack_lexer) {\n                    // save context\n                    backup = {\n                        yylineno: this.yylineno,\n                        yylloc: {\n                            first_line: this.yylloc.first_line,\n                            last_line: this.last_line,\n                            first_column: this.yylloc.first_column,\n                            last_column: this.yylloc.last_column\n                        },\n                        yytext: this.yytext,\n                        match: this.match,\n                        matches: this.matches,\n                        matched: this.matched,\n                        yyleng: this.yyleng,\n                        offset: this.offset,\n                        _more: this._more,\n                        _input: this._input,\n                        yy: this.yy,\n                        conditionStack: this.conditionStack.slice(0),\n                        done: this.done\n                    };\n                    if (this.options.ranges) {\n                        backup.yylloc.range = this.yylloc.range.slice(0);\n                    }\n                }\n\n                lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n                if (lines) {\n                    this.yylineno += lines.length;\n                }\n                this.yylloc = {\n                    first_line: this.yylloc.last_line,\n                    last_line: this.yylineno + 1,\n                    first_column: this.yylloc.last_column,\n                    last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\n                };\n                this.yytext += match[0];\n                this.match += match[0];\n                this.matches = match;\n                this.yyleng = this.yytext.length;\n                if (this.options.ranges) {\n                    this.yylloc.range = [this.offset, this.offset += this.yyleng];\n                }\n                this._more = false;\n                this._backtrack = false;\n                this._input = this._input.slice(match[0].length);\n                this.matched += match[0];\n                token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n                if (this.done && this._input) {\n                    this.done = false;\n                }\n                if (token) {\n                    return token;\n                } else if (this._backtrack) {\n                    // recover context\n                    for (var k in backup) {\n                        this[k] = backup[k];\n                    }\n                    return false; // rule action called reject() implying the next rule should be tested instead.\n                }\n                return false;\n            },\n\n            // return next match in input\n            next: function next() {\n                if (this.done) {\n                    return this.EOF;\n                }\n                if (!this._input) {\n                    this.done = true;\n                }\n\n                var token, match, tempMatch, index;\n                if (!this._more) {\n                    this.yytext = '';\n                    this.match = '';\n                }\n                var rules = this._currentRules();\n                for (var i = 0; i < rules.length; i++) {\n                    tempMatch = this._input.match(this.rules[rules[i]]);\n                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                        match = tempMatch;\n                        index = i;\n                        if (this.options.backtrack_lexer) {\n                            token = this.test_match(tempMatch, rules[i]);\n                            if (token !== false) {\n                                return token;\n                            } else if (this._backtrack) {\n                                match = false;\n                                continue; // rule action called reject() implying a rule MISmatch.\n                            } else {\n                                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                                    return false;\n                                }\n                        } else if (!this.options.flex) {\n                            break;\n                        }\n                    }\n                }\n                if (match) {\n                    token = this.test_match(match, rules[index]);\n                    if (token !== false) {\n                        return token;\n                    }\n                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                    return false;\n                }\n                if (this._input === \"\") {\n                    return this.EOF;\n                } else {\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                        text: \"\",\n                        token: null,\n                        line: this.yylineno\n                    });\n                }\n            },\n\n            // return next match that has a token\n            lex: function lex() {\n                var r = this.next();\n                if (r) {\n                    return r;\n                } else {\n                    return this.lex();\n                }\n            },\n\n            // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\n            begin: function begin(condition) {\n                this.conditionStack.push(condition);\n            },\n\n            // pop the previously active lexer condition state off the condition stack\n            popState: function popState() {\n                var n = this.conditionStack.length - 1;\n                if (n > 0) {\n                    return this.conditionStack.pop();\n                } else {\n                    return this.conditionStack[0];\n                }\n            },\n\n            // produce the lexer rule set which is active for the currently active lexer condition state\n            _currentRules: function _currentRules() {\n                if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n                    return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n                } else {\n                    return this.conditions[\"INITIAL\"].rules;\n                }\n            },\n\n            // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\n            topState: function topState(n) {\n                n = this.conditionStack.length - 1 - Math.abs(n || 0);\n                if (n >= 0) {\n                    return this.conditionStack[n];\n                } else {\n                    return \"INITIAL\";\n                }\n            },\n\n            // alias for begin(condition)\n            pushState: function pushState(condition) {\n                this.begin(condition);\n            },\n\n            // return the number of states currently on the stack\n            stateStackSize: function stateStackSize() {\n                return this.conditionStack.length;\n            },\n            options: {},\n            performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n                var YYSTATE = YY_START;\n                switch ($avoiding_name_collisions) {\n                    case 0:\n                        return 'STYLE';\n                        break;\n                    case 1:\n                        return 'LINKSTYLE';\n                        break;\n                    case 2:\n                        return 'CLASSDEF';\n                        break;\n                    case 3:\n                        return 'CLASS';\n                        break;\n                    case 4:\n                        return 'CLICK';\n                        break;\n                    case 5:\n                        return 12;\n                        break;\n                    case 6:\n                        return 13;\n                        break;\n                    case 7:\n                        return 47;\n                        break;\n                    case 8:\n                        return 35;\n                        break;\n                    case 9:\n                        return 36;\n                        break;\n                    case 10:\n                        return 'DIR';\n                        break;\n                    case 11:\n                        return 'DIR';\n                        break;\n                    case 12:\n                        return 'DIR';\n                        break;\n                    case 13:\n                        return 'DIR';\n                        break;\n                    case 14:\n                        return 'DIR';\n                        break;\n                    case 15:\n                        return 'DIR';\n                        break;\n                    case 16:\n                        return 17;\n                        break;\n                    case 17:\n                        return 23;\n                        break;\n                    case 18:\n                        return 18;\n                        break;\n                    case 19:\n                        return 28;\n                        break;\n                    case 20:\n                        return 40;\n                        break;\n                    case 21:\n                        return 32;\n                        break;\n                    case 22:\n                        return 21;\n                        break;\n                    case 23:\n                        return 22;\n                        break;\n                    case 24:\n                        return 'ARROW_CROSS';\n                        break;\n                    case 25:\n                        return 57;\n                        break;\n                    case 26:\n                        return 'ARROW_CIRCLE';\n                        break;\n                    case 27:\n                        return 58;\n                        break;\n                    case 28:\n                        return 25;\n                        break;\n                    case 29:\n                        return 19;\n                        break;\n                    case 30:\n                        return 20;\n                        break;\n                    case 31:\n                        return 16;\n                        break;\n                    case 32:\n                        return 'PIPE';\n                        break;\n                    case 33:\n                        return 'PS';\n                        break;\n                    case 34:\n                        return 'PE';\n                        break;\n                    case 35:\n                        return 37;\n                        break;\n                    case 36:\n                        return 39;\n                        break;\n                    case 37:\n                        return 8;\n                        break;\n                    case 38:\n                        return 10;\n                        break;\n                    case 39:\n                        return 'QUOTE';\n                        break;\n                    case 40:\n                        return 24;\n                        break;\n                    case 41:\n                        return 'NEWLINE';\n                        break;\n                    case 42:\n                        return 5;\n                        break;\n                }\n            },\n            rules: [/^(?:style\\b)/, /^(?:linkStyle\\b)/, /^(?:classDef\\b)/, /^(?:class\\b)/, /^(?:click\\b)/, /^(?:graph\\b)/, /^(?:digraph\\b)/, /^(?:subgraph\\b)/, /^(?:node\\b)/, /^(?:edge\\b)/, /^(?:LR\\b)/, /^(?:RL\\b)/, /^(?:TB\\b)/, /^(?:BT\\b)/, /^(?:TD\\b)/, /^(?:BR\\b)/, /^(?:[0-9])/, /^(?:#)/, /^(?::)/, /^(?:;)/, /^(?:,)/, /^(?:=)/, /^(?:\\*)/, /^(?:\\.)/, /^(?:--[x])/, /^(?:->)/, /^(?:--[o])/, /^(?:--)/, /^(?:-)/, /^(?:\\+)/, /^(?:=)/, /^(?:[\\u0021-\\u0027\\u002A-\\u002E\\u003F\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6]|[\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377]|[\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5]|[\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA]|[\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE]|[\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA]|[\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0]|[\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977]|[\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2]|[\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A]|[\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39]|[\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8]|[\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C]|[\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C]|[\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99]|[\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0]|[\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D]|[\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3]|[\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10]|[\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1]|[\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81]|[\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3]|[\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6]|[\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A]|[\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081]|[\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D]|[\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0]|[\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310]|[\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C]|[\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711]|[\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7]|[\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C]|[\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16]|[\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF]|[\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC]|[\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D]|[\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D]|[\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3]|[\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F]|[\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128]|[\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184]|[\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3]|[\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6]|[\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE]|[\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C]|[\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D]|[\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC]|[\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B]|[\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788]|[\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805]|[\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB]|[\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28]|[\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5]|[\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4]|[\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E]|[\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D]|[\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36]|[\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D]|[\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC]|[\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF]|[\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC_])/, /^(?:\\|)/, /^(?:\\()/, /^(?:\\))/, /^(?:\\[)/, /^(?:\\])/, /^(?:\\{)/, /^(?:\\})/, /^(?:\")/, /^(?:\\s)/, /^(?:\\n)/, /^(?:$)/],\n            conditions: { \"INITIAL\": { \"rules\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], \"inclusive\": true } }\n        };\n        return lexer;\n    })();\n    parser.lexer = lexer;\n    function Parser() {\n        this.yy = {};\n    }\n    Parser.prototype = parser;parser.Parser = Parser;\n    return new Parser();\n})();\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\n    exports.parser = dot;\n    exports.Parser = dot.Parser;\n    exports.parse = function () {\n        return dot.parse.apply(dot, arguments);\n    };\n    exports.main = function commonjsMain(args) {\n        if (!args[1]) {\n            console.log('Usage: ' + args[0] + ' FILE');\n            process.exit(1);\n        }\n        var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n        return exports.parser.parse(source);\n    };\n    if (typeof module !== 'undefined' && require.main === module) {\n        exports.main(process.argv.slice(1));\n    }\n}\n\n}).call(this,require('_process'))\n},{\"_process\":3,\"fs\":1,\"path\":2}],118:[function(require,module,exports){\n(function (process){\n/* parser generated by jison 0.4.15 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\n\"use strict\";\n\nvar flow = (function () {\n    var o = function o(k, v, _o, l) {\n        for (_o = _o || {}, l = k.length; l--; _o[k[l]] = v);return _o;\n    },\n        $V0 = [1, 4],\n        $V1 = [1, 3],\n        $V2 = [1, 5],\n        $V3 = [1, 8, 9, 10, 11, 13, 18, 30, 46, 71, 72, 73, 74, 75, 81, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97],\n        $V4 = [2, 2],\n        $V5 = [1, 12],\n        $V6 = [1, 13],\n        $V7 = [1, 14],\n        $V8 = [1, 15],\n        $V9 = [1, 31],\n        $Va = [1, 33],\n        $Vb = [1, 22],\n        $Vc = [1, 34],\n        $Vd = [1, 24],\n        $Ve = [1, 25],\n        $Vf = [1, 26],\n        $Vg = [1, 27],\n        $Vh = [1, 28],\n        $Vi = [1, 38],\n        $Vj = [1, 40],\n        $Vk = [1, 35],\n        $Vl = [1, 39],\n        $Vm = [1, 45],\n        $Vn = [1, 44],\n        $Vo = [1, 36],\n        $Vp = [1, 37],\n        $Vq = [1, 41],\n        $Vr = [1, 42],\n        $Vs = [1, 43],\n        $Vt = [1, 8, 9, 10, 11, 13, 18, 30, 32, 46, 71, 72, 73, 74, 75, 81, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97],\n        $Vu = [1, 53],\n        $Vv = [1, 52],\n        $Vw = [1, 54],\n        $Vx = [1, 72],\n        $Vy = [1, 80],\n        $Vz = [1, 81],\n        $VA = [1, 66],\n        $VB = [1, 65],\n        $VC = [1, 85],\n        $VD = [1, 84],\n        $VE = [1, 82],\n        $VF = [1, 83],\n        $VG = [1, 73],\n        $VH = [1, 68],\n        $VI = [1, 67],\n        $VJ = [1, 63],\n        $VK = [1, 75],\n        $VL = [1, 76],\n        $VM = [1, 77],\n        $VN = [1, 78],\n        $VO = [1, 79],\n        $VP = [1, 70],\n        $VQ = [1, 69],\n        $VR = [8, 9, 11],\n        $VS = [8, 9, 11, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64],\n        $VT = [1, 115],\n        $VU = [8, 9, 10, 11, 13, 15, 18, 36, 38, 40, 42, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 81, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97],\n        $VV = [8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 30, 32, 36, 37, 38, 39, 40, 41, 42, 43, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 71, 72, 73, 74, 75, 78, 81, 83, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97],\n        $VW = [1, 117],\n        $VX = [1, 118],\n        $VY = [8, 9, 10, 11, 13, 18, 30, 32, 46, 71, 72, 73, 74, 75, 81, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97],\n        $VZ = [8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 30, 32, 37, 39, 41, 43, 46, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 71, 72, 73, 74, 75, 78, 81, 83, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97],\n        $V_ = [13, 18, 46, 81, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97],\n        $V$ = [13, 18, 46, 49, 65, 81, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97],\n        $V01 = [1, 191],\n        $V11 = [1, 188],\n        $V21 = [1, 195],\n        $V31 = [1, 192],\n        $V41 = [1, 189],\n        $V51 = [1, 196],\n        $V61 = [1, 186],\n        $V71 = [1, 187],\n        $V81 = [1, 190],\n        $V91 = [1, 193],\n        $Va1 = [1, 194],\n        $Vb1 = [1, 211],\n        $Vc1 = [8, 9, 11, 85],\n        $Vd1 = [8, 9, 10, 11, 46, 71, 80, 81, 83, 85, 87, 88, 89, 90, 91];\n    var parser = { trace: function trace() {},\n        yy: {},\n        symbols_: { \"error\": 2, \"mermaidDoc\": 3, \"graphConfig\": 4, \"document\": 5, \"line\": 6, \"statement\": 7, \"SEMI\": 8, \"NEWLINE\": 9, \"SPACE\": 10, \"EOF\": 11, \"GRAPH\": 12, \"DIR\": 13, \"FirstStmtSeperator\": 14, \"TAGEND\": 15, \"TAGSTART\": 16, \"UP\": 17, \"DOWN\": 18, \"ending\": 19, \"endToken\": 20, \"spaceList\": 21, \"spaceListNewline\": 22, \"verticeStatement\": 23, \"separator\": 24, \"styleStatement\": 25, \"linkStyleStatement\": 26, \"classDefStatement\": 27, \"classStatement\": 28, \"clickStatement\": 29, \"subgraph\": 30, \"text\": 31, \"end\": 32, \"vertex\": 33, \"link\": 34, \"alphaNum\": 35, \"SQS\": 36, \"SQE\": 37, \"PS\": 38, \"PE\": 39, \"(-\": 40, \"-)\": 41, \"DIAMOND_START\": 42, \"DIAMOND_STOP\": 43, \"alphaNumStatement\": 44, \"alphaNumToken\": 45, \"MINUS\": 46, \"linkStatement\": 47, \"arrowText\": 48, \"TESTSTR\": 49, \"--\": 50, \"ARROW_POINT\": 51, \"ARROW_CIRCLE\": 52, \"ARROW_CROSS\": 53, \"ARROW_OPEN\": 54, \"-.\": 55, \"DOTTED_ARROW_POINT\": 56, \"DOTTED_ARROW_CIRCLE\": 57, \"DOTTED_ARROW_CROSS\": 58, \"DOTTED_ARROW_OPEN\": 59, \"==\": 60, \"THICK_ARROW_POINT\": 61, \"THICK_ARROW_CIRCLE\": 62, \"THICK_ARROW_CROSS\": 63, \"THICK_ARROW_OPEN\": 64, \"PIPE\": 65, \"textToken\": 66, \"STR\": 67, \"commentText\": 68, \"commentToken\": 69, \"keywords\": 70, \"STYLE\": 71, \"LINKSTYLE\": 72, \"CLASSDEF\": 73, \"CLASS\": 74, \"CLICK\": 75, \"textNoTags\": 76, \"textNoTagsToken\": 77, \"DEFAULT\": 78, \"stylesOpt\": 79, \"HEX\": 80, \"NUM\": 81, \"commentStatement\": 82, \"PCT\": 83, \"style\": 84, \"COMMA\": 85, \"styleComponent\": 86, \"ALPHA\": 87, \"COLON\": 88, \"UNIT\": 89, \"BRKT\": 90, \"DOT\": 91, \"graphCodeTokens\": 92, \"PUNCTUATION\": 93, \"UNICODE_TEXT\": 94, \"PLUS\": 95, \"EQUALS\": 96, \"MULT\": 97, \"TAG_START\": 98, \"TAG_END\": 99, \"QUOTE\": 100, \"$accept\": 0, \"$end\": 1 },\n        terminals_: { 2: \"error\", 8: \"SEMI\", 9: \"NEWLINE\", 10: \"SPACE\", 11: \"EOF\", 12: \"GRAPH\", 13: \"DIR\", 15: \"TAGEND\", 16: \"TAGSTART\", 17: \"UP\", 18: \"DOWN\", 30: \"subgraph\", 32: \"end\", 36: \"SQS\", 37: \"SQE\", 38: \"PS\", 39: \"PE\", 40: \"(-\", 41: \"-)\", 42: \"DIAMOND_START\", 43: \"DIAMOND_STOP\", 46: \"MINUS\", 49: \"TESTSTR\", 50: \"--\", 51: \"ARROW_POINT\", 52: \"ARROW_CIRCLE\", 53: \"ARROW_CROSS\", 54: \"ARROW_OPEN\", 55: \"-.\", 56: \"DOTTED_ARROW_POINT\", 57: \"DOTTED_ARROW_CIRCLE\", 58: \"DOTTED_ARROW_CROSS\", 59: \"DOTTED_ARROW_OPEN\", 60: \"==\", 61: \"THICK_ARROW_POINT\", 62: \"THICK_ARROW_CIRCLE\", 63: \"THICK_ARROW_CROSS\", 64: \"THICK_ARROW_OPEN\", 65: \"PIPE\", 67: \"STR\", 71: \"STYLE\", 72: \"LINKSTYLE\", 73: \"CLASSDEF\", 74: \"CLASS\", 75: \"CLICK\", 78: \"DEFAULT\", 80: \"HEX\", 81: \"NUM\", 83: \"PCT\", 85: \"COMMA\", 87: \"ALPHA\", 88: \"COLON\", 89: \"UNIT\", 90: \"BRKT\", 91: \"DOT\", 93: \"PUNCTUATION\", 94: \"UNICODE_TEXT\", 95: \"PLUS\", 96: \"EQUALS\", 97: \"MULT\", 98: \"TAG_START\", 99: \"TAG_END\", 100: \"QUOTE\" },\n        productions_: [0, [3, 2], [5, 0], [5, 2], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [4, 2], [4, 2], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [19, 2], [19, 1], [20, 1], [20, 1], [20, 1], [14, 1], [14, 1], [14, 2], [22, 2], [22, 2], [22, 1], [22, 1], [21, 2], [21, 1], [7, 2], [7, 2], [7, 2], [7, 2], [7, 2], [7, 2], [7, 5], [7, 4], [24, 1], [24, 1], [24, 1], [23, 3], [23, 1], [33, 4], [33, 5], [33, 6], [33, 7], [33, 4], [33, 5], [33, 4], [33, 5], [33, 4], [33, 5], [33, 4], [33, 5], [33, 1], [33, 2], [35, 1], [35, 2], [44, 1], [44, 1], [44, 1], [44, 1], [34, 2], [34, 3], [34, 3], [34, 1], [34, 3], [34, 3], [34, 3], [34, 3], [34, 3], [34, 3], [34, 3], [34, 3], [34, 3], [34, 3], [34, 3], [34, 3], [47, 1], [47, 1], [47, 1], [47, 1], [47, 1], [47, 1], [47, 1], [47, 1], [47, 1], [47, 1], [47, 1], [47, 1], [48, 3], [31, 1], [31, 2], [31, 1], [68, 1], [68, 2], [70, 1], [70, 1], [70, 1], [70, 1], [70, 1], [70, 1], [70, 1], [70, 1], [70, 1], [70, 1], [70, 1], [76, 1], [76, 2], [27, 5], [27, 5], [28, 5], [29, 5], [29, 7], [29, 5], [29, 7], [25, 5], [25, 5], [26, 5], [26, 5], [82, 3], [79, 1], [79, 3], [84, 1], [84, 2], [86, 1], [86, 1], [86, 1], [86, 1], [86, 1], [86, 1], [86, 1], [86, 1], [86, 1], [86, 1], [86, 1], [69, 1], [69, 1], [66, 1], [66, 1], [66, 1], [66, 1], [66, 1], [66, 1], [66, 1], [77, 1], [77, 1], [77, 1], [77, 1], [45, 1], [45, 1], [45, 1], [45, 1], [45, 1], [45, 1], [45, 1], [45, 1], [45, 1], [45, 1], [45, 1], [92, 1], [92, 1], [92, 1], [92, 1], [92, 1], [92, 1], [92, 1], [92, 1], [92, 1], [92, 1], [92, 1], [92, 1], [92, 1], [92, 1], [92, 1]],\n        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, /* action[1] */$$, /* vstack */_$ /* lstack */) {\n            /* this == yyval */\n\n            var $0 = $$.length - 1;\n            switch (yystate) {\n                case 2:\n                    this.$ = [];\n                    break;\n                case 3:\n\n                    if ($$[$0] !== []) {\n                        $$[$0 - 1].push($$[$0]);\n                    }\n                    this.$ = $$[$0 - 1];\n                    break;\n                case 4:case 57:case 59:case 60:case 92:case 94:case 95:case 108:\n                    this.$ = $$[$0];\n                    break;\n                case 11:\n                    yy.setDirection($$[$0 - 1]);this.$ = $$[$0 - 1];\n                    break;\n                case 12:\n                    yy.setDirection(\"LR\");this.$ = $$[$0 - 1];\n                    break;\n                case 13:\n                    yy.setDirection(\"RL\");this.$ = $$[$0 - 1];\n                    break;\n                case 14:\n                    yy.setDirection(\"BT\");this.$ = $$[$0 - 1];\n                    break;\n                case 15:\n                    yy.setDirection(\"TB\");this.$ = $$[$0 - 1];\n                    break;\n                case 30:\n                    this.$ = $$[$0 - 1];\n                    break;\n                case 31:case 32:case 33:case 34:case 35:\n                    this.$ = [];\n                    break;\n                case 36:\n                    this.$ = yy.addSubGraph($$[$0 - 1], $$[$0 - 3]);\n                    break;\n                case 37:\n                    this.$ = yy.addSubGraph($$[$0 - 1], undefined);\n                    break;\n                case 41:\n                    yy.addLink($$[$0 - 2], $$[$0], $$[$0 - 1]);this.$ = [$$[$0 - 2], $$[$0]];\n                    break;\n                case 42:\n                    this.$ = [$$[$0]];\n                    break;\n                case 43:\n                    this.$ = $$[$0 - 3];yy.addVertex($$[$0 - 3], $$[$0 - 1], 'square');\n                    break;\n                case 44:\n                    this.$ = $$[$0 - 4];yy.addVertex($$[$0 - 4], $$[$0 - 2], 'square');\n                    break;\n                case 45:\n                    this.$ = $$[$0 - 5];yy.addVertex($$[$0 - 5], $$[$0 - 2], 'circle');\n                    break;\n                case 46:\n                    this.$ = $$[$0 - 6];yy.addVertex($$[$0 - 6], $$[$0 - 3], 'circle');\n                    break;\n                case 47:\n                    this.$ = $$[$0 - 3];yy.addVertex($$[$0 - 3], $$[$0 - 1], 'ellipse');\n                    break;\n                case 48:\n                    this.$ = $$[$0 - 4];yy.addVertex($$[$0 - 4], $$[$0 - 2], 'ellipse');\n                    break;\n                case 49:\n                    this.$ = $$[$0 - 3];yy.addVertex($$[$0 - 3], $$[$0 - 1], 'round');\n                    break;\n                case 50:\n                    this.$ = $$[$0 - 4];yy.addVertex($$[$0 - 4], $$[$0 - 2], 'round');\n                    break;\n                case 51:\n                    this.$ = $$[$0 - 3];yy.addVertex($$[$0 - 3], $$[$0 - 1], 'diamond');\n                    break;\n                case 52:\n                    this.$ = $$[$0 - 4];yy.addVertex($$[$0 - 4], $$[$0 - 2], 'diamond');\n                    break;\n                case 53:\n                    this.$ = $$[$0 - 3];yy.addVertex($$[$0 - 3], $$[$0 - 1], 'odd');\n                    break;\n                case 54:\n                    this.$ = $$[$0 - 4];yy.addVertex($$[$0 - 4], $$[$0 - 2], 'odd');\n                    break;\n                case 55:\n                    this.$ = $$[$0];yy.addVertex($$[$0]);\n                    break;\n                case 56:\n                    this.$ = $$[$0 - 1];yy.addVertex($$[$0 - 1]);\n                    break;\n                case 58:case 93:case 96:case 109:\n                    this.$ = $$[$0 - 1] + '' + $$[$0];\n                    break;\n                case 61:\n                    this.$ = 'v';\n                    break;\n                case 62:\n                    this.$ = '-';\n                    break;\n                case 63:\n                    $$[$0 - 1].text = $$[$0];this.$ = $$[$0 - 1];\n                    break;\n                case 64:case 65:\n                    $$[$0 - 2].text = $$[$0 - 1];this.$ = $$[$0 - 2];\n                    break;\n                case 66:\n                    this.$ = $$[$0];\n                    break;\n                case 67:\n                    this.$ = { \"type\": \"arrow\", \"stroke\": \"normal\", \"text\": $$[$0 - 1] };\n                    break;\n                case 68:\n                    this.$ = { \"type\": \"arrow_circle\", \"stroke\": \"normal\", \"text\": $$[$0 - 1] };\n                    break;\n                case 69:\n                    this.$ = { \"type\": \"arrow_cross\", \"stroke\": \"normal\", \"text\": $$[$0 - 1] };\n                    break;\n                case 70:\n                    this.$ = { \"type\": \"arrow_open\", \"stroke\": \"normal\", \"text\": $$[$0 - 1] };\n                    break;\n                case 71:\n                    this.$ = { \"type\": \"arrow\", \"stroke\": \"dotted\", \"text\": $$[$0 - 1] };\n                    break;\n                case 72:\n                    this.$ = { \"type\": \"arrow_circle\", \"stroke\": \"dotted\", \"text\": $$[$0 - 1] };\n                    break;\n                case 73:\n                    this.$ = { \"type\": \"arrow_cross\", \"stroke\": \"dotted\", \"text\": $$[$0 - 1] };\n                    break;\n                case 74:\n                    this.$ = { \"type\": \"arrow_open\", \"stroke\": \"dotted\", \"text\": $$[$0 - 1] };\n                    break;\n                case 75:\n                    this.$ = { \"type\": \"arrow\", \"stroke\": \"thick\", \"text\": $$[$0 - 1] };\n                    break;\n                case 76:\n                    this.$ = { \"type\": \"arrow_circle\", \"stroke\": \"thick\", \"text\": $$[$0 - 1] };\n                    break;\n                case 77:\n                    this.$ = { \"type\": \"arrow_cross\", \"stroke\": \"thick\", \"text\": $$[$0 - 1] };\n                    break;\n                case 78:\n                    this.$ = { \"type\": \"arrow_open\", \"stroke\": \"thick\", \"text\": $$[$0 - 1] };\n                    break;\n                case 79:\n                    this.$ = { \"type\": \"arrow\", \"stroke\": \"normal\" };\n                    break;\n                case 80:\n                    this.$ = { \"type\": \"arrow_circle\", \"stroke\": \"normal\" };\n                    break;\n                case 81:\n                    this.$ = { \"type\": \"arrow_cross\", \"stroke\": \"normal\" };\n                    break;\n                case 82:\n                    this.$ = { \"type\": \"arrow_open\", \"stroke\": \"normal\" };\n                    break;\n                case 83:\n                    this.$ = { \"type\": \"arrow\", \"stroke\": \"dotted\" };\n                    break;\n                case 84:\n                    this.$ = { \"type\": \"arrow_circle\", \"stroke\": \"dotted\" };\n                    break;\n                case 85:\n                    this.$ = { \"type\": \"arrow_cross\", \"stroke\": \"dotted\" };\n                    break;\n                case 86:\n                    this.$ = { \"type\": \"arrow_open\", \"stroke\": \"dotted\" };\n                    break;\n                case 87:\n                    this.$ = { \"type\": \"arrow\", \"stroke\": \"thick\" };\n                    break;\n                case 88:\n                    this.$ = { \"type\": \"arrow_circle\", \"stroke\": \"thick\" };\n                    break;\n                case 89:\n                    this.$ = { \"type\": \"arrow_cross\", \"stroke\": \"thick\" };\n                    break;\n                case 90:\n                    this.$ = { \"type\": \"arrow_open\", \"stroke\": \"thick\" };\n                    break;\n                case 91:\n                    this.$ = $$[$0 - 1];\n                    break;\n                case 110:case 111:\n                    this.$ = $$[$0 - 4];yy.addClass($$[$0 - 2], $$[$0]);\n                    break;\n                case 112:\n                    this.$ = $$[$0 - 4];yy.setClass($$[$0 - 2], $$[$0]);\n                    break;\n                case 113:\n                    this.$ = $$[$0 - 4];yy.setClickEvent($$[$0 - 2], $$[$0], undefined, undefined);\n                    break;\n                case 114:\n                    this.$ = $$[$0 - 6];yy.setClickEvent($$[$0 - 4], $$[$0 - 2], undefined, $$[$0]);\n                    break;\n                case 115:\n                    this.$ = $$[$0 - 4];yy.setClickEvent($$[$0 - 2], undefined, $$[$0], undefined);\n                    break;\n                case 116:\n                    this.$ = $$[$0 - 6];yy.setClickEvent($$[$0 - 4], undefined, $$[$0 - 2], $$[$0]);\n                    break;\n                case 117:\n                    this.$ = $$[$0 - 4];yy.addVertex($$[$0 - 2], undefined, undefined, $$[$0]);\n                    break;\n                case 118:case 119:case 120:\n                    this.$ = $$[$0 - 4];yy.updateLink($$[$0 - 2], $$[$0]);\n                    break;\n                case 122:\n                    this.$ = [$$[$0]];\n                    break;\n                case 123:\n                    $$[$0 - 2].push($$[$0]);this.$ = $$[$0 - 2];\n                    break;\n                case 125:\n                    this.$ = $$[$0 - 1] + $$[$0];\n                    break;\n            }\n        },\n        table: [{ 3: 1, 4: 2, 9: $V0, 10: $V1, 12: $V2 }, { 1: [3] }, o($V3, $V4, { 5: 6 }), { 4: 7, 9: $V0, 10: $V1, 12: $V2 }, { 4: 8, 9: $V0, 10: $V1, 12: $V2 }, { 10: [1, 9] }, { 1: [2, 1], 6: 10, 7: 11, 8: $V5, 9: $V6, 10: $V7, 11: $V8, 13: $V9, 18: $Va, 23: 16, 25: 17, 26: 18, 27: 19, 28: 20, 29: 21, 30: $Vb, 33: 23, 35: 29, 44: 30, 45: 32, 46: $Vc, 71: $Vd, 72: $Ve, 73: $Vf, 74: $Vg, 75: $Vh, 81: $Vi, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, o($V3, [2, 9]), o($V3, [2, 10]), { 13: [1, 46], 15: [1, 47], 16: [1, 48], 17: [1, 49], 18: [1, 50] }, o($Vt, [2, 3]), o($Vt, [2, 4]), o($Vt, [2, 5]), o($Vt, [2, 6]), o($Vt, [2, 7]), o($Vt, [2, 8]), { 8: $Vu, 9: $Vv, 11: $Vw, 24: 51 }, { 8: $Vu, 9: $Vv, 11: $Vw, 24: 55 }, { 8: $Vu, 9: $Vv, 11: $Vw, 24: 56 }, { 8: $Vu, 9: $Vv, 11: $Vw, 24: 57 }, { 8: $Vu, 9: $Vv, 11: $Vw, 24: 58 }, { 8: $Vu, 9: $Vv, 11: $Vw, 24: 59 }, { 8: $Vu, 9: $Vv, 10: $Vx, 11: $Vw, 12: $Vy, 13: $Vz, 15: $VA, 16: $VB, 17: $VC, 18: $VD, 24: 61, 30: $VE, 31: 60, 32: $VF, 45: 71, 46: $VG, 50: $VH, 60: $VI, 66: 62, 67: $VJ, 70: 74, 71: $VK, 72: $VL, 73: $VM, 74: $VN, 75: $VO, 77: 64, 78: $VP, 81: $Vi, 83: $VQ, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, o($VR, [2, 42], { 34: 86, 47: 87, 50: [1, 88], 51: [1, 91], 52: [1, 92], 53: [1, 93], 54: [1, 94], 55: [1, 89], 56: [1, 95], 57: [1, 96], 58: [1, 97], 59: [1, 98], 60: [1, 90], 61: [1, 99], 62: [1, 100], 63: [1, 101], 64: [1, 102] }), { 10: [1, 103] }, { 10: [1, 104] }, { 10: [1, 105] }, { 10: [1, 106] }, { 10: [1, 107] }, o($VS, [2, 55], { 45: 32, 21: 113, 44: 114, 10: $VT, 13: $V9, 15: [1, 112], 18: $Va, 36: [1, 108], 38: [1, 109], 40: [1, 110], 42: [1, 111], 46: $Vc, 81: $Vi, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }), o($VU, [2, 57]), o($VU, [2, 59]), o($VU, [2, 60]), o($VU, [2, 61]), o($VU, [2, 62]), o($VV, [2, 150]), o($VV, [2, 151]), o($VV, [2, 152]), o($VV, [2, 153]), o($VV, [2, 154]), o($VV, [2, 155]), o($VV, [2, 156]), o($VV, [2, 157]), o($VV, [2, 158]), o($VV, [2, 159]), o($VV, [2, 160]), { 8: $VW, 9: $VX, 10: $VT, 14: 116, 21: 119 }, { 8: $VW, 9: $VX, 10: $VT, 14: 120, 21: 119 }, { 8: $VW, 9: $VX, 10: $VT, 14: 121, 21: 119 }, { 8: $VW, 9: $VX, 10: $VT, 14: 122, 21: 119 }, { 8: $VW, 9: $VX, 10: $VT, 14: 123, 21: 119 }, o($Vt, [2, 30]), o($Vt, [2, 38]), o($Vt, [2, 39]), o($Vt, [2, 40]), o($Vt, [2, 31]), o($Vt, [2, 32]), o($Vt, [2, 33]), o($Vt, [2, 34]), o($Vt, [2, 35]), { 8: $Vu, 9: $Vv, 10: $Vx, 11: $Vw, 12: $Vy, 13: $Vz, 15: $VA, 16: $VB, 17: $VC, 18: $VD, 24: 124, 30: $VE, 32: $VF, 45: 71, 46: $VG, 50: $VH, 60: $VI, 66: 125, 70: 74, 71: $VK, 72: $VL, 73: $VM, 74: $VN, 75: $VO, 77: 64, 78: $VP, 81: $Vi, 83: $VQ, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, o($VY, $V4, { 5: 126 }), o($VZ, [2, 92]), o($VZ, [2, 94]), o($VZ, [2, 139]), o($VZ, [2, 140]), o($VZ, [2, 141]), o($VZ, [2, 142]), o($VZ, [2, 143]), o($VZ, [2, 144]), o($VZ, [2, 145]), o($VZ, [2, 146]), o($VZ, [2, 147]), o($VZ, [2, 148]), o($VZ, [2, 149]), o($VZ, [2, 97]), o($VZ, [2, 98]), o($VZ, [2, 99]), o($VZ, [2, 100]), o($VZ, [2, 101]), o($VZ, [2, 102]), o($VZ, [2, 103]), o($VZ, [2, 104]), o($VZ, [2, 105]), o($VZ, [2, 106]), o($VZ, [2, 107]), { 13: $V9, 18: $Va, 33: 127, 35: 29, 44: 30, 45: 32, 46: $Vc, 81: $Vi, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, o($V_, [2, 66], { 48: 128, 49: [1, 129], 65: [1, 130] }), { 10: $Vx, 12: $Vy, 13: $Vz, 15: $VA, 16: $VB, 17: $VC, 18: $VD, 30: $VE, 31: 131, 32: $VF, 45: 71, 46: $VG, 50: $VH, 60: $VI, 66: 62, 67: $VJ, 70: 74, 71: $VK, 72: $VL, 73: $VM, 74: $VN, 75: $VO, 77: 64, 78: $VP, 81: $Vi, 83: $VQ, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 10: $Vx, 12: $Vy, 13: $Vz, 15: $VA, 16: $VB, 17: $VC, 18: $VD, 30: $VE, 31: 132, 32: $VF, 45: 71, 46: $VG, 50: $VH, 60: $VI, 66: 62, 67: $VJ, 70: 74, 71: $VK, 72: $VL, 73: $VM, 74: $VN, 75: $VO, 77: 64, 78: $VP, 81: $Vi, 83: $VQ, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 10: $Vx, 12: $Vy, 13: $Vz, 15: $VA, 16: $VB, 17: $VC, 18: $VD, 30: $VE, 31: 133, 32: $VF, 45: 71, 46: $VG, 50: $VH, 60: $VI, 66: 62, 67: $VJ, 70: 74, 71: $VK, 72: $VL, 73: $VM, 74: $VN, 75: $VO, 77: 64, 78: $VP, 81: $Vi, 83: $VQ, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, o($V$, [2, 79]), o($V$, [2, 80]), o($V$, [2, 81]), o($V$, [2, 82]), o($V$, [2, 83]), o($V$, [2, 84]), o($V$, [2, 85]), o($V$, [2, 86]), o($V$, [2, 87]), o($V$, [2, 88]), o($V$, [2, 89]), o($V$, [2, 90]), { 13: $V9, 18: $Va, 35: 134, 44: 30, 45: 32, 46: $Vc, 80: [1, 135], 81: $Vi, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 78: [1, 136], 81: [1, 137] }, { 13: $V9, 18: $Va, 35: 139, 44: 30, 45: 32, 46: $Vc, 78: [1, 138], 81: $Vi, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 13: $V9, 18: $Va, 35: 140, 44: 30, 45: 32, 46: $Vc, 81: $Vi, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 13: $V9, 18: $Va, 35: 141, 44: 30, 45: 32, 46: $Vc, 81: $Vi, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 10: $Vx, 12: $Vy, 13: $Vz, 15: $VA, 16: $VB, 17: $VC, 18: $VD, 30: $VE, 31: 142, 32: $VF, 45: 71, 46: $VG, 50: $VH, 60: $VI, 66: 62, 67: $VJ, 70: 74, 71: $VK, 72: $VL, 73: $VM, 74: $VN, 75: $VO, 77: 64, 78: $VP, 81: $Vi, 83: $VQ, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 10: $Vx, 12: $Vy, 13: $Vz, 15: $VA, 16: $VB, 17: $VC, 18: $VD, 30: $VE, 31: 144, 32: $VF, 38: [1, 143], 45: 71, 46: $VG, 50: $VH, 60: $VI, 66: 62, 67: $VJ, 70: 74, 71: $VK, 72: $VL, 73: $VM, 74: $VN, 75: $VO, 77: 64, 78: $VP, 81: $Vi, 83: $VQ, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 10: $Vx, 12: $Vy, 13: $Vz, 15: $VA, 16: $VB, 17: $VC, 18: $VD, 30: $VE, 31: 145, 32: $VF, 45: 71, 46: $VG, 50: $VH, 60: $VI, 66: 62, 67: $VJ, 70: 74, 71: $VK, 72: $VL, 73: $VM, 74: $VN, 75: $VO, 77: 64, 78: $VP, 81: $Vi, 83: $VQ, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 10: $Vx, 12: $Vy, 13: $Vz, 15: $VA, 16: $VB, 17: $VC, 18: $VD, 30: $VE, 31: 146, 32: $VF, 45: 71, 46: $VG, 50: $VH, 60: $VI, 66: 62, 67: $VJ, 70: 74, 71: $VK, 72: $VL, 73: $VM, 74: $VN, 75: $VO, 77: 64, 78: $VP, 81: $Vi, 83: $VQ, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 10: $Vx, 12: $Vy, 13: $Vz, 15: $VA, 16: $VB, 17: $VC, 18: $VD, 30: $VE, 31: 147, 32: $VF, 45: 71, 46: $VG, 50: $VH, 60: $VI, 66: 62, 67: $VJ, 70: 74, 71: $VK, 72: $VL, 73: $VM, 74: $VN, 75: $VO, 77: 64, 78: $VP, 81: $Vi, 83: $VQ, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, o($VS, [2, 56]), o($VU, [2, 58]), o($VS, [2, 29], { 21: 148, 10: $VT }), o($V3, [2, 11]), o($V3, [2, 21]), o($V3, [2, 22]), { 9: [1, 149] }, o($V3, [2, 12]), o($V3, [2, 13]), o($V3, [2, 14]), o($V3, [2, 15]), o($VY, $V4, { 5: 150 }), o($VZ, [2, 93]), { 6: 10, 7: 11, 8: $V5, 9: $V6, 10: $V7, 11: $V8, 13: $V9, 18: $Va, 23: 16, 25: 17, 26: 18, 27: 19, 28: 20, 29: 21, 30: $Vb, 32: [1, 151], 33: 23, 35: 29, 44: 30, 45: 32, 46: $Vc, 71: $Vd, 72: $Ve, 73: $Vf, 74: $Vg, 75: $Vh, 81: $Vi, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, o($VR, [2, 41]), o($V_, [2, 63], { 10: [1, 152] }), { 10: [1, 153] }, { 10: $Vx, 12: $Vy, 13: $Vz, 15: $VA, 16: $VB, 17: $VC, 18: $VD, 30: $VE, 31: 154, 32: $VF, 45: 71, 46: $VG, 50: $VH, 60: $VI, 66: 62, 67: $VJ, 70: 74, 71: $VK, 72: $VL, 73: $VM, 74: $VN, 75: $VO, 77: 64, 78: $VP, 81: $Vi, 83: $VQ, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 10: $Vx, 12: $Vy, 13: $Vz, 15: $VA, 16: $VB, 17: $VC, 18: $VD, 30: $VE, 32: $VF, 45: 71, 46: $VG, 50: $VH, 51: [1, 155], 52: [1, 156], 53: [1, 157], 54: [1, 158], 60: $VI, 66: 125, 70: 74, 71: $VK, 72: $VL, 73: $VM, 74: $VN, 75: $VO, 77: 64, 78: $VP, 81: $Vi, 83: $VQ, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 10: $Vx, 12: $Vy, 13: $Vz, 15: $VA, 16: $VB, 17: $VC, 18: $VD, 30: $VE, 32: $VF, 45: 71, 46: $VG, 50: $VH, 56: [1, 159], 57: [1, 160], 58: [1, 161], 59: [1, 162], 60: $VI, 66: 125, 70: 74, 71: $VK, 72: $VL, 73: $VM, 74: $VN, 75: $VO, 77: 64, 78: $VP, 81: $Vi, 83: $VQ, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 10: $Vx, 12: $Vy, 13: $Vz, 15: $VA, 16: $VB, 17: $VC, 18: $VD, 30: $VE, 32: $VF, 45: 71, 46: $VG, 50: $VH, 60: $VI, 61: [1, 163], 62: [1, 164], 63: [1, 165], 64: [1, 166], 66: 125, 70: 74, 71: $VK, 72: $VL, 73: $VM, 74: $VN, 75: $VO, 77: 64, 78: $VP, 81: $Vi, 83: $VQ, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 10: [1, 167], 13: $V9, 18: $Va, 44: 114, 45: 32, 46: $Vc, 81: $Vi, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 10: [1, 168] }, { 10: [1, 169] }, { 10: [1, 170] }, { 10: [1, 171] }, { 10: [1, 172], 13: $V9, 18: $Va, 44: 114, 45: 32, 46: $Vc, 81: $Vi, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 10: [1, 173], 13: $V9, 18: $Va, 44: 114, 45: 32, 46: $Vc, 81: $Vi, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 10: [1, 174], 13: $V9, 18: $Va, 44: 114, 45: 32, 46: $Vc, 81: $Vi, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 10: $Vx, 12: $Vy, 13: $Vz, 15: $VA, 16: $VB, 17: $VC, 18: $VD, 30: $VE, 32: $VF, 37: [1, 175], 45: 71, 46: $VG, 50: $VH, 60: $VI, 66: 125, 70: 74, 71: $VK, 72: $VL, 73: $VM, 74: $VN, 75: $VO, 77: 64, 78: $VP, 81: $Vi, 83: $VQ, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 10: $Vx, 12: $Vy, 13: $Vz, 15: $VA, 16: $VB, 17: $VC, 18: $VD, 30: $VE, 31: 176, 32: $VF, 45: 71, 46: $VG, 50: $VH, 60: $VI, 66: 62, 67: $VJ, 70: 74, 71: $VK, 72: $VL, 73: $VM, 74: $VN, 75: $VO, 77: 64, 78: $VP, 81: $Vi, 83: $VQ, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 10: $Vx, 12: $Vy, 13: $Vz, 15: $VA, 16: $VB, 17: $VC, 18: $VD, 30: $VE, 32: $VF, 39: [1, 177], 45: 71, 46: $VG, 50: $VH, 60: $VI, 66: 125, 70: 74, 71: $VK, 72: $VL, 73: $VM, 74: $VN, 75: $VO, 77: 64, 78: $VP, 81: $Vi, 83: $VQ, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 10: $Vx, 12: $Vy, 13: $Vz, 15: $VA, 16: $VB, 17: $VC, 18: $VD, 30: $VE, 32: $VF, 41: [1, 178], 45: 71, 46: $VG, 50: $VH, 60: $VI, 66: 125, 70: 74, 71: $VK, 72: $VL, 73: $VM, 74: $VN, 75: $VO, 77: 64, 78: $VP, 81: $Vi, 83: $VQ, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 10: $Vx, 12: $Vy, 13: $Vz, 15: $VA, 16: $VB, 17: $VC, 18: $VD, 30: $VE, 32: $VF, 43: [1, 179], 45: 71, 46: $VG, 50: $VH, 60: $VI, 66: 125, 70: 74, 71: $VK, 72: $VL, 73: $VM, 74: $VN, 75: $VO, 77: 64, 78: $VP, 81: $Vi, 83: $VQ, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 10: $Vx, 12: $Vy, 13: $Vz, 15: $VA, 16: $VB, 17: $VC, 18: $VD, 30: $VE, 32: $VF, 37: [1, 180], 45: 71, 46: $VG, 50: $VH, 60: $VI, 66: 125, 70: 74, 71: $VK, 72: $VL, 73: $VM, 74: $VN, 75: $VO, 77: 64, 78: $VP, 81: $Vi, 83: $VQ, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, o($VS, [2, 28]), o($V3, [2, 23]), { 6: 10, 7: 11, 8: $V5, 9: $V6, 10: $V7, 11: $V8, 13: $V9, 18: $Va, 23: 16, 25: 17, 26: 18, 27: 19, 28: 20, 29: 21, 30: $Vb, 32: [1, 181], 33: 23, 35: 29, 44: 30, 45: 32, 46: $Vc, 71: $Vd, 72: $Ve, 73: $Vf, 74: $Vg, 75: $Vh, 81: $Vi, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, o($Vt, [2, 37]), o($V_, [2, 65]), o($V_, [2, 64]), { 10: $Vx, 12: $Vy, 13: $Vz, 15: $VA, 16: $VB, 17: $VC, 18: $VD, 30: $VE, 32: $VF, 45: 71, 46: $VG, 50: $VH, 60: $VI, 65: [1, 182], 66: 125, 70: 74, 71: $VK, 72: $VL, 73: $VM, 74: $VN, 75: $VO, 77: 64, 78: $VP, 81: $Vi, 83: $VQ, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, o($V_, [2, 67]), o($V_, [2, 68]), o($V_, [2, 69]), o($V_, [2, 70]), o($V_, [2, 71]), o($V_, [2, 72]), o($V_, [2, 73]), o($V_, [2, 74]), o($V_, [2, 75]), o($V_, [2, 76]), o($V_, [2, 77]), o($V_, [2, 78]), { 10: $V01, 46: $V11, 71: $V21, 79: 183, 80: $V31, 81: $V41, 83: $V51, 84: 184, 86: 185, 87: $V61, 88: $V71, 89: $V81, 90: $V91, 91: $Va1 }, { 10: $V01, 46: $V11, 71: $V21, 79: 197, 80: $V31, 81: $V41, 83: $V51, 84: 184, 86: 185, 87: $V61, 88: $V71, 89: $V81, 90: $V91, 91: $Va1 }, { 10: $V01, 46: $V11, 71: $V21, 79: 198, 80: $V31, 81: $V41, 83: $V51, 84: 184, 86: 185, 87: $V61, 88: $V71, 89: $V81, 90: $V91, 91: $Va1 }, { 10: $V01, 46: $V11, 71: $V21, 79: 199, 80: $V31, 81: $V41, 83: $V51, 84: 184, 86: 185, 87: $V61, 88: $V71, 89: $V81, 90: $V91, 91: $Va1 }, { 10: $V01, 46: $V11, 71: $V21, 79: 200, 80: $V31, 81: $V41, 83: $V51, 84: 184, 86: 185, 87: $V61, 88: $V71, 89: $V81, 90: $V91, 91: $Va1 }, { 10: $V01, 46: $V11, 71: $V21, 79: 201, 80: $V31, 81: $V41, 83: $V51, 84: 184, 86: 185, 87: $V61, 88: $V71, 89: $V81, 90: $V91, 91: $Va1 }, { 13: $V9, 18: $Va, 35: 202, 44: 30, 45: 32, 46: $Vc, 81: $Vi, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, { 13: $V9, 18: $Va, 35: 203, 44: 30, 45: 32, 46: $Vc, 67: [1, 204], 81: $Vi, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, o($VS, [2, 43], { 21: 205, 10: $VT }), { 10: $Vx, 12: $Vy, 13: $Vz, 15: $VA, 16: $VB, 17: $VC, 18: $VD, 30: $VE, 32: $VF, 39: [1, 206], 45: 71, 46: $VG, 50: $VH, 60: $VI, 66: 125, 70: 74, 71: $VK, 72: $VL, 73: $VM, 74: $VN, 75: $VO, 77: 64, 78: $VP, 81: $Vi, 83: $VQ, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }, o($VS, [2, 49], { 21: 207, 10: $VT }), o($VS, [2, 47], { 21: 208, 10: $VT }), o($VS, [2, 51], { 21: 209, 10: $VT }), o($VS, [2, 53], { 21: 210, 10: $VT }), o($Vt, [2, 36]), o([10, 13, 18, 46, 81, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97], [2, 91]), o($VR, [2, 117], { 85: $Vb1 }), o($Vc1, [2, 122], { 86: 212, 10: $V01, 46: $V11, 71: $V21, 80: $V31, 81: $V41, 83: $V51, 87: $V61, 88: $V71, 89: $V81, 90: $V91, 91: $Va1 }), o($Vd1, [2, 124]), o($Vd1, [2, 126]), o($Vd1, [2, 127]), o($Vd1, [2, 128]), o($Vd1, [2, 129]), o($Vd1, [2, 130]), o($Vd1, [2, 131]), o($Vd1, [2, 132]), o($Vd1, [2, 133]), o($Vd1, [2, 134]), o($Vd1, [2, 135]), o($Vd1, [2, 136]), o($VR, [2, 118], { 85: $Vb1 }), o($VR, [2, 119], { 85: $Vb1 }), o($VR, [2, 120], { 85: $Vb1 }), o($VR, [2, 110], { 85: $Vb1 }), o($VR, [2, 111], { 85: $Vb1 }), o($VR, [2, 112], { 45: 32, 44: 114, 13: $V9, 18: $Va, 46: $Vc, 81: $Vi, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }), o($VR, [2, 113], { 45: 32, 44: 114, 10: [1, 213], 13: $V9, 18: $Va, 46: $Vc, 81: $Vi, 85: $Vj, 87: $Vk, 88: $Vl, 90: $Vm, 91: $Vn, 93: $Vo, 94: $Vp, 95: $Vq, 96: $Vr, 97: $Vs }), o($VR, [2, 115], { 10: [1, 214] }), o($VS, [2, 44]), { 39: [1, 215] }, o($VS, [2, 50]), o($VS, [2, 48]), o($VS, [2, 52]), o($VS, [2, 54]), { 10: $V01, 46: $V11, 71: $V21, 80: $V31, 81: $V41, 83: $V51, 84: 216, 86: 185, 87: $V61, 88: $V71, 89: $V81, 90: $V91, 91: $Va1 }, o($Vd1, [2, 125]), { 67: [1, 217] }, { 67: [1, 218] }, o($VS, [2, 45], { 21: 219, 10: $VT }), o($Vc1, [2, 123], { 86: 212, 10: $V01, 46: $V11, 71: $V21, 80: $V31, 81: $V41, 83: $V51, 87: $V61, 88: $V71, 89: $V81, 90: $V91, 91: $Va1 }), o($VR, [2, 114]), o($VR, [2, 116]), o($VS, [2, 46])],\n        defaultActions: {},\n        parseError: function parseError(str, hash) {\n            if (hash.recoverable) {\n                this.trace(str);\n            } else {\n                var _parseError = function _parseError(msg, hash) {\n                    this.message = msg;\n                    this.hash = hash;\n                };\n\n                _parseError.prototype = new Error();\n\n                throw new _parseError(str, hash);\n            }\n        },\n        parse: function parse(input) {\n            var self = this,\n                stack = [0],\n                tstack = [],\n                vstack = [null],\n                lstack = [],\n                table = this.table,\n                yytext = '',\n                yylineno = 0,\n                yyleng = 0,\n                recovering = 0,\n                TERROR = 2,\n                EOF = 1;\n            var args = lstack.slice.call(arguments, 1);\n            var lexer = Object.create(this.lexer);\n            var sharedState = { yy: {} };\n            for (var k in this.yy) {\n                if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n                    sharedState.yy[k] = this.yy[k];\n                }\n            }\n            lexer.setInput(input, sharedState.yy);\n            sharedState.yy.lexer = lexer;\n            sharedState.yy.parser = this;\n            if (typeof lexer.yylloc == 'undefined') {\n                lexer.yylloc = {};\n            }\n            var yyloc = lexer.yylloc;\n            lstack.push(yyloc);\n            var ranges = lexer.options && lexer.options.ranges;\n            if (typeof sharedState.yy.parseError === 'function') {\n                this.parseError = sharedState.yy.parseError;\n            } else {\n                this.parseError = Object.getPrototypeOf(this).parseError;\n            }\n            function popStack(n) {\n                stack.length = stack.length - 2 * n;\n                vstack.length = vstack.length - n;\n                lstack.length = lstack.length - n;\n            }\n            _token_stack: var lex = function lex() {\n                var token;\n                token = lexer.lex() || EOF;\n                if (typeof token !== 'number') {\n                    token = self.symbols_[token] || token;\n                }\n                return token;\n            };\n            var symbol,\n                preErrorSymbol,\n                state,\n                action,\n                a,\n                r,\n                yyval = {},\n                p,\n                len,\n                newState,\n                expected;\n            while (true) {\n                state = stack[stack.length - 1];\n                if (this.defaultActions[state]) {\n                    action = this.defaultActions[state];\n                } else {\n                    if (symbol === null || typeof symbol == 'undefined') {\n                        symbol = lex();\n                    }\n                    action = table[state] && table[state][symbol];\n                }\n                if (typeof action === 'undefined' || !action.length || !action[0]) {\n                    var errStr = '';\n                    expected = [];\n                    for (p in table[state]) {\n                        if (this.terminals_[p] && p > TERROR) {\n                            expected.push('\\'' + this.terminals_[p] + '\\'');\n                        }\n                    }\n                    if (lexer.showPosition) {\n                        errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                    } else {\n                        errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                    }\n                    this.parseError(errStr, {\n                        text: lexer.match,\n                        token: this.terminals_[symbol] || symbol,\n                        line: lexer.yylineno,\n                        loc: yyloc,\n                        expected: expected\n                    });\n                }\n                if (action[0] instanceof Array && action.length > 1) {\n                    throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n                }\n                switch (action[0]) {\n                    case 1:\n                        stack.push(symbol);\n                        vstack.push(lexer.yytext);\n                        lstack.push(lexer.yylloc);\n                        stack.push(action[1]);\n                        symbol = null;\n                        if (!preErrorSymbol) {\n                            yyleng = lexer.yyleng;\n                            yytext = lexer.yytext;\n                            yylineno = lexer.yylineno;\n                            yyloc = lexer.yylloc;\n                            if (recovering > 0) {\n                                recovering--;\n                            }\n                        } else {\n                            symbol = preErrorSymbol;\n                            preErrorSymbol = null;\n                        }\n                        break;\n                    case 2:\n                        len = this.productions_[action[1]][1];\n                        yyval.$ = vstack[vstack.length - len];\n                        yyval._$ = {\n                            first_line: lstack[lstack.length - (len || 1)].first_line,\n                            last_line: lstack[lstack.length - 1].last_line,\n                            first_column: lstack[lstack.length - (len || 1)].first_column,\n                            last_column: lstack[lstack.length - 1].last_column\n                        };\n                        if (ranges) {\n                            yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\n                        }\n                        r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\n                        if (typeof r !== 'undefined') {\n                            return r;\n                        }\n                        if (len) {\n                            stack = stack.slice(0, -1 * len * 2);\n                            vstack = vstack.slice(0, -1 * len);\n                            lstack = lstack.slice(0, -1 * len);\n                        }\n                        stack.push(this.productions_[action[1]][0]);\n                        vstack.push(yyval.$);\n                        lstack.push(yyval._$);\n                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n                        stack.push(newState);\n                        break;\n                    case 3:\n                        return true;\n                }\n            }\n            return true;\n        } };\n\n    /* generated by jison-lex 0.3.4 */\n    var lexer = (function () {\n        var lexer = {\n\n            EOF: 1,\n\n            parseError: function parseError(str, hash) {\n                if (this.yy.parser) {\n                    this.yy.parser.parseError(str, hash);\n                } else {\n                    throw new Error(str);\n                }\n            },\n\n            // resets the lexer, sets new input\n            setInput: function setInput(input, yy) {\n                this.yy = yy || this.yy || {};\n                this._input = input;\n                this._more = this._backtrack = this.done = false;\n                this.yylineno = this.yyleng = 0;\n                this.yytext = this.matched = this.match = '';\n                this.conditionStack = ['INITIAL'];\n                this.yylloc = {\n                    first_line: 1,\n                    first_column: 0,\n                    last_line: 1,\n                    last_column: 0\n                };\n                if (this.options.ranges) {\n                    this.yylloc.range = [0, 0];\n                }\n                this.offset = 0;\n                return this;\n            },\n\n            // consumes and returns one char from the input\n            input: function input() {\n                var ch = this._input[0];\n                this.yytext += ch;\n                this.yyleng++;\n                this.offset++;\n                this.match += ch;\n                this.matched += ch;\n                var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n                if (lines) {\n                    this.yylineno++;\n                    this.yylloc.last_line++;\n                } else {\n                    this.yylloc.last_column++;\n                }\n                if (this.options.ranges) {\n                    this.yylloc.range[1]++;\n                }\n\n                this._input = this._input.slice(1);\n                return ch;\n            },\n\n            // unshifts one char (or a string) into the input\n            unput: function unput(ch) {\n                var len = ch.length;\n                var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n                this._input = ch + this._input;\n                this.yytext = this.yytext.substr(0, this.yytext.length - len);\n                //this.yyleng -= len;\n                this.offset -= len;\n                var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n                this.match = this.match.substr(0, this.match.length - 1);\n                this.matched = this.matched.substr(0, this.matched.length - 1);\n\n                if (lines.length - 1) {\n                    this.yylineno -= lines.length - 1;\n                }\n                var r = this.yylloc.range;\n\n                this.yylloc = {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.yylineno + 1,\n                    first_column: this.yylloc.first_column,\n                    last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n                };\n\n                if (this.options.ranges) {\n                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n                }\n                this.yyleng = this.yytext.length;\n                return this;\n            },\n\n            // When called from action, caches matched text and appends it on next action\n            more: function more() {\n                this._more = true;\n                return this;\n            },\n\n            // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\n            reject: function reject() {\n                if (this.options.backtrack_lexer) {\n                    this._backtrack = true;\n                } else {\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                        text: \"\",\n                        token: null,\n                        line: this.yylineno\n                    });\n                }\n                return this;\n            },\n\n            // retain first n characters of the match\n            less: function less(n) {\n                this.unput(this.match.slice(n));\n            },\n\n            // displays already matched input, i.e. for error messages\n            pastInput: function pastInput() {\n                var past = this.matched.substr(0, this.matched.length - this.match.length);\n                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\\n/g, \"\");\n            },\n\n            // displays upcoming input, i.e. for error messages\n            upcomingInput: function upcomingInput() {\n                var next = this.match;\n                if (next.length < 20) {\n                    next += this._input.substr(0, 20 - next.length);\n                }\n                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n            },\n\n            // displays the character position where the lexing error occurred, i.e. for error messages\n            showPosition: function showPosition() {\n                var pre = this.pastInput();\n                var c = new Array(pre.length + 1).join(\"-\");\n                return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n            },\n\n            // test the lexed token: return FALSE when not a match, otherwise return token\n            test_match: function test_match(match, indexed_rule) {\n                var token, lines, backup;\n\n                if (this.options.backtrack_lexer) {\n                    // save context\n                    backup = {\n                        yylineno: this.yylineno,\n                        yylloc: {\n                            first_line: this.yylloc.first_line,\n                            last_line: this.last_line,\n                            first_column: this.yylloc.first_column,\n                            last_column: this.yylloc.last_column\n                        },\n                        yytext: this.yytext,\n                        match: this.match,\n                        matches: this.matches,\n                        matched: this.matched,\n                        yyleng: this.yyleng,\n                        offset: this.offset,\n                        _more: this._more,\n                        _input: this._input,\n                        yy: this.yy,\n                        conditionStack: this.conditionStack.slice(0),\n                        done: this.done\n                    };\n                    if (this.options.ranges) {\n                        backup.yylloc.range = this.yylloc.range.slice(0);\n                    }\n                }\n\n                lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n                if (lines) {\n                    this.yylineno += lines.length;\n                }\n                this.yylloc = {\n                    first_line: this.yylloc.last_line,\n                    last_line: this.yylineno + 1,\n                    first_column: this.yylloc.last_column,\n                    last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\n                };\n                this.yytext += match[0];\n                this.match += match[0];\n                this.matches = match;\n                this.yyleng = this.yytext.length;\n                if (this.options.ranges) {\n                    this.yylloc.range = [this.offset, this.offset += this.yyleng];\n                }\n                this._more = false;\n                this._backtrack = false;\n                this._input = this._input.slice(match[0].length);\n                this.matched += match[0];\n                token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n                if (this.done && this._input) {\n                    this.done = false;\n                }\n                if (token) {\n                    return token;\n                } else if (this._backtrack) {\n                    // recover context\n                    for (var k in backup) {\n                        this[k] = backup[k];\n                    }\n                    return false; // rule action called reject() implying the next rule should be tested instead.\n                }\n                return false;\n            },\n\n            // return next match in input\n            next: function next() {\n                if (this.done) {\n                    return this.EOF;\n                }\n                if (!this._input) {\n                    this.done = true;\n                }\n\n                var token, match, tempMatch, index;\n                if (!this._more) {\n                    this.yytext = '';\n                    this.match = '';\n                }\n                var rules = this._currentRules();\n                for (var i = 0; i < rules.length; i++) {\n                    tempMatch = this._input.match(this.rules[rules[i]]);\n                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                        match = tempMatch;\n                        index = i;\n                        if (this.options.backtrack_lexer) {\n                            token = this.test_match(tempMatch, rules[i]);\n                            if (token !== false) {\n                                return token;\n                            } else if (this._backtrack) {\n                                match = false;\n                                continue; // rule action called reject() implying a rule MISmatch.\n                            } else {\n                                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                                    return false;\n                                }\n                        } else if (!this.options.flex) {\n                            break;\n                        }\n                    }\n                }\n                if (match) {\n                    token = this.test_match(match, rules[index]);\n                    if (token !== false) {\n                        return token;\n                    }\n                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                    return false;\n                }\n                if (this._input === \"\") {\n                    return this.EOF;\n                } else {\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                        text: \"\",\n                        token: null,\n                        line: this.yylineno\n                    });\n                }\n            },\n\n            // return next match that has a token\n            lex: function lex() {\n                var r = this.next();\n                if (r) {\n                    return r;\n                } else {\n                    return this.lex();\n                }\n            },\n\n            // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\n            begin: function begin(condition) {\n                this.conditionStack.push(condition);\n            },\n\n            // pop the previously active lexer condition state off the condition stack\n            popState: function popState() {\n                var n = this.conditionStack.length - 1;\n                if (n > 0) {\n                    return this.conditionStack.pop();\n                } else {\n                    return this.conditionStack[0];\n                }\n            },\n\n            // produce the lexer rule set which is active for the currently active lexer condition state\n            _currentRules: function _currentRules() {\n                if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n                    return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n                } else {\n                    return this.conditions[\"INITIAL\"].rules;\n                }\n            },\n\n            // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\n            topState: function topState(n) {\n                n = this.conditionStack.length - 1 - Math.abs(n || 0);\n                if (n >= 0) {\n                    return this.conditionStack[n];\n                } else {\n                    return \"INITIAL\";\n                }\n            },\n\n            // alias for begin(condition)\n            pushState: function pushState(condition) {\n                this.begin(condition);\n            },\n\n            // return the number of states currently on the stack\n            stateStackSize: function stateStackSize() {\n                return this.conditionStack.length;\n            },\n            options: {},\n            performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n                var YYSTATE = YY_START;\n                switch ($avoiding_name_collisions) {\n                    case 0:\n                        /* do nothing */\n                        break;\n                    case 1:\n                        this.begin(\"string\");\n                        break;\n                    case 2:\n                        this.popState();\n                        break;\n                    case 3:\n                        return \"STR\";\n                        break;\n                    case 4:\n                        return 71;\n                        break;\n                    case 5:\n                        return 78;\n                        break;\n                    case 6:\n                        return 72;\n                        break;\n                    case 7:\n                        return 73;\n                        break;\n                    case 8:\n                        return 74;\n                        break;\n                    case 9:\n                        return 75;\n                        break;\n                    case 10:\n                        return 12;\n                        break;\n                    case 11:\n                        return 30;\n                        break;\n                    case 12:\n                        return 32;\n                        break;\n                    case 13:\n                        return 13;\n                        break;\n                    case 14:\n                        return 13;\n                        break;\n                    case 15:\n                        return 13;\n                        break;\n                    case 16:\n                        return 13;\n                        break;\n                    case 17:\n                        return 13;\n                        break;\n                    case 18:\n                        return 13;\n                        break;\n                    case 19:\n                        return 81;\n                        break;\n                    case 20:\n                        return 90;\n                        break;\n                    case 21:\n                        return 88;\n                        break;\n                    case 22:\n                        return 8;\n                        break;\n                    case 23:\n                        return 85;\n                        break;\n                    case 24:\n                        return 97;\n                        break;\n                    case 25:\n                        return 16;\n                        break;\n                    case 26:\n                        return 15;\n                        break;\n                    case 27:\n                        return 17;\n                        break;\n                    case 28:\n                        return 18;\n                        break;\n                    case 29:\n                        return 53;\n                        break;\n                    case 30:\n                        return 51;\n                        break;\n                    case 31:\n                        return 52;\n                        break;\n                    case 32:\n                        return 54;\n                        break;\n                    case 33:\n                        return 58;\n                        break;\n                    case 34:\n                        return 56;\n                        break;\n                    case 35:\n                        return 57;\n                        break;\n                    case 36:\n                        return 59;\n                        break;\n                    case 37:\n                        return 58;\n                        break;\n                    case 38:\n                        return 56;\n                        break;\n                    case 39:\n                        return 57;\n                        break;\n                    case 40:\n                        return 59;\n                        break;\n                    case 41:\n                        return 63;\n                        break;\n                    case 42:\n                        return 61;\n                        break;\n                    case 43:\n                        return 62;\n                        break;\n                    case 44:\n                        return 64;\n                        break;\n                    case 45:\n                        return 50;\n                        break;\n                    case 46:\n                        return 55;\n                        break;\n                    case 47:\n                        return 60;\n                        break;\n                    case 48:\n                        return 40;\n                        break;\n                    case 49:\n                        return 41;\n                        break;\n                    case 50:\n                        return 46;\n                        break;\n                    case 51:\n                        return 91;\n                        break;\n                    case 52:\n                        return 95;\n                        break;\n                    case 53:\n                        return 83;\n                        break;\n                    case 54:\n                        return 96;\n                        break;\n                    case 55:\n                        return 96;\n                        break;\n                    case 56:\n                        return 87;\n                        break;\n                    case 57:\n                        return 93;\n                        break;\n                    case 58:\n                        return 94;\n                        break;\n                    case 59:\n                        return 65;\n                        break;\n                    case 60:\n                        return 38;\n                        break;\n                    case 61:\n                        return 39;\n                        break;\n                    case 62:\n                        return 36;\n                        break;\n                    case 63:\n                        return 37;\n                        break;\n                    case 64:\n                        return 42;\n                        break;\n                    case 65:\n                        return 43;\n                        break;\n                    case 66:\n                        return 100;\n                        break;\n                    case 67:\n                        return 9;\n                        break;\n                    case 68:\n                        return 10;\n                        break;\n                    case 69:\n                        return 11;\n                        break;\n                }\n            },\n            rules: [/^(?:%%[^\\n]*)/, /^(?:[\"])/, /^(?:[\"])/, /^(?:[^\"]*)/, /^(?:style\\b)/, /^(?:default\\b)/, /^(?:linkStyle\\b)/, /^(?:classDef\\b)/, /^(?:class\\b)/, /^(?:click\\b)/, /^(?:graph\\b)/, /^(?:subgraph\\b)/, /^(?:end\\b\\s*)/, /^(?:LR\\b)/, /^(?:RL\\b)/, /^(?:TB\\b)/, /^(?:BT\\b)/, /^(?:TD\\b)/, /^(?:BR\\b)/, /^(?:[0-9]+)/, /^(?:#)/, /^(?::)/, /^(?:;)/, /^(?:,)/, /^(?:\\*)/, /^(?:<)/, /^(?:>)/, /^(?:\\^)/, /^(?:v\\b)/, /^(?:\\s*--[x]\\s*)/, /^(?:\\s*-->\\s*)/, /^(?:\\s*--[o]\\s*)/, /^(?:\\s*---\\s*)/, /^(?:\\s*-\\.-[x]\\s*)/, /^(?:\\s*-\\.->\\s*)/, /^(?:\\s*-\\.-[o]\\s*)/, /^(?:\\s*-\\.-\\s*)/, /^(?:\\s*.-[x]\\s*)/, /^(?:\\s*\\.->\\s*)/, /^(?:\\s*\\.-[o]\\s*)/, /^(?:\\s*\\.-\\s*)/, /^(?:\\s*==[x]\\s*)/, /^(?:\\s*==>\\s*)/, /^(?:\\s*==[o]\\s*)/, /^(?:\\s*==[\\=]\\s*)/, /^(?:\\s*--\\s*)/, /^(?:\\s*-\\.\\s*)/, /^(?:\\s*==\\s*)/, /^(?:\\(-)/, /^(?:-\\))/, /^(?:-)/, /^(?:\\.)/, /^(?:\\+)/, /^(?:%)/, /^(?:=)/, /^(?:=)/, /^(?:[A-Za-z]+)/, /^(?:[!\"#$%&'*+,-.`?\\\\_\\/])/, /^(?:[\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6]|[\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377]|[\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5]|[\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA]|[\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE]|[\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA]|[\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0]|[\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977]|[\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2]|[\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A]|[\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39]|[\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8]|[\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C]|[\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C]|[\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99]|[\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0]|[\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D]|[\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3]|[\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10]|[\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1]|[\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81]|[\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3]|[\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6]|[\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A]|[\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081]|[\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D]|[\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0]|[\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310]|[\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C]|[\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711]|[\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7]|[\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C]|[\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16]|[\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF]|[\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC]|[\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D]|[\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D]|[\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3]|[\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F]|[\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128]|[\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184]|[\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3]|[\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6]|[\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE]|[\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C]|[\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D]|[\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC]|[\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B]|[\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788]|[\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805]|[\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB]|[\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28]|[\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5]|[\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4]|[\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E]|[\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D]|[\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36]|[\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D]|[\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC]|[\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF]|[\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC])/, /^(?:\\|)/, /^(?:\\()/, /^(?:\\))/, /^(?:\\[)/, /^(?:\\])/, /^(?:\\{)/, /^(?:\\})/, /^(?:\")/, /^(?:\\n+)/, /^(?:\\s)/, /^(?:$)/],\n            conditions: { \"string\": { \"rules\": [2, 3], \"inclusive\": false }, \"INITIAL\": { \"rules\": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], \"inclusive\": true } }\n        };\n        return lexer;\n    })();\n    parser.lexer = lexer;\n    function Parser() {\n        this.yy = {};\n    }\n    Parser.prototype = parser;parser.Parser = Parser;\n    return new Parser();\n})();\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\n    exports.parser = flow;\n    exports.Parser = flow.Parser;\n    exports.parse = function () {\n        return flow.parse.apply(flow, arguments);\n    };\n    exports.main = function commonjsMain(args) {\n        if (!args[1]) {\n            console.log('Usage: ' + args[0] + ' FILE');\n            process.exit(1);\n        }\n        var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n        return exports.parser.parse(source);\n    };\n    if (typeof module !== 'undefined' && require.main === module) {\n        exports.main(process.argv.slice(1));\n    }\n}\n\n}).call(this,require('_process'))\n},{\"_process\":3,\"fs\":1,\"path\":2}],119:[function(require,module,exports){\n(function (global){\n/**\n * Created by knut on 15-01-14.\n */\n'use strict';\n\nvar moment = require('moment');\nvar Logger = require('../../logger');\nvar log = new Logger.Log();\n\nvar dateFormat = '';\nvar title = '';\nvar sections = [];\nvar tasks = [];\nvar currentSection = '';\n\nexports.clear = function () {\n    sections = [];\n    tasks = [];\n    currentSection = '';\n    title = '';\n    taskCnt = 0;\n    lastTask = undefined;\n    lastTaskID = undefined;\n    rawTasks = [];\n};\n\nexports.setDateFormat = function (txt) {\n    dateFormat = txt;\n};\n\nexports.getDateFormat = function () {\n    return dateFormat;\n};\nexports.setTitle = function (txt) {\n    title = txt;\n};\n\nexports.getTitle = function () {\n    return title;\n};\n\nexports.addSection = function (txt) {\n    currentSection = txt;\n    sections.push(txt);\n};\n\nexports.getTasks = function () {\n    var allItemsPricessed = compileTasks();\n    var maxDepth = 10;\n    var iterationCount = 0;\n    while (!allItemsPricessed && iterationCount < maxDepth) {\n        allItemsPricessed = compileTasks();\n        iterationCount++;\n    }\n\n    tasks = rawTasks;\n\n    //var i;\n    //for(i=10000;i<tasks.length;i++){\n    //    tasks[i].startTime = moment(tasks[i].startTime).format(dateFormat);\n    //    tasks[i].endTime = moment(tasks[i].endTime).format(dateFormat);\n    //}\n\n    return tasks;\n};\n\nvar getStartDate = function getStartDate(prevTime, dateFormat, str) {\n    //console.log('Deciding start date:'+JSON.stringify(str));\n    //log.debug('Deciding start date:'+str);\n    //log.debug('with dateformat:'+dateFormat);\n\n    str = str.trim();\n\n    // Test for after\n    var re = /^after\\s+([\\d\\w\\-]+)/;\n    var afterStatement = re.exec(str.trim());\n\n    if (afterStatement !== null) {\n        var task = exports.findTaskById(afterStatement[1]);\n\n        if (typeof task === 'undefined') {\n            var dt = new Date();\n            dt.setHours(0, 0, 0, 0);\n            return dt;\n            //return undefined;\n        }\n        return task.endTime;\n    }\n\n    // Check for actual date set\n    if (moment(str, dateFormat.trim(), true).isValid()) {\n        return moment(str, dateFormat.trim(), true).toDate();\n    } else {\n        log.debug('Invalid date:' + str);\n        log.debug('With date format:' + dateFormat.trim());\n        //log.debug('----');\n    }\n\n    // Default date - now\n    return new Date();\n};\n\nvar getEndDate = function getEndDate(prevTime, dateFormat, str) {\n    str = str.trim();\n\n    // Check for actual date\n    if (moment(str, dateFormat.trim(), true).isValid()) {\n\n        return moment(str, dateFormat.trim()).toDate();\n    }\n\n    var d = moment(prevTime);\n    // Check for length\n    var re = /^([\\d]+)([wdhms])/;\n    var durationStatement = re.exec(str.trim());\n\n    if (durationStatement !== null) {\n        switch (durationStatement[2]) {\n            case 's':\n                d.add(durationStatement[1], 'seconds');\n                break;\n            case 'm':\n                d.add(durationStatement[1], 'minutes');\n                break;\n            case 'h':\n                d.add(durationStatement[1], 'hours');\n                break;\n            case 'd':\n                d.add(durationStatement[1], 'days');\n                break;\n            case 'w':\n                d.add(durationStatement[1], 'weeks');\n                break;\n        }\n        return d.toDate();\n    }\n    // Default date - now\n    return d.toDate();\n};\n\nvar taskCnt = 0;\nvar parseId = function parseId(idStr) {\n    if (typeof idStr === 'undefined') {\n        taskCnt = taskCnt + 1;\n        return 'task' + taskCnt;\n    }\n    return idStr;\n};\n// id, startDate, endDate\n// id, startDate, length\n// id, after x, endDate\n// id, after x, length\n// startDate, endDate\n// startDate, length\n// after x, endDate\n// after x, length\n// endDate\n// length\n\nvar compileData = function compileData(prevTask, dataStr) {\n    var ds;\n\n    if (dataStr.substr(0, 1) === ':') {\n        ds = dataStr.substr(1, dataStr.length);\n    } else {\n        ds = dataStr;\n    }\n\n    var data = ds.split(',');\n\n    var task = {};\n    var df = exports.getDateFormat();\n\n    // Get tags like active, done cand crit\n    var matchFound = true;\n    while (matchFound) {\n        matchFound = false;\n        if (data[0].match(/^\\s*active\\s*$/)) {\n            task.active = true;\n            data.shift(1);\n            matchFound = true;\n        }\n        if (data[0].match(/^\\s*done\\s*$/)) {\n            task.done = true;\n            data.shift(1);\n            matchFound = true;\n        }\n        if (data[0].match(/^\\s*crit\\s*$/)) {\n            task.crit = true;\n            data.shift(1);\n            matchFound = true;\n        }\n    }\n    var i;\n    for (i = 0; i < data.length; i++) {\n        data[i] = data[i].trim();\n    }\n\n    switch (data.length) {\n        case 1:\n            task.id = parseId();\n            task.startTime = prevTask.endTime;\n            task.endTime = getEndDate(task.startTime, df, data[0]);\n            break;\n        case 2:\n            task.id = parseId();\n            task.startTime = getStartDate(undefined, df, data[0]);\n            task.endTime = getEndDate(task.startTime, df, data[1]);\n            break;\n        case 3:\n            task.id = parseId(data[0]);\n            task.startTime = getStartDate(undefined, df, data[1]);\n            task.endTime = getEndDate(task.startTime, df, data[2]);\n            break;\n        default:\n\n    }\n\n    return task;\n};\n\nvar parseData = function parseData(prevTaskId, dataStr) {\n    var ds;\n\n    if (dataStr.substr(0, 1) === ':') {\n        ds = dataStr.substr(1, dataStr.length);\n    } else {\n        ds = dataStr;\n    }\n\n    var data = ds.split(',');\n\n    var task = {};\n\n    // Get tags like active, done cand crit\n    var matchFound = true;\n    while (matchFound) {\n        matchFound = false;\n        if (data[0].match(/^\\s*active\\s*$/)) {\n            task.active = true;\n            data.shift(1);\n            matchFound = true;\n        }\n        if (data[0].match(/^\\s*done\\s*$/)) {\n            task.done = true;\n            data.shift(1);\n            matchFound = true;\n        }\n        if (data[0].match(/^\\s*crit\\s*$/)) {\n            task.crit = true;\n            data.shift(1);\n            matchFound = true;\n        }\n    }\n    var i;\n    for (i = 0; i < data.length; i++) {\n        data[i] = data[i].trim();\n    }\n\n    switch (data.length) {\n        case 1:\n            task.id = parseId();\n            task.startTime = { type: 'prevTaskEnd', id: prevTaskId };\n            task.endTime = { data: data[0] };\n            break;\n        case 2:\n            task.id = parseId();\n            task.startTime = { type: 'getStartDate', startData: data[0] };\n            task.endTime = { data: data[1] };\n            break;\n        case 3:\n            task.id = parseId(data[0]);\n            task.startTime = { type: 'getStartDate', startData: data[1] };\n            task.endTime = { data: data[2] };\n            break;\n        default:\n\n    }\n\n    return task;\n};\n\nvar lastTask;\nvar lastTaskID;\nvar rawTasks = [];\nvar taskDb = {};\nexports.addTask = function (descr, data) {\n    var rawTask = {\n        section: currentSection,\n        type: currentSection,\n        processed: false,\n        raw: { data: data },\n        task: descr\n    };\n    var taskInfo = parseData(lastTaskID, data);\n    rawTask.raw.startTime = taskInfo.startTime;\n    rawTask.raw.endTime = taskInfo.endTime;\n    rawTask.id = taskInfo.id;\n    rawTask.prevTaskId = lastTaskID;\n    rawTask.active = taskInfo.active;\n    rawTask.done = taskInfo.done;\n    rawTask.crit = taskInfo.crit;\n\n    var pos = rawTasks.push(rawTask);\n\n    lastTaskID = rawTask.id;\n    // Store cross ref\n    taskDb[rawTask.id] = pos - 1;\n};\n\nexports.findTaskById = function (id) {\n    //var i;\n    //for(i=0;i<tasks.length;i++){\n    //    if(tasks[i].id === id){\n    //        return tasks[i];\n    //    }\n    //}\n\n    var pos = taskDb[id];\n    return rawTasks[pos];\n};\n\nexports.addTaskOrg = function (descr, data) {\n\n    var newTask = {\n        section: currentSection,\n        type: currentSection,\n        description: descr,\n        task: descr\n    };\n    var taskInfo = compileData(lastTask, data);\n    newTask.startTime = taskInfo.startTime;\n    newTask.endTime = taskInfo.endTime;\n    newTask.id = taskInfo.id;\n    newTask.active = taskInfo.active;\n    newTask.done = taskInfo.done;\n    newTask.crit = taskInfo.crit;\n    lastTask = newTask;\n    tasks.push(newTask);\n};\n\nvar compileTasks = function compileTasks() {\n    var df = exports.getDateFormat();\n\n    var compileTask = function compileTask(pos) {\n        var task = rawTasks[pos];\n        var startTime = '';\n        switch (rawTasks[pos].raw.startTime.type) {\n            case 'prevTaskEnd':\n                var prevTask = exports.findTaskById(task.prevTaskId);\n                task.startTime = prevTask.endTime;\n                break;\n            case 'getStartDate':\n                startTime = getStartDate(undefined, df, rawTasks[pos].raw.startTime.startData);\n                if (startTime) {\n                    rawTasks[pos].startTime = startTime;\n                }\n                break;\n        }\n\n        if (rawTasks[pos].startTime) {\n            rawTasks[pos].endTime = getEndDate(rawTasks[pos].startTime, df, rawTasks[pos].raw.endTime.data);\n            if (rawTasks[pos].endTime) {\n                rawTasks[pos].processed = true;\n            }\n        }\n\n        return rawTasks[pos].processed;\n    };\n\n    var i;\n    var allProcessed = true;\n    for (i = 0; i < rawTasks.length; i++) {\n        compileTask(i);\n\n        allProcessed = allProcessed && rawTasks[i].processed;\n    }\n    return allProcessed;\n};\n\nexports.parseError = function (err, hash) {\n    global.mermaidAPI.parseError(err, hash);\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../logger\":126,\"moment\":105}],120:[function(require,module,exports){\n'use strict';\n\nvar gantt = require('./parser/gantt').parser;\ngantt.yy = require('./ganttDb');\nvar d3 = require('../../d3');\nvar moment = require('moment');\n//var log = require('../../logger').create();\n\nvar daysInChart;\nvar conf = {\n    titleTopMargin: 25,\n    barHeight: 20,\n    barGap: 4,\n    topPadding: 50,\n    sidePadding: 75,\n    gridLineStartPadding: 35,\n    fontSize: 11,\n    fontFamily: '\"Open-Sans\", \"sans-serif\"'\n};\nmodule.exports.setConf = function (cnf) {\n    var keys = Object.keys(cnf);\n\n    keys.forEach(function (key) {\n        conf[key] = cnf[key];\n    });\n};\nvar w;\nmodule.exports.draw = function (text, id) {\n    gantt.yy.clear();\n    gantt.parse(text);\n\n    var elem = document.getElementById(id);\n    w = elem.parentElement.offsetWidth;\n\n    if (typeof w === 'undefined') {\n        w = 1200;\n    }\n\n    if (typeof conf.useWidth !== 'undefined') {\n        w = conf.useWidth;\n    }\n\n    var taskArray = gantt.yy.getTasks();\n\n    // Set height based on number of tasks\n    var h = taskArray.length * (conf.barHeight + conf.barGap) + 2 * conf.topPadding;\n\n    elem.setAttribute('height', '100%');\n    // Set viewBox\n    elem.setAttribute('viewBox', '0 0 ' + w + ' ' + h);\n    var svg = d3.select('#' + id);\n\n    //var dateFormat = d3.time.format('%Y-%m-%d');\n\n    var startDate = d3.min(taskArray, function (d) {\n        return d.startTime;\n    });\n    var endDate = d3.max(taskArray, function (d) {\n        return d.endTime;\n    });\n\n    // Set timescale\n    var timeScale = d3.time.scale().domain([d3.min(taskArray, function (d) {\n        return d.startTime;\n    }), d3.max(taskArray, function (d) {\n        return d.endTime;\n    })]).rangeRound([0, w - 150]);\n    //.nice(d3.time.monday);\n\n    var categories = [];\n\n    daysInChart = moment.duration(endDate - startDate).asDays();\n\n    for (var i = 0; i < taskArray.length; i++) {\n        categories.push(taskArray[i].type);\n    }\n\n    var catsUnfiltered = categories; //for vert labels\n\n    categories = checkUnique(categories);\n\n    makeGant(taskArray, w, h);\n    if (typeof conf.useWidth !== 'undefined') {\n        elem.setAttribute('width', w);\n    }\n\n    svg.append('text').text(gantt.yy.getTitle()).attr('x', w / 2).attr('y', conf.titleTopMargin).attr('class', 'titleText');\n\n    function makeGant(tasks, pageWidth, pageHeight) {\n\n        var barHeight = conf.barHeight;\n        var gap = barHeight + conf.barGap;\n        var topPadding = conf.topPadding;\n        var sidePadding = conf.sidePadding;\n\n        var colorScale = d3.scale.linear().domain([0, categories.length]).range(['#00B9FA', '#F95002']).interpolate(d3.interpolateHcl);\n\n        makeGrid(sidePadding, topPadding, pageWidth, pageHeight);\n        drawRects(tasks, gap, topPadding, sidePadding, barHeight, colorScale, pageWidth, pageHeight);\n        vertLabels(gap, topPadding, sidePadding, barHeight, colorScale);\n        drawToday(sidePadding, topPadding, pageWidth, pageHeight);\n    }\n\n    function drawRects(theArray, theGap, theTopPad, theSidePad, theBarHeight, theColorScale, w, h) {\n        //eslint-disable-line no-unused-vars\n\n        svg.append('g').selectAll('rect').data(theArray).enter().append('rect').attr('x', 0).attr('y', function (d, i) {\n            return i * theGap + theTopPad - 2;\n        }).attr('width', function () {\n            return w - theSidePad / 2;\n        }).attr('height', theGap).attr('class', function (d) {\n            //eslint-disable-line no-unused-vars\n            for (var i = 0; i < categories.length; i++) {\n                if (d.type === categories[i]) {\n                    return 'section section' + i % conf.numberSectionStyles;\n                }\n            }\n            return 'section section0';\n        });\n\n        var rectangles = svg.append('g').selectAll('rect').data(theArray).enter();\n\n        rectangles.append('rect').attr('rx', 3).attr('ry', 3).attr('x', function (d) {\n            return timeScale(d.startTime) + theSidePad;\n        }).attr('y', function (d, i) {\n            return i * theGap + theTopPad;\n        }).attr('width', function (d) {\n            return timeScale(d.endTime) - timeScale(d.startTime);\n        }).attr('height', theBarHeight).attr('class', function (d) {\n            var res = 'task ';\n\n            var secNum = 0;\n            for (var i = 0; i < categories.length; i++) {\n                if (d.type === categories[i]) {\n                    secNum = i % conf.numberSectionStyles;\n                }\n            }\n\n            if (d.active) {\n                if (d.crit) {\n                    return res + ' activeCrit' + secNum;\n                } else {\n                    return res + ' active' + secNum;\n                }\n            }\n\n            if (d.done) {\n                if (d.crit) {\n                    return res + ' doneCrit' + secNum;\n                } else {\n                    return res + ' done' + secNum;\n                }\n            }\n\n            if (d.crit) {\n                return res + ' crit' + secNum;\n            }\n\n            return res + ' task' + secNum;\n        });\n\n        rectangles.append('text').text(function (d) {\n            return d.task;\n        }).attr('font-size', conf.fontSize)\n        //.attr('font-family',conf.fontFamily)\n        .attr('x', function (d) {\n            var startX = timeScale(d.startTime),\n                endX = timeScale(d.endTime),\n                textWidth = this.getBBox().width;\n\n            // Check id text width > width of rectangle\n            if (textWidth > endX - startX) {\n                if (endX + textWidth + 1.5 * conf.sidePadding > w) {\n                    return startX + theSidePad - 5;\n                } else {\n                    return endX + theSidePad + 5;\n                }\n            } else {\n                return (endX - startX) / 2 + startX + theSidePad;\n            }\n        }).attr('y', function (d, i) {\n            return i * theGap + conf.barHeight / 2 + (conf.fontSize / 2 - 2) + theTopPad;\n        })\n        //.attr('text-anchor', 'middle')\n        .attr('text-height', theBarHeight).attr('class', function (d) {\n            var startX = timeScale(d.startTime),\n                endX = timeScale(d.endTime),\n                textWidth = this.getBBox().width;\n            var secNum = 0;\n            for (var i = 0; i < categories.length; i++) {\n                if (d.type === categories[i]) {\n                    secNum = i % conf.numberSectionStyles;\n                }\n            }\n\n            var taskType = '';\n            if (d.active) {\n                if (d.crit) {\n                    taskType = 'activeCritText' + secNum;\n                } else {\n                    taskType = 'activeText' + secNum;\n                }\n            }\n\n            if (d.done) {\n                if (d.crit) {\n                    taskType = taskType + ' doneCritText' + secNum;\n                } else {\n                    taskType = taskType + ' doneText' + secNum;\n                }\n            } else {\n                if (d.crit) {\n                    taskType = taskType + ' critText' + secNum;\n                }\n            }\n\n            // Check id text width > width of rectangle\n            if (textWidth > endX - startX) {\n                if (endX + textWidth + 1.5 * conf.sidePadding > w) {\n                    return 'taskTextOutsideLeft taskTextOutside' + secNum + ' ' + taskType;\n                } else {\n                    return 'taskTextOutsideRight taskTextOutside' + secNum + ' ' + taskType;\n                }\n            } else {\n                return 'taskText taskText' + secNum + ' ' + taskType;\n            }\n        });\n    }\n\n    function makeGrid(theSidePad, theTopPad, w, h) {\n\n        var pre = [['.%L', function (d) {\n            return d.getMilliseconds();\n        }], [':%S', function (d) {\n            return d.getSeconds();\n        }],\n        // Within a hour\n        ['h1 %I:%M', function (d) {\n            return d.getMinutes();\n        }]];\n        var post = [['%Y', function () {\n            return true;\n        }]];\n\n        var mid = [\n        // Within a day\n        ['%I:%M', function (d) {\n            return d.getHours();\n        }],\n        // Day within a week (not monday)\n        ['%a %d', function (d) {\n            //return d.getDay() ==1;\n            return d.getDay() && d.getDate() != 1;\n        }],\n        // within a month\n        ['%b %d', function (d) {\n            return d.getDate() != 1;\n        }],\n        // Month\n        ['%B', function (d) {\n            return d.getMonth();\n        }]];\n        var formatter;\n        if (typeof conf.axisFormatter !== 'undefined') {\n            mid = [];\n            conf.axisFormatter.forEach(function (item) {\n                var n = [];\n                n[0] = item[0];\n                n[1] = item[1];\n                mid.push(n);\n            });\n        }\n        formatter = pre.concat(mid).concat(post);\n\n        var xAxis = d3.svg.axis().scale(timeScale).orient('bottom').tickSize(-h + theTopPad + conf.gridLineStartPadding, 0, 0).tickFormat(d3.time.format.multi(formatter));\n\n        if (daysInChart > 7 && daysInChart < 230) {\n            xAxis = xAxis.ticks(d3.time.monday.range);\n        }\n\n        svg.append('g').attr('class', 'grid').attr('transform', 'translate(' + theSidePad + ', ' + (h - 50) + ')').call(xAxis).selectAll('text').style('text-anchor', 'middle').attr('fill', '#000').attr('stroke', 'none').attr('font-size', 10).attr('dy', '1em');\n    }\n\n    function vertLabels(theGap, theTopPad) {\n        var numOccurances = [];\n        var prevGap = 0;\n\n        for (var i = 0; i < categories.length; i++) {\n            numOccurances[i] = [categories[i], getCount(categories[i], catsUnfiltered)];\n        }\n\n        svg.append('g') //without doing this, impossible to put grid lines behind text\n        .selectAll('text').data(numOccurances).enter().append('text').text(function (d) {\n            return d[0];\n        }).attr('x', 10).attr('y', function (d, i) {\n            if (i > 0) {\n                for (var j = 0; j < i; j++) {\n                    prevGap += numOccurances[i - 1][1];\n                    // log.debug(prevGap);\n                    return d[1] * theGap / 2 + prevGap * theGap + theTopPad;\n                }\n            } else {\n                return d[1] * theGap / 2 + theTopPad;\n            }\n        }).attr('class', function (d) {\n            for (var i = 0; i < categories.length; i++) {\n                if (d[0] === categories[i]) {\n                    return 'sectionTitle sectionTitle' + i % conf.numberSectionStyles;\n                }\n            }\n            return 'sectionTitle';\n        });\n    }\n\n    function drawToday(theSidePad, theTopPad, w, h) {\n        var todayG = svg.append('g').attr('class', 'today');\n\n        var today = new Date();\n\n        todayG.append('line').attr('x1', timeScale(today) + theSidePad).attr('x2', timeScale(today) + theSidePad).attr('y1', conf.titleTopMargin).attr('y2', h - conf.titleTopMargin).attr('class', 'today');\n    }\n\n    //from this stackexchange question: http://stackoverflow.com/questions/1890203/unique-for-arrays-in-javascript\n    function checkUnique(arr) {\n        var hash = {},\n            result = [];\n        for (var i = 0, l = arr.length; i < l; ++i) {\n            if (!hash.hasOwnProperty(arr[i])) {\n                //it works with objects! in FF, at least\n                hash[arr[i]] = true;\n                result.push(arr[i]);\n            }\n        }\n        return result;\n    }\n\n    //from this stackexchange question: http://stackoverflow.com/questions/14227981/count-how-many-strings-in-an-array-have-duplicates-in-the-same-array\n    function getCounts(arr) {\n        var i = arr.length,\n            // var to loop over\n        obj = {}; // obj to store results\n        while (i) {\n            obj[arr[--i]] = (obj[arr[i]] || 0) + 1; // count occurrences\n        }\n        return obj;\n    }\n\n    // get specific from everything\n    function getCount(word, arr) {\n        return getCounts(arr)[word] || 0;\n    }\n};\n\n},{\"../../d3\":107,\"./ganttDb\":119,\"./parser/gantt\":121,\"moment\":105}],121:[function(require,module,exports){\n(function (process){\n/* parser generated by jison 0.4.15 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\n\"use strict\";\n\nvar gantt = (function () {\n    var o = function o(k, v, _o, l) {\n        for (_o = _o || {}, l = k.length; l--; _o[k[l]] = v);return _o;\n    },\n        $V0 = [6, 8, 10, 11, 12, 13, 14],\n        $V1 = [1, 9],\n        $V2 = [1, 10],\n        $V3 = [1, 11],\n        $V4 = [1, 12];\n    var parser = { trace: function trace() {},\n        yy: {},\n        symbols_: { \"error\": 2, \"start\": 3, \"gantt\": 4, \"document\": 5, \"EOF\": 6, \"line\": 7, \"SPACE\": 8, \"statement\": 9, \"NL\": 10, \"dateFormat\": 11, \"title\": 12, \"section\": 13, \"taskTxt\": 14, \"taskData\": 15, \"$accept\": 0, \"$end\": 1 },\n        terminals_: { 2: \"error\", 4: \"gantt\", 6: \"EOF\", 8: \"SPACE\", 10: \"NL\", 11: \"dateFormat\", 12: \"title\", 13: \"section\", 14: \"taskTxt\", 15: \"taskData\" },\n        productions_: [0, [3, 3], [5, 0], [5, 2], [7, 2], [7, 1], [7, 1], [7, 1], [9, 1], [9, 1], [9, 1], [9, 2]],\n        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, /* action[1] */$$, /* vstack */_$ /* lstack */) {\n            /* this == yyval */\n\n            var $0 = $$.length - 1;\n            switch (yystate) {\n                case 1:\n                    return $$[$0 - 1];\n                    break;\n                case 2:\n                    this.$ = [];\n                    break;\n                case 3:\n                    $$[$0 - 1].push($$[$0]);this.$ = $$[$0 - 1];\n                    break;\n                case 4:case 5:\n                    this.$ = $$[$0];\n                    break;\n                case 6:case 7:\n                    this.$ = [];\n                    break;\n                case 8:\n                    yy.setDateFormat($$[$0].substr(11));this.$ = $$[$0].substr(11);\n                    break;\n                case 9:\n                    yy.setTitle($$[$0].substr(6));this.$ = $$[$0].substr(6);\n                    break;\n                case 10:\n                    yy.addSection($$[$0].substr(8));this.$ = $$[$0].substr(8);\n                    break;\n                case 11:\n                    yy.addTask($$[$0 - 1], $$[$0]);this.$ = 'task';\n                    break;\n            }\n        },\n        table: [{ 3: 1, 4: [1, 2] }, { 1: [3] }, o($V0, [2, 2], { 5: 3 }), { 6: [1, 4], 7: 5, 8: [1, 6], 9: 7, 10: [1, 8], 11: $V1, 12: $V2, 13: $V3, 14: $V4 }, o($V0, [2, 7], { 1: [2, 1] }), o($V0, [2, 3]), { 9: 13, 11: $V1, 12: $V2, 13: $V3, 14: $V4 }, o($V0, [2, 5]), o($V0, [2, 6]), o($V0, [2, 8]), o($V0, [2, 9]), o($V0, [2, 10]), { 15: [1, 14] }, o($V0, [2, 4]), o($V0, [2, 11])],\n        defaultActions: {},\n        parseError: function parseError(str, hash) {\n            if (hash.recoverable) {\n                this.trace(str);\n            } else {\n                var _parseError = function _parseError(msg, hash) {\n                    this.message = msg;\n                    this.hash = hash;\n                };\n\n                _parseError.prototype = new Error();\n\n                throw new _parseError(str, hash);\n            }\n        },\n        parse: function parse(input) {\n            var self = this,\n                stack = [0],\n                tstack = [],\n                vstack = [null],\n                lstack = [],\n                table = this.table,\n                yytext = '',\n                yylineno = 0,\n                yyleng = 0,\n                recovering = 0,\n                TERROR = 2,\n                EOF = 1;\n            var args = lstack.slice.call(arguments, 1);\n            var lexer = Object.create(this.lexer);\n            var sharedState = { yy: {} };\n            for (var k in this.yy) {\n                if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n                    sharedState.yy[k] = this.yy[k];\n                }\n            }\n            lexer.setInput(input, sharedState.yy);\n            sharedState.yy.lexer = lexer;\n            sharedState.yy.parser = this;\n            if (typeof lexer.yylloc == 'undefined') {\n                lexer.yylloc = {};\n            }\n            var yyloc = lexer.yylloc;\n            lstack.push(yyloc);\n            var ranges = lexer.options && lexer.options.ranges;\n            if (typeof sharedState.yy.parseError === 'function') {\n                this.parseError = sharedState.yy.parseError;\n            } else {\n                this.parseError = Object.getPrototypeOf(this).parseError;\n            }\n            function popStack(n) {\n                stack.length = stack.length - 2 * n;\n                vstack.length = vstack.length - n;\n                lstack.length = lstack.length - n;\n            }\n            _token_stack: var lex = function lex() {\n                var token;\n                token = lexer.lex() || EOF;\n                if (typeof token !== 'number') {\n                    token = self.symbols_[token] || token;\n                }\n                return token;\n            };\n            var symbol,\n                preErrorSymbol,\n                state,\n                action,\n                a,\n                r,\n                yyval = {},\n                p,\n                len,\n                newState,\n                expected;\n            while (true) {\n                state = stack[stack.length - 1];\n                if (this.defaultActions[state]) {\n                    action = this.defaultActions[state];\n                } else {\n                    if (symbol === null || typeof symbol == 'undefined') {\n                        symbol = lex();\n                    }\n                    action = table[state] && table[state][symbol];\n                }\n                if (typeof action === 'undefined' || !action.length || !action[0]) {\n                    var errStr = '';\n                    expected = [];\n                    for (p in table[state]) {\n                        if (this.terminals_[p] && p > TERROR) {\n                            expected.push('\\'' + this.terminals_[p] + '\\'');\n                        }\n                    }\n                    if (lexer.showPosition) {\n                        errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                    } else {\n                        errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                    }\n                    this.parseError(errStr, {\n                        text: lexer.match,\n                        token: this.terminals_[symbol] || symbol,\n                        line: lexer.yylineno,\n                        loc: yyloc,\n                        expected: expected\n                    });\n                }\n                if (action[0] instanceof Array && action.length > 1) {\n                    throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n                }\n                switch (action[0]) {\n                    case 1:\n                        stack.push(symbol);\n                        vstack.push(lexer.yytext);\n                        lstack.push(lexer.yylloc);\n                        stack.push(action[1]);\n                        symbol = null;\n                        if (!preErrorSymbol) {\n                            yyleng = lexer.yyleng;\n                            yytext = lexer.yytext;\n                            yylineno = lexer.yylineno;\n                            yyloc = lexer.yylloc;\n                            if (recovering > 0) {\n                                recovering--;\n                            }\n                        } else {\n                            symbol = preErrorSymbol;\n                            preErrorSymbol = null;\n                        }\n                        break;\n                    case 2:\n                        len = this.productions_[action[1]][1];\n                        yyval.$ = vstack[vstack.length - len];\n                        yyval._$ = {\n                            first_line: lstack[lstack.length - (len || 1)].first_line,\n                            last_line: lstack[lstack.length - 1].last_line,\n                            first_column: lstack[lstack.length - (len || 1)].first_column,\n                            last_column: lstack[lstack.length - 1].last_column\n                        };\n                        if (ranges) {\n                            yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\n                        }\n                        r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\n                        if (typeof r !== 'undefined') {\n                            return r;\n                        }\n                        if (len) {\n                            stack = stack.slice(0, -1 * len * 2);\n                            vstack = vstack.slice(0, -1 * len);\n                            lstack = lstack.slice(0, -1 * len);\n                        }\n                        stack.push(this.productions_[action[1]][0]);\n                        vstack.push(yyval.$);\n                        lstack.push(yyval._$);\n                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n                        stack.push(newState);\n                        break;\n                    case 3:\n                        return true;\n                }\n            }\n            return true;\n        } };\n    /* generated by jison-lex 0.3.4 */\n    var lexer = (function () {\n        var lexer = {\n\n            EOF: 1,\n\n            parseError: function parseError(str, hash) {\n                if (this.yy.parser) {\n                    this.yy.parser.parseError(str, hash);\n                } else {\n                    throw new Error(str);\n                }\n            },\n\n            // resets the lexer, sets new input\n            setInput: function setInput(input, yy) {\n                this.yy = yy || this.yy || {};\n                this._input = input;\n                this._more = this._backtrack = this.done = false;\n                this.yylineno = this.yyleng = 0;\n                this.yytext = this.matched = this.match = '';\n                this.conditionStack = ['INITIAL'];\n                this.yylloc = {\n                    first_line: 1,\n                    first_column: 0,\n                    last_line: 1,\n                    last_column: 0\n                };\n                if (this.options.ranges) {\n                    this.yylloc.range = [0, 0];\n                }\n                this.offset = 0;\n                return this;\n            },\n\n            // consumes and returns one char from the input\n            input: function input() {\n                var ch = this._input[0];\n                this.yytext += ch;\n                this.yyleng++;\n                this.offset++;\n                this.match += ch;\n                this.matched += ch;\n                var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n                if (lines) {\n                    this.yylineno++;\n                    this.yylloc.last_line++;\n                } else {\n                    this.yylloc.last_column++;\n                }\n                if (this.options.ranges) {\n                    this.yylloc.range[1]++;\n                }\n\n                this._input = this._input.slice(1);\n                return ch;\n            },\n\n            // unshifts one char (or a string) into the input\n            unput: function unput(ch) {\n                var len = ch.length;\n                var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n                this._input = ch + this._input;\n                this.yytext = this.yytext.substr(0, this.yytext.length - len);\n                //this.yyleng -= len;\n                this.offset -= len;\n                var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n                this.match = this.match.substr(0, this.match.length - 1);\n                this.matched = this.matched.substr(0, this.matched.length - 1);\n\n                if (lines.length - 1) {\n                    this.yylineno -= lines.length - 1;\n                }\n                var r = this.yylloc.range;\n\n                this.yylloc = {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.yylineno + 1,\n                    first_column: this.yylloc.first_column,\n                    last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n                };\n\n                if (this.options.ranges) {\n                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n                }\n                this.yyleng = this.yytext.length;\n                return this;\n            },\n\n            // When called from action, caches matched text and appends it on next action\n            more: function more() {\n                this._more = true;\n                return this;\n            },\n\n            // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\n            reject: function reject() {\n                if (this.options.backtrack_lexer) {\n                    this._backtrack = true;\n                } else {\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                        text: \"\",\n                        token: null,\n                        line: this.yylineno\n                    });\n                }\n                return this;\n            },\n\n            // retain first n characters of the match\n            less: function less(n) {\n                this.unput(this.match.slice(n));\n            },\n\n            // displays already matched input, i.e. for error messages\n            pastInput: function pastInput() {\n                var past = this.matched.substr(0, this.matched.length - this.match.length);\n                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\\n/g, \"\");\n            },\n\n            // displays upcoming input, i.e. for error messages\n            upcomingInput: function upcomingInput() {\n                var next = this.match;\n                if (next.length < 20) {\n                    next += this._input.substr(0, 20 - next.length);\n                }\n                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n            },\n\n            // displays the character position where the lexing error occurred, i.e. for error messages\n            showPosition: function showPosition() {\n                var pre = this.pastInput();\n                var c = new Array(pre.length + 1).join(\"-\");\n                return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n            },\n\n            // test the lexed token: return FALSE when not a match, otherwise return token\n            test_match: function test_match(match, indexed_rule) {\n                var token, lines, backup;\n\n                if (this.options.backtrack_lexer) {\n                    // save context\n                    backup = {\n                        yylineno: this.yylineno,\n                        yylloc: {\n                            first_line: this.yylloc.first_line,\n                            last_line: this.last_line,\n                            first_column: this.yylloc.first_column,\n                            last_column: this.yylloc.last_column\n                        },\n                        yytext: this.yytext,\n                        match: this.match,\n                        matches: this.matches,\n                        matched: this.matched,\n                        yyleng: this.yyleng,\n                        offset: this.offset,\n                        _more: this._more,\n                        _input: this._input,\n                        yy: this.yy,\n                        conditionStack: this.conditionStack.slice(0),\n                        done: this.done\n                    };\n                    if (this.options.ranges) {\n                        backup.yylloc.range = this.yylloc.range.slice(0);\n                    }\n                }\n\n                lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n                if (lines) {\n                    this.yylineno += lines.length;\n                }\n                this.yylloc = {\n                    first_line: this.yylloc.last_line,\n                    last_line: this.yylineno + 1,\n                    first_column: this.yylloc.last_column,\n                    last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\n                };\n                this.yytext += match[0];\n                this.match += match[0];\n                this.matches = match;\n                this.yyleng = this.yytext.length;\n                if (this.options.ranges) {\n                    this.yylloc.range = [this.offset, this.offset += this.yyleng];\n                }\n                this._more = false;\n                this._backtrack = false;\n                this._input = this._input.slice(match[0].length);\n                this.matched += match[0];\n                token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n                if (this.done && this._input) {\n                    this.done = false;\n                }\n                if (token) {\n                    return token;\n                } else if (this._backtrack) {\n                    // recover context\n                    for (var k in backup) {\n                        this[k] = backup[k];\n                    }\n                    return false; // rule action called reject() implying the next rule should be tested instead.\n                }\n                return false;\n            },\n\n            // return next match in input\n            next: function next() {\n                if (this.done) {\n                    return this.EOF;\n                }\n                if (!this._input) {\n                    this.done = true;\n                }\n\n                var token, match, tempMatch, index;\n                if (!this._more) {\n                    this.yytext = '';\n                    this.match = '';\n                }\n                var rules = this._currentRules();\n                for (var i = 0; i < rules.length; i++) {\n                    tempMatch = this._input.match(this.rules[rules[i]]);\n                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                        match = tempMatch;\n                        index = i;\n                        if (this.options.backtrack_lexer) {\n                            token = this.test_match(tempMatch, rules[i]);\n                            if (token !== false) {\n                                return token;\n                            } else if (this._backtrack) {\n                                match = false;\n                                continue; // rule action called reject() implying a rule MISmatch.\n                            } else {\n                                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                                    return false;\n                                }\n                        } else if (!this.options.flex) {\n                            break;\n                        }\n                    }\n                }\n                if (match) {\n                    token = this.test_match(match, rules[index]);\n                    if (token !== false) {\n                        return token;\n                    }\n                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                    return false;\n                }\n                if (this._input === \"\") {\n                    return this.EOF;\n                } else {\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                        text: \"\",\n                        token: null,\n                        line: this.yylineno\n                    });\n                }\n            },\n\n            // return next match that has a token\n            lex: function lex() {\n                var r = this.next();\n                if (r) {\n                    return r;\n                } else {\n                    return this.lex();\n                }\n            },\n\n            // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\n            begin: function begin(condition) {\n                this.conditionStack.push(condition);\n            },\n\n            // pop the previously active lexer condition state off the condition stack\n            popState: function popState() {\n                var n = this.conditionStack.length - 1;\n                if (n > 0) {\n                    return this.conditionStack.pop();\n                } else {\n                    return this.conditionStack[0];\n                }\n            },\n\n            // produce the lexer rule set which is active for the currently active lexer condition state\n            _currentRules: function _currentRules() {\n                if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n                    return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n                } else {\n                    return this.conditions[\"INITIAL\"].rules;\n                }\n            },\n\n            // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\n            topState: function topState(n) {\n                n = this.conditionStack.length - 1 - Math.abs(n || 0);\n                if (n >= 0) {\n                    return this.conditionStack[n];\n                } else {\n                    return \"INITIAL\";\n                }\n            },\n\n            // alias for begin(condition)\n            pushState: function pushState(condition) {\n                this.begin(condition);\n            },\n\n            // return the number of states currently on the stack\n            stateStackSize: function stateStackSize() {\n                return this.conditionStack.length;\n            },\n            options: { \"case-insensitive\": true },\n            performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n                // Pre-lexer code can go here\n\n                var YYSTATE = YY_START;\n                switch ($avoiding_name_collisions) {\n                    case 0:\n                        return 10;\n                        break;\n                    case 1:\n                        /* skip whitespace */\n                        break;\n                    case 2:\n                        /* skip comments */\n                        break;\n                    case 3:\n                        /* skip comments */\n                        break;\n                    case 4:\n                        return 4;\n                        break;\n                    case 5:\n                        return 11;\n                        break;\n                    case 6:\n                        return 'date';\n                        break;\n                    case 7:\n                        return 12;\n                        break;\n                    case 8:\n                        return 13;\n                        break;\n                    case 9:\n                        return 14;\n                        break;\n                    case 10:\n                        return 15;\n                        break;\n                    case 11:\n                        return ':';\n                        break;\n                    case 12:\n                        return 6;\n                        break;\n                    case 13:\n                        return 'INVALID';\n                        break;\n                }\n            },\n            rules: [/^(?:[\\n]+)/i, /^(?:\\s+)/i, /^(?:#[^\\n]*)/i, /^(?:%[^\\n]*)/i, /^(?:gantt\\b)/i, /^(?:dateFormat\\s[^#\\n;]+)/i, /^(?:\\d\\d\\d\\d-\\d\\d-\\d\\d\\b)/i, /^(?:title\\s[^#\\n;]+)/i, /^(?:section\\s[^#:\\n;]+)/i, /^(?:[^#:\\n;]+)/i, /^(?::[^#\\n;]+)/i, /^(?::)/i, /^(?:$)/i, /^(?:.)/i],\n            conditions: { \"INITIAL\": { \"rules\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], \"inclusive\": true } }\n        };\n        return lexer;\n    })();\n    parser.lexer = lexer;\n    function Parser() {\n        this.yy = {};\n    }\n    Parser.prototype = parser;parser.Parser = Parser;\n    return new Parser();\n})();\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\n    exports.parser = gantt;\n    exports.Parser = gantt.Parser;\n    exports.parse = function () {\n        return gantt.parse.apply(gantt, arguments);\n    };\n    exports.main = function commonjsMain(args) {\n        if (!args[1]) {\n            console.log('Usage: ' + args[0] + ' FILE');\n            process.exit(1);\n        }\n        var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n        return exports.parser.parse(source);\n    };\n    if (typeof module !== 'undefined' && require.main === module) {\n        exports.main(process.argv.slice(1));\n    }\n}\n\n}).call(this,require('_process'))\n},{\"_process\":3,\"fs\":1,\"path\":2}],122:[function(require,module,exports){\n(function (process){\n/* parser generated by jison 0.4.15 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\n\"use strict\";\n\nvar sequenceDiagram = (function () {\n    var o = function o(k, v, _o, l) {\n        for (_o = _o || {}, l = k.length; l--; _o[k[l]] = v);return _o;\n    },\n        $V0 = [2, 2],\n        $V1 = [1, 5],\n        $V2 = [1, 7],\n        $V3 = [1, 8],\n        $V4 = [1, 11],\n        $V5 = [1, 12],\n        $V6 = [1, 13],\n        $V7 = [1, 14],\n        $V8 = [1, 16],\n        $V9 = [1, 17],\n        $Va = [1, 7, 9, 10, 16, 18, 19, 20, 21, 22, 23, 33],\n        $Vb = [7, 9, 10, 16, 18, 19, 20, 21, 23, 33],\n        $Vc = [1, 53];\n    var parser = { trace: function trace() {},\n        yy: {},\n        symbols_: { \"error\": 2, \"start\": 3, \"SD\": 4, \"document\": 5, \"line\": 6, \"SPACE\": 7, \"statement\": 8, \"NL\": 9, \"participant\": 10, \"actor\": 11, \"AS\": 12, \"restOfLine\": 13, \"signal\": 14, \"note_statement\": 15, \"title\": 16, \"text\": 17, \"loop\": 18, \"end\": 19, \"opt\": 20, \"alt\": 21, \"else\": 22, \"note\": 23, \"placement\": 24, \"text2\": 25, \"over\": 26, \"actor_pair\": 27, \"spaceList\": 28, \",\": 29, \"left_of\": 30, \"right_of\": 31, \"signaltype\": 32, \"ACTOR\": 33, \"SOLID_OPEN_ARROW\": 34, \"DOTTED_OPEN_ARROW\": 35, \"SOLID_ARROW\": 36, \"DOTTED_ARROW\": 37, \"SOLID_CROSS\": 38, \"DOTTED_CROSS\": 39, \"TXT\": 40, \"$accept\": 0, \"$end\": 1 },\n        terminals_: { 2: \"error\", 4: \"SD\", 7: \"SPACE\", 9: \"NL\", 10: \"participant\", 12: \"AS\", 13: \"restOfLine\", 16: \"title\", 17: \"text\", 18: \"loop\", 19: \"end\", 20: \"opt\", 21: \"alt\", 22: \"else\", 23: \"note\", 26: \"over\", 29: \",\", 30: \"left_of\", 31: \"right_of\", 33: \"ACTOR\", 34: \"SOLID_OPEN_ARROW\", 35: \"DOTTED_OPEN_ARROW\", 36: \"SOLID_ARROW\", 37: \"DOTTED_ARROW\", 38: \"SOLID_CROSS\", 39: \"DOTTED_CROSS\", 40: \"TXT\" },\n        productions_: [0, [3, 2], [5, 0], [5, 2], [6, 2], [6, 1], [6, 1], [8, 5], [8, 3], [8, 2], [8, 2], [8, 4], [8, 4], [8, 4], [8, 7], [15, 4], [15, 4], [28, 2], [28, 1], [27, 3], [27, 1], [24, 1], [24, 1], [14, 4], [11, 1], [32, 1], [32, 1], [32, 1], [32, 1], [32, 1], [32, 1], [25, 1]],\n        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, /* action[1] */$$, /* vstack */_$ /* lstack */) {\n            /* this == yyval */\n\n            var $0 = $$.length - 1;\n            switch (yystate) {\n                case 1:\n                    yy.apply($$[$0]);return $$[$0];\n                    break;\n                case 2:\n                    this.$ = [];\n                    break;\n                case 3:\n                    $$[$0 - 1].push($$[$0]);this.$ = $$[$0 - 1];\n                    break;\n                case 4:case 5:\n                    this.$ = $$[$0];\n                    break;\n                case 6:\n                    this.$ = [];\n                    break;\n                case 7:\n                    $$[$0 - 3].description = $$[$0 - 1];this.$ = $$[$0 - 3];\n                    break;\n                case 8:\n                    this.$ = $$[$0 - 1];\n                    break;\n                case 12:\n\n                    $$[$0 - 1].unshift({ type: 'loopStart', loopText: $$[$0 - 2], signalType: yy.LINETYPE.LOOP_START });\n                    $$[$0 - 1].push({ type: 'loopEnd', loopText: $$[$0 - 2], signalType: yy.LINETYPE.LOOP_END });\n                    this.$ = $$[$0 - 1];\n                    break;\n                case 13:\n\n                    $$[$0 - 1].unshift({ type: 'optStart', optText: $$[$0 - 2], signalType: yy.LINETYPE.OPT_START });\n                    $$[$0 - 1].push({ type: 'optEnd', optText: $$[$0 - 2], signalType: yy.LINETYPE.OPT_END });\n                    this.$ = $$[$0 - 1];\n                    break;\n                case 14:\n\n                    // Alt start\n                    $$[$0 - 4].unshift({ type: 'altStart', altText: $$[$0 - 5], signalType: yy.LINETYPE.ALT_START });\n                    // Content in alt is already in $$[$0-4]\n                    // Else\n                    $$[$0 - 4].push({ type: 'else', altText: $$[$0 - 2], signalType: yy.LINETYPE.ALT_ELSE });\n                    // Content in other alt\n                    $$[$0 - 4] = $$[$0 - 4].concat($$[$0 - 1]);\n                    // End\n                    $$[$0 - 4].push({ type: 'altEnd', signalType: yy.LINETYPE.ALT_END });\n\n                    this.$ = $$[$0 - 4];\n                    break;\n                case 15:\n\n                    this.$ = [$$[$0 - 1], { type: 'addNote', placement: $$[$0 - 2], actor: $$[$0 - 1].actor, text: $$[$0] }];\n                    break;\n                case 16:\n\n                    // Coerce actor_pair into a [to, from, ...] array\n                    $$[$0 - 2] = [].concat($$[$0 - 1], $$[$0 - 1]).slice(0, 2);\n                    $$[$0 - 2][0] = $$[$0 - 2][0].actor;\n                    $$[$0 - 2][1] = $$[$0 - 2][1].actor;\n                    this.$ = [$$[$0 - 1], { type: 'addNote', placement: yy.PLACEMENT.OVER, actor: $$[$0 - 2].slice(0, 2), text: $$[$0] }];\n                    break;\n                case 19:\n                    this.$ = [$$[$0 - 2], $$[$0]];\n                    break;\n                case 20:\n                    this.$ = $$[$0];\n                    break;\n                case 21:\n                    this.$ = yy.PLACEMENT.LEFTOF;\n                    break;\n                case 22:\n                    this.$ = yy.PLACEMENT.RIGHTOF;\n                    break;\n                case 23:\n                    this.$ = [$$[$0 - 3], $$[$0 - 1], { type: 'addMessage', from: $$[$0 - 3].actor, to: $$[$0 - 1].actor, signalType: $$[$0 - 2], msg: $$[$0] }];\n                    break;\n                case 24:\n                    this.$ = { type: 'addActor', actor: $$[$0] };\n                    break;\n                case 25:\n                    this.$ = yy.LINETYPE.SOLID_OPEN;\n                    break;\n                case 26:\n                    this.$ = yy.LINETYPE.DOTTED_OPEN;\n                    break;\n                case 27:\n                    this.$ = yy.LINETYPE.SOLID;\n                    break;\n                case 28:\n                    this.$ = yy.LINETYPE.DOTTED;\n                    break;\n                case 29:\n                    this.$ = yy.LINETYPE.SOLID_CROSS;\n                    break;\n                case 30:\n                    this.$ = yy.LINETYPE.DOTTED_CROSS;\n                    break;\n                case 31:\n                    this.$ = $$[$0].substring(1).trim().replace(/\\\\n/gm, \"\\n\");\n                    break;\n            }\n        },\n        table: [{ 3: 1, 4: [1, 2] }, { 1: [3] }, o([1, 7, 9, 10, 16, 18, 20, 21, 23, 33], $V0, { 5: 3 }), { 1: [2, 1], 6: 4, 7: $V1, 8: 6, 9: $V2, 10: $V3, 11: 15, 14: 9, 15: 10, 16: $V4, 18: $V5, 20: $V6, 21: $V7, 23: $V8, 33: $V9 }, o($Va, [2, 3]), { 8: 18, 10: $V3, 11: 15, 14: 9, 15: 10, 16: $V4, 18: $V5, 20: $V6, 21: $V7, 23: $V8, 33: $V9 }, o($Va, [2, 5]), o($Va, [2, 6]), { 11: 19, 33: $V9 }, { 9: [1, 20] }, { 9: [1, 21] }, { 7: [1, 22] }, { 13: [1, 23] }, { 13: [1, 24] }, { 13: [1, 25] }, { 32: 26, 34: [1, 27], 35: [1, 28], 36: [1, 29], 37: [1, 30], 38: [1, 31], 39: [1, 32] }, { 24: 33, 26: [1, 34], 30: [1, 35], 31: [1, 36] }, o([9, 12, 29, 34, 35, 36, 37, 38, 39, 40], [2, 24]), o($Va, [2, 4]), { 9: [1, 38], 12: [1, 37] }, o($Va, [2, 9]), o($Va, [2, 10]), { 17: [1, 39] }, o($Vb, $V0, { 5: 40 }), o($Vb, $V0, { 5: 41 }), o([7, 9, 10, 16, 18, 20, 21, 22, 23, 33], $V0, { 5: 42 }), { 11: 43, 33: $V9 }, { 33: [2, 25] }, { 33: [2, 26] }, { 33: [2, 27] }, { 33: [2, 28] }, { 33: [2, 29] }, { 33: [2, 30] }, { 11: 44, 33: $V9 }, { 11: 46, 27: 45, 33: $V9 }, { 33: [2, 21] }, { 33: [2, 22] }, { 13: [1, 47] }, o($Va, [2, 8]), { 9: [1, 48] }, { 6: 4, 7: $V1, 8: 6, 9: $V2, 10: $V3, 11: 15, 14: 9, 15: 10, 16: $V4, 18: $V5, 19: [1, 49], 20: $V6, 21: $V7, 23: $V8, 33: $V9 }, { 6: 4, 7: $V1, 8: 6, 9: $V2, 10: $V3, 11: 15, 14: 9, 15: 10, 16: $V4, 18: $V5, 19: [1, 50], 20: $V6, 21: $V7, 23: $V8, 33: $V9 }, { 6: 4, 7: $V1, 8: 6, 9: $V2, 10: $V3, 11: 15, 14: 9, 15: 10, 16: $V4, 18: $V5, 20: $V6, 21: $V7, 22: [1, 51], 23: $V8, 33: $V9 }, { 25: 52, 40: $Vc }, { 25: 54, 40: $Vc }, { 25: 55, 40: $Vc }, { 29: [1, 56], 40: [2, 20] }, { 9: [1, 57] }, o($Va, [2, 11]), o($Va, [2, 12]), o($Va, [2, 13]), { 13: [1, 58] }, { 9: [2, 23] }, { 9: [2, 31] }, { 9: [2, 15] }, { 9: [2, 16] }, { 11: 59, 33: $V9 }, o($Va, [2, 7]), o($Vb, $V0, { 5: 60 }), { 40: [2, 19] }, { 6: 4, 7: $V1, 8: 6, 9: $V2, 10: $V3, 11: 15, 14: 9, 15: 10, 16: $V4, 18: $V5, 19: [1, 61], 20: $V6, 21: $V7, 23: $V8, 33: $V9 }, o($Va, [2, 14])],\n        defaultActions: { 27: [2, 25], 28: [2, 26], 29: [2, 27], 30: [2, 28], 31: [2, 29], 32: [2, 30], 35: [2, 21], 36: [2, 22], 52: [2, 23], 53: [2, 31], 54: [2, 15], 55: [2, 16], 59: [2, 19] },\n        parseError: function parseError(str, hash) {\n            if (hash.recoverable) {\n                this.trace(str);\n            } else {\n                var _parseError = function _parseError(msg, hash) {\n                    this.message = msg;\n                    this.hash = hash;\n                };\n\n                _parseError.prototype = new Error();\n\n                throw new _parseError(str, hash);\n            }\n        },\n        parse: function parse(input) {\n            var self = this,\n                stack = [0],\n                tstack = [],\n                vstack = [null],\n                lstack = [],\n                table = this.table,\n                yytext = '',\n                yylineno = 0,\n                yyleng = 0,\n                recovering = 0,\n                TERROR = 2,\n                EOF = 1;\n            var args = lstack.slice.call(arguments, 1);\n            var lexer = Object.create(this.lexer);\n            var sharedState = { yy: {} };\n            for (var k in this.yy) {\n                if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n                    sharedState.yy[k] = this.yy[k];\n                }\n            }\n            lexer.setInput(input, sharedState.yy);\n            sharedState.yy.lexer = lexer;\n            sharedState.yy.parser = this;\n            if (typeof lexer.yylloc == 'undefined') {\n                lexer.yylloc = {};\n            }\n            var yyloc = lexer.yylloc;\n            lstack.push(yyloc);\n            var ranges = lexer.options && lexer.options.ranges;\n            if (typeof sharedState.yy.parseError === 'function') {\n                this.parseError = sharedState.yy.parseError;\n            } else {\n                this.parseError = Object.getPrototypeOf(this).parseError;\n            }\n            function popStack(n) {\n                stack.length = stack.length - 2 * n;\n                vstack.length = vstack.length - n;\n                lstack.length = lstack.length - n;\n            }\n            _token_stack: var lex = function lex() {\n                var token;\n                token = lexer.lex() || EOF;\n                if (typeof token !== 'number') {\n                    token = self.symbols_[token] || token;\n                }\n                return token;\n            };\n            var symbol,\n                preErrorSymbol,\n                state,\n                action,\n                a,\n                r,\n                yyval = {},\n                p,\n                len,\n                newState,\n                expected;\n            while (true) {\n                state = stack[stack.length - 1];\n                if (this.defaultActions[state]) {\n                    action = this.defaultActions[state];\n                } else {\n                    if (symbol === null || typeof symbol == 'undefined') {\n                        symbol = lex();\n                    }\n                    action = table[state] && table[state][symbol];\n                }\n                if (typeof action === 'undefined' || !action.length || !action[0]) {\n                    var errStr = '';\n                    expected = [];\n                    for (p in table[state]) {\n                        if (this.terminals_[p] && p > TERROR) {\n                            expected.push('\\'' + this.terminals_[p] + '\\'');\n                        }\n                    }\n                    if (lexer.showPosition) {\n                        errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                    } else {\n                        errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                    }\n                    this.parseError(errStr, {\n                        text: lexer.match,\n                        token: this.terminals_[symbol] || symbol,\n                        line: lexer.yylineno,\n                        loc: yyloc,\n                        expected: expected\n                    });\n                }\n                if (action[0] instanceof Array && action.length > 1) {\n                    throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n                }\n                switch (action[0]) {\n                    case 1:\n                        stack.push(symbol);\n                        vstack.push(lexer.yytext);\n                        lstack.push(lexer.yylloc);\n                        stack.push(action[1]);\n                        symbol = null;\n                        if (!preErrorSymbol) {\n                            yyleng = lexer.yyleng;\n                            yytext = lexer.yytext;\n                            yylineno = lexer.yylineno;\n                            yyloc = lexer.yylloc;\n                            if (recovering > 0) {\n                                recovering--;\n                            }\n                        } else {\n                            symbol = preErrorSymbol;\n                            preErrorSymbol = null;\n                        }\n                        break;\n                    case 2:\n                        len = this.productions_[action[1]][1];\n                        yyval.$ = vstack[vstack.length - len];\n                        yyval._$ = {\n                            first_line: lstack[lstack.length - (len || 1)].first_line,\n                            last_line: lstack[lstack.length - 1].last_line,\n                            first_column: lstack[lstack.length - (len || 1)].first_column,\n                            last_column: lstack[lstack.length - 1].last_column\n                        };\n                        if (ranges) {\n                            yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\n                        }\n                        r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\n                        if (typeof r !== 'undefined') {\n                            return r;\n                        }\n                        if (len) {\n                            stack = stack.slice(0, -1 * len * 2);\n                            vstack = vstack.slice(0, -1 * len);\n                            lstack = lstack.slice(0, -1 * len);\n                        }\n                        stack.push(this.productions_[action[1]][0]);\n                        vstack.push(yyval.$);\n                        lstack.push(yyval._$);\n                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n                        stack.push(newState);\n                        break;\n                    case 3:\n                        return true;\n                }\n            }\n            return true;\n        } };\n\n    /* generated by jison-lex 0.3.4 */\n    var lexer = (function () {\n        var lexer = {\n\n            EOF: 1,\n\n            parseError: function parseError(str, hash) {\n                if (this.yy.parser) {\n                    this.yy.parser.parseError(str, hash);\n                } else {\n                    throw new Error(str);\n                }\n            },\n\n            // resets the lexer, sets new input\n            setInput: function setInput(input, yy) {\n                this.yy = yy || this.yy || {};\n                this._input = input;\n                this._more = this._backtrack = this.done = false;\n                this.yylineno = this.yyleng = 0;\n                this.yytext = this.matched = this.match = '';\n                this.conditionStack = ['INITIAL'];\n                this.yylloc = {\n                    first_line: 1,\n                    first_column: 0,\n                    last_line: 1,\n                    last_column: 0\n                };\n                if (this.options.ranges) {\n                    this.yylloc.range = [0, 0];\n                }\n                this.offset = 0;\n                return this;\n            },\n\n            // consumes and returns one char from the input\n            input: function input() {\n                var ch = this._input[0];\n                this.yytext += ch;\n                this.yyleng++;\n                this.offset++;\n                this.match += ch;\n                this.matched += ch;\n                var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n                if (lines) {\n                    this.yylineno++;\n                    this.yylloc.last_line++;\n                } else {\n                    this.yylloc.last_column++;\n                }\n                if (this.options.ranges) {\n                    this.yylloc.range[1]++;\n                }\n\n                this._input = this._input.slice(1);\n                return ch;\n            },\n\n            // unshifts one char (or a string) into the input\n            unput: function unput(ch) {\n                var len = ch.length;\n                var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n                this._input = ch + this._input;\n                this.yytext = this.yytext.substr(0, this.yytext.length - len);\n                //this.yyleng -= len;\n                this.offset -= len;\n                var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n                this.match = this.match.substr(0, this.match.length - 1);\n                this.matched = this.matched.substr(0, this.matched.length - 1);\n\n                if (lines.length - 1) {\n                    this.yylineno -= lines.length - 1;\n                }\n                var r = this.yylloc.range;\n\n                this.yylloc = {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.yylineno + 1,\n                    first_column: this.yylloc.first_column,\n                    last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n                };\n\n                if (this.options.ranges) {\n                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n                }\n                this.yyleng = this.yytext.length;\n                return this;\n            },\n\n            // When called from action, caches matched text and appends it on next action\n            more: function more() {\n                this._more = true;\n                return this;\n            },\n\n            // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\n            reject: function reject() {\n                if (this.options.backtrack_lexer) {\n                    this._backtrack = true;\n                } else {\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                        text: \"\",\n                        token: null,\n                        line: this.yylineno\n                    });\n                }\n                return this;\n            },\n\n            // retain first n characters of the match\n            less: function less(n) {\n                this.unput(this.match.slice(n));\n            },\n\n            // displays already matched input, i.e. for error messages\n            pastInput: function pastInput() {\n                var past = this.matched.substr(0, this.matched.length - this.match.length);\n                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\\n/g, \"\");\n            },\n\n            // displays upcoming input, i.e. for error messages\n            upcomingInput: function upcomingInput() {\n                var next = this.match;\n                if (next.length < 20) {\n                    next += this._input.substr(0, 20 - next.length);\n                }\n                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n            },\n\n            // displays the character position where the lexing error occurred, i.e. for error messages\n            showPosition: function showPosition() {\n                var pre = this.pastInput();\n                var c = new Array(pre.length + 1).join(\"-\");\n                return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n            },\n\n            // test the lexed token: return FALSE when not a match, otherwise return token\n            test_match: function test_match(match, indexed_rule) {\n                var token, lines, backup;\n\n                if (this.options.backtrack_lexer) {\n                    // save context\n                    backup = {\n                        yylineno: this.yylineno,\n                        yylloc: {\n                            first_line: this.yylloc.first_line,\n                            last_line: this.last_line,\n                            first_column: this.yylloc.first_column,\n                            last_column: this.yylloc.last_column\n                        },\n                        yytext: this.yytext,\n                        match: this.match,\n                        matches: this.matches,\n                        matched: this.matched,\n                        yyleng: this.yyleng,\n                        offset: this.offset,\n                        _more: this._more,\n                        _input: this._input,\n                        yy: this.yy,\n                        conditionStack: this.conditionStack.slice(0),\n                        done: this.done\n                    };\n                    if (this.options.ranges) {\n                        backup.yylloc.range = this.yylloc.range.slice(0);\n                    }\n                }\n\n                lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n                if (lines) {\n                    this.yylineno += lines.length;\n                }\n                this.yylloc = {\n                    first_line: this.yylloc.last_line,\n                    last_line: this.yylineno + 1,\n                    first_column: this.yylloc.last_column,\n                    last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\n                };\n                this.yytext += match[0];\n                this.match += match[0];\n                this.matches = match;\n                this.yyleng = this.yytext.length;\n                if (this.options.ranges) {\n                    this.yylloc.range = [this.offset, this.offset += this.yyleng];\n                }\n                this._more = false;\n                this._backtrack = false;\n                this._input = this._input.slice(match[0].length);\n                this.matched += match[0];\n                token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n                if (this.done && this._input) {\n                    this.done = false;\n                }\n                if (token) {\n                    return token;\n                } else if (this._backtrack) {\n                    // recover context\n                    for (var k in backup) {\n                        this[k] = backup[k];\n                    }\n                    return false; // rule action called reject() implying the next rule should be tested instead.\n                }\n                return false;\n            },\n\n            // return next match in input\n            next: function next() {\n                if (this.done) {\n                    return this.EOF;\n                }\n                if (!this._input) {\n                    this.done = true;\n                }\n\n                var token, match, tempMatch, index;\n                if (!this._more) {\n                    this.yytext = '';\n                    this.match = '';\n                }\n                var rules = this._currentRules();\n                for (var i = 0; i < rules.length; i++) {\n                    tempMatch = this._input.match(this.rules[rules[i]]);\n                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                        match = tempMatch;\n                        index = i;\n                        if (this.options.backtrack_lexer) {\n                            token = this.test_match(tempMatch, rules[i]);\n                            if (token !== false) {\n                                return token;\n                            } else if (this._backtrack) {\n                                match = false;\n                                continue; // rule action called reject() implying a rule MISmatch.\n                            } else {\n                                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                                    return false;\n                                }\n                        } else if (!this.options.flex) {\n                            break;\n                        }\n                    }\n                }\n                if (match) {\n                    token = this.test_match(match, rules[index]);\n                    if (token !== false) {\n                        return token;\n                    }\n                    // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                    return false;\n                }\n                if (this._input === \"\") {\n                    return this.EOF;\n                } else {\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                        text: \"\",\n                        token: null,\n                        line: this.yylineno\n                    });\n                }\n            },\n\n            // return next match that has a token\n            lex: function lex() {\n                var r = this.next();\n                if (r) {\n                    return r;\n                } else {\n                    return this.lex();\n                }\n            },\n\n            // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\n            begin: function begin(condition) {\n                this.conditionStack.push(condition);\n            },\n\n            // pop the previously active lexer condition state off the condition stack\n            popState: function popState() {\n                var n = this.conditionStack.length - 1;\n                if (n > 0) {\n                    return this.conditionStack.pop();\n                } else {\n                    return this.conditionStack[0];\n                }\n            },\n\n            // produce the lexer rule set which is active for the currently active lexer condition state\n            _currentRules: function _currentRules() {\n                if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n                    return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n                } else {\n                    return this.conditions[\"INITIAL\"].rules;\n                }\n            },\n\n            // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\n            topState: function topState(n) {\n                n = this.conditionStack.length - 1 - Math.abs(n || 0);\n                if (n >= 0) {\n                    return this.conditionStack[n];\n                } else {\n                    return \"INITIAL\";\n                }\n            },\n\n            // alias for begin(condition)\n            pushState: function pushState(condition) {\n                this.begin(condition);\n            },\n\n            // return the number of states currently on the stack\n            stateStackSize: function stateStackSize() {\n                return this.conditionStack.length;\n            },\n            options: { \"case-insensitive\": true },\n            performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n                var YYSTATE = YY_START;\n                switch ($avoiding_name_collisions) {\n                    case 0:\n                        return 9;\n                        break;\n                    case 1:\n                        /* skip all whitespace */\n                        break;\n                    case 2:\n                        /* skip same-line whitespace */\n                        break;\n                    case 3:\n                        /* skip comments */\n                        break;\n                    case 4:\n                        /* skip comments */\n                        break;\n                    case 5:\n                        this.begin('ID');return 10;\n                        break;\n                    case 6:\n                        this.begin('ALIAS');return 33;\n                        break;\n                    case 7:\n                        this.popState();this.popState();this.begin('LINE');return 12;\n                        break;\n                    case 8:\n                        this.popState();this.popState();return 9;\n                        break;\n                    case 9:\n                        this.begin('LINE');return 18;\n                        break;\n                    case 10:\n                        this.begin('LINE');return 20;\n                        break;\n                    case 11:\n                        this.begin('LINE');return 21;\n                        break;\n                    case 12:\n                        this.begin('LINE');return 22;\n                        break;\n                    case 13:\n                        this.popState();return 13;\n                        break;\n                    case 14:\n                        return 19;\n                        break;\n                    case 15:\n                        return 30;\n                        break;\n                    case 16:\n                        return 31;\n                        break;\n                    case 17:\n                        return 26;\n                        break;\n                    case 18:\n                        return 23;\n                        break;\n                    case 19:\n                        return 16;\n                        break;\n                    case 20:\n                        return 4;\n                        break;\n                    case 21:\n                        return 29;\n                        break;\n                    case 22:\n                        return 9;\n                        break;\n                    case 23:\n                        return 33;\n                        break;\n                    case 24:\n                        return 36;\n                        break;\n                    case 25:\n                        return 37;\n                        break;\n                    case 26:\n                        return 34;\n                        break;\n                    case 27:\n                        return 35;\n                        break;\n                    case 28:\n                        return 38;\n                        break;\n                    case 29:\n                        return 39;\n                        break;\n                    case 30:\n                        return 40;\n                        break;\n                    case 31:\n                        return 9;\n                        break;\n                    case 32:\n                        return 'INVALID';\n                        break;\n                }\n            },\n            rules: [/^(?:[\\n]+)/i, /^(?:\\s+)/i, /^(?:((?!\\n)\\s)+)/i, /^(?:#[^\\n]*)/i, /^(?:%[^\\n]*)/i, /^(?:participant\\b)/i, /^(?:[^\\->:\\n,;]+?(?=((?!\\n)\\s)+as(?!\\n)\\s|[#\\n;]|$))/i, /^(?:as\\b)/i, /^(?:(?:))/i, /^(?:loop\\b)/i, /^(?:opt\\b)/i, /^(?:alt\\b)/i, /^(?:else\\b)/i, /^(?:[^#\\n;]*)/i, /^(?:end\\b)/i, /^(?:left of\\b)/i, /^(?:right of\\b)/i, /^(?:over\\b)/i, /^(?:note\\b)/i, /^(?:title\\b)/i, /^(?:sequenceDiagram\\b)/i, /^(?:,)/i, /^(?:;)/i, /^(?:[^\\->:\\n,;]+)/i, /^(?:->>)/i, /^(?:-->>)/i, /^(?:->)/i, /^(?:-->)/i, /^(?:-[x])/i, /^(?:--[x])/i, /^(?::[^#\\n;]+)/i, /^(?:$)/i, /^(?:.)/i],\n            conditions: { \"LINE\": { \"rules\": [2, 3, 13], \"inclusive\": false }, \"ALIAS\": { \"rules\": [2, 3, 7, 8], \"inclusive\": false }, \"ID\": { \"rules\": [2, 3, 6], \"inclusive\": false }, \"INITIAL\": { \"rules\": [0, 1, 3, 4, 5, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], \"inclusive\": true } }\n        };\n        return lexer;\n    })();\n    parser.lexer = lexer;\n    function Parser() {\n        this.yy = {};\n    }\n    Parser.prototype = parser;parser.Parser = Parser;\n    return new Parser();\n})();\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\n    exports.parser = sequenceDiagram;\n    exports.Parser = sequenceDiagram.Parser;\n    exports.parse = function () {\n        return sequenceDiagram.parse.apply(sequenceDiagram, arguments);\n    };\n    exports.main = function commonjsMain(args) {\n        if (!args[1]) {\n            console.log('Usage: ' + args[0] + ' FILE');\n            process.exit(1);\n        }\n        var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n        return exports.parser.parse(source);\n    };\n    if (typeof module !== 'undefined' && require.main === module) {\n        exports.main(process.argv.slice(1));\n    }\n}\n\n}).call(this,require('_process'))\n},{\"_process\":3,\"fs\":1,\"path\":2}],123:[function(require,module,exports){\n(function (global){\n/**\n * Created by knut on 14-11-19.\n */\n'use strict';\n\nvar actors = {};\nvar messages = [];\nvar notes = [];\nvar Logger = require('../../logger');\nvar log = new Logger.Log();\n\nexports.addActor = function (id, name, description) {\n    // Don't allow description nulling\n    var old = actors[id];\n    if (old && name === old.name && description == null) return;\n\n    // Don't allow null descriptions, either\n    if (description == null) description = name;\n\n    actors[id] = { name: name, description: description };\n};\n\nexports.addMessage = function (idFrom, idTo, message, answer) {\n    messages.push({ from: idFrom, to: idTo, message: message, answer: answer });\n};\n\n/**\n *\n */\nexports.addSignal = function (idFrom, idTo, message, messageType) {\n    log.debug('Adding message from=' + idFrom + ' to=' + idTo + ' message=' + message + ' type=' + messageType);\n    messages.push({ from: idFrom, to: idTo, message: message, type: messageType });\n};\n\nexports.getMessages = function () {\n    return messages;\n};\n\nexports.getActors = function () {\n    return actors;\n};\nexports.getActor = function (id) {\n    return actors[id];\n};\nexports.getActorKeys = function () {\n    return Object.keys(actors);\n};\n\nexports.clear = function () {\n    actors = {};\n    messages = [];\n};\n\nexports.LINETYPE = {\n    SOLID: 0,\n    DOTTED: 1,\n    NOTE: 2,\n    SOLID_CROSS: 3,\n    DOTTED_CROSS: 4,\n    SOLID_OPEN: 5,\n    DOTTED_OPEN: 6,\n    LOOP_START: 10,\n    LOOP_END: 11,\n    ALT_START: 12,\n    ALT_ELSE: 13,\n    ALT_END: 14,\n    OPT_START: 15,\n    OPT_END: 16\n};\n\nexports.ARROWTYPE = {\n    FILLED: 0,\n    OPEN: 1\n};\n\nexports.PLACEMENT = {\n    LEFTOF: 0,\n    RIGHTOF: 1,\n    OVER: 2\n};\n\nexports.addNote = function (actor, placement, message) {\n    var note = { actor: actor, placement: placement, message: message };\n\n    // Coerce actor into a [to, from, ...] array\n    var actors = [].concat(actor, actor);\n\n    notes.push(note);\n    messages.push({ from: actors[0], to: actors[1], message: message, type: exports.LINETYPE.NOTE, placement: placement });\n};\n\nexports.parseError = function (err, hash) {\n    global.mermaidAPI.parseError(err, hash);\n};\n\nexports.apply = function (param) {\n    if (param instanceof Array) {\n        param.forEach(function (item) {\n            exports.apply(item);\n        });\n    } else {\n        // log.debug(param);\n        switch (param.type) {\n            case 'addActor':\n                exports.addActor(param.actor, param.actor, param.description);\n                break;\n            case 'addNote':\n                exports.addNote(param.actor, param.placement, param.text);\n                break;\n            case 'addMessage':\n                exports.addSignal(param.from, param.to, param.msg, param.signalType);\n                break;\n            case 'loopStart':\n                //log.debug('Loop text: ',param.loopText);\n                exports.addSignal(undefined, undefined, param.loopText, param.signalType);\n                //yy.addSignal(undefined, undefined, $2, yy.LINETYPE.LOOP_START);\n                break;\n            case 'loopEnd':\n                exports.addSignal(undefined, undefined, undefined, param.signalType);\n                break;\n            case 'optStart':\n                //log.debug('Loop text: ',param.loopText);\n                exports.addSignal(undefined, undefined, param.optText, param.signalType);\n                //yy.addSignal(undefined, undefined, $2, yy.LINETYPE.LOOP_START);\n                break;\n            case 'optEnd':\n                exports.addSignal(undefined, undefined, undefined, param.signalType);\n                break;\n            case 'altStart':\n                //log.debug('Loop text: ',param.loopText);\n                exports.addSignal(undefined, undefined, param.altText, param.signalType);\n                //yy.addSignal(undefined, undefined, $2, yy.LINETYPE.LOOP_START);\n                break;\n            case 'else':\n                exports.addSignal(undefined, undefined, param.altText, param.signalType);\n                break;\n            case 'altEnd':\n                exports.addSignal(undefined, undefined, undefined, param.signalType);\n                break;\n        }\n    }\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../logger\":126}],124:[function(require,module,exports){\n/**\n * Created by knut on 14-11-23.\n */\n\n'use strict';\n\nvar sq = require('./parser/sequenceDiagram').parser;\nsq.yy = require('./sequenceDb');\nvar svgDraw = require('./svgDraw');\nvar d3 = require('../../d3');\nvar Logger = require('../../logger');\nvar log = new Logger.Log();\n\nvar conf = {\n\n    diagramMarginX: 50,\n    diagramMarginY: 10,\n    // Margin between actors\n    actorMargin: 50,\n    // Width of actor moxes\n    width: 150,\n    // Height of actor boxes\n    height: 65,\n    // Margin around loop boxes\n    boxMargin: 10,\n    boxTextMargin: 5,\n    noteMargin: 10,\n    // Space between messages\n    messageMargin: 35,\n    //mirror actors under diagram\n    mirrorActors: false,\n    // Depending on css styling this might need adjustment\n    // Prolongs the edge of the diagram downwards\n    bottomMarginAdj: 1\n};\n\n//var bb = getBBox('path');\nexports.bounds = {\n    data: {\n        startx: undefined,\n        stopx: undefined,\n        starty: undefined,\n        stopy: undefined\n    },\n    verticalPos: 0,\n\n    list: [],\n    init: function init() {\n        this.list = [];\n        this.data = {\n            startx: undefined,\n            stopx: undefined,\n            starty: undefined,\n            stopy: undefined\n        };\n        this.verticalPos = 0;\n    },\n    updateVal: function updateVal(obj, key, val, fun) {\n        if (typeof obj[key] === 'undefined') {\n            obj[key] = val;\n        } else {\n            obj[key] = fun(val, obj[key]);\n        }\n    },\n    updateLoops: function updateLoops(startx, starty, stopx, stopy) {\n        var _self = this;\n        var cnt = 0;\n        this.list.forEach(function (loop) {\n            cnt++;\n            // The loop list is a stack so the biggest margins in the beginning of the list\n            var n = _self.list.length - cnt + 1;\n\n            _self.updateVal(loop, 'startx', startx - n * conf.boxMargin, Math.min);\n            _self.updateVal(loop, 'starty', starty - n * conf.boxMargin, Math.min);\n            _self.updateVal(loop, 'stopx', stopx + n * conf.boxMargin, Math.max);\n            _self.updateVal(loop, 'stopy', stopy + n * conf.boxMargin, Math.max);\n\n            _self.updateVal(exports.bounds.data, 'startx', startx - n * conf.boxMargin, Math.min);\n            _self.updateVal(exports.bounds.data, 'starty', starty - n * conf.boxMargin, Math.min);\n            _self.updateVal(exports.bounds.data, 'stopx', stopx + n * conf.boxMargin, Math.max);\n            _self.updateVal(exports.bounds.data, 'stopy', stopy + n * conf.boxMargin, Math.max);\n        });\n    },\n    insert: function insert(startx, starty, stopx, stopy) {\n\n        var _startx, _starty, _stopx, _stopy;\n\n        _startx = Math.min(startx, stopx);\n        _stopx = Math.max(startx, stopx);\n        _starty = Math.min(starty, stopy);\n        _stopy = Math.max(starty, stopy);\n\n        this.updateVal(exports.bounds.data, 'startx', _startx, Math.min);\n        this.updateVal(exports.bounds.data, 'starty', _starty, Math.min);\n        this.updateVal(exports.bounds.data, 'stopx', _stopx, Math.max);\n        this.updateVal(exports.bounds.data, 'stopy', _stopy, Math.max);\n\n        this.updateLoops(_startx, _starty, _stopx, _stopy);\n    },\n    newLoop: function newLoop(title) {\n        this.list.push({ startx: undefined, starty: this.verticalPos, stopx: undefined, stopy: undefined, title: title });\n    },\n    endLoop: function endLoop() {\n        var loop = this.list.pop();\n        //loop.stopy =  exports.bounds.getVerticalPos();\n        return loop;\n    },\n    addElseToLoop: function addElseToLoop(message) {\n        var loop = this.list.pop();\n        loop.elsey = exports.bounds.getVerticalPos();\n        loop.elseText = message;\n        this.list.push(loop);\n    },\n    bumpVerticalPos: function bumpVerticalPos(bump) {\n        this.verticalPos = this.verticalPos + bump;\n        this.data.stopy = this.verticalPos;\n    },\n    getVerticalPos: function getVerticalPos() {\n        return this.verticalPos;\n    },\n    getBounds: function getBounds() {\n        return this.data;\n    }\n};\n\n/**\n * Draws an actor in the diagram with the attaced line\n * @param center - The center of the the actor\n * @param pos The position if the actor in the liost of actors\n * @param description The text in the box\n */\nvar drawNote = function drawNote(elem, startx, verticalPos, msg, forceWidth) {\n    var rect = svgDraw.getNoteRect();\n    rect.x = startx;\n    rect.y = verticalPos;\n    rect.width = forceWidth || conf.width;\n    rect['class'] = 'note';\n\n    var g = elem.append('g');\n    var rectElem = svgDraw.drawRect(g, rect);\n\n    var textObj = svgDraw.getTextObj();\n    textObj.x = startx - 4;\n    textObj.y = verticalPos - 13;\n    textObj.textMargin = conf.noteMargin;\n    textObj.dy = '1em';\n    textObj.text = msg.message;\n    textObj['class'] = 'noteText';\n\n    var textElem = svgDraw.drawText(g, textObj, rect.width - conf.noteMargin);\n\n    var textHeight = textElem[0][0].getBBox().height;\n    if (!forceWidth && textHeight > conf.width) {\n        textElem.remove();\n        g = elem.append('g');\n\n        textElem = svgDraw.drawText(g, textObj, 2 * rect.width - conf.noteMargin);\n        textHeight = textElem[0][0].getBBox().height;\n        rectElem.attr('width', 2 * rect.width);\n        exports.bounds.insert(startx, verticalPos, startx + 2 * rect.width, verticalPos + 2 * conf.noteMargin + textHeight);\n    } else {\n        exports.bounds.insert(startx, verticalPos, startx + rect.width, verticalPos + 2 * conf.noteMargin + textHeight);\n    }\n\n    rectElem.attr('height', textHeight + 2 * conf.noteMargin);\n    exports.bounds.bumpVerticalPos(textHeight + 2 * conf.noteMargin);\n};\n\n/**\n * Draws a message\n * @param elem\n * @param startx\n * @param stopx\n * @param verticalPos\n * @param txtCenter\n * @param msg\n */\nvar drawMessage = function drawMessage(elem, startx, stopx, verticalPos, msg) {\n    var g = elem.append('g');\n    var txtCenter = startx + (stopx - startx) / 2;\n\n    var textElem = g.append('text') // text label for the x axis\n    .attr('x', txtCenter).attr('y', verticalPos - 7).style('text-anchor', 'middle').attr('class', 'messageText').text(msg.message);\n\n    var textWidth;\n\n    if (typeof textElem[0][0].getBBox !== 'undefined') {\n        textWidth = textElem[0][0].getBBox().width;\n    } else {\n        //textWidth = getBBox(textElem).width; //.getComputedTextLength()\n        textWidth = textElem[0][0].getBoundingClientRect();\n        //textWidth = textElem[0][0].getComputedTextLength();\n    }\n\n    var line;\n\n    if (startx === stopx) {\n        line = g.append('path').attr('d', 'M ' + startx + ',' + verticalPos + ' C ' + (startx + 60) + ',' + (verticalPos - 10) + ' ' + (startx + 60) + ',' + (verticalPos + 30) + ' ' + startx + ',' + (verticalPos + 20));\n\n        exports.bounds.bumpVerticalPos(30);\n        var dx = Math.max(textWidth / 2, 100);\n        exports.bounds.insert(startx - dx, exports.bounds.getVerticalPos() - 10, stopx + dx, exports.bounds.getVerticalPos());\n    } else {\n        line = g.append('line');\n        line.attr('x1', startx);\n        line.attr('y1', verticalPos);\n        line.attr('x2', stopx);\n        line.attr('y2', verticalPos);\n        exports.bounds.insert(startx, exports.bounds.getVerticalPos() - 10, stopx, exports.bounds.getVerticalPos());\n    }\n    //Make an SVG Container\n    //Draw the line\n    if (msg.type === sq.yy.LINETYPE.DOTTED || msg.type === sq.yy.LINETYPE.DOTTED_CROSS || msg.type === sq.yy.LINETYPE.DOTTED_OPEN) {\n        line.style('stroke-dasharray', '3, 3');\n        line.attr('class', 'messageLine1');\n    } else {\n        line.attr('class', 'messageLine0');\n    }\n\n    var url = '';\n    if (conf.arrowMarkerAbsolute) {\n        url = window.location.protocol + '//' + window.location.host + window.location.pathname + window.location.search;\n        url = url.replace(/\\(/g, '\\\\(');\n        url = url.replace(/\\)/g, '\\\\)');\n    }\n\n    line.attr('stroke-width', 2);\n    line.attr('stroke', 'black');\n    line.style('fill', 'none'); // remove any fill colour\n    if (msg.type === sq.yy.LINETYPE.SOLID || msg.type === sq.yy.LINETYPE.DOTTED) {\n        line.attr('marker-end', 'url(' + url + '#arrowhead)');\n    }\n\n    if (msg.type === sq.yy.LINETYPE.SOLID_CROSS || msg.type === sq.yy.LINETYPE.DOTTED_CROSS) {\n        line.attr('marker-end', 'url(' + url + '#crosshead)');\n    }\n};\n\nmodule.exports.drawActors = function (diagram, actors, actorKeys, verticalPos) {\n    var i;\n    // Draw the actors\n    for (i = 0; i < actorKeys.length; i++) {\n        var key = actorKeys[i];\n\n        // Add some rendering data to the object\n        actors[key].x = i * conf.actorMargin + i * conf.width;\n        actors[key].y = verticalPos;\n        actors[key].width = conf.diagramMarginY;\n        actors[key].height = conf.diagramMarginY;\n\n        // Draw the box with the attached line\n        svgDraw.drawActor(diagram, actors[key].x, verticalPos, actors[key].description, conf);\n        exports.bounds.insert(actors[key].x, verticalPos, actors[key].x + conf.width, conf.height);\n    }\n\n    // Add a margin between the actor boxes and the first arrow\n    //exports.bounds.bumpVerticalPos(conf.height+conf.messageMargin);\n    exports.bounds.bumpVerticalPos(conf.height);\n};\n\nmodule.exports.setConf = function (cnf) {\n    var keys = Object.keys(cnf);\n\n    keys.forEach(function (key) {\n        conf[key] = cnf[key];\n    });\n};\n/**\n * Draws a flowchart in the tag with id: id based on the graph definition in text.\n * @param text\n * @param id\n */\nmodule.exports.draw = function (text, id) {\n    sq.yy.clear();\n    sq.parse(text + '\\n');\n\n    exports.bounds.init();\n    var diagram = d3.select('#' + id);\n\n    var startx;\n    var stopx;\n    var forceWidth;\n\n    // Fetch data from the parsing\n    var actors = sq.yy.getActors();\n    var actorKeys = sq.yy.getActorKeys();\n    var messages = sq.yy.getMessages();\n    module.exports.drawActors(diagram, actors, actorKeys, 0);\n\n    // The arrow head definition is attached to the svg once\n    svgDraw.insertArrowHead(diagram);\n    svgDraw.insertArrowCrossHead(diagram);\n\n    // Draw the messages/signals\n    messages.forEach(function (msg) {\n        var loopData;\n\n        switch (msg.type) {\n            case sq.yy.LINETYPE.NOTE:\n                exports.bounds.bumpVerticalPos(conf.boxMargin);\n\n                startx = actors[msg.from].x;\n                stopx = actors[msg.to].x;\n\n                if (msg.placement === sq.yy.PLACEMENT.RIGHTOF) {\n                    drawNote(diagram, startx + (conf.width + conf.actorMargin) / 2, exports.bounds.getVerticalPos(), msg);\n                } else if (msg.placement === sq.yy.PLACEMENT.LEFTOF) {\n                    drawNote(diagram, startx - (conf.width + conf.actorMargin) / 2, exports.bounds.getVerticalPos(), msg);\n                } else if (msg.to === msg.from) {\n                    // Single-actor over\n                    drawNote(diagram, startx, exports.bounds.getVerticalPos(), msg);\n                } else {\n                    // Multi-actor over\n                    forceWidth = Math.abs(startx - stopx) + conf.actorMargin;\n                    drawNote(diagram, (startx + stopx + conf.width - forceWidth) / 2, exports.bounds.getVerticalPos(), msg, forceWidth);\n                }\n                break;\n            case sq.yy.LINETYPE.LOOP_START:\n                exports.bounds.bumpVerticalPos(conf.boxMargin);\n                exports.bounds.newLoop(msg.message);\n                exports.bounds.bumpVerticalPos(conf.boxMargin + conf.boxTextMargin);\n                break;\n            case sq.yy.LINETYPE.LOOP_END:\n                loopData = exports.bounds.endLoop();\n\n                svgDraw.drawLoop(diagram, loopData, 'loop', conf);\n                exports.bounds.bumpVerticalPos(conf.boxMargin);\n                break;\n            case sq.yy.LINETYPE.OPT_START:\n                exports.bounds.bumpVerticalPos(conf.boxMargin);\n                exports.bounds.newLoop(msg.message);\n                exports.bounds.bumpVerticalPos(conf.boxMargin + conf.boxTextMargin);\n                break;\n            case sq.yy.LINETYPE.OPT_END:\n                loopData = exports.bounds.endLoop();\n\n                svgDraw.drawLoop(diagram, loopData, 'opt', conf);\n                exports.bounds.bumpVerticalPos(conf.boxMargin);\n                break;\n            case sq.yy.LINETYPE.ALT_START:\n                exports.bounds.bumpVerticalPos(conf.boxMargin);\n                exports.bounds.newLoop(msg.message);\n                exports.bounds.bumpVerticalPos(conf.boxMargin + conf.boxTextMargin);\n                break;\n            case sq.yy.LINETYPE.ALT_ELSE:\n\n                //exports.drawLoop(diagram, loopData);\n                exports.bounds.bumpVerticalPos(conf.boxMargin);\n                loopData = exports.bounds.addElseToLoop(msg.message);\n                exports.bounds.bumpVerticalPos(conf.boxMargin);\n                break;\n            case sq.yy.LINETYPE.ALT_END:\n                loopData = exports.bounds.endLoop();\n\n                svgDraw.drawLoop(diagram, loopData, 'alt', conf);\n                exports.bounds.bumpVerticalPos(conf.boxMargin);\n                break;\n            default:\n                exports.bounds.bumpVerticalPos(conf.messageMargin);\n                startx = actors[msg.from].x + conf.width / 2;\n                stopx = actors[msg.to].x + conf.width / 2;\n\n                drawMessage(diagram, startx, stopx, exports.bounds.getVerticalPos(), msg);\n\n        }\n    });\n\n    if (conf.mirrorActors) {\n        // Draw actors below diagram\n        exports.bounds.bumpVerticalPos(conf.boxMargin * 2);\n        module.exports.drawActors(diagram, actors, actorKeys, exports.bounds.getVerticalPos());\n    }\n\n    var box = exports.bounds.getBounds();\n\n    // Adjust line height of actor lines now that the height of the diagram is known\n    log.debug('For line height fix Querying: #' + id + ' .actor-line');\n    var actorLines = d3.selectAll('#' + id + ' .actor-line');\n    actorLines.attr('y2', box.stopy);\n\n    var height = box.stopy - box.starty + 2 * conf.diagramMarginY;\n\n    if (conf.mirrorActors) {\n        height = height - conf.boxMargin + conf.bottomMarginAdj;\n    }\n\n    var width = box.stopx - box.startx + 2 * conf.diagramMarginX;\n    if (conf.useMaxWidth) {\n        diagram.attr('height', '100%');\n        diagram.attr('width', '100%');\n        diagram.attr('style', 'max-width:' + width + 'px;');\n    } else {\n        diagram.attr('height', height);\n        diagram.attr('width', width);\n    }\n    diagram.attr('viewBox', box.startx - conf.diagramMarginX + ' -' + conf.diagramMarginY + ' ' + width + ' ' + height);\n};\n\n},{\"../../d3\":107,\"../../logger\":126,\"./parser/sequenceDiagram\":122,\"./sequenceDb\":123,\"./svgDraw\":125}],125:[function(require,module,exports){\n/**\n * Created by knut on 14-12-20.\n */\n//var log = require('../../logger').create();\n'use strict';\n\nexports.drawRect = function (elem, rectData) {\n    var rectElem = elem.append('rect');\n    rectElem.attr('x', rectData.x);\n    rectElem.attr('y', rectData.y);\n    rectElem.attr('fill', rectData.fill);\n    rectElem.attr('stroke', rectData.stroke);\n    rectElem.attr('width', rectData.width);\n    rectElem.attr('height', rectData.height);\n    rectElem.attr('rx', rectData.rx);\n    rectElem.attr('ry', rectData.ry);\n\n    if (typeof rectData['class'] !== 'undefined') {\n        rectElem.attr('class', rectData['class']);\n    }\n\n    return rectElem;\n};\n\nexports.drawText = function (elem, textData, width) {\n    // Remove and ignore br:s\n    var nText = textData.text.replace(/<br\\/?>/ig, ' ');\n\n    var textElem = elem.append('text');\n    textElem.attr('x', textData.x);\n    textElem.attr('y', textData.y);\n    textElem.style('text-anchor', textData.anchor);\n    textElem.attr('fill', textData.fill);\n    if (typeof textData['class'] !== 'undefined') {\n        textElem.attr('class', textData['class']);\n    }\n    /*    textData.text.split(/<br\\/?>/ig).forEach(function(rowText){\n            var span = textElem.append('tspan');\n            span.attr('x', textData.x +textData.textMargin);\n            span.attr('dy', textData.dy);\n            span.text(rowText);\n        });*/\n\n    var span = textElem.append('tspan');\n    //span.attr('x', textData.x);\n    span.attr('x', textData.x + textData.textMargin * 2);\n    //span.attr('dy', textData.dy);\n    span.text(nText);\n    if (typeof textElem.textwrap !== 'undefined') {\n\n        textElem.textwrap({\n            x: textData.x, // bounding box is 300 pixels from the left\n            y: textData.y, // bounding box is 400 pixels from the top\n            width: width, // bounding box is 500 pixels across\n            height: 1800 // bounding box is 600 pixels tall\n        }, textData.textMargin);\n    }\n\n    return textElem;\n};\n\nexports.drawLabel = function (elem, txtObject) {\n    var rectData = exports.getNoteRect();\n    rectData.x = txtObject.x;\n    rectData.y = txtObject.y;\n    rectData.width = 50;\n    rectData.height = 20;\n    rectData.fill = '#526e52';\n    rectData.stroke = 'none';\n    rectData['class'] = 'labelBox';\n    //rectData.color = 'white';\n\n    exports.drawRect(elem, rectData);\n\n    txtObject.y = txtObject.y + txtObject.labelMargin;\n    txtObject.x = txtObject.x + 0.5 * txtObject.labelMargin;\n    txtObject.fill = 'white';\n    exports.drawText(elem, txtObject);\n\n    //return textElem;\n};\nvar actorCnt = -1;\n/**\n * Draws an actor in the diagram with the attaced line\n * @param center - The center of the the actor\n * @param pos The position if the actor in the liost of actors\n * @param description The text in the box\n */\nexports.drawActor = function (elem, left, verticalPos, description, conf) {\n    var center = left + conf.width / 2;\n    var g = elem.append('g');\n    if (verticalPos === 0) {\n        actorCnt++;\n        g.append('line').attr('id', 'actor' + actorCnt).attr('x1', center).attr('y1', 5).attr('x2', center).attr('y2', 2000).attr('class', 'actor-line').attr('stroke-width', '0.5px').attr('stroke', '#999');\n    }\n\n    var rect = exports.getNoteRect();\n    rect.x = left;\n    rect.y = verticalPos;\n    rect.fill = '#eaeaea';\n    rect.width = conf.width;\n    rect.height = conf.height;\n    rect['class'] = 'actor';\n    rect.rx = 3;\n    rect.ry = 3;\n    exports.drawRect(g, rect);\n\n    g.append('text') // text label for the x axis\n    .attr('x', center).attr('y', verticalPos + conf.height / 2 + 5).attr('class', 'actor').style('text-anchor', 'middle').text(description);\n};\n\n/**\n * Draws an actor in the diagram with the attaced line\n * @param center - The center of the the actor\n * @param pos The position if the actor in the list of actors\n * @param description The text in the box\n */\nexports.drawLoop = function (elem, bounds, labelText, conf) {\n    var g = elem.append('g');\n    var drawLoopLine = function drawLoopLine(startx, starty, stopx, stopy) {\n        g.append('line').attr('x1', startx).attr('y1', starty).attr('x2', stopx).attr('y2', stopy).attr('stroke-width', 2).attr('stroke', '#526e52').attr('class', 'loopLine');\n    };\n    drawLoopLine(bounds.startx, bounds.starty, bounds.stopx, bounds.starty);\n    drawLoopLine(bounds.stopx, bounds.starty, bounds.stopx, bounds.stopy);\n    drawLoopLine(bounds.startx, bounds.stopy, bounds.stopx, bounds.stopy);\n    drawLoopLine(bounds.startx, bounds.starty, bounds.startx, bounds.stopy);\n    if (typeof bounds.elsey !== 'undefined') {\n        drawLoopLine(bounds.startx, bounds.elsey, bounds.stopx, bounds.elsey);\n    }\n\n    var txt = exports.getTextObj();\n    txt.text = labelText;\n    txt.x = bounds.startx;\n    txt.y = bounds.starty;\n    txt.labelMargin = 1.5 * conf.boxMargin;\n    txt['class'] = 'labelText';\n    txt.fill = 'white';\n\n    exports.drawLabel(g, txt);\n\n    txt = exports.getTextObj();\n    txt.text = '[ ' + bounds.title + ' ]';\n    txt.x = bounds.startx + (bounds.stopx - bounds.startx) / 2;\n    txt.y = bounds.starty + 1.5 * conf.boxMargin;\n    txt.anchor = 'middle';\n    txt['class'] = 'loopText';\n\n    exports.drawText(g, txt);\n\n    if (typeof bounds.elseText !== 'undefined') {\n        txt.text = '[ ' + bounds.elseText + ' ]';\n        txt.y = bounds.elsey + 1.5 * conf.boxMargin;\n        exports.drawText(g, txt);\n    }\n};\n\n/**\n * Setup arrow head and define the marker. The result is appended to the svg.\n */\nexports.insertArrowHead = function (elem) {\n    elem.append('defs').append('marker').attr('id', 'arrowhead').attr('refX', 5).attr('refY', 2).attr('markerWidth', 6).attr('markerHeight', 4).attr('orient', 'auto').append('path').attr('d', 'M 0,0 V 4 L6,2 Z'); //this is actual shape for arrowhead\n};\n/**\n * Setup arrow head and define the marker. The result is appended to the svg.\n */\nexports.insertArrowCrossHead = function (elem) {\n    var defs = elem.append('defs');\n    var marker = defs.append('marker').attr('id', 'crosshead').attr('markerWidth', 15).attr('markerHeight', 8).attr('orient', 'auto').attr('refX', 16).attr('refY', 4);\n\n    // The arrow\n    marker.append('path').attr('fill', 'black').attr('stroke', '#000000').style('stroke-dasharray', '0, 0').attr('stroke-width', '1px').attr('d', 'M 9,2 V 6 L16,4 Z');\n\n    // The cross\n    marker.append('path').attr('fill', 'none').attr('stroke', '#000000').style('stroke-dasharray', '0, 0').attr('stroke-width', '1px').attr('d', 'M 0,1 L 6,7 M 6,1 L 0,7'); //this is actual shape for arrowhead\n};\n\nexports.getTextObj = function () {\n    var txt = {\n        x: 0,\n        y: 0,\n        'fill': 'black',\n        'text-anchor': 'start',\n        style: '#666',\n        width: 100,\n        height: 100,\n        textMargin: 0,\n        rx: 0,\n        ry: 0\n    };\n    return txt;\n};\n\nexports.getNoteRect = function () {\n    var rect = {\n        x: 0,\n        y: 0,\n        fill: '#EDF2AE',\n        stroke: '#666',\n        width: 100,\n        anchor: 'start',\n        height: 100,\n        rx: 0,\n        ry: 0\n    };\n    return rect;\n};\n\n},{}],126:[function(require,module,exports){\n/**\n * #logger\n * logger = require('logger').create()\n * logger.info(\"blah\")\n * => [2011-3-3T20:24:4.810 info (5021)] blah\n * logger.debug(\"boom\")\n * =>\n * logger.level = Logger.levels.debug\n * logger.debug(function() { return \"booom\" })\n * => [2011-3-3T20:24:4.810 error (5021)] booom\n */\n\n'use strict';\n\nvar LEVELS = {\n    debug: 1,\n    info: 2,\n    warn: 3,\n    error: 4,\n    fatal: 5,\n    'default': 5\n};\n\nvar defaultLevel = LEVELS.error;\n\nexports.setLogLevel = function (level) {\n    defaultLevel = level;\n};\n\nfunction formatTime(timestamp) {\n    var hh = timestamp.getUTCHours();\n    var mm = timestamp.getUTCMinutes();\n    var ss = timestamp.getSeconds();\n    var ms = timestamp.getMilliseconds();\n    // If you were building a timestamp instead of a duration, you would uncomment the following line to get 12-hour (not 24) time\n    // if (hh > 12) {hh = hh % 12;}\n    // These lines ensure you have two-digits\n    if (hh < 10) {\n        hh = '0' + hh;\n    }\n    if (mm < 10) {\n        mm = '0' + mm;\n    }\n    if (ss < 10) {\n        ss = '0' + ss;\n    }\n    if (ms < 100) {\n        ms = '0' + ms;\n    }\n    if (ms < 10) {\n        ms = '00' + ms;\n    }\n    // This formats your string to HH:MM:SS\n    var t = hh + ':' + mm + ':' + ss + ' (' + ms + ')';\n    return t;\n}\n\nfunction Log(level) {\n    this.level = level;\n\n    this.log = function (str, level) {\n        var logLevel = this.level;\n        if (typeof logLevel === 'undefined') {\n            logLevel = defaultLevel;\n        }\n        if (logLevel <= level) {\n            if (typeof console !== 'undefined') {\n                //eslint-disable-line no-console\n                if (typeof console.log !== 'undefined') {\n                    //eslint-disable-line no-console\n                    return console.log('[' + formatTime(new Date()) + '] ' + str); //eslint-disable-line no-console\n                }\n            }\n        }\n    };\n\n    this.trace = function (str) {\n        this.log(str, LEVELS.trace);\n    };\n\n    this.debug = function (str) {\n        this.log(str, LEVELS.debug);\n    };\n\n    this.info = function (str) {\n        this.log(str, LEVELS.info);\n    };\n\n    this.warn = function (str) {\n        this.log(str, LEVELS.warn);\n    };\n\n    this.error = function (str) {\n        this.log(str, LEVELS.error);\n    };\n}\n\nexports.Log = Log;\n\n},{}],127:[function(require,module,exports){\n(function (global){\n/**\n * ---\n * title: mermaidAPI\n * order: 5\n * ---\n * # mermaidAPI\n * This is the api to be used when handling the integration with the web page instead of using the default integration\n * (mermaid.js).\n *\n * The core of this api is the **render** function that given a graph definitionas text renders the graph/diagram and\n * returns a svg element for the graph. It is is then up to the user of the API to make use of the svg, either insert it\n * somewhere in the page or something completely different.\n */\n'use strict';\n\nvar Logger = require('./logger');\nvar log = new Logger.Log();\n\nvar graph = require('./diagrams/flowchart/graphDb');\nvar utils = require('./utils');\nvar flowRenderer = require('./diagrams/flowchart/flowRenderer');\nvar seq = require('./diagrams/sequenceDiagram/sequenceRenderer');\nvar info = require('./diagrams/example/exampleRenderer');\nvar infoParser = require('./diagrams/example/parser/example');\nvar flowParser = require('./diagrams/flowchart/parser/flow');\nvar dotParser = require('./diagrams/flowchart/parser/dot');\nvar sequenceParser = require('./diagrams/sequenceDiagram/parser/sequenceDiagram');\nvar sequenceDb = require('./diagrams/sequenceDiagram/sequenceDb');\nvar infoDb = require('./diagrams/example/exampleDb');\nvar gantt = require('./diagrams/gantt/ganttRenderer');\nvar ganttParser = require('./diagrams/gantt/parser/gantt');\nvar ganttDb = require('./diagrams/gantt/ganttDb');\nvar classParser = require('./diagrams/classDiagram/parser/classDiagram');\nvar classRenderer = require('./diagrams/classDiagram/classRenderer');\nvar classDb = require('./diagrams/classDiagram/classDb');\nvar d3 = require('./d3');\n\nSVGElement.prototype.getTransformToElement = SVGElement.prototype.getTransformToElement || function (toElement) {\n    return toElement.getScreenCTM().inverse().multiply(this.getScreenCTM());\n};\n/**\n * ## Configuration\n * These are the default options which can be overridden with the initialization call as in the example below:\n * ```\n * mermaid.initialize({\n *   flowchart:{\n *      htmlLabels: false\n *   }\n * });\n * ```\n */\nvar config = {\n    /**\n     * logLevel , decides the amount of logging to be used.\n     *    * debug: 1\n     *    * info: 2\n     *    * warn: 3\n     *    * error: 4\n     *    * fatal: 5\n     */\n    logLevel: 5,\n    /**\n     * **cloneCssStyles** - This options controls whether or not the css rules should be copied into the generated svg\n     */\n    cloneCssStyles: true,\n\n    /**\n     * **startOnLoad** - This options controls whether or mermaid starts when the page loads\n     */\n    startOnLoad: true,\n\n    /**\n     * **arrowMarkerAbsolute** - This options controls whether or arrow markers in html code will be absolute pats or\n     * an anchor, #. This matters if you are using base tag settings.\n     */\n    arrowMarkerAbsolute: false,\n\n    /**\n     * ### flowchart\n     * *The object containing configurations specific for flowcharts*\n     */\n    flowchart: {\n        /**\n         * **htmlLabels** - Flag for setting whether or not a html tag should be used for rendering labels\n         * on the edges\n         */\n        htmlLabels: true,\n        /**\n         * **useMaxWidth** - Flag for setting whether or not a all available width should be used for\n         * the diagram.\n         */\n        useMaxWidth: true\n    },\n\n    /**\n     * ###  sequenceDiagram\n     * The object containing configurations specific for sequence diagrams\n     */\n    sequenceDiagram: {\n\n        /**\n         * **diagramMarginX** - margin to the right and left of the sequence diagram\n         */\n        diagramMarginX: 50,\n\n        /**\n         * **diagramMarginY** - margin to the over and under the sequence diagram\n         */\n        diagramMarginY: 10,\n\n        /**\n         * **actorMargin** - Margin between actors\n         */\n        actorMargin: 50,\n\n        /**\n         * **width** - Width of actor boxes\n         */\n        width: 150,\n\n        /**\n         * **height** - Height of actor boxes\n         */\n        height: 65,\n\n        /**\n         * **boxMargin** - Margin around loop boxes\n         */\n        boxMargin: 10,\n\n        /**\n         * **boxTextMargin** - margin around the text in loop/alt/opt boxes\n         */\n        boxTextMargin: 5,\n\n        /**\n        * **noteMargin** - margin around notes\n         */\n        noteMargin: 10,\n\n        /**\n        * **messageMargin** - Space between messages\n         */\n        messageMargin: 35,\n\n        /**\n         * **mirrorActors** - mirror actors under diagram\n         */\n        mirrorActors: true,\n\n        /**\n         * **bottomMarginAdj** - Depending on css styling this might need adjustment.\n         * Prolongs the edge of the diagram downwards\n         */\n        bottomMarginAdj: 1,\n\n        /**\n         * **useMaxWidth** - when this flag is set the height and width is set to 100% and is then scaling with the\n         * available space if not the absolute space required is used\n         */\n        useMaxWidth: true\n    },\n\n    /** ### gantt\n     * The object containing configurations specific for gantt diagrams*\n     */\n    gantt: {\n        /**\n         * **titleTopMargin** - margin top for the text over the gantt diagram\n         */\n        titleTopMargin: 25,\n\n        /** \n         * **barHeight** - the height of the bars in the graph\n         */\n        barHeight: 20,\n\n        /** \n         * **barGap** - the margin between the different activities in the gantt diagram\n         */\n        barGap: 4,\n\n        /** \n         *  **topPadding** - margin between title and gantt diagram and between axis and gantt diagram.\n         */\n        topPadding: 50,\n\n        /** \n         *  **sidePadding** - the space allocated for the section name to the left of the activities.\n         */\n        sidePadding: 75,\n\n        /** \n         *  **gridLineStartPadding** - Vertical starting position of the grid lines\n         */\n        gridLineStartPadding: 35,\n\n        /** \n         *  **fontSize** - font size ...\n         */\n        fontSize: 11,\n\n        /** \n         * **fontFamily** - font family ...\n         */\n        fontFamily: '\"Open-Sans\", \"sans-serif\"',\n\n        /** \n         * **numberSectionStyles** - the number of alternating section styles\n         */\n        numberSectionStyles: 3,\n\n        /** \n         * **axisFormatter** - formatting of the axis, this might need adjustment to match your locale and preferences\n         */\n        axisFormatter: [\n\n        // Within a day\n        ['%I:%M', function (d) {\n            return d.getHours();\n        }],\n        // Monday a week\n        ['w. %U', function (d) {\n            return d.getDay() == 1;\n        }],\n        // Day within a week (not monday)\n        ['%a %d', function (d) {\n            return d.getDay() && d.getDate() != 1;\n        }],\n        // within a month\n        ['%b %d', function (d) {\n            return d.getDate() != 1;\n        }],\n        // Month\n        ['%m-%y', function (d) {\n            return d.getMonth();\n        }]]\n    },\n    classDiagram: {},\n    info: {}\n};\n\nLogger.setLogLevel(config.logLevel);\n\n/**\n * ## parse\n * Function that parses a mermaid diagram definition. If parsing fails the parseError callback is called and an error is\n * thrown and\n * @param text\n */\nvar parse = function parse(text) {\n    var graphType = utils.detectType(text);\n    var parser;\n\n    switch (graphType) {\n        case 'graph':\n            parser = flowParser;\n            parser.parser.yy = graph;\n            break;\n        case 'dotGraph':\n            parser = dotParser;\n            parser.parser.yy = graph;\n            break;\n        case 'sequenceDiagram':\n            parser = sequenceParser;\n            parser.parser.yy = sequenceDb;\n            break;\n        case 'info':\n            parser = infoParser;\n            parser.parser.yy = infoDb;\n            break;\n        case 'gantt':\n            parser = ganttParser;\n            parser.parser.yy = ganttDb;\n            break;\n        case 'classDiagram':\n            parser = classParser;\n            parser.parser.yy = classDb;\n            break;\n    }\n\n    try {\n        parser.parse(text);\n        return true;\n    } catch (err) {\n        return false;\n    }\n};\nexports.parse = parse;\n\n/**\n * ## version\n * Function returning version information\n * @returns {string} A string containing the version info\n */\nexports.version = function () {\n    return require('../package.json').version;\n};\n\nexports.encodeEntities = function (text) {\n    var txt = text;\n\n    txt = txt.replace(/style.*:\\S*#.*;/g, function (s) {\n        var innerTxt = s.substring(0, s.length - 1);\n        return innerTxt;\n    });\n    txt = txt.replace(/classDef.*:\\S*#.*;/g, function (s) {\n        var innerTxt = s.substring(0, s.length - 1);\n        return innerTxt;\n    });\n\n    txt = txt.replace(/#\\w+\\;/g, function (s) {\n        var innerTxt = s.substring(1, s.length - 1);\n\n        var isInt = /^\\+?\\d+$/.test(innerTxt);\n        if (isInt) {\n            return 'ﬂ°°' + innerTxt + '¶ß';\n        } else {\n            return 'ﬂ°' + innerTxt + '¶ß';\n        }\n    });\n\n    return txt;\n};\n\nexports.decodeEntities = function (text) {\n    var txt = text;\n\n    txt = txt.replace(/\\ﬂ\\°\\°/g, function () {\n        return '&#';\n    });\n    txt = txt.replace(/\\ﬂ\\°/g, function () {\n        return '&';\n    });\n    txt = txt.replace(/¶ß/g, function () {\n        return ';';\n    });\n\n    return txt;\n};\n/**\n * ##render\n * Function that renders an svg with a graph from a chart definition. Usage example below.\n *\n * ```\n * mermaidAPI.initialize({\n *      startOnLoad:true\n *  });\n *  $(function(){\n *      var graphDefinition = 'graph TB\\na-->b';\n *      var cb = function(svgGraph){\n *          console.log(svgGraph);\n *      };\n *      mermaidAPI.render('id1',graphDefinition,cb);\n *  });\n *```\n * @param id the id of the element to be rendered\n * @param txt the graph definition\n * @param cb callback which is called after rendering is finished with the svg code as inparam.\n * @param container selector to element in which a div with the graph temporarily will be inserted. In one is\n * provided a hidden div will be inserted in the body of the page instead. The element will be removed when rendering is\n * completed.\n */\nvar render = function render(id, txt, cb, container) {\n\n    if (typeof container !== 'undefined') {\n        d3.select(container).append('div').attr('id', 'd' + id).append('svg').attr('id', id).attr('width', '100%').attr('xmlns', 'http://www.w3.org/2000/svg').append('g');\n    } else {\n        d3.select('body').append('div').attr('id', 'd' + id).append('svg').attr('id', id).attr('width', '100%').attr('xmlns', 'http://www.w3.org/2000/svg').append('g');\n    }\n\n    window.txt = txt;\n    txt = exports.encodeEntities(txt);\n    //console.warn('mermaid encode: ');\n    //console.warn(txt);\n\n    var element = d3.select('#d' + id).node();\n    var graphType = utils.detectType(txt);\n    var classes = {};\n    switch (graphType) {\n        case 'graph':\n            config.flowchart.arrowMarkerAbsolute = config.arrowMarkerAbsolute;\n            flowRenderer.setConf(config.flowchart);\n            flowRenderer.draw(txt, id, false);\n            if (config.cloneCssStyles) {\n                classes = flowRenderer.getClasses(txt, false);\n                utils.cloneCssStyles(element.firstChild, classes);\n            }\n            break;\n        case 'dotGraph':\n            config.flowchart.arrowMarkerAbsolute = config.arrowMarkerAbsolute;\n            flowRenderer.setConf(config.flowchart);\n            flowRenderer.draw(txt, id, true);\n            if (config.cloneCssStyles) {\n                classes = flowRenderer.getClasses(txt, true);\n                utils.cloneCssStyles(element.firstChild, classes);\n            }\n            break;\n        case 'sequenceDiagram':\n            config.sequenceDiagram.arrowMarkerAbsolute = config.arrowMarkerAbsolute;\n            seq.setConf(config.sequenceDiagram);\n            seq.draw(txt, id);\n            if (config.cloneCssStyles) {\n                utils.cloneCssStyles(element.firstChild, []);\n            }\n            break;\n        case 'gantt':\n            config.gantt.arrowMarkerAbsolute = config.arrowMarkerAbsolute;\n            gantt.setConf(config.gantt);\n            gantt.draw(txt, id);\n            if (config.cloneCssStyles) {\n                utils.cloneCssStyles(element.firstChild, []);\n            }\n            break;\n        case 'classDiagram':\n            config.classDiagram.arrowMarkerAbsolute = config.arrowMarkerAbsolute;\n            classRenderer.setConf(config.classDiagram);\n            classRenderer.draw(txt, id);\n            if (config.cloneCssStyles) {\n                utils.cloneCssStyles(element.firstChild, []);\n            }\n            break;\n        case 'info':\n            config.info.arrowMarkerAbsolute = config.arrowMarkerAbsolute;\n            info.draw(txt, id, exports.version());\n            if (config.cloneCssStyles) {\n                utils.cloneCssStyles(element.firstChild, []);\n            }\n            break;\n    }\n\n    d3.select('#d' + id).selectAll('foreignobject div').attr('xmlns', 'http://www.w3.org/1999/xhtml');\n\n    var url = '';\n    if (config.arrowMarkerAbsolute) {\n        url = window.location.protocol + '//' + window.location.host + window.location.pathname + window.location.search;\n        url = url.replace(/\\(/g, '\\\\(');\n        url = url.replace(/\\)/g, '\\\\)');\n    }\n\n    // Fix for when the base tag is used\n    var svgCode = d3.select('#d' + id).node().innerHTML.replace(/url\\(#arrowhead/g, 'url(' + url + '#arrowhead', 'g');\n\n    svgCode = exports.decodeEntities(svgCode);\n\n    //console.warn('mermaid decode: ');\n    //console.warn(svgCode);\n    //var he = require('he');\n    //svgCode = he.decode(svgCode);\n    if (typeof cb !== 'undefined') {\n        cb(svgCode, graph.bindFunctions);\n    } else {\n        log.warn('CB = undefined!');\n    }\n\n    var node = d3.select('#d' + id).node();\n    if (node !== null && typeof node.remove === 'function') {\n        d3.select('#d' + id).node().remove();\n    }\n\n    return svgCode;\n};\n\nexports.render = function (id, text, cb, containerElement) {\n    try {\n        if (arguments.length === 1) {\n            text = id;\n            id = 'mermaidId0';\n        }\n\n        if (typeof document === 'undefined') {\n            // Todo handle rendering serverside using phantomjs\n        } else {\n                // In browser\n                return render(id, text, cb, containerElement);\n            }\n    } catch (e) {\n        log.warn(e);\n    }\n};\n\nvar setConf = function setConf(cnf) {\n    // Top level initially mermaid, gflow, sequenceDiagram and gantt\n    var lvl1Keys = Object.keys(cnf);\n    var i;\n    for (i = 0; i < lvl1Keys.length; i++) {\n\n        if (typeof cnf[lvl1Keys[i]] === 'object') {\n            var lvl2Keys = Object.keys(cnf[lvl1Keys[i]]);\n\n            var j;\n            for (j = 0; j < lvl2Keys.length; j++) {\n                log.debug('Setting conf ', lvl1Keys[i], '-', lvl2Keys[j]);\n                if (typeof config[lvl1Keys[i]] === 'undefined') {\n\n                    config[lvl1Keys[i]] = {};\n                }\n                log.debug('Setting config: ' + lvl1Keys[i] + ' ' + lvl2Keys[j] + ' to ' + cnf[lvl1Keys[i]][lvl2Keys[j]]);\n                config[lvl1Keys[i]][lvl2Keys[j]] = cnf[lvl1Keys[i]][lvl2Keys[j]];\n            }\n        } else {\n            config[lvl1Keys[i]] = cnf[lvl1Keys[i]];\n        }\n    }\n};\nexports.initialize = function (options) {\n    log.debug('Initializing mermaidAPI');\n    // Update default config with options supplied at initialization\n    if (typeof options === 'object') {\n        setConf(options);\n    }\n    Logger.setLogLevel(config.logLevel);\n};\nexports.getConfig = function () {\n    return config;\n};\n\nexports.parseError = function (err, hash) {\n    if (typeof mermaid !== 'undefined') {\n        global.mermaid.parseError(err, hash);\n    } else {\n        log.debug('Mermaid Syntax error:');\n        log.debug(err);\n    }\n};\nglobal.mermaidAPI = {\n    render: exports.render,\n    parse: exports.parse,\n    initialize: exports.initialize,\n    detectType: utils.detectType,\n    parseError: exports.parseError,\n    getConfig: exports.getConfig\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../package.json\":106,\"./d3\":107,\"./diagrams/classDiagram/classDb\":108,\"./diagrams/classDiagram/classRenderer\":109,\"./diagrams/classDiagram/parser/classDiagram\":110,\"./diagrams/example/exampleDb\":111,\"./diagrams/example/exampleRenderer\":112,\"./diagrams/example/parser/example\":113,\"./diagrams/flowchart/flowRenderer\":115,\"./diagrams/flowchart/graphDb\":116,\"./diagrams/flowchart/parser/dot\":117,\"./diagrams/flowchart/parser/flow\":118,\"./diagrams/gantt/ganttDb\":119,\"./diagrams/gantt/ganttRenderer\":120,\"./diagrams/gantt/parser/gantt\":121,\"./diagrams/sequenceDiagram/parser/sequenceDiagram\":122,\"./diagrams/sequenceDiagram/sequenceDb\":123,\"./diagrams/sequenceDiagram/sequenceRenderer\":124,\"./logger\":126,\"./utils\":128}],128:[function(require,module,exports){\n/**\n * Created by knut on 14-11-23.\n */\n'use strict';\n\nvar Logger = require('./logger');\nvar log = new Logger.Log();\n\n/**\n * @function detectType\n * Detects the type of the graph text.\n * ```mermaid\n * graph LR\n *  a-->b\n *  b-->c\n *  c-->d\n *  d-->e\n *  e-->f\n *  f-->g\n *  g-->h\n * ```\n *\n * @param {string} text The text defining the graph\n * @returns {string} A graph definition key\n */\nvar detectType = function detectType(text) {\n    text = text.replace(/^\\s*%%.*\\n/g, '\\n');\n    if (text.match(/^\\s*sequenceDiagram/)) {\n        return 'sequenceDiagram';\n    }\n\n    if (text.match(/^\\s*digraph/)) {\n        //log.debug('Detected dot syntax');\n        return 'dotGraph';\n    }\n\n    if (text.match(/^\\s*info/)) {\n        //log.debug('Detected info syntax');\n        return 'info';\n    }\n\n    if (text.match(/^\\s*gantt/)) {\n        //log.debug('Detected info syntax');\n        return 'gantt';\n    }\n\n    if (text.match(/^\\s*classDiagram/)) {\n        log.debug('Detected classDiagram syntax');\n        return 'classDiagram';\n    }\n\n    return 'graph';\n};\nexports.detectType = detectType;\n\n/**\n * Copies all relevant CSS content into the graph SVG.\n * This allows the SVG to be copied as is while keeping class based styling\n * @param {element} svg The root element of the SVG\n * @param {object} Hash table of class definitions from the graph definition\n */\nvar cloneCssStyles = function cloneCssStyles(svg, classes) {\n    var usedStyles = '';\n    var sheets = document.styleSheets;\n    var rule;\n    for (var i = 0; i < sheets.length; i++) {\n        // Avoid multiple inclusion on pages with multiple graphs\n        if (sheets[i].title !== 'mermaid-svg-internal-css') {\n            try {\n\n                var rules = sheets[i].cssRules;\n                if (rules !== null) {\n                    for (var j = 0; j < rules.length; j++) {\n                        rule = rules[j];\n                        if (typeof rule.style !== 'undefined') {\n                            var elems;\n                            elems = svg.querySelectorAll(rule.selectorText);\n                            if (elems.length > 0) {\n                                usedStyles += rule.selectorText + ' { ' + rule.style.cssText + '}\\n';\n                            }\n                        }\n                    }\n                }\n            } catch (err) {\n                if (typeof rule !== 'undefined') {\n                    log.warn('Invalid CSS selector \"' + rule.selectorText + '\"', err);\n                }\n            }\n        }\n    }\n\n    var defaultStyles = '';\n    var embeddedStyles = '';\n\n    for (var className in classes) {\n        if (classes.hasOwnProperty(className) && typeof className != 'undefined') {\n            if (className === 'default') {\n                if (classes['default'].styles instanceof Array) {\n                    defaultStyles += '#' + svg.id.trim() + ' .node' + '>rect { ' + classes[className].styles.join('; ') + '; }\\n';\n                }\n                if (classes['default'].nodeLabelStyles instanceof Array) {\n                    defaultStyles += '#' + svg.id.trim() + ' .node text ' + ' { ' + classes[className].nodeLabelStyles.join('; ') + '; }\\n';\n                }\n                if (classes['default'].edgeLabelStyles instanceof Array) {\n                    defaultStyles += '#' + svg.id.trim() + ' .edgeLabel text ' + ' { ' + classes[className].edgeLabelStyles.join('; ') + '; }\\n';\n                }\n                if (classes['default'].clusterStyles instanceof Array) {\n                    defaultStyles += '#' + svg.id.trim() + ' .cluster rect ' + ' { ' + classes[className].clusterStyles.join('; ') + '; }\\n';\n                }\n            } else {\n                if (classes[className].styles instanceof Array) {\n                    embeddedStyles += '#' + svg.id.trim() + ' .' + className + '>rect, .' + className + '>polygon, .' + className + '>ellipse { ' + classes[className].styles.join('; ') + '; }\\n';\n                }\n            }\n        }\n    }\n\n    if (usedStyles !== '' || defaultStyles !== '' || embeddedStyles !== '') {\n        var s = document.createElement('style');\n        s.setAttribute('type', 'text/css');\n        s.setAttribute('title', 'mermaid-svg-internal-css');\n        s.innerHTML = '/* <![CDATA[ */\\n';\n        // Make this CSS local to this SVG\n        if (defaultStyles !== '') {\n            s.innerHTML += defaultStyles;\n        }\n        if (usedStyles !== '') {\n            s.innerHTML += usedStyles;\n        }\n        if (embeddedStyles !== '') {\n            s.innerHTML += embeddedStyles;\n        }\n        s.innerHTML += '/* ]]> */\\n';\n        svg.insertBefore(s, svg.firstChild);\n    }\n};\n\nexports.cloneCssStyles = cloneCssStyles;\n\n},{\"./logger\":126}]},{},[127])(127)\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mermaid/dist/mermaidAPI.js\n// module id = 1375\n// module chunks = 1"],"sourceRoot":""}